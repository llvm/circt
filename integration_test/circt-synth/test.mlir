module {
  hw.module @partial_product_6(in %a : i6, in %b : i6, out sum : i6) {
    %0 = comb.extract %b from 0 : (i6) -> i1
    %1 = comb.extract %b from 1 : (i6) -> i1
    %2 = comb.extract %b from 2 : (i6) -> i1
    %3 = comb.extract %b from 3 : (i6) -> i1
    %4 = comb.extract %b from 4 : (i6) -> i1
    %5 = comb.extract %b from 5 : (i6) -> i1
    %6 = comb.replicate %0 : (i1) -> i6
    %7 = comb.and %6, %a : i6
    %c0_i6 = hw.constant 0 : i6
    %8 = comb.shl %7, %c0_i6 : i6
    %9 = comb.replicate %1 : (i1) -> i6
    %10 = comb.and %9, %a : i6
    %c1_i6 = hw.constant 1 : i6
    %11 = comb.shl %10, %c1_i6 : i6
    %12 = comb.replicate %2 : (i1) -> i6
    %13 = comb.and %12, %a : i6
    %c2_i6 = hw.constant 2 : i6
    %14 = comb.shl %13, %c2_i6 : i6
    %15 = comb.replicate %3 : (i1) -> i6
    %16 = comb.and %15, %a : i6
    %c3_i6 = hw.constant 3 : i6
    %17 = comb.shl %16, %c3_i6 : i6
    %18 = comb.replicate %4 : (i1) -> i6
    %19 = comb.and %18, %a : i6
    %c4_i6 = hw.constant 4 : i6
    %20 = comb.shl %19, %c4_i6 : i6
    %21 = comb.replicate %5 : (i1) -> i6
    %22 = comb.and %21, %a : i6
    %c5_i6 = hw.constant 5 : i6
    %23 = comb.shl %22, %c5_i6 : i6
    %24 = comb.add bin %8, %11, %14, %17, %20, %23 : i6
    hw.output %24 : i6
  }
  hw.module @partial_product_16(in %a : i16, in %b : i16, out sum : i16) {
    %0 = comb.extract %b from 0 : (i16) -> i1
    %1 = comb.extract %b from 1 : (i16) -> i1
    %2 = comb.extract %b from 2 : (i16) -> i1
    %3 = comb.extract %b from 3 : (i16) -> i1
    %4 = comb.extract %b from 4 : (i16) -> i1
    %5 = comb.extract %b from 5 : (i16) -> i1
    %6 = comb.extract %b from 6 : (i16) -> i1
    %7 = comb.extract %b from 7 : (i16) -> i1
    %8 = comb.extract %b from 8 : (i16) -> i1
    %9 = comb.extract %b from 9 : (i16) -> i1
    %10 = comb.extract %b from 10 : (i16) -> i1
    %11 = comb.extract %b from 11 : (i16) -> i1
    %12 = comb.extract %b from 12 : (i16) -> i1
    %13 = comb.extract %b from 13 : (i16) -> i1
    %14 = comb.extract %b from 14 : (i16) -> i1
    %15 = comb.extract %b from 15 : (i16) -> i1
    %16 = comb.replicate %0 : (i1) -> i16
    %17 = comb.and %16, %a : i16
    %c0_i16 = hw.constant 0 : i16
    %18 = comb.shl %17, %c0_i16 : i16
    %19 = comb.replicate %1 : (i1) -> i16
    %20 = comb.and %19, %a : i16
    %c1_i16 = hw.constant 1 : i16
    %21 = comb.shl %20, %c1_i16 : i16
    %22 = comb.replicate %2 : (i1) -> i16
    %23 = comb.and %22, %a : i16
    %c2_i16 = hw.constant 2 : i16
    %24 = comb.shl %23, %c2_i16 : i16
    %25 = comb.replicate %3 : (i1) -> i16
    %26 = comb.and %25, %a : i16
    %c3_i16 = hw.constant 3 : i16
    %27 = comb.shl %26, %c3_i16 : i16
    %28 = comb.replicate %4 : (i1) -> i16
    %29 = comb.and %28, %a : i16
    %c4_i16 = hw.constant 4 : i16
    %30 = comb.shl %29, %c4_i16 : i16
    %31 = comb.replicate %5 : (i1) -> i16
    %32 = comb.and %31, %a : i16
    %c5_i16 = hw.constant 5 : i16
    %33 = comb.shl %32, %c5_i16 : i16
    %34 = comb.replicate %6 : (i1) -> i16
    %35 = comb.and %34, %a : i16
    %c6_i16 = hw.constant 6 : i16
    %36 = comb.shl %35, %c6_i16 : i16
    %37 = comb.replicate %7 : (i1) -> i16
    %38 = comb.and %37, %a : i16
    %c7_i16 = hw.constant 7 : i16
    %39 = comb.shl %38, %c7_i16 : i16
    %40 = comb.replicate %8 : (i1) -> i16
    %41 = comb.and %40, %a : i16
    %c8_i16 = hw.constant 8 : i16
    %42 = comb.shl %41, %c8_i16 : i16
    %43 = comb.replicate %9 : (i1) -> i16
    %44 = comb.and %43, %a : i16
    %c9_i16 = hw.constant 9 : i16
    %45 = comb.shl %44, %c9_i16 : i16
    %46 = comb.replicate %10 : (i1) -> i16
    %47 = comb.and %46, %a : i16
    %c10_i16 = hw.constant 10 : i16
    %48 = comb.shl %47, %c10_i16 : i16
    %49 = comb.replicate %11 : (i1) -> i16
    %50 = comb.and %49, %a : i16
    %c11_i16 = hw.constant 11 : i16
    %51 = comb.shl %50, %c11_i16 : i16
    %52 = comb.replicate %12 : (i1) -> i16
    %53 = comb.and %52, %a : i16
    %c12_i16 = hw.constant 12 : i16
    %54 = comb.shl %53, %c12_i16 : i16
    %55 = comb.replicate %13 : (i1) -> i16
    %56 = comb.and %55, %a : i16
    %c13_i16 = hw.constant 13 : i16
    %57 = comb.shl %56, %c13_i16 : i16
    %58 = comb.replicate %14 : (i1) -> i16
    %59 = comb.and %58, %a : i16
    %c14_i16 = hw.constant 14 : i16
    %60 = comb.shl %59, %c14_i16 : i16
    %61 = comb.replicate %15 : (i1) -> i16
    %62 = comb.and %61, %a : i16
    %c15_i16 = hw.constant 15 : i16
    %63 = comb.shl %62, %c15_i16 : i16
    %64 = comb.add bin %18, %21, %24, %27, %30, %33, %36, %39, %42, %45, %48, %51, %54, %57, %60, %63 : i16
    hw.output %64 : i16
  }
  hw.module @partial_product_17(in %a : i17, in %b : i17, out sum : i17) {
    %false = hw.constant false
    %c0_i17 = hw.constant 0 : i17
    %c1_i17 = hw.constant 1 : i17
    %0 = comb.shl %a, %c1_i17 : i17
    %1 = comb.extract %b from 0 : (i17) -> i1
    %2 = comb.extract %b from 1 : (i17) -> i1
    %3 = comb.extract %b from 2 : (i17) -> i1
    %4 = comb.extract %b from 3 : (i17) -> i1
    %5 = comb.extract %b from 4 : (i17) -> i1
    %6 = comb.extract %b from 5 : (i17) -> i1
    %7 = comb.extract %b from 6 : (i17) -> i1
    %8 = comb.extract %b from 7 : (i17) -> i1
    %9 = comb.extract %b from 8 : (i17) -> i1
    %10 = comb.extract %b from 9 : (i17) -> i1
    %11 = comb.extract %b from 10 : (i17) -> i1
    %12 = comb.extract %b from 11 : (i17) -> i1
    %13 = comb.extract %b from 12 : (i17) -> i1
    %14 = comb.extract %b from 13 : (i17) -> i1
    %15 = comb.extract %b from 14 : (i17) -> i1
    %16 = comb.extract %b from 15 : (i17) -> i1
    %17 = comb.extract %b from 16 : (i17) -> i1
    %18 = comb.xor bin %1, %false : i1
    %true = hw.constant true
    %19 = comb.xor bin %1, %true : i1
    %20 = comb.xor bin %2, %true : i1
    %21 = comb.xor bin %false, %true : i1
    %22 = comb.and bin %20, %1, %false : i1
    %23 = comb.and bin %2, %19, %21 : i1
    %24 = comb.or bin %22, %23 : i1
    %25 = comb.replicate %2 : (i1) -> i17
    %26 = comb.replicate %18 : (i1) -> i17
    %27 = comb.replicate %24 : (i1) -> i17
    %28 = comb.and %27, %0 : i17
    %29 = comb.and %26, %a : i17
    %30 = comb.or bin %28, %29 : i17
    %31 = comb.xor bin %30, %25 : i17
    %32 = comb.xor bin %3, %2 : i1
    %true_0 = hw.constant true
    %33 = comb.xor bin %3, %true_0 : i1
    %34 = comb.xor bin %4, %true_0 : i1
    %35 = comb.xor bin %2, %true_0 : i1
    %36 = comb.and bin %34, %3, %2 : i1
    %37 = comb.and bin %4, %33, %35 : i1
    %38 = comb.or bin %36, %37 : i1
    %39 = comb.replicate %4 : (i1) -> i17
    %40 = comb.replicate %32 : (i1) -> i17
    %41 = comb.replicate %38 : (i1) -> i17
    %42 = comb.and %41, %0 : i17
    %43 = comb.and %40, %a : i17
    %44 = comb.or bin %42, %43 : i17
    %45 = comb.xor bin %44, %39 : i17
    %46 = comb.concat %45, %false, %2 : i17, i1, i1
    %47 = comb.extract %46 from 0 : (i19) -> i17
    %c0_i17_1 = hw.constant 0 : i17
    %48 = comb.shl %47, %c0_i17_1 : i17
    %49 = comb.xor bin %5, %4 : i1
    %true_2 = hw.constant true
    %50 = comb.xor bin %5, %true_2 : i1
    %51 = comb.xor bin %6, %true_2 : i1
    %52 = comb.xor bin %4, %true_2 : i1
    %53 = comb.and bin %51, %5, %4 : i1
    %54 = comb.and bin %6, %50, %52 : i1
    %55 = comb.or bin %53, %54 : i1
    %56 = comb.replicate %6 : (i1) -> i17
    %57 = comb.replicate %49 : (i1) -> i17
    %58 = comb.replicate %55 : (i1) -> i17
    %59 = comb.and %58, %0 : i17
    %60 = comb.and %57, %a : i17
    %61 = comb.or bin %59, %60 : i17
    %62 = comb.xor bin %61, %56 : i17
    %63 = comb.concat %62, %false, %4 : i17, i1, i1
    %64 = comb.extract %63 from 0 : (i19) -> i17
    %c2_i17 = hw.constant 2 : i17
    %65 = comb.shl %64, %c2_i17 : i17
    %66 = comb.xor bin %7, %6 : i1
    %true_3 = hw.constant true
    %67 = comb.xor bin %7, %true_3 : i1
    %68 = comb.xor bin %8, %true_3 : i1
    %69 = comb.xor bin %6, %true_3 : i1
    %70 = comb.and bin %68, %7, %6 : i1
    %71 = comb.and bin %8, %67, %69 : i1
    %72 = comb.or bin %70, %71 : i1
    %73 = comb.replicate %8 : (i1) -> i17
    %74 = comb.replicate %66 : (i1) -> i17
    %75 = comb.replicate %72 : (i1) -> i17
    %76 = comb.and %75, %0 : i17
    %77 = comb.and %74, %a : i17
    %78 = comb.or bin %76, %77 : i17
    %79 = comb.xor bin %78, %73 : i17
    %80 = comb.concat %79, %false, %6 : i17, i1, i1
    %81 = comb.extract %80 from 0 : (i19) -> i17
    %c4_i17 = hw.constant 4 : i17
    %82 = comb.shl %81, %c4_i17 : i17
    %83 = comb.xor bin %9, %8 : i1
    %true_4 = hw.constant true
    %84 = comb.xor bin %9, %true_4 : i1
    %85 = comb.xor bin %10, %true_4 : i1
    %86 = comb.xor bin %8, %true_4 : i1
    %87 = comb.and bin %85, %9, %8 : i1
    %88 = comb.and bin %10, %84, %86 : i1
    %89 = comb.or bin %87, %88 : i1
    %90 = comb.replicate %10 : (i1) -> i17
    %91 = comb.replicate %83 : (i1) -> i17
    %92 = comb.replicate %89 : (i1) -> i17
    %93 = comb.and %92, %0 : i17
    %94 = comb.and %91, %a : i17
    %95 = comb.or bin %93, %94 : i17
    %96 = comb.xor bin %95, %90 : i17
    %97 = comb.concat %96, %false, %8 : i17, i1, i1
    %98 = comb.extract %97 from 0 : (i19) -> i17
    %c6_i17 = hw.constant 6 : i17
    %99 = comb.shl %98, %c6_i17 : i17
    %100 = comb.xor bin %11, %10 : i1
    %true_5 = hw.constant true
    %101 = comb.xor bin %11, %true_5 : i1
    %102 = comb.xor bin %12, %true_5 : i1
    %103 = comb.xor bin %10, %true_5 : i1
    %104 = comb.and bin %102, %11, %10 : i1
    %105 = comb.and bin %12, %101, %103 : i1
    %106 = comb.or bin %104, %105 : i1
    %107 = comb.replicate %12 : (i1) -> i17
    %108 = comb.replicate %100 : (i1) -> i17
    %109 = comb.replicate %106 : (i1) -> i17
    %110 = comb.and %109, %0 : i17
    %111 = comb.and %108, %a : i17
    %112 = comb.or bin %110, %111 : i17
    %113 = comb.xor bin %112, %107 : i17
    %114 = comb.concat %113, %false, %10 : i17, i1, i1
    %115 = comb.extract %114 from 0 : (i19) -> i17
    %c8_i17 = hw.constant 8 : i17
    %116 = comb.shl %115, %c8_i17 : i17
    %117 = comb.xor bin %13, %12 : i1
    %true_6 = hw.constant true
    %118 = comb.xor bin %13, %true_6 : i1
    %119 = comb.xor bin %14, %true_6 : i1
    %120 = comb.xor bin %12, %true_6 : i1
    %121 = comb.and bin %119, %13, %12 : i1
    %122 = comb.and bin %14, %118, %120 : i1
    %123 = comb.or bin %121, %122 : i1
    %124 = comb.replicate %14 : (i1) -> i17
    %125 = comb.replicate %117 : (i1) -> i17
    %126 = comb.replicate %123 : (i1) -> i17
    %127 = comb.and %126, %0 : i17
    %128 = comb.and %125, %a : i17
    %129 = comb.or bin %127, %128 : i17
    %130 = comb.xor bin %129, %124 : i17
    %131 = comb.concat %130, %false, %12 : i17, i1, i1
    %132 = comb.extract %131 from 0 : (i19) -> i17
    %c10_i17 = hw.constant 10 : i17
    %133 = comb.shl %132, %c10_i17 : i17
    %134 = comb.xor bin %15, %14 : i1
    %true_7 = hw.constant true
    %135 = comb.xor bin %15, %true_7 : i1
    %136 = comb.xor bin %16, %true_7 : i1
    %137 = comb.xor bin %14, %true_7 : i1
    %138 = comb.and bin %136, %15, %14 : i1
    %139 = comb.and bin %16, %135, %137 : i1
    %140 = comb.or bin %138, %139 : i1
    %141 = comb.replicate %16 : (i1) -> i17
    %142 = comb.replicate %134 : (i1) -> i17
    %143 = comb.replicate %140 : (i1) -> i17
    %144 = comb.and %143, %0 : i17
    %145 = comb.and %142, %a : i17
    %146 = comb.or bin %144, %145 : i17
    %147 = comb.xor bin %146, %141 : i17
    %148 = comb.concat %147, %false, %14 : i17, i1, i1
    %149 = comb.extract %148 from 0 : (i19) -> i17
    %c12_i17 = hw.constant 12 : i17
    %150 = comb.shl %149, %c12_i17 : i17
    %151 = comb.xor bin %17, %16 : i1
    %true_8 = hw.constant true
    %152 = comb.xor bin %17, %true_8 : i1
    %153 = comb.xor bin %false, %true_8 : i1
    %154 = comb.xor bin %16, %true_8 : i1
    %155 = comb.and bin %153, %17, %16 : i1
    %156 = comb.and bin %false, %152, %154 : i1
    %157 = comb.or bin %155, %156 : i1
    %158 = comb.replicate %false : (i1) -> i17
    %159 = comb.replicate %151 : (i1) -> i17
    %160 = comb.replicate %157 : (i1) -> i17
    %161 = comb.and %160, %0 : i17
    %162 = comb.and %159, %a : i17
    %163 = comb.or bin %161, %162 : i17
    %164 = comb.xor bin %163, %158 : i17
    %165 = comb.concat %164, %false, %16 : i17, i1, i1
    %166 = comb.extract %165 from 0 : (i19) -> i17
    %c14_i17 = hw.constant 14 : i17
    %167 = comb.shl %166, %c14_i17 : i17
    %168 = comb.add bin %31, %48, %65, %82, %99, %116, %133, %150, %167, %c0_i17, %c0_i17, %c0_i17, %c0_i17, %c0_i17, %c0_i17, %c0_i17, %c0_i17 : i17
    hw.output %168 : i17
  }
}

