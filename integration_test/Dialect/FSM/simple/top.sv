// Generated by CIRCT unknown git version
`include "fsm_enum_typedefs.sv"	// top.mlir
module top(	// top.mlir:12:1
  input        in0,
               in1,
  output [7:0] out0,
  input        clk,
               rst
);

  top_state_t     to_A;	// top.mlir:12:1
  assign to_A = top_state_t_A;	// top.mlir:12:1
  top_state_t     to_B;	// top.mlir:12:1
  assign to_B = top_state_t_B;	// top.mlir:12:1
  top_state_t     to_C;	// top.mlir:12:1
  assign to_C = top_state_t_C;	// top.mlir:12:1
  top_state_t     state_next;	// top.mlir:12:1
  top_state_t     state_reg;	// top.mlir:12:1
  always_ff @(posedge clk) begin	// top.mlir:12:1
    if (rst)	// top.mlir:12:1
      state_reg <= to_A;	// top.mlir:12:1
    else	// top.mlir:12:1
      state_reg <= state_next;	// top.mlir:12:1
  end // always_ff @(posedge)
  reg [7:0]       output_0;	// top.mlir:12:1
  always_comb begin	// top.mlir:12:1
    case (state_reg)	// top.mlir:12:1
      top_state_t_A: begin
        state_next = to_B;	// top.mlir:12:1
        output_0 = 8'h0;	// top.mlir:12:1, :15:12
      end
      top_state_t_B: begin
        state_next = in0 & in1 ? to_C : to_B;	// top.mlir:12:1, :25:5, :26:12
        output_0 = 8'h1;	// top.mlir:12:1, :22:12
      end
      top_state_t_C: begin
        state_next = in0 & in1 ? to_A : to_B;	// top.mlir:12:1, :35:5, :36:12
        output_0 = 8'h2;	// top.mlir:12:1, :32:12
      end
      default: begin
      end
    endcase	// top.mlir:12:1
  end // always_comb
  assign out0 = output_0;	// top.mlir:12:1
endmodule

