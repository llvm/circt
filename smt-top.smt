(set-logic HORN)
(declare-fun at_0 (Int Int) Bool)
(declare-fun notAt_0 (Int Int) Bool)
(assert (let ((tmp (forall ((tmp_0 Int))
                   (let ((tmp_1 (exists ((tmp_2 Int))
                                        (let ((tmp_3 (notAt_0 tmp_0 tmp_2)))
                                                (let ((tmp_4 (not tmp_3)))
                                                (let ((tmp_5 (< tmp_2 13)))
                                                (let ((tmp_6 (> tmp_2 0)))
                                                (let ((tmp_7 (and tmp_6 tmp_5 tmp_4)))
                                                tmp_7))))))))
                           tmp_1))))
        tmp))
(assert (let ((tmp_8 (forall ((tmp_9 Int) (tmp_10 Int) (tmp_11 Int))
                     (let ((tmp_12 (at_0 tmp_11 tmp_9)))
                             (let ((tmp_13 (not tmp_12)))
                             (let ((tmp_14 (distinct tmp_10 tmp_11)))
                             (let ((tmp_15 (at_0 tmp_10 tmp_9)))
                             (let ((tmp_16 (and tmp_15 tmp_14)))
                             (let ((tmp_17 (=> tmp_16 tmp_13)))
                             tmp_17)))))))))
        tmp_8))
(assert (let ((tmp_18 (forall ((tmp_19 Int) (tmp_20 Int))
                      (let ((tmp_21 (at_0 tmp_19 tmp_20)))
                              (let ((tmp_22 (not tmp_21)))
                              (let ((tmp_23 (notAt_0 tmp_19 tmp_20)))
                              (let ((tmp_24 (=> tmp_23 tmp_22)))
                              tmp_24)))))))
        tmp_18))
(assert (let ((tmp_25 (forall ((tmp_26 Int) (tmp_27 Int))
                      (let ((tmp_28 (at_0 tmp_26 tmp_27)))
                              (let ((tmp_29 (notAt_0 tmp_26 tmp_27)))
                              (let ((tmp_30 (not tmp_29)))
                              (let ((tmp_31 (=> tmp_30 tmp_28)))
                              tmp_31)))))))
        tmp_25))
(assert (let ((tmp_32 (forall ((tmp_33 Int) (tmp_34 Int))
                      (let ((tmp_35 (notAt_0 tmp_33 tmp_34)))
                              (let ((tmp_36 (not tmp_35)))
                              (let ((tmp_37 (at_0 tmp_33 tmp_34)))
                              (let ((tmp_38 (=> tmp_37 tmp_36)))
                              tmp_38)))))))
        tmp_32))
(assert (let ((tmp_39 (forall ((tmp_40 Int) (tmp_41 Int))
                      (let ((tmp_42 (notAt_0 tmp_40 tmp_41)))
                              (let ((tmp_43 (at_0 tmp_40 tmp_41)))
                              (let ((tmp_44 (not tmp_43)))
                              (let ((tmp_45 (=> tmp_44 tmp_42)))
                              tmp_45)))))))
        tmp_39))
(assert (let ((tmp_46 (forall ((tmp_47 Int) (tmp_48 Int))
                      (let ((tmp_49 (notAt_0 tmp_47 tmp_48)))
                              (let ((tmp_50 (> tmp_48 13)))
                              (let ((tmp_51 (=> tmp_50 tmp_49)))
                              tmp_51))))))
        tmp_46))
(assert (let ((tmp_52 (forall ((tmp_53 Int) (tmp_54 Int))
                      (let ((tmp_55 (notAt_0 tmp_53 tmp_54)))
                              (let ((tmp_56 (> tmp_54 13)))
                              (let ((tmp_57 (=> tmp_56 tmp_55)))
                              tmp_57))))))
        tmp_52))
(declare-fun F_A (Int) Bool)
(declare-fun F_B (Int) Bool)
(declare-fun F_C (Int) Bool)
(assert (let ((tmp_58 (forall ((tmp_59 Int) (tmp_60 Int))
                      (let ((tmp_61 (F_A tmp_60)))
                              (let ((tmp_62 (= tmp_60 0)))
                              (let ((tmp_63 (=> tmp_62 tmp_61)))
                              tmp_63))))))
        tmp_58))
(assert (let ((tmp_64 (forall ((tmp_65 Int) (tmp_66 Int))
                      (let ((tmp_67 (+ tmp_66 1)))
                              (let ((tmp_68 (F_B tmp_67)))
                              (let ((tmp_69 (F_A tmp_66)))
                              (let ((tmp_70 (and tmp_69 true)))
                              (let ((tmp_71 (=> tmp_70 tmp_68)))
                              tmp_71))))))))
        tmp_64))
(assert (let ((tmp_72 (forall ((tmp_73 Int) (tmp_74 Int))
                      (let ((tmp_75 (+ tmp_74 1)))
                              (let ((tmp_76 (F_C tmp_75)))
                              (let ((tmp_77 (= tmp_73 1)))
                              (let ((tmp_78 (F_B tmp_74)))
                              (let ((tmp_79 (and tmp_78 tmp_77)))
                              (let ((tmp_80 (=> tmp_79 tmp_76)))
                              tmp_80)))))))))
        tmp_72))
(assert (let ((tmp_81 (forall ((tmp_82 Int) (tmp_83 Int))
                      (let ((tmp_84 (+ tmp_83 1)))
                              (let ((tmp_85 (F_B tmp_84)))
                              (let ((tmp_86 (distinct tmp_82 1)))
                              (let ((tmp_87 (F_B tmp_83)))
                              (let ((tmp_88 (and tmp_87 tmp_86)))
                              (let ((tmp_89 (=> tmp_88 tmp_85)))
                              tmp_89)))))))))
        tmp_81))
(assert (let ((tmp_90 (forall ((tmp_91 Int) (tmp_92 Int))
                      (let ((tmp_93 (+ tmp_92 1)))
                              (let ((tmp_94 (F_A tmp_93)))
                              (let ((tmp_95 (= tmp_91 1)))
                              (let ((tmp_96 (F_C tmp_92)))
                              (let ((tmp_97 (and tmp_96 tmp_95)))
                              (let ((tmp_98 (=> tmp_97 tmp_94)))
                              tmp_98)))))))))
        tmp_90))
(assert (let ((tmp_99 (forall ((tmp_100 Int) (tmp_101 Int))
                      (let ((tmp_102 (+ tmp_101 1)))
                              (let ((tmp_103 (F_B tmp_102)))
                              (let ((tmp_104 (distinct tmp_100 1)))
                              (let ((tmp_105 (F_C tmp_101)))
                              (let ((tmp_106 (and tmp_105 tmp_104)))
                              (let ((tmp_107 (=> tmp_106 tmp_103)))
                              tmp_107)))))))))
        tmp_99))
(assert (let ((tmp_108 (forall ((tmp_109 Int))
                       (let ((tmp_110 (F_C tmp_109)))
                               (let ((tmp_111 (not tmp_110)))
                               (let ((tmp_112 (F_B tmp_109)))
                               (let ((tmp_113 (not tmp_112)))
                               (let ((tmp_114 (and true tmp_113)))
                               (let ((tmp_115 (and tmp_114 tmp_111)))
                               (let ((tmp_116 (F_A tmp_109)))
                               (let ((tmp_117 (=> tmp_116 tmp_115)))
                               tmp_117)))))))))))
        tmp_108))
(assert (let ((tmp_118 (forall ((tmp_119 Int))
                       (let ((tmp_120 (F_C tmp_119)))
                               (let ((tmp_121 (not tmp_120)))
                               (let ((tmp_122 (F_A tmp_119)))
                               (let ((tmp_123 (not tmp_122)))
                               (let ((tmp_124 (and true tmp_123)))
                               (let ((tmp_125 (and tmp_124 tmp_121)))
                               (let ((tmp_126 (F_B tmp_119)))
                               (let ((tmp_127 (=> tmp_126 tmp_125)))
                               tmp_127)))))))))))
        tmp_118))
(assert (let ((tmp_128 (forall ((tmp_129 Int))
                       (let ((tmp_130 (F_B tmp_129)))
                               (let ((tmp_131 (not tmp_130)))
                               (let ((tmp_132 (F_A tmp_129)))
                               (let ((tmp_133 (not tmp_132)))
                               (let ((tmp_134 (and true tmp_133)))
                               (let ((tmp_135 (and tmp_134 tmp_131)))
                               (let ((tmp_136 (F_C tmp_129)))
                               (let ((tmp_137 (=> tmp_136 tmp_135)))
                               tmp_137)))))))))))
        tmp_128))
(check-sat)
(get-model)
(reset)
