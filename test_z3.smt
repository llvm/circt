; 
(set-info :status unknown)
(declare-fun _0 (Int Int) Bool)
(declare-fun _1 (Int Int) Bool)
(declare-fun _2 (Int Int) Bool)
(declare-fun _3 (Int Int) Bool)
(declare-fun _4 (Int Int) Bool)
(declare-fun _5 (Int Int) Bool)
(declare-fun arg0 () Int)
(assert
 (forall ((arg0 Int) )(let (($x9 (_0 0 0)))
 (let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> $x18 $x9)))))
 )
(assert
 (forall ((time Int) )(let (($x64 (forall ((arg0 Int) )(let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 (_0 arg0 time)) (_1 (+ arg0 1) (+ time 1))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x64)))))
 )
(assert
 (forall ((time Int) )(let (($x85 (forall ((arg0 Int) )(let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 (_1 arg0 time)) (_2 (+ arg0 1) (+ time 1))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x85)))))
 )
(assert
 (forall ((time Int) )(let (($x104 (forall ((arg0 Int) )(let (($x55 (>= arg0 3)))
 (let (($x100 (_2 arg0 time)))
 (let (($x101 (and $x100 $x55)))
 (let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 $x101) (_3 (+ arg0 1) (+ time 1)))))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x104)))))
 )
(assert
 (forall ((time Int) )(let (($x118 (forall ((arg0 Int) )(let ((?x59 (+ time 1)))
 (let ((?x51 (+ arg0 1)))
 (let (($x108 (_0 ?x51 ?x59)))
 (let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 (and (_2 arg0 time) (< arg0 3))) $x108)))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x118)))))
 )
(assert
 (forall ((time Int) )(let (($x122 (forall ((arg0 Int) )(let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 (_3 arg0 time)) (_4 (+ arg0 1) (+ time 1))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x122)))))
 )
(assert
 (forall ((time Int) )(let (($x149 (forall ((arg0 Int) )(let (($x57 (>= arg0 6)))
 (let (($x145 (_4 arg0 time)))
 (let (($x146 (and $x145 $x57)))
 (let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 $x146) (_5 (+ arg0 1) (+ time 1)))))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x149)))))
 )
(assert
 (forall ((time Int) )(let (($x161 (forall ((arg0 Int) )(let ((?x59 (+ time 1)))
 (let ((?x51 (+ arg0 1)))
 (let (($x108 (_0 ?x51 ?x59)))
 (let (($x17 (>= arg0 0)))
 (let (($x18 (and $x17 (< arg0 100))))
 (=> (and $x18 (and (_4 arg0 time) (< arg0 6))) $x108)))))))
 ))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x161)))))
 )
(assert
 (forall ((time Int) )(let (($x88 (= (_2 arg0 time) false)))
 (let (($x17 (>= time 0)))
 (let (($x66 (and $x17 (< time 10))))
 (=> $x66 $x88)))))
 )
 
(check-sat)