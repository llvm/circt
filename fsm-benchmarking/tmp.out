; 
(set-info :status unknown)
(declare-fun _0 (Int Int) Bool)
(declare-fun _1 (Int Int) Bool)
(declare-fun _2 (Int Int) Bool)
(declare-fun _3 (Int Int) Bool)
(declare-fun _4 (Int Int) Bool)
(declare-fun _5 (Int Int) Bool)
(declare-fun _6 (Int Int) Bool)
(declare-fun _7 (Int Int) Bool)
(declare-fun _8 (Int Int) Bool)
(declare-fun _9 (Int Int) Bool)
(declare-fun _10 (Int Int) Bool)
(assert
 (forall ((var0 Int) )(_0 0 0))
 )
(assert
 (forall ((time Int) )(let (($x53 (forall ((var0 Int) )(let (($x51 (_0 var0 time)))
 (=> $x51 (_1 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x53)))))
 )
(assert
 (forall ((time Int) )(let (($x74 (forall ((var0 Int) )(let (($x60 (_1 var0 time)))
 (=> $x60 (_2 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x74)))))
 )
(assert
 (forall ((time Int) )(let (($x86 (forall ((var0 Int) )(let (($x78 (_2 var0 time)))
 (=> $x78 (_3 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x86)))))
 )
(assert
 (forall ((time Int) )(let (($x98 (forall ((var0 Int) )(let (($x90 (_3 var0 time)))
 (=> $x90 (_4 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x98)))))
 )
(assert
 (forall ((time Int) )(let (($x110 (forall ((var0 Int) )(let (($x102 (_4 var0 time)))
 (=> $x102 (_5 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x110)))))
 )
(assert
 (forall ((time Int) )(let (($x128 (forall ((var0 Int) )(=> (and (_5 var0 time) (and (distinct var0 5) true)) (_6 (+ var0 1) (+ time 1))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x128)))))
 )
(assert
 (forall ((time Int) )(let (($x143 (forall ((var0 Int) )(let (($x133 (= var0 5)))
 (let (($x125 (_5 var0 time)))
 (let (($x132 (and $x125 $x133)))
 (=> $x132 (_7 (+ var0 1) (+ time 1)))))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x143)))))
 )
(assert
 (forall ((time Int) )(let (($x146 (forall ((var0 Int) )(let ((?x49 (+ time 1)))
 (let ((?x38 (+ var0 1)))
 (let (($x121 (_8 ?x38 ?x49)))
 (let (($x122 (_6 var0 time)))
 (=> $x122 $x121))))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x146)))))
 )
(assert
 (forall ((time Int) )(let (($x163 (forall ((var0 Int) )(let ((?x49 (+ time 1)))
 (let ((?x38 (+ var0 1)))
 (let (($x121 (_8 ?x38 ?x49)))
 (let (($x155 (_7 var0 time)))
 (=> $x155 $x121))))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x163)))))
 )
(assert
 (forall ((time Int) )(let (($x174 (forall ((var0 Int) )(let (($x167 (_8 var0 time)))
 (=> $x167 (_9 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x174)))))
 )
(assert
 (forall ((time Int) )(let (($x186 (forall ((var0 Int) )(let (($x178 (_9 var0 time)))
 (=> $x178 (_10 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x186)))))
 )
(assert
 (forall ((time Int) )(let (($x45 (forall ((var0 Int) )(let (($x122 (_7 var0 time)))
 (not $x122)))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 20))))
 (=> $x56 $x45)))))
 )
(check-sat)
