; 
(set-info :status unknown)
(declare-fun _0 (Int Int Int) Bool)
(declare-fun input-arg0 (Int) Int)
(declare-fun _1 (Int Int Int) Bool)
(declare-fun ERR (Int Int Int) Bool)
(declare-fun _2 (Int Int Int) Bool)
(declare-fun _3 (Int Int Int) Bool)
(declare-fun _4 (Int Int Int) Bool)
(declare-fun _5 (Int Int Int) Bool)
(declare-fun _6 (Int Int Int) Bool)
(declare-fun _7 (Int Int Int) Bool)
(declare-fun _8 (Int Int Int) Bool)
(declare-fun _9 (Int Int Int) Bool)
(declare-fun _10 (Int Int Int) Bool)
(assert
 (forall ((var1 Int) )(let ((?x15 (input-arg0 0)))
 (_0 ?x15 0 0)))
 )
(assert
 (forall ((time Int) )(let (($x67 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x64 (_0 ?x62 var1 time)))
 (=> (and $x64 $x63) (_1 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x67)))))
 )
(assert
 (forall ((time Int) )(let (($x92 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x64 (_0 ?x62 var1 time)))
 (let (($x74 (and $x64 $x73)))
 (=> $x74 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x92)))))
 )
(assert
 (forall ((time Int) )(let (($x106 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x103 (_1 ?x62 var1 time)))
 (=> (and $x103 $x63) (_2 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x106)))))
 )
(assert
 (forall ((time Int) )(let (($x110 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x103 (_1 ?x62 var1 time)))
 (let (($x95 (and $x103 $x73)))
 (=> $x95 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x110)))))
 )
(assert
 (forall ((time Int) )(let (($x130 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x127 (_2 ?x62 var1 time)))
 (=> (and $x127 $x63) (_3 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x130)))))
 )
(assert
 (forall ((time Int) )(let (($x134 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x127 (_2 ?x62 var1 time)))
 (let (($x120 (and $x127 $x73)))
 (=> $x120 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x134)))))
 )
(assert
 (forall ((time Int) )(let (($x154 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x151 (_3 ?x62 var1 time)))
 (=> (and $x151 $x63) (_4 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x154)))))
 )
(assert
 (forall ((time Int) )(let (($x158 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x151 (_3 ?x62 var1 time)))
 (let (($x144 (and $x151 $x73)))
 (=> $x144 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x158)))))
 )
(assert
 (forall ((time Int) )(let (($x178 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x175 (_4 ?x62 var1 time)))
 (=> (and $x175 $x63) (_5 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x178)))))
 )
(assert
 (forall ((time Int) )(let (($x182 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x175 (_4 ?x62 var1 time)))
 (let (($x168 (and $x175 $x73)))
 (=> $x168 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x182)))))
 )
(assert
 (forall ((time Int) )(let (($x202 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x199 (_5 ?x62 var1 time)))
 (=> (and $x199 $x63) (_6 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x202)))))
 )
(assert
 (forall ((time Int) )(let (($x206 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x199 (_5 ?x62 var1 time)))
 (let (($x192 (and $x199 $x73)))
 (=> $x192 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x206)))))
 )
(assert
 (forall ((time Int) )(let (($x226 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x223 (_6 ?x62 var1 time)))
 (=> (and $x223 $x63) (_7 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x226)))))
 )
(assert
 (forall ((time Int) )(let (($x230 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x223 (_6 ?x62 var1 time)))
 (let (($x216 (and $x223 $x73)))
 (=> $x216 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x230)))))
 )
(assert
 (forall ((time Int) )(let (($x250 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x247 (_7 ?x62 var1 time)))
 (=> (and $x247 $x63) (_8 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x250)))))
 )
(assert
 (forall ((time Int) )(let (($x254 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x247 (_7 ?x62 var1 time)))
 (let (($x240 (and $x247 $x73)))
 (=> $x240 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x254)))))
 )
(assert
 (forall ((time Int) )(let (($x274 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x271 (_8 ?x62 var1 time)))
 (=> (and $x271 $x63) (_9 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x274)))))
 )
(assert
 (forall ((time Int) )(let (($x278 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x271 (_8 ?x62 var1 time)))
 (let (($x264 (and $x271 $x73)))
 (=> $x264 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x278)))))
 )
(assert
 (forall ((time Int) )(let (($x298 (forall ((var1 Int) )(let ((?x62 (input-arg0 time)))
 (let (($x63 (and (distinct ?x62 0) true)))
 (let (($x295 (_9 ?x62 var1 time)))
 (=> (and $x295 $x63) (_10 (input-arg0 (+ time 1)) (+ var1 1) (+ time 1)))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x298)))))
 )
(assert
 (forall ((time Int) )(let (($x302 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x295 (_9 ?x62 var1 time)))
 (let (($x288 (and $x295 $x73)))
 (=> $x288 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x302)))))
 )
(assert
 (forall ((time Int) )(let (($x302 (forall ((var1 Int) )(let ((?x59 (+ time 1)))
 (let ((?x60 (input-arg0 ?x59)))
 (let (($x57 (ERR ?x60 var1 ?x59)))
 (let ((?x62 (input-arg0 time)))
 (let (($x73 (= ?x62 1)))
 (let (($x295 (_9 ?x62 var1 time)))
 (let (($x288 (and $x295 $x73)))
 (=> $x288 $x57)))))))))
 ))
 (let (($x69 (>= time 0)))
 (let (($x70 (and $x69 (< time 20))))
 (=> $x70 $x302)))))
 )
(check-sat)
