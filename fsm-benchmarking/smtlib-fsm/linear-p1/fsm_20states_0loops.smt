; 
(set-info :status unknown)
(declare-fun _0 (Int Int) Bool)
(declare-fun _1 (Int Int) Bool)
(declare-fun _2 (Int Int) Bool)
(declare-fun _3 (Int Int) Bool)
(declare-fun _4 (Int Int) Bool)
(declare-fun _5 (Int Int) Bool)
(declare-fun _6 (Int Int) Bool)
(declare-fun _7 (Int Int) Bool)
(declare-fun _8 (Int Int) Bool)
(declare-fun _9 (Int Int) Bool)
(declare-fun _10 (Int Int) Bool)
(declare-fun _11 (Int Int) Bool)
(declare-fun _12 (Int Int) Bool)
(declare-fun _13 (Int Int) Bool)
(declare-fun _14 (Int Int) Bool)
(declare-fun _15 (Int Int) Bool)
(declare-fun _16 (Int Int) Bool)
(declare-fun _17 (Int Int) Bool)
(declare-fun _18 (Int Int) Bool)
(declare-fun _19 (Int Int) Bool)
(declare-fun _20 (Int Int) Bool)
(assert
 (forall ((var0 Int) )(_0 0 0))
 )
(assert
 (forall ((time Int) )(let (($x53 (forall ((var0 Int) )(let (($x51 (_0 var0 time)))
 (=> $x51 (_1 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x53)))))
 )
(assert
 (forall ((time Int) )(let (($x74 (forall ((var0 Int) )(let (($x60 (_1 var0 time)))
 (=> $x60 (_2 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x74)))))
 )
(assert
 (forall ((time Int) )(let (($x86 (forall ((var0 Int) )(let (($x78 (_2 var0 time)))
 (=> $x78 (_3 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x86)))))
 )
(assert
 (forall ((time Int) )(let (($x98 (forall ((var0 Int) )(let (($x90 (_3 var0 time)))
 (=> $x90 (_4 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x98)))))
 )
(assert
 (forall ((time Int) )(let (($x110 (forall ((var0 Int) )(let (($x102 (_4 var0 time)))
 (=> $x102 (_5 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x110)))))
 )
(assert
 (forall ((time Int) )(let (($x122 (forall ((var0 Int) )(let (($x114 (_5 var0 time)))
 (=> $x114 (_6 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x122)))))
 )
(assert
 (forall ((time Int) )(let (($x134 (forall ((var0 Int) )(let (($x126 (_6 var0 time)))
 (=> $x126 (_7 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x134)))))
 )
(assert
 (forall ((time Int) )(let (($x146 (forall ((var0 Int) )(let (($x138 (_7 var0 time)))
 (=> $x138 (_8 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x146)))))
 )
(assert
 (forall ((time Int) )(let (($x158 (forall ((var0 Int) )(let (($x150 (_8 var0 time)))
 (=> $x150 (_9 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x158)))))
 )
(assert
 (forall ((time Int) )(let (($x170 (forall ((var0 Int) )(let (($x162 (_9 var0 time)))
 (=> $x162 (_10 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x170)))))
 )
(assert
 (forall ((time Int) )(let (($x182 (forall ((var0 Int) )(let (($x174 (_10 var0 time)))
 (=> $x174 (_11 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x182)))))
 )
(assert
 (forall ((time Int) )(let (($x194 (forall ((var0 Int) )(let (($x186 (_11 var0 time)))
 (=> $x186 (_12 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x194)))))
 )
(assert
 (forall ((time Int) )(let (($x206 (forall ((var0 Int) )(let (($x198 (_12 var0 time)))
 (=> $x198 (_13 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x206)))))
 )
(assert
 (forall ((time Int) )(let (($x218 (forall ((var0 Int) )(let (($x210 (_13 var0 time)))
 (=> $x210 (_14 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x218)))))
 )
(assert
 (forall ((time Int) )(let (($x230 (forall ((var0 Int) )(let (($x222 (_14 var0 time)))
 (=> $x222 (_15 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x230)))))
 )
(assert
 (forall ((time Int) )(let (($x242 (forall ((var0 Int) )(let (($x234 (_15 var0 time)))
 (=> $x234 (_16 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x242)))))
 )
(assert
 (forall ((time Int) )(let (($x254 (forall ((var0 Int) )(let (($x246 (_16 var0 time)))
 (=> $x246 (_17 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x254)))))
 )
(assert
 (forall ((time Int) )(let (($x266 (forall ((var0 Int) )(let (($x258 (_17 var0 time)))
 (=> $x258 (_18 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x266)))))
 )
(assert
 (forall ((time Int) )(let (($x278 (forall ((var0 Int) )(let (($x270 (_18 var0 time)))
 (=> $x270 (_19 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x278)))))
 )
(assert
 (forall ((time Int) )(let (($x290 (forall ((var0 Int) )(let (($x282 (_19 var0 time)))
 (=> $x282 (_20 (+ var0 1) (+ time 1)))))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x290)))))
 )
(assert
 (forall ((time Int) )(let (($x43 (forall ((var0 Int) )(let (($x282 (_19 var0 time)))
 (not $x282)))
 ))
 (let (($x55 (>= time 0)))
 (let (($x56 (and $x55 (< time 30))))
 (=> $x56 $x43)))))
 )
(check-sat)
