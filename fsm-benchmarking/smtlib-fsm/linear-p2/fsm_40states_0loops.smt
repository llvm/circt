; 
(set-info :status unknown)
(declare-fun _0 (Int Int) Bool)
(declare-fun _25 (Int Int) Bool)
(declare-fun _26 (Int Int) Bool)
(declare-fun _6 (Int Int) Bool)
(declare-fun _7 (Int Int) Bool)
(declare-fun _32 (Int Int) Bool)
(declare-fun _33 (Int Int) Bool)
(declare-fun _13 (Int Int) Bool)
(declare-fun _14 (Int Int) Bool)
(declare-fun _39 (Int Int) Bool)
(declare-fun _40 (Int Int) Bool)
(declare-fun _20 (Int Int) Bool)
(declare-fun _21 (Int Int) Bool)
(declare-fun _1 (Int Int) Bool)
(declare-fun _2 (Int Int) Bool)
(declare-fun _27 (Int Int) Bool)
(declare-fun _28 (Int Int) Bool)
(declare-fun _8 (Int Int) Bool)
(declare-fun _9 (Int Int) Bool)
(declare-fun _34 (Int Int) Bool)
(declare-fun _35 (Int Int) Bool)
(declare-fun _15 (Int Int) Bool)
(declare-fun _16 (Int Int) Bool)
(declare-fun _22 (Int Int) Bool)
(declare-fun _23 (Int Int) Bool)
(declare-fun _3 (Int Int) Bool)
(declare-fun _4 (Int Int) Bool)
(declare-fun _29 (Int Int) Bool)
(declare-fun _30 (Int Int) Bool)
(declare-fun _10 (Int Int) Bool)
(declare-fun _11 (Int Int) Bool)
(declare-fun _36 (Int Int) Bool)
(declare-fun _37 (Int Int) Bool)
(declare-fun _17 (Int Int) Bool)
(declare-fun _18 (Int Int) Bool)
(declare-fun _24 (Int Int) Bool)
(declare-fun _5 (Int Int) Bool)
(declare-fun _31 (Int Int) Bool)
(declare-fun _12 (Int Int) Bool)
(declare-fun _38 (Int Int) Bool)
(declare-fun _19 (Int Int) Bool)
(assert
 (_0 0 0))
(assert
 (forall ((time Int) )(let (($x70 (forall ((var0_p Int) )(let (($x66 (exists ((var0 Int) )(or false (and (_25 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_26 var0_p (+ time 1)) $x66)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x70)))))
 )
(assert
 (forall ((time Int) )(let (($x98 (forall ((var0_p Int) )(let (($x95 (exists ((var0 Int) )(or false (and (_6 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_7 var0_p (+ time 1)) $x95)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x98)))))
 )
(assert
 (forall ((time Int) )(let (($x114 (forall ((var0_p Int) )(let (($x111 (exists ((var0 Int) )(or false (and (_32 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_33 var0_p (+ time 1)) $x111)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x114)))))
 )
(assert
 (forall ((time Int) )(let (($x130 (forall ((var0_p Int) )(let (($x127 (exists ((var0 Int) )(or false (and (_13 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_14 var0_p (+ time 1)) $x127)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x130)))))
 )
(assert
 (forall ((time Int) )(let (($x146 (forall ((var0_p Int) )(let (($x143 (exists ((var0 Int) )(or false (and (_39 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_40 var0_p (+ time 1)) $x143)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x146)))))
 )
(assert
 (forall ((time Int) )(let (($x162 (forall ((var0_p Int) )(let (($x159 (exists ((var0 Int) )(or false (and (_20 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_21 var0_p (+ time 1)) $x159)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x162)))))
 )
(assert
 (forall ((time Int) )(let (($x178 (forall ((var0_p Int) )(let (($x175 (exists ((var0 Int) )(or false (and (_1 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_2 var0_p (+ time 1)) $x175)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x178)))))
 )
(assert
 (forall ((time Int) )(let (($x194 (forall ((var0_p Int) )(let (($x191 (exists ((var0 Int) )(or false (and (_27 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_28 var0_p (+ time 1)) $x191)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x194)))))
 )
(assert
 (forall ((time Int) )(let (($x210 (forall ((var0_p Int) )(let (($x207 (exists ((var0 Int) )(or false (and (_8 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_9 var0_p (+ time 1)) $x207)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x210)))))
 )
(assert
 (forall ((time Int) )(let (($x226 (forall ((var0_p Int) )(let (($x223 (exists ((var0 Int) )(or false (and (_34 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_35 var0_p (+ time 1)) $x223)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x226)))))
 )
(assert
 (forall ((time Int) )(let (($x242 (forall ((var0_p Int) )(let (($x239 (exists ((var0 Int) )(or false (and (_15 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_16 var0_p (+ time 1)) $x239)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x242)))))
 )
(assert
 (forall ((time Int) )(let (($x258 (forall ((var0_p Int) )(let (($x255 (exists ((var0 Int) )(or false (and (_22 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_23 var0_p (+ time 1)) $x255)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x258)))))
 )
(assert
 (forall ((time Int) )(let (($x274 (forall ((var0_p Int) )(let (($x271 (exists ((var0 Int) )(or false (and (_3 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_4 var0_p (+ time 1)) $x271)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x274)))))
 )
(assert
 (forall ((time Int) )(let (($x290 (forall ((var0_p Int) )(let (($x287 (exists ((var0 Int) )(or false (and (_29 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_30 var0_p (+ time 1)) $x287)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x290)))))
 )
(assert
 (forall ((time Int) )(let (($x306 (forall ((var0_p Int) )(let (($x303 (exists ((var0 Int) )(or false (and (_10 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_11 var0_p (+ time 1)) $x303)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x306)))))
 )
(assert
 (forall ((time Int) )(let (($x322 (forall ((var0_p Int) )(let (($x319 (exists ((var0 Int) )(or false (and (_36 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_37 var0_p (+ time 1)) $x319)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x322)))))
 )
(assert
 (forall ((time Int) )(let (($x338 (forall ((var0_p Int) )(let (($x335 (exists ((var0 Int) )(or false (and (_17 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_18 var0_p (+ time 1)) $x335)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x338)))))
 )
(assert
 (forall ((time Int) )(let (($x354 (forall ((var0_p Int) )(let (($x351 (exists ((var0 Int) )(or false (and (_24 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_25 var0_p (+ time 1)) $x351)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x354)))))
 )
(assert
 (forall ((time Int) )(let (($x370 (forall ((var0_p Int) )(let (($x367 (exists ((var0 Int) )(or false (and (_5 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_6 var0_p (+ time 1)) $x367)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x370)))))
 )
(assert
 (forall ((time Int) )(let (($x386 (forall ((var0_p Int) )(let (($x383 (exists ((var0 Int) )(or false (and (_31 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_32 var0_p (+ time 1)) $x383)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x386)))))
 )
(assert
 (forall ((time Int) )(let (($x402 (forall ((var0_p Int) )(let (($x399 (exists ((var0 Int) )(or false (and (_12 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_13 var0_p (+ time 1)) $x399)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x402)))))
 )
(assert
 (forall ((time Int) )(let (($x418 (forall ((var0_p Int) )(let (($x415 (exists ((var0 Int) )(or false (and (_38 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_39 var0_p (+ time 1)) $x415)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x418)))))
 )
(assert
 (forall ((time Int) )(let (($x434 (forall ((var0_p Int) )(let (($x431 (exists ((var0 Int) )(or false (and (_19 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_20 var0_p (+ time 1)) $x431)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x434)))))
 )
(assert
 (forall ((time Int) )(let (($x450 (forall ((var0_p Int) )(let (($x447 (exists ((var0 Int) )(or false (and (_0 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_1 var0_p (+ time 1)) $x447)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x450)))))
 )
(assert
 (forall ((time Int) )(let (($x466 (forall ((var0_p Int) )(let (($x463 (exists ((var0 Int) )(or false (and (_26 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_27 var0_p (+ time 1)) $x463)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x466)))))
 )
(assert
 (forall ((time Int) )(let (($x482 (forall ((var0_p Int) )(let (($x479 (exists ((var0 Int) )(or false (and (_7 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_8 var0_p (+ time 1)) $x479)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x482)))))
 )
(assert
 (forall ((time Int) )(let (($x498 (forall ((var0_p Int) )(let (($x495 (exists ((var0 Int) )(or false (and (_33 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_34 var0_p (+ time 1)) $x495)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x498)))))
 )
(assert
 (forall ((time Int) )(let (($x514 (forall ((var0_p Int) )(let (($x511 (exists ((var0 Int) )(or false (and (_14 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_15 var0_p (+ time 1)) $x511)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x514)))))
 )
(assert
 (forall ((time Int) )(let (($x530 (forall ((var0_p Int) )(let (($x527 (exists ((var0 Int) )(or false (and (_21 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_22 var0_p (+ time 1)) $x527)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x530)))))
 )
(assert
 (forall ((time Int) )(let (($x546 (forall ((var0_p Int) )(let (($x543 (exists ((var0 Int) )(or false (and (_2 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_3 var0_p (+ time 1)) $x543)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x546)))))
 )
(assert
 (forall ((time Int) )(let (($x562 (forall ((var0_p Int) )(let (($x559 (exists ((var0 Int) )(or false (and (_28 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_29 var0_p (+ time 1)) $x559)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x562)))))
 )
(assert
 (forall ((time Int) )(let (($x578 (forall ((var0_p Int) )(let (($x575 (exists ((var0 Int) )(or false (and (_9 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_10 var0_p (+ time 1)) $x575)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x578)))))
 )
(assert
 (forall ((time Int) )(let (($x594 (forall ((var0_p Int) )(let (($x591 (exists ((var0 Int) )(or false (and (_35 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_36 var0_p (+ time 1)) $x591)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x594)))))
 )
(assert
 (forall ((time Int) )(let (($x610 (forall ((var0_p Int) )(let (($x607 (exists ((var0 Int) )(or false (and (_16 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_17 var0_p (+ time 1)) $x607)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x610)))))
 )
(assert
 (forall ((time Int) )(let (($x626 (forall ((var0_p Int) )(let (($x623 (exists ((var0 Int) )(or false (and (_23 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_24 var0_p (+ time 1)) $x623)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x626)))))
 )
(assert
 (forall ((time Int) )(let (($x642 (forall ((var0_p Int) )(let (($x639 (exists ((var0 Int) )(or false (and (_4 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_5 var0_p (+ time 1)) $x639)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x642)))))
 )
(assert
 (forall ((time Int) )(let (($x658 (forall ((var0_p Int) )(let (($x655 (exists ((var0 Int) )(or false (and (_30 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_31 var0_p (+ time 1)) $x655)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x658)))))
 )
(assert
 (forall ((time Int) )(let (($x674 (forall ((var0_p Int) )(let (($x671 (exists ((var0 Int) )(or false (and (_11 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_12 var0_p (+ time 1)) $x671)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x674)))))
 )
(assert
 (forall ((time Int) )(let (($x690 (forall ((var0_p Int) )(let (($x687 (exists ((var0 Int) )(or false (and (_37 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_38 var0_p (+ time 1)) $x687)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x690)))))
 )
(assert
 (forall ((time Int) )(let (($x706 (forall ((var0_p Int) )(let (($x703 (exists ((var0 Int) )(or false (and (_18 var0 time) (= var0_p (+ var0 1)))))
 ))
 (= (_19 var0_p (+ time 1)) $x703)))
 ))
 (let (($x72 (>= time 0)))
 (let (($x73 (and $x72 (< time 50))))
 (=> $x73 $x706)))))
 )
(assert
 (exists ((time Int) )(let (($x54 (forall ((var0 Int) )(let (($x39 (= var0 39)))
 (let (($x52 (_39 var0 time)))
 (and (distinct $x52 $x39) true))))
 ))
 (=> (and (>= time 0) (< time 49)) $x54)))
 )
(check-sat)
