(set-logic HORN)
(declare-fun _0 (Int Int) Bool)
(declare-fun _1 (Int Int) Bool)
(declare-fun _2 (Int Int) Bool)
(declare-fun _3 (Int Int) Bool)
(declare-fun _4 (Int Int) Bool)
(declare-fun _5 (Int Int) Bool)
(declare-fun _6 (Int Int) Bool)
(declare-fun _7 (Int Int) Bool)
(declare-fun _8 (Int Int) Bool)
(declare-fun _9 (Int Int) Bool)
(declare-fun _10 (Int Int) Bool)
(declare-fun _11 (Int Int) Bool)
(declare-fun _12 (Int Int) Bool)
(declare-fun _13 (Int Int) Bool)
(declare-fun _14 (Int Int) Bool)
(declare-fun _15 (Int Int) Bool)
(declare-fun _16 (Int Int) Bool)
(declare-fun _17 (Int Int) Bool)
(declare-fun _18 (Int Int) Bool)
(declare-fun _19 (Int Int) Bool)
(declare-fun _20 (Int Int) Bool)
(declare-fun _21 (Int Int) Bool)
(declare-fun _22 (Int Int) Bool)
(declare-fun _23 (Int Int) Bool)
(declare-fun _24 (Int Int) Bool)
(declare-fun _25 (Int Int) Bool)
(declare-fun _26 (Int Int) Bool)
(declare-fun _27 (Int Int) Bool)
(declare-fun _28 (Int Int) Bool)
(declare-fun _29 (Int Int) Bool)
(declare-fun _30 (Int Int) Bool)
(declare-fun _31 (Int Int) Bool)
(declare-fun _32 (Int Int) Bool)
(declare-fun _33 (Int Int) Bool)
(declare-fun _34 (Int Int) Bool)
(declare-fun _35 (Int Int) Bool)
(declare-fun _36 (Int Int) Bool)
(declare-fun _37 (Int Int) Bool)
(declare-fun _38 (Int Int) Bool)
(declare-fun _39 (Int Int) Bool)
(declare-fun _40 (Int Int) Bool)
(declare-fun _41 (Int Int) Bool)
(declare-fun _42 (Int Int) Bool)
(declare-fun _43 (Int Int) Bool)
(declare-fun _44 (Int Int) Bool)
(declare-fun _45 (Int Int) Bool)
(declare-fun _46 (Int Int) Bool)
(declare-fun _47 (Int Int) Bool)
(declare-fun _48 (Int Int) Bool)
(declare-fun _49 (Int Int) Bool)
(declare-fun _50 (Int Int) Bool)
(declare-fun _51 (Int Int) Bool)
(declare-fun _52 (Int Int) Bool)
(declare-fun _53 (Int Int) Bool)
(declare-fun _54 (Int Int) Bool)
(declare-fun _55 (Int Int) Bool)
(declare-fun _56 (Int Int) Bool)
(declare-fun _57 (Int Int) Bool)
(declare-fun _58 (Int Int) Bool)
(declare-fun _59 (Int Int) Bool)
(declare-fun _60 (Int Int) Bool)
(declare-fun _61 (Int Int) Bool)
(declare-fun _62 (Int Int) Bool)
(declare-fun _63 (Int Int) Bool)
(declare-fun _64 (Int Int) Bool)
(declare-fun _65 (Int Int) Bool)
(declare-fun _66 (Int Int) Bool)
(declare-fun _67 (Int Int) Bool)
(declare-fun _68 (Int Int) Bool)
(declare-fun _69 (Int Int) Bool)
(declare-fun _70 (Int Int) Bool)
(declare-fun _71 (Int Int) Bool)
(declare-fun _72 (Int Int) Bool)
(declare-fun _73 (Int Int) Bool)
(declare-fun _74 (Int Int) Bool)
(declare-fun _75 (Int Int) Bool)
(declare-fun _76 (Int Int) Bool)
(declare-fun _77 (Int Int) Bool)
(declare-fun _78 (Int Int) Bool)
(declare-fun _79 (Int Int) Bool)
(declare-fun _80 (Int Int) Bool)
(declare-fun _81 (Int Int) Bool)
(declare-fun _82 (Int Int) Bool)
(declare-fun _83 (Int Int) Bool)
(declare-fun _84 (Int Int) Bool)
(declare-fun _85 (Int Int) Bool)
(declare-fun _86 (Int Int) Bool)
(declare-fun _87 (Int Int) Bool)
(declare-fun _88 (Int Int) Bool)
(declare-fun _89 (Int Int) Bool)
(declare-fun _90 (Int Int) Bool)
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (= time 0) true (= var0 0)) (_0 var0 time)) :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (= time 0) true (= var0 0)) (_0 var0 time)) :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_0 var0 time) (_1 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_1 var0 time) (_2 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_2 var0 time) (_3 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_3 var0 time) (_4 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_4 var0 time) (_5 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_5 var0 time) (_6 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_6 var0 time) (_7 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_7 var0 time) (_8 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_8 var0 time) (_9 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_9 var0 time) (_10 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_10 var0 time) (_11 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_11 var0 time) (_12 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_12 var0 time) (_13 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_13 var0 time) (_14 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_14 var0 time) (_15 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_15 var0 time) (_16 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_16 var0 time) (_17 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_17 var0 time) (_18 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_18 var0 time) (_19 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_19 var0 time) (_20 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_20 var0 time) (_21 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_21 var0 time) (_22 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_22 var0 time) (_23 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_23 var0 time) (_24 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_24 var0 time) (_25 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_25 var0 time) (_26 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_26 var0 time) (_27 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_27 var0 time) (_28 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_28 var0 time) (_29 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_29 var0 time) (_30 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_30 var0 time) (_31 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_31 var0 time) (_32 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_32 var0 time) (_33 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_33 var0 time) (_34 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_34 var0 time) (_35 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_35 var0 time) (_36 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_36 var0 time) (_37 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_37 var0 time) (_38 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_38 var0 time) (_39 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_39 var0 time) (_40 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_40 var0 time) (_41 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_41 var0 time) (_42 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_42 var0 time) (_43 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_43 var0 time) (_44 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_44 var0 time) (_45 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_45 var0 time) (_46 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_46 var0 time) (_47 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_47 var0 time) (_48 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_48 var0 time) (_49 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_49 var0 time) (_50 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_50 var0 time) (_51 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_51 var0 time) (_52 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_52 var0 time) (_53 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_53 var0 time) (_54 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_54 var0 time) (_55 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_55 var0 time) (_56 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_56 var0 time) (_57 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_57 var0 time) (_58 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_58 var0 time) (_59 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_59 var0 time) (_60 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_60 var0 time) (_61 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_61 var0 time) (_62 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_62 var0 time) (_63 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_63 var0 time) (_64 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_64 var0 time) (_65 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_65 var0 time) (_66 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_66 var0 time) (_67 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_67 var0 time) (_68 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_68 var0 time) (_69 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_69 var0 time) (_70 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_70 var0 time) (_71 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_71 var0 time) (_72 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_72 var0 time) (_73 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_73 var0 time) (_74 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_74 var0 time) (_75 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_75 var0 time) (_76 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_76 var0 time) (_77 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_77 var0 time) (_78 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_78 var0 time) (_79 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_79 var0 time) (_80 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_80 var0 time) (_81 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_81 var0 time) (_82 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_82 var0 time) (_83 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_83 var0 time) (_84 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_84 var0 time) (_85 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_85 var0 time) (_86 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_86 var0 time) (_87 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_87 var0 time) (_88 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_88 var0 time) (_89 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 100))
              (=> (_89 var0 time) (_90 (+ var0 1) (+ time 1))))
          :weight 0))
     :weight 0)))
(assert (forall ((time Int))
  (! (forall ((var0 Int))
       (! (=> (and (>= time 0) (< time 99)) (= (_89 var0 time) (= var0 89)))
          :weight 0))
     :weight 0)))
(check-sat)
