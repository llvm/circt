; 
(set-info :status unknown)
(declare-fun _0 (Int Int) Bool)
(declare-fun _1 (Int Int) Bool)
(declare-fun _2 (Int Int) Bool)
(declare-fun _3 (Int Int) Bool)
(declare-fun _4 (Int Int) Bool)
(declare-fun _5 (Int Int) Bool)
(declare-fun _6 (Int Int) Bool)
(declare-fun _7 (Int Int) Bool)
(declare-fun _8 (Int Int) Bool)
(declare-fun _9 (Int Int) Bool)
(declare-fun _10 (Int Int) Bool)
(declare-fun _11 (Int Int) Bool)
(declare-fun _12 (Int Int) Bool)
(declare-fun _13 (Int Int) Bool)
(declare-fun _14 (Int Int) Bool)
(declare-fun _15 (Int Int) Bool)
(declare-fun _16 (Int Int) Bool)
(declare-fun _17 (Int Int) Bool)
(declare-fun _18 (Int Int) Bool)
(declare-fun _19 (Int Int) Bool)
(declare-fun _20 (Int Int) Bool)
(assert
 (_0 0 0))
(assert
 (forall ((time Int) )(let (($x52 (forall ((var0 Int) )(let (($x50 (_0 var0 time)))
 (=> $x50 (_1 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x52)))))
 )
(assert
 (forall ((time Int) )(let (($x73 (forall ((var0 Int) )(let (($x59 (_1 var0 time)))
 (=> $x59 (_2 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x73)))))
 )
(assert
 (forall ((time Int) )(let (($x85 (forall ((var0 Int) )(let (($x77 (_2 var0 time)))
 (=> $x77 (_3 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x85)))))
 )
(assert
 (forall ((time Int) )(let (($x97 (forall ((var0 Int) )(let (($x89 (_3 var0 time)))
 (=> $x89 (_4 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x97)))))
 )
(assert
 (forall ((time Int) )(let (($x109 (forall ((var0 Int) )(let (($x101 (_4 var0 time)))
 (=> $x101 (_5 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x109)))))
 )
(assert
 (forall ((time Int) )(let (($x121 (forall ((var0 Int) )(let (($x113 (_5 var0 time)))
 (=> $x113 (_6 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x121)))))
 )
(assert
 (forall ((time Int) )(let (($x133 (forall ((var0 Int) )(let (($x125 (_6 var0 time)))
 (=> $x125 (_7 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x133)))))
 )
(assert
 (forall ((time Int) )(let (($x145 (forall ((var0 Int) )(let (($x137 (_7 var0 time)))
 (=> $x137 (_8 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x145)))))
 )
(assert
 (forall ((time Int) )(let (($x157 (forall ((var0 Int) )(let (($x149 (_8 var0 time)))
 (=> $x149 (_9 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x157)))))
 )
(assert
 (forall ((time Int) )(let (($x169 (forall ((var0 Int) )(let (($x161 (_9 var0 time)))
 (=> $x161 (_10 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x169)))))
 )
(assert
 (forall ((time Int) )(let (($x181 (forall ((var0 Int) )(let (($x173 (_10 var0 time)))
 (=> $x173 (_11 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x181)))))
 )
(assert
 (forall ((time Int) )(let (($x193 (forall ((var0 Int) )(let (($x185 (_11 var0 time)))
 (=> $x185 (_12 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x193)))))
 )
(assert
 (forall ((time Int) )(let (($x205 (forall ((var0 Int) )(let (($x197 (_12 var0 time)))
 (=> $x197 (_13 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x205)))))
 )
(assert
 (forall ((time Int) )(let (($x217 (forall ((var0 Int) )(let (($x209 (_13 var0 time)))
 (=> $x209 (_14 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x217)))))
 )
(assert
 (forall ((time Int) )(let (($x229 (forall ((var0 Int) )(let (($x221 (_14 var0 time)))
 (=> $x221 (_15 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x229)))))
 )
(assert
 (forall ((time Int) )(let (($x241 (forall ((var0 Int) )(let (($x233 (_15 var0 time)))
 (=> $x233 (_16 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x241)))))
 )
(assert
 (forall ((time Int) )(let (($x253 (forall ((var0 Int) )(let (($x245 (_16 var0 time)))
 (=> $x245 (_17 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x253)))))
 )
(assert
 (forall ((time Int) )(let (($x265 (forall ((var0 Int) )(let (($x257 (_17 var0 time)))
 (=> $x257 (_18 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x265)))))
 )
(assert
 (forall ((time Int) )(let (($x277 (forall ((var0 Int) )(let (($x269 (_18 var0 time)))
 (=> $x269 (_19 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x277)))))
 )
(assert
 (forall ((time Int) )(let (($x289 (forall ((var0 Int) )(let (($x281 (_19 var0 time)))
 (=> $x281 (_20 (+ var0 1) (+ time 1)))))
 ))
 (let (($x54 (>= time 0)))
 (let (($x55 (and $x54 (< time 30))))
 (=> $x55 $x289)))))
 )
(assert
 (forall ((time Int) )(let (($x293 (forall ((var0 Int) )(let (($x281 (_19 var0 time)))
 (= $x281 (and (distinct var0 19) true))))
 ))
 (=> (and (>= time 0) (< time 29)) $x293)))
 )
(check-sat)
