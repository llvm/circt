; 
(set-info :status unknown)
(declare-fun _0 (Int Int Int Int) Bool)
(declare-fun input-arg0 (Int) Int)
(declare-fun _1 (Int Int Int Int) Bool)
(declare-fun ERR (Int Int Int Int) Bool)
(declare-fun _2 (Int Int Int Int) Bool)
(declare-fun _3 (Int Int Int Int) Bool)
(declare-fun _4 (Int Int Int Int) Bool)
(declare-fun _5 (Int Int Int Int) Bool)
(declare-fun _6 (Int Int Int Int) Bool)
(declare-fun _7 (Int Int Int Int) Bool)
(declare-fun _8 (Int Int Int Int) Bool)
(declare-fun _9 (Int Int Int Int) Bool)
(declare-fun _10 (Int Int Int Int) Bool)
(declare-fun _11 (Int Int Int Int) Bool)
(declare-fun _12 (Int Int Int Int) Bool)
(declare-fun _13 (Int Int Int Int) Bool)
(declare-fun _14 (Int Int Int Int) Bool)
(declare-fun _15 (Int Int Int Int) Bool)
(declare-fun _16 (Int Int Int Int) Bool)
(declare-fun _17 (Int Int Int Int) Bool)
(declare-fun _18 (Int Int Int Int) Bool)
(declare-fun _19 (Int Int Int Int) Bool)
(declare-fun _20 (Int Int Int Int) Bool)
(declare-fun _21 (Int Int Int Int) Bool)
(declare-fun _22 (Int Int Int Int) Bool)
(declare-fun _23 (Int Int Int Int) Bool)
(declare-fun _24 (Int Int Int Int) Bool)
(declare-fun _25 (Int Int Int Int) Bool)
(declare-fun _26 (Int Int Int Int) Bool)
(declare-fun _27 (Int Int Int Int) Bool)
(declare-fun _28 (Int Int Int Int) Bool)
(declare-fun _29 (Int Int Int Int) Bool)
(declare-fun _30 (Int Int Int Int) Bool)
(declare-fun _31 (Int Int Int Int) Bool)
(declare-fun _32 (Int Int Int Int) Bool)
(declare-fun _33 (Int Int Int Int) Bool)
(declare-fun _34 (Int Int Int Int) Bool)
(declare-fun _35 (Int Int Int Int) Bool)
(declare-fun _36 (Int Int Int Int) Bool)
(declare-fun _37 (Int Int Int Int) Bool)
(declare-fun _38 (Int Int Int Int) Bool)
(declare-fun _39 (Int Int Int Int) Bool)
(declare-fun _40 (Int Int Int Int) Bool)
(declare-fun _41 (Int Int Int Int) Bool)
(declare-fun _42 (Int Int Int Int) Bool)
(declare-fun _43 (Int Int Int Int) Bool)
(declare-fun _44 (Int Int Int Int) Bool)
(declare-fun _45 (Int Int Int Int) Bool)
(declare-fun _46 (Int Int Int Int) Bool)
(declare-fun _47 (Int Int Int Int) Bool)
(declare-fun _48 (Int Int Int Int) Bool)
(declare-fun _49 (Int Int Int Int) Bool)
(declare-fun _50 (Int Int Int Int) Bool)
(declare-fun _51 (Int Int Int Int) Bool)
(declare-fun _52 (Int Int Int Int) Bool)
(declare-fun _53 (Int Int Int Int) Bool)
(declare-fun _54 (Int Int Int Int) Bool)
(declare-fun _55 (Int Int Int Int) Bool)
(declare-fun _56 (Int Int Int Int) Bool)
(declare-fun _57 (Int Int Int Int) Bool)
(declare-fun _58 (Int Int Int Int) Bool)
(declare-fun _59 (Int Int Int Int) Bool)
(declare-fun _60 (Int Int Int Int) Bool)
(declare-fun _61 (Int Int Int Int) Bool)
(declare-fun _62 (Int Int Int Int) Bool)
(declare-fun _63 (Int Int Int Int) Bool)
(declare-fun _64 (Int Int Int Int) Bool)
(declare-fun _65 (Int Int Int Int) Bool)
(declare-fun _66 (Int Int Int Int) Bool)
(declare-fun _67 (Int Int Int Int) Bool)
(declare-fun _68 (Int Int Int Int) Bool)
(declare-fun _69 (Int Int Int Int) Bool)
(declare-fun _70 (Int Int Int Int) Bool)
(declare-fun _71 (Int Int Int Int) Bool)
(declare-fun _72 (Int Int Int Int) Bool)
(declare-fun _73 (Int Int Int Int) Bool)
(declare-fun _74 (Int Int Int Int) Bool)
(declare-fun _75 (Int Int Int Int) Bool)
(declare-fun _76 (Int Int Int Int) Bool)
(declare-fun _77 (Int Int Int Int) Bool)
(declare-fun _78 (Int Int Int Int) Bool)
(declare-fun _79 (Int Int Int Int) Bool)
(declare-fun _80 (Int Int Int Int) Bool)
(declare-fun _81 (Int Int Int Int) Bool)
(declare-fun _82 (Int Int Int Int) Bool)
(declare-fun _83 (Int Int Int Int) Bool)
(declare-fun _84 (Int Int Int Int) Bool)
(declare-fun _85 (Int Int Int Int) Bool)
(declare-fun _86 (Int Int Int Int) Bool)
(declare-fun _87 (Int Int Int Int) Bool)
(declare-fun _88 (Int Int Int Int) Bool)
(declare-fun _89 (Int Int Int Int) Bool)
(declare-fun _90 (Int Int Int Int) Bool)
(declare-fun _91 (Int Int Int Int) Bool)
(declare-fun _92 (Int Int Int Int) Bool)
(declare-fun _93 (Int Int Int Int) Bool)
(declare-fun _94 (Int Int Int Int) Bool)
(declare-fun _95 (Int Int Int Int) Bool)
(declare-fun _96 (Int Int Int Int) Bool)
(declare-fun _97 (Int Int Int Int) Bool)
(declare-fun _98 (Int Int Int Int) Bool)
(declare-fun _99 (Int Int Int Int) Bool)
(declare-fun _100 (Int Int Int Int) Bool)
(declare-fun _101 (Int Int Int Int) Bool)
(declare-fun _102 (Int Int Int Int) Bool)
(declare-fun _103 (Int Int Int Int) Bool)
(declare-fun _104 (Int Int Int Int) Bool)
(declare-fun _105 (Int Int Int Int) Bool)
(declare-fun _106 (Int Int Int Int) Bool)
(declare-fun _107 (Int Int Int Int) Bool)
(declare-fun _108 (Int Int Int Int) Bool)
(declare-fun _109 (Int Int Int Int) Bool)
(declare-fun _110 (Int Int Int Int) Bool)
(declare-fun _111 (Int Int Int Int) Bool)
(declare-fun _112 (Int Int Int Int) Bool)
(declare-fun _113 (Int Int Int Int) Bool)
(declare-fun _114 (Int Int Int Int) Bool)
(declare-fun _115 (Int Int Int Int) Bool)
(declare-fun _116 (Int Int Int Int) Bool)
(declare-fun _117 (Int Int Int Int) Bool)
(declare-fun _118 (Int Int Int Int) Bool)
(declare-fun _119 (Int Int Int Int) Bool)
(declare-fun _120 (Int Int Int Int) Bool)
(assert
 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x19 (input-arg0 0)))
 (_0 ?x19 0 0 0)))
 )
 )
(assert
 (forall ((time Int) )(let (($x75 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (=> (and $x71 $x70) (_1 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x75)))))
 )
(assert
 (forall ((time Int) )(let (($x101 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (let (($x82 (and $x71 $x81)))
 (=> $x82 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x101)))))
 )
(assert
 (forall ((time Int) )(let (($x116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (=> (and $x112 $x70) (_2 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x116)))))
 )
(assert
 (forall ((time Int) )(let (($x128 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (let (($x57 (and $x112 $x81)))
 (=> $x57 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x128)))))
 )
(assert
 (forall ((time Int) )(let (($x142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (=> (and $x138 $x70) (_3 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x142)))))
 )
(assert
 (forall ((time Int) )(let (($x154 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (let (($x56 (and $x138 $x81)))
 (=> $x56 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x154)))))
 )
(assert
 (forall ((time Int) )(let (($x168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (=> (and $x164 $x70) (_4 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x168)))))
 )
(assert
 (forall ((time Int) )(let (($x180 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (let (($x54 (and $x164 $x81)))
 (=> $x54 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x180)))))
 )
(assert
 (forall ((time Int) )(let (($x194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (=> (and $x190 $x70) (_5 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x194)))))
 )
(assert
 (forall ((time Int) )(let (($x206 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (let (($x50 (and $x190 $x81)))
 (=> $x50 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x206)))))
 )
(assert
 (forall ((time Int) )(let (($x220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (=> (and $x216 $x70) (_6 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x220)))))
 )
(assert
 (forall ((time Int) )(let (($x232 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (let (($x62 (and $x216 $x81)))
 (=> $x62 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x232)))))
 )
(assert
 (forall ((time Int) )(let (($x246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (=> (and $x242 $x70) (_7 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x246)))))
 )
(assert
 (forall ((time Int) )(let (($x258 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (let (($x61 (and $x242 $x81)))
 (=> $x61 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x258)))))
 )
(assert
 (forall ((time Int) )(let (($x272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (=> (and $x268 $x70) (_8 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x272)))))
 )
(assert
 (forall ((time Int) )(let (($x284 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (let (($x53 (and $x268 $x81)))
 (=> $x53 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x284)))))
 )
(assert
 (forall ((time Int) )(let (($x298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (=> (and $x294 $x70) (_9 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x298)))))
 )
(assert
 (forall ((time Int) )(let (($x310 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (let (($x63 (and $x294 $x81)))
 (=> $x63 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x310)))))
 )
(assert
 (forall ((time Int) )(let (($x324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (=> (and $x320 $x70) (_10 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x324)))))
 )
(assert
 (forall ((time Int) )(let (($x336 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (let (($x104 (and $x320 $x81)))
 (=> $x104 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x336)))))
 )
(assert
 (forall ((time Int) )(let (($x350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (=> (and $x346 $x70) (_11 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x350)))))
 )
(assert
 (forall ((time Int) )(let (($x362 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (let (($x131 (and $x346 $x81)))
 (=> $x131 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x362)))))
 )
(assert
 (forall ((time Int) )(let (($x376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (=> (and $x372 $x70) (_12 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x376)))))
 )
(assert
 (forall ((time Int) )(let (($x388 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (let (($x157 (and $x372 $x81)))
 (=> $x157 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x388)))))
 )
(assert
 (forall ((time Int) )(let (($x402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (=> (and $x398 $x70) (_13 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x402)))))
 )
(assert
 (forall ((time Int) )(let (($x414 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (let (($x183 (and $x398 $x81)))
 (=> $x183 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x414)))))
 )
(assert
 (forall ((time Int) )(let (($x428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (=> (and $x424 $x70) (_14 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x428)))))
 )
(assert
 (forall ((time Int) )(let (($x440 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (let (($x209 (and $x424 $x81)))
 (=> $x209 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x440)))))
 )
(assert
 (forall ((time Int) )(let (($x454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (=> (and $x450 $x70) (_15 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x454)))))
 )
(assert
 (forall ((time Int) )(let (($x466 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (let (($x235 (and $x450 $x81)))
 (=> $x235 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x466)))))
 )
(assert
 (forall ((time Int) )(let (($x480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (=> (and $x476 $x70) (_16 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x480)))))
 )
(assert
 (forall ((time Int) )(let (($x492 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (let (($x261 (and $x476 $x81)))
 (=> $x261 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x492)))))
 )
(assert
 (forall ((time Int) )(let (($x506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (=> (and $x502 $x70) (_17 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x506)))))
 )
(assert
 (forall ((time Int) )(let (($x518 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (let (($x287 (and $x502 $x81)))
 (=> $x287 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x518)))))
 )
(assert
 (forall ((time Int) )(let (($x532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (=> (and $x528 $x70) (_18 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x532)))))
 )
(assert
 (forall ((time Int) )(let (($x544 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (let (($x313 (and $x528 $x81)))
 (=> $x313 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x544)))))
 )
(assert
 (forall ((time Int) )(let (($x558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (=> (and $x554 $x70) (_19 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x558)))))
 )
(assert
 (forall ((time Int) )(let (($x570 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (let (($x339 (and $x554 $x81)))
 (=> $x339 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x570)))))
 )
(assert
 (forall ((time Int) )(let (($x584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (=> (and $x580 $x70) (_20 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x584)))))
 )
(assert
 (forall ((time Int) )(let (($x596 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (let (($x365 (and $x580 $x81)))
 (=> $x365 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x596)))))
 )
(assert
 (forall ((time Int) )(let (($x610 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x606 (_20 ?x69 var1 var2 time)))
 (=> (and $x606 $x70) (_21 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x610)))))
 )
(assert
 (forall ((time Int) )(let (($x622 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x606 (_20 ?x69 var1 var2 time)))
 (let (($x391 (and $x606 $x81)))
 (=> $x391 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x622)))))
 )
(assert
 (forall ((time Int) )(let (($x636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x632 (_21 ?x69 var1 var2 time)))
 (=> (and $x632 $x70) (_22 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x636)))))
 )
(assert
 (forall ((time Int) )(let (($x648 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x632 (_21 ?x69 var1 var2 time)))
 (let (($x417 (and $x632 $x81)))
 (=> $x417 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x648)))))
 )
(assert
 (forall ((time Int) )(let (($x662 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x658 (_22 ?x69 var1 var2 time)))
 (=> (and $x658 $x70) (_23 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x662)))))
 )
(assert
 (forall ((time Int) )(let (($x674 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x658 (_22 ?x69 var1 var2 time)))
 (let (($x443 (and $x658 $x81)))
 (=> $x443 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x674)))))
 )
(assert
 (forall ((time Int) )(let (($x688 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x684 (_23 ?x69 var1 var2 time)))
 (=> (and $x684 $x70) (_24 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x688)))))
 )
(assert
 (forall ((time Int) )(let (($x700 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x684 (_23 ?x69 var1 var2 time)))
 (let (($x469 (and $x684 $x81)))
 (=> $x469 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x700)))))
 )
(assert
 (forall ((time Int) )(let (($x714 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x710 (_24 ?x69 var1 var2 time)))
 (=> (and $x710 $x70) (_25 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x714)))))
 )
(assert
 (forall ((time Int) )(let (($x726 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x710 (_24 ?x69 var1 var2 time)))
 (let (($x495 (and $x710 $x81)))
 (=> $x495 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x726)))))
 )
(assert
 (forall ((time Int) )(let (($x740 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x736 (_25 ?x69 var1 var2 time)))
 (=> (and $x736 $x70) (_26 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x740)))))
 )
(assert
 (forall ((time Int) )(let (($x752 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x736 (_25 ?x69 var1 var2 time)))
 (let (($x521 (and $x736 $x81)))
 (=> $x521 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x752)))))
 )
(assert
 (forall ((time Int) )(let (($x766 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x762 (_26 ?x69 var1 var2 time)))
 (=> (and $x762 $x70) (_27 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x766)))))
 )
(assert
 (forall ((time Int) )(let (($x778 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x762 (_26 ?x69 var1 var2 time)))
 (let (($x547 (and $x762 $x81)))
 (=> $x547 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x778)))))
 )
(assert
 (forall ((time Int) )(let (($x792 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x788 (_27 ?x69 var1 var2 time)))
 (=> (and $x788 $x70) (_28 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x792)))))
 )
(assert
 (forall ((time Int) )(let (($x804 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x788 (_27 ?x69 var1 var2 time)))
 (let (($x573 (and $x788 $x81)))
 (=> $x573 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x804)))))
 )
(assert
 (forall ((time Int) )(let (($x818 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x814 (_28 ?x69 var1 var2 time)))
 (=> (and $x814 $x70) (_29 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x818)))))
 )
(assert
 (forall ((time Int) )(let (($x830 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x814 (_28 ?x69 var1 var2 time)))
 (let (($x599 (and $x814 $x81)))
 (=> $x599 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x830)))))
 )
(assert
 (forall ((time Int) )(let (($x844 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x840 (_29 ?x69 var1 var2 time)))
 (=> (and $x840 $x70) (_30 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x844)))))
 )
(assert
 (forall ((time Int) )(let (($x856 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x840 (_29 ?x69 var1 var2 time)))
 (let (($x625 (and $x840 $x81)))
 (=> $x625 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x856)))))
 )
(assert
 (forall ((time Int) )(let (($x870 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x866 (_30 ?x69 var1 var2 time)))
 (=> (and $x866 $x70) (_31 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x870)))))
 )
(assert
 (forall ((time Int) )(let (($x882 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x866 (_30 ?x69 var1 var2 time)))
 (let (($x651 (and $x866 $x81)))
 (=> $x651 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x882)))))
 )
(assert
 (forall ((time Int) )(let (($x896 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x892 (_31 ?x69 var1 var2 time)))
 (=> (and $x892 $x70) (_32 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x896)))))
 )
(assert
 (forall ((time Int) )(let (($x908 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x892 (_31 ?x69 var1 var2 time)))
 (let (($x677 (and $x892 $x81)))
 (=> $x677 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x908)))))
 )
(assert
 (forall ((time Int) )(let (($x922 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x918 (_32 ?x69 var1 var2 time)))
 (=> (and $x918 $x70) (_33 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x922)))))
 )
(assert
 (forall ((time Int) )(let (($x934 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x918 (_32 ?x69 var1 var2 time)))
 (let (($x703 (and $x918 $x81)))
 (=> $x703 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x934)))))
 )
(assert
 (forall ((time Int) )(let (($x948 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x944 (_33 ?x69 var1 var2 time)))
 (=> (and $x944 $x70) (_34 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x948)))))
 )
(assert
 (forall ((time Int) )(let (($x960 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x944 (_33 ?x69 var1 var2 time)))
 (let (($x729 (and $x944 $x81)))
 (=> $x729 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x960)))))
 )
(assert
 (forall ((time Int) )(let (($x974 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x970 (_34 ?x69 var1 var2 time)))
 (=> (and $x970 $x70) (_35 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x974)))))
 )
(assert
 (forall ((time Int) )(let (($x986 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x970 (_34 ?x69 var1 var2 time)))
 (let (($x755 (and $x970 $x81)))
 (=> $x755 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x986)))))
 )
(assert
 (forall ((time Int) )(let (($x1000 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x996 (_35 ?x69 var1 var2 time)))
 (=> (and $x996 $x70) (_36 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1000)))))
 )
(assert
 (forall ((time Int) )(let (($x1012 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x996 (_35 ?x69 var1 var2 time)))
 (let (($x781 (and $x996 $x81)))
 (=> $x781 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1012)))))
 )
(assert
 (forall ((time Int) )(let (($x1026 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1022 (_36 ?x69 var1 var2 time)))
 (=> (and $x1022 $x70) (_37 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1026)))))
 )
(assert
 (forall ((time Int) )(let (($x1038 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1022 (_36 ?x69 var1 var2 time)))
 (let (($x807 (and $x1022 $x81)))
 (=> $x807 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1038)))))
 )
(assert
 (forall ((time Int) )(let (($x1052 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1048 (_37 ?x69 var1 var2 time)))
 (=> (and $x1048 $x70) (_38 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1052)))))
 )
(assert
 (forall ((time Int) )(let (($x1064 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1048 (_37 ?x69 var1 var2 time)))
 (let (($x833 (and $x1048 $x81)))
 (=> $x833 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1064)))))
 )
(assert
 (forall ((time Int) )(let (($x1078 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1074 (_38 ?x69 var1 var2 time)))
 (=> (and $x1074 $x70) (_39 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1078)))))
 )
(assert
 (forall ((time Int) )(let (($x1090 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1074 (_38 ?x69 var1 var2 time)))
 (let (($x859 (and $x1074 $x81)))
 (=> $x859 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1090)))))
 )
(assert
 (forall ((time Int) )(let (($x1104 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1100 (_39 ?x69 var1 var2 time)))
 (=> (and $x1100 $x70) (_40 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1104)))))
 )
(assert
 (forall ((time Int) )(let (($x1116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1100 (_39 ?x69 var1 var2 time)))
 (let (($x885 (and $x1100 $x81)))
 (=> $x885 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1116)))))
 )
(assert
 (forall ((time Int) )(let (($x1130 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1126 (_40 ?x69 var1 var2 time)))
 (=> (and $x1126 $x70) (_41 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1130)))))
 )
(assert
 (forall ((time Int) )(let (($x1142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1126 (_40 ?x69 var1 var2 time)))
 (let (($x911 (and $x1126 $x81)))
 (=> $x911 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1142)))))
 )
(assert
 (forall ((time Int) )(let (($x1156 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1152 (_41 ?x69 var1 var2 time)))
 (=> (and $x1152 $x70) (_42 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1156)))))
 )
(assert
 (forall ((time Int) )(let (($x1168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1152 (_41 ?x69 var1 var2 time)))
 (let (($x937 (and $x1152 $x81)))
 (=> $x937 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1168)))))
 )
(assert
 (forall ((time Int) )(let (($x1182 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1178 (_42 ?x69 var1 var2 time)))
 (=> (and $x1178 $x70) (_43 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1182)))))
 )
(assert
 (forall ((time Int) )(let (($x1194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1178 (_42 ?x69 var1 var2 time)))
 (let (($x963 (and $x1178 $x81)))
 (=> $x963 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1194)))))
 )
(assert
 (forall ((time Int) )(let (($x1208 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1204 (_43 ?x69 var1 var2 time)))
 (=> (and $x1204 $x70) (_44 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1208)))))
 )
(assert
 (forall ((time Int) )(let (($x1220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1204 (_43 ?x69 var1 var2 time)))
 (let (($x989 (and $x1204 $x81)))
 (=> $x989 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1220)))))
 )
(assert
 (forall ((time Int) )(let (($x1234 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1230 (_44 ?x69 var1 var2 time)))
 (=> (and $x1230 $x70) (_45 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1234)))))
 )
(assert
 (forall ((time Int) )(let (($x1246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1230 (_44 ?x69 var1 var2 time)))
 (let (($x1015 (and $x1230 $x81)))
 (=> $x1015 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1246)))))
 )
(assert
 (forall ((time Int) )(let (($x1260 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1256 (_45 ?x69 var1 var2 time)))
 (=> (and $x1256 $x70) (_46 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1260)))))
 )
(assert
 (forall ((time Int) )(let (($x1272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1256 (_45 ?x69 var1 var2 time)))
 (let (($x1041 (and $x1256 $x81)))
 (=> $x1041 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1272)))))
 )
(assert
 (forall ((time Int) )(let (($x1286 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1282 (_46 ?x69 var1 var2 time)))
 (=> (and $x1282 $x70) (_47 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1286)))))
 )
(assert
 (forall ((time Int) )(let (($x1298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1282 (_46 ?x69 var1 var2 time)))
 (let (($x1067 (and $x1282 $x81)))
 (=> $x1067 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1298)))))
 )
(assert
 (forall ((time Int) )(let (($x1312 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1308 (_47 ?x69 var1 var2 time)))
 (=> (and $x1308 $x70) (_48 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1312)))))
 )
(assert
 (forall ((time Int) )(let (($x1324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1308 (_47 ?x69 var1 var2 time)))
 (let (($x1093 (and $x1308 $x81)))
 (=> $x1093 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1324)))))
 )
(assert
 (forall ((time Int) )(let (($x1338 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1334 (_48 ?x69 var1 var2 time)))
 (=> (and $x1334 $x70) (_49 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1338)))))
 )
(assert
 (forall ((time Int) )(let (($x1350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1334 (_48 ?x69 var1 var2 time)))
 (let (($x1119 (and $x1334 $x81)))
 (=> $x1119 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1350)))))
 )
(assert
 (forall ((time Int) )(let (($x1364 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1360 (_49 ?x69 var1 var2 time)))
 (=> (and $x1360 $x70) (_50 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1364)))))
 )
(assert
 (forall ((time Int) )(let (($x1376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1360 (_49 ?x69 var1 var2 time)))
 (let (($x1145 (and $x1360 $x81)))
 (=> $x1145 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1376)))))
 )
(assert
 (forall ((time Int) )(let (($x1390 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1386 (_50 ?x69 var1 var2 time)))
 (=> (and $x1386 $x70) (_51 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1390)))))
 )
(assert
 (forall ((time Int) )(let (($x1402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1386 (_50 ?x69 var1 var2 time)))
 (let (($x1171 (and $x1386 $x81)))
 (=> $x1171 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1402)))))
 )
(assert
 (forall ((time Int) )(let (($x1416 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1412 (_51 ?x69 var1 var2 time)))
 (=> (and $x1412 $x70) (_52 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1416)))))
 )
(assert
 (forall ((time Int) )(let (($x1428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1412 (_51 ?x69 var1 var2 time)))
 (let (($x1197 (and $x1412 $x81)))
 (=> $x1197 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1428)))))
 )
(assert
 (forall ((time Int) )(let (($x1442 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1438 (_52 ?x69 var1 var2 time)))
 (=> (and $x1438 $x70) (_53 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1442)))))
 )
(assert
 (forall ((time Int) )(let (($x1454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1438 (_52 ?x69 var1 var2 time)))
 (let (($x1223 (and $x1438 $x81)))
 (=> $x1223 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1454)))))
 )
(assert
 (forall ((time Int) )(let (($x1468 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1464 (_53 ?x69 var1 var2 time)))
 (=> (and $x1464 $x70) (_54 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1468)))))
 )
(assert
 (forall ((time Int) )(let (($x1480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1464 (_53 ?x69 var1 var2 time)))
 (let (($x1249 (and $x1464 $x81)))
 (=> $x1249 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1480)))))
 )
(assert
 (forall ((time Int) )(let (($x1494 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1490 (_54 ?x69 var1 var2 time)))
 (=> (and $x1490 $x70) (_55 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1494)))))
 )
(assert
 (forall ((time Int) )(let (($x1506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1490 (_54 ?x69 var1 var2 time)))
 (let (($x1275 (and $x1490 $x81)))
 (=> $x1275 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1506)))))
 )
(assert
 (forall ((time Int) )(let (($x1520 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1516 (_55 ?x69 var1 var2 time)))
 (=> (and $x1516 $x70) (_56 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1520)))))
 )
(assert
 (forall ((time Int) )(let (($x1532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1516 (_55 ?x69 var1 var2 time)))
 (let (($x1301 (and $x1516 $x81)))
 (=> $x1301 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1532)))))
 )
(assert
 (forall ((time Int) )(let (($x1546 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1542 (_56 ?x69 var1 var2 time)))
 (=> (and $x1542 $x70) (_57 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1546)))))
 )
(assert
 (forall ((time Int) )(let (($x1558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1542 (_56 ?x69 var1 var2 time)))
 (let (($x1327 (and $x1542 $x81)))
 (=> $x1327 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1558)))))
 )
(assert
 (forall ((time Int) )(let (($x1572 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1568 (_57 ?x69 var1 var2 time)))
 (=> (and $x1568 $x70) (_58 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1572)))))
 )
(assert
 (forall ((time Int) )(let (($x1584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1568 (_57 ?x69 var1 var2 time)))
 (let (($x1353 (and $x1568 $x81)))
 (=> $x1353 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1584)))))
 )
(assert
 (forall ((time Int) )(let (($x1598 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1594 (_58 ?x69 var1 var2 time)))
 (=> (and $x1594 $x70) (_59 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1598)))))
 )
(assert
 (forall ((time Int) )(let (($x1610 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1594 (_58 ?x69 var1 var2 time)))
 (let (($x1379 (and $x1594 $x81)))
 (=> $x1379 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1610)))))
 )
(assert
 (forall ((time Int) )(let (($x1624 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (=> (and $x1620 $x70) (_60 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1624)))))
 )
(assert
 (forall ((time Int) )(let (($x1636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (let (($x1405 (and $x1620 $x81)))
 (=> $x1405 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1636)))))
 )
(assert
 (forall ((time Int) )(let (($x1650 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1646 (_60 ?x69 var1 var2 time)))
 (=> (and $x1646 $x70) (_61 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1650)))))
 )
(assert
 (forall ((time Int) )(let (($x1662 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1646 (_60 ?x69 var1 var2 time)))
 (let (($x1431 (and $x1646 $x81)))
 (=> $x1431 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1662)))))
 )
(assert
 (forall ((time Int) )(let (($x1676 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1672 (_61 ?x69 var1 var2 time)))
 (=> (and $x1672 $x70) (_62 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1676)))))
 )
(assert
 (forall ((time Int) )(let (($x1688 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1672 (_61 ?x69 var1 var2 time)))
 (let (($x1457 (and $x1672 $x81)))
 (=> $x1457 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1688)))))
 )
(assert
 (forall ((time Int) )(let (($x1702 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1698 (_62 ?x69 var1 var2 time)))
 (=> (and $x1698 $x70) (_63 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1702)))))
 )
(assert
 (forall ((time Int) )(let (($x1714 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1698 (_62 ?x69 var1 var2 time)))
 (let (($x1483 (and $x1698 $x81)))
 (=> $x1483 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1714)))))
 )
(assert
 (forall ((time Int) )(let (($x1728 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1724 (_63 ?x69 var1 var2 time)))
 (=> (and $x1724 $x70) (_64 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1728)))))
 )
(assert
 (forall ((time Int) )(let (($x1740 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1724 (_63 ?x69 var1 var2 time)))
 (let (($x1509 (and $x1724 $x81)))
 (=> $x1509 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1740)))))
 )
(assert
 (forall ((time Int) )(let (($x1754 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1750 (_64 ?x69 var1 var2 time)))
 (=> (and $x1750 $x70) (_65 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1754)))))
 )
(assert
 (forall ((time Int) )(let (($x1766 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1750 (_64 ?x69 var1 var2 time)))
 (let (($x1535 (and $x1750 $x81)))
 (=> $x1535 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1766)))))
 )
(assert
 (forall ((time Int) )(let (($x1780 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1776 (_65 ?x69 var1 var2 time)))
 (=> (and $x1776 $x70) (_66 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1780)))))
 )
(assert
 (forall ((time Int) )(let (($x1792 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1776 (_65 ?x69 var1 var2 time)))
 (let (($x1561 (and $x1776 $x81)))
 (=> $x1561 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1792)))))
 )
(assert
 (forall ((time Int) )(let (($x1806 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1802 (_66 ?x69 var1 var2 time)))
 (=> (and $x1802 $x70) (_67 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1806)))))
 )
(assert
 (forall ((time Int) )(let (($x1818 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1802 (_66 ?x69 var1 var2 time)))
 (let (($x1587 (and $x1802 $x81)))
 (=> $x1587 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1818)))))
 )
(assert
 (forall ((time Int) )(let (($x1832 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1828 (_67 ?x69 var1 var2 time)))
 (=> (and $x1828 $x70) (_68 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1832)))))
 )
(assert
 (forall ((time Int) )(let (($x1844 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1828 (_67 ?x69 var1 var2 time)))
 (let (($x1613 (and $x1828 $x81)))
 (=> $x1613 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1844)))))
 )
(assert
 (forall ((time Int) )(let (($x1858 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1854 (_68 ?x69 var1 var2 time)))
 (=> (and $x1854 $x70) (_69 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1858)))))
 )
(assert
 (forall ((time Int) )(let (($x1870 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1854 (_68 ?x69 var1 var2 time)))
 (let (($x1639 (and $x1854 $x81)))
 (=> $x1639 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1870)))))
 )
(assert
 (forall ((time Int) )(let (($x1884 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1880 (_69 ?x69 var1 var2 time)))
 (=> (and $x1880 $x70) (_70 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1884)))))
 )
(assert
 (forall ((time Int) )(let (($x1896 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1880 (_69 ?x69 var1 var2 time)))
 (let (($x1665 (and $x1880 $x81)))
 (=> $x1665 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1896)))))
 )
(assert
 (forall ((time Int) )(let (($x1910 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1906 (_70 ?x69 var1 var2 time)))
 (=> (and $x1906 $x70) (_71 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1910)))))
 )
(assert
 (forall ((time Int) )(let (($x1922 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1906 (_70 ?x69 var1 var2 time)))
 (let (($x1691 (and $x1906 $x81)))
 (=> $x1691 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1922)))))
 )
(assert
 (forall ((time Int) )(let (($x1936 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1932 (_71 ?x69 var1 var2 time)))
 (=> (and $x1932 $x70) (_72 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1936)))))
 )
(assert
 (forall ((time Int) )(let (($x1948 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1932 (_71 ?x69 var1 var2 time)))
 (let (($x1717 (and $x1932 $x81)))
 (=> $x1717 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1948)))))
 )
(assert
 (forall ((time Int) )(let (($x1962 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1958 (_72 ?x69 var1 var2 time)))
 (=> (and $x1958 $x70) (_73 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1962)))))
 )
(assert
 (forall ((time Int) )(let (($x1974 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1958 (_72 ?x69 var1 var2 time)))
 (let (($x1743 (and $x1958 $x81)))
 (=> $x1743 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1974)))))
 )
(assert
 (forall ((time Int) )(let (($x1988 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1984 (_73 ?x69 var1 var2 time)))
 (=> (and $x1984 $x70) (_74 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x1988)))))
 )
(assert
 (forall ((time Int) )(let (($x2000 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1984 (_73 ?x69 var1 var2 time)))
 (let (($x1769 (and $x1984 $x81)))
 (=> $x1769 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2000)))))
 )
(assert
 (forall ((time Int) )(let (($x2014 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2010 (_74 ?x69 var1 var2 time)))
 (=> (and $x2010 $x70) (_75 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2014)))))
 )
(assert
 (forall ((time Int) )(let (($x2026 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2010 (_74 ?x69 var1 var2 time)))
 (let (($x1795 (and $x2010 $x81)))
 (=> $x1795 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2026)))))
 )
(assert
 (forall ((time Int) )(let (($x2040 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2036 (_75 ?x69 var1 var2 time)))
 (=> (and $x2036 $x70) (_76 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2040)))))
 )
(assert
 (forall ((time Int) )(let (($x2052 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2036 (_75 ?x69 var1 var2 time)))
 (let (($x1821 (and $x2036 $x81)))
 (=> $x1821 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2052)))))
 )
(assert
 (forall ((time Int) )(let (($x2066 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2062 (_76 ?x69 var1 var2 time)))
 (=> (and $x2062 $x70) (_77 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2066)))))
 )
(assert
 (forall ((time Int) )(let (($x2078 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2062 (_76 ?x69 var1 var2 time)))
 (let (($x1847 (and $x2062 $x81)))
 (=> $x1847 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2078)))))
 )
(assert
 (forall ((time Int) )(let (($x2092 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2088 (_77 ?x69 var1 var2 time)))
 (=> (and $x2088 $x70) (_78 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2092)))))
 )
(assert
 (forall ((time Int) )(let (($x2104 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2088 (_77 ?x69 var1 var2 time)))
 (let (($x1873 (and $x2088 $x81)))
 (=> $x1873 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2104)))))
 )
(assert
 (forall ((time Int) )(let (($x2118 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2114 (_78 ?x69 var1 var2 time)))
 (=> (and $x2114 $x70) (_79 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2118)))))
 )
(assert
 (forall ((time Int) )(let (($x2130 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2114 (_78 ?x69 var1 var2 time)))
 (let (($x1899 (and $x2114 $x81)))
 (=> $x1899 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2130)))))
 )
(assert
 (forall ((time Int) )(let (($x2144 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2140 (_79 ?x69 var1 var2 time)))
 (=> (and $x2140 $x70) (_80 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2144)))))
 )
(assert
 (forall ((time Int) )(let (($x2156 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2140 (_79 ?x69 var1 var2 time)))
 (let (($x1925 (and $x2140 $x81)))
 (=> $x1925 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2156)))))
 )
(assert
 (forall ((time Int) )(let (($x2170 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2166 (_80 ?x69 var1 var2 time)))
 (=> (and $x2166 $x70) (_81 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2170)))))
 )
(assert
 (forall ((time Int) )(let (($x2182 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2166 (_80 ?x69 var1 var2 time)))
 (let (($x1951 (and $x2166 $x81)))
 (=> $x1951 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2182)))))
 )
(assert
 (forall ((time Int) )(let (($x2196 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2192 (_81 ?x69 var1 var2 time)))
 (=> (and $x2192 $x70) (_82 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2196)))))
 )
(assert
 (forall ((time Int) )(let (($x2208 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2192 (_81 ?x69 var1 var2 time)))
 (let (($x1977 (and $x2192 $x81)))
 (=> $x1977 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2208)))))
 )
(assert
 (forall ((time Int) )(let (($x2222 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2218 (_82 ?x69 var1 var2 time)))
 (=> (and $x2218 $x70) (_83 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2222)))))
 )
(assert
 (forall ((time Int) )(let (($x2234 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2218 (_82 ?x69 var1 var2 time)))
 (let (($x2003 (and $x2218 $x81)))
 (=> $x2003 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2234)))))
 )
(assert
 (forall ((time Int) )(let (($x2248 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2244 (_83 ?x69 var1 var2 time)))
 (=> (and $x2244 $x70) (_84 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2248)))))
 )
(assert
 (forall ((time Int) )(let (($x2260 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2244 (_83 ?x69 var1 var2 time)))
 (let (($x2029 (and $x2244 $x81)))
 (=> $x2029 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2260)))))
 )
(assert
 (forall ((time Int) )(let (($x2274 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2270 (_84 ?x69 var1 var2 time)))
 (=> (and $x2270 $x70) (_85 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2274)))))
 )
(assert
 (forall ((time Int) )(let (($x2286 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2270 (_84 ?x69 var1 var2 time)))
 (let (($x2055 (and $x2270 $x81)))
 (=> $x2055 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2286)))))
 )
(assert
 (forall ((time Int) )(let (($x2300 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2296 (_85 ?x69 var1 var2 time)))
 (=> (and $x2296 $x70) (_86 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2300)))))
 )
(assert
 (forall ((time Int) )(let (($x2312 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2296 (_85 ?x69 var1 var2 time)))
 (let (($x2081 (and $x2296 $x81)))
 (=> $x2081 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2312)))))
 )
(assert
 (forall ((time Int) )(let (($x2326 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2322 (_86 ?x69 var1 var2 time)))
 (=> (and $x2322 $x70) (_87 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2326)))))
 )
(assert
 (forall ((time Int) )(let (($x2338 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2322 (_86 ?x69 var1 var2 time)))
 (let (($x2107 (and $x2322 $x81)))
 (=> $x2107 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2338)))))
 )
(assert
 (forall ((time Int) )(let (($x2352 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2348 (_87 ?x69 var1 var2 time)))
 (=> (and $x2348 $x70) (_88 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2352)))))
 )
(assert
 (forall ((time Int) )(let (($x2364 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2348 (_87 ?x69 var1 var2 time)))
 (let (($x2133 (and $x2348 $x81)))
 (=> $x2133 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2364)))))
 )
(assert
 (forall ((time Int) )(let (($x2378 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2374 (_88 ?x69 var1 var2 time)))
 (=> (and $x2374 $x70) (_89 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2378)))))
 )
(assert
 (forall ((time Int) )(let (($x2390 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2374 (_88 ?x69 var1 var2 time)))
 (let (($x2159 (and $x2374 $x81)))
 (=> $x2159 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2390)))))
 )
(assert
 (forall ((time Int) )(let (($x2404 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2400 (_89 ?x69 var1 var2 time)))
 (=> (and $x2400 $x70) (_90 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2404)))))
 )
(assert
 (forall ((time Int) )(let (($x2416 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2400 (_89 ?x69 var1 var2 time)))
 (let (($x2185 (and $x2400 $x81)))
 (=> $x2185 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2416)))))
 )
(assert
 (forall ((time Int) )(let (($x2430 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2426 (_90 ?x69 var1 var2 time)))
 (=> (and $x2426 $x70) (_91 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2430)))))
 )
(assert
 (forall ((time Int) )(let (($x2442 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2426 (_90 ?x69 var1 var2 time)))
 (let (($x2211 (and $x2426 $x81)))
 (=> $x2211 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2442)))))
 )
(assert
 (forall ((time Int) )(let (($x2456 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2452 (_91 ?x69 var1 var2 time)))
 (=> (and $x2452 $x70) (_92 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2456)))))
 )
(assert
 (forall ((time Int) )(let (($x2468 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2452 (_91 ?x69 var1 var2 time)))
 (let (($x2237 (and $x2452 $x81)))
 (=> $x2237 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2468)))))
 )
(assert
 (forall ((time Int) )(let (($x2482 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2478 (_92 ?x69 var1 var2 time)))
 (=> (and $x2478 $x70) (_93 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2482)))))
 )
(assert
 (forall ((time Int) )(let (($x2494 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2478 (_92 ?x69 var1 var2 time)))
 (let (($x2263 (and $x2478 $x81)))
 (=> $x2263 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2494)))))
 )
(assert
 (forall ((time Int) )(let (($x2508 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2504 (_93 ?x69 var1 var2 time)))
 (=> (and $x2504 $x70) (_94 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2508)))))
 )
(assert
 (forall ((time Int) )(let (($x2520 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2504 (_93 ?x69 var1 var2 time)))
 (let (($x2289 (and $x2504 $x81)))
 (=> $x2289 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2520)))))
 )
(assert
 (forall ((time Int) )(let (($x2534 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2530 (_94 ?x69 var1 var2 time)))
 (=> (and $x2530 $x70) (_95 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2534)))))
 )
(assert
 (forall ((time Int) )(let (($x2546 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2530 (_94 ?x69 var1 var2 time)))
 (let (($x2315 (and $x2530 $x81)))
 (=> $x2315 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2546)))))
 )
(assert
 (forall ((time Int) )(let (($x2560 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2556 (_95 ?x69 var1 var2 time)))
 (=> (and $x2556 $x70) (_96 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2560)))))
 )
(assert
 (forall ((time Int) )(let (($x2572 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2556 (_95 ?x69 var1 var2 time)))
 (let (($x2341 (and $x2556 $x81)))
 (=> $x2341 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2572)))))
 )
(assert
 (forall ((time Int) )(let (($x2586 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2582 (_96 ?x69 var1 var2 time)))
 (=> (and $x2582 $x70) (_97 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2586)))))
 )
(assert
 (forall ((time Int) )(let (($x2598 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2582 (_96 ?x69 var1 var2 time)))
 (let (($x2367 (and $x2582 $x81)))
 (=> $x2367 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2598)))))
 )
(assert
 (forall ((time Int) )(let (($x2612 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2608 (_97 ?x69 var1 var2 time)))
 (=> (and $x2608 $x70) (_98 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2612)))))
 )
(assert
 (forall ((time Int) )(let (($x2624 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2608 (_97 ?x69 var1 var2 time)))
 (let (($x2393 (and $x2608 $x81)))
 (=> $x2393 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2624)))))
 )
(assert
 (forall ((time Int) )(let (($x2638 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2634 (_98 ?x69 var1 var2 time)))
 (=> (and $x2634 $x70) (_99 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2638)))))
 )
(assert
 (forall ((time Int) )(let (($x2650 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2634 (_98 ?x69 var1 var2 time)))
 (let (($x2419 (and $x2634 $x81)))
 (=> $x2419 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2650)))))
 )
(assert
 (forall ((time Int) )(let (($x2664 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2660 (_99 ?x69 var1 var2 time)))
 (=> (and $x2660 $x70) (_100 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2664)))))
 )
(assert
 (forall ((time Int) )(let (($x2676 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2660 (_99 ?x69 var1 var2 time)))
 (let (($x2445 (and $x2660 $x81)))
 (=> $x2445 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2676)))))
 )
(assert
 (forall ((time Int) )(let (($x2690 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2686 (_100 ?x69 var1 var2 time)))
 (=> (and $x2686 $x70) (_101 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2690)))))
 )
(assert
 (forall ((time Int) )(let (($x2702 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2686 (_100 ?x69 var1 var2 time)))
 (let (($x2471 (and $x2686 $x81)))
 (=> $x2471 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2702)))))
 )
(assert
 (forall ((time Int) )(let (($x2716 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2712 (_101 ?x69 var1 var2 time)))
 (=> (and $x2712 $x70) (_102 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2716)))))
 )
(assert
 (forall ((time Int) )(let (($x2728 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2712 (_101 ?x69 var1 var2 time)))
 (let (($x2497 (and $x2712 $x81)))
 (=> $x2497 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2728)))))
 )
(assert
 (forall ((time Int) )(let (($x2742 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2738 (_102 ?x69 var1 var2 time)))
 (=> (and $x2738 $x70) (_103 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2742)))))
 )
(assert
 (forall ((time Int) )(let (($x2754 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2738 (_102 ?x69 var1 var2 time)))
 (let (($x2523 (and $x2738 $x81)))
 (=> $x2523 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2754)))))
 )
(assert
 (forall ((time Int) )(let (($x2768 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2764 (_103 ?x69 var1 var2 time)))
 (=> (and $x2764 $x70) (_104 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2768)))))
 )
(assert
 (forall ((time Int) )(let (($x2780 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2764 (_103 ?x69 var1 var2 time)))
 (let (($x2549 (and $x2764 $x81)))
 (=> $x2549 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2780)))))
 )
(assert
 (forall ((time Int) )(let (($x2794 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2790 (_104 ?x69 var1 var2 time)))
 (=> (and $x2790 $x70) (_105 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2794)))))
 )
(assert
 (forall ((time Int) )(let (($x2806 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2790 (_104 ?x69 var1 var2 time)))
 (let (($x2575 (and $x2790 $x81)))
 (=> $x2575 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2806)))))
 )
(assert
 (forall ((time Int) )(let (($x2820 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2816 (_105 ?x69 var1 var2 time)))
 (=> (and $x2816 $x70) (_106 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2820)))))
 )
(assert
 (forall ((time Int) )(let (($x2832 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2816 (_105 ?x69 var1 var2 time)))
 (let (($x2601 (and $x2816 $x81)))
 (=> $x2601 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2832)))))
 )
(assert
 (forall ((time Int) )(let (($x2846 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2842 (_106 ?x69 var1 var2 time)))
 (=> (and $x2842 $x70) (_107 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2846)))))
 )
(assert
 (forall ((time Int) )(let (($x2858 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2842 (_106 ?x69 var1 var2 time)))
 (let (($x2627 (and $x2842 $x81)))
 (=> $x2627 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2858)))))
 )
(assert
 (forall ((time Int) )(let (($x2872 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2868 (_107 ?x69 var1 var2 time)))
 (=> (and $x2868 $x70) (_108 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2872)))))
 )
(assert
 (forall ((time Int) )(let (($x2884 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2868 (_107 ?x69 var1 var2 time)))
 (let (($x2653 (and $x2868 $x81)))
 (=> $x2653 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2884)))))
 )
(assert
 (forall ((time Int) )(let (($x2898 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2894 (_108 ?x69 var1 var2 time)))
 (=> (and $x2894 $x70) (_109 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2898)))))
 )
(assert
 (forall ((time Int) )(let (($x2910 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2894 (_108 ?x69 var1 var2 time)))
 (let (($x2679 (and $x2894 $x81)))
 (=> $x2679 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2910)))))
 )
(assert
 (forall ((time Int) )(let (($x2924 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2920 (_109 ?x69 var1 var2 time)))
 (=> (and $x2920 $x70) (_110 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2924)))))
 )
(assert
 (forall ((time Int) )(let (($x2936 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2920 (_109 ?x69 var1 var2 time)))
 (let (($x2705 (and $x2920 $x81)))
 (=> $x2705 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2936)))))
 )
(assert
 (forall ((time Int) )(let (($x2950 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2946 (_110 ?x69 var1 var2 time)))
 (=> (and $x2946 $x70) (_111 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2950)))))
 )
(assert
 (forall ((time Int) )(let (($x2962 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2946 (_110 ?x69 var1 var2 time)))
 (let (($x2731 (and $x2946 $x81)))
 (=> $x2731 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2962)))))
 )
(assert
 (forall ((time Int) )(let (($x2976 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2972 (_111 ?x69 var1 var2 time)))
 (=> (and $x2972 $x70) (_112 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2976)))))
 )
(assert
 (forall ((time Int) )(let (($x2988 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2972 (_111 ?x69 var1 var2 time)))
 (let (($x2757 (and $x2972 $x81)))
 (=> $x2757 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x2988)))))
 )
(assert
 (forall ((time Int) )(let (($x3002 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2998 (_112 ?x69 var1 var2 time)))
 (=> (and $x2998 $x70) (_113 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3002)))))
 )
(assert
 (forall ((time Int) )(let (($x3014 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2998 (_112 ?x69 var1 var2 time)))
 (let (($x2783 (and $x2998 $x81)))
 (=> $x2783 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3014)))))
 )
(assert
 (forall ((time Int) )(let (($x3028 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3024 (_113 ?x69 var1 var2 time)))
 (=> (and $x3024 $x70) (_114 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3028)))))
 )
(assert
 (forall ((time Int) )(let (($x3040 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3024 (_113 ?x69 var1 var2 time)))
 (let (($x2809 (and $x3024 $x81)))
 (=> $x2809 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3040)))))
 )
(assert
 (forall ((time Int) )(let (($x3054 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3050 (_114 ?x69 var1 var2 time)))
 (=> (and $x3050 $x70) (_115 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3054)))))
 )
(assert
 (forall ((time Int) )(let (($x3066 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3050 (_114 ?x69 var1 var2 time)))
 (let (($x2835 (and $x3050 $x81)))
 (=> $x2835 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3066)))))
 )
(assert
 (forall ((time Int) )(let (($x3080 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3076 (_115 ?x69 var1 var2 time)))
 (=> (and $x3076 $x70) (_116 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3080)))))
 )
(assert
 (forall ((time Int) )(let (($x3092 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3076 (_115 ?x69 var1 var2 time)))
 (let (($x2861 (and $x3076 $x81)))
 (=> $x2861 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3092)))))
 )
(assert
 (forall ((time Int) )(let (($x3106 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3102 (_116 ?x69 var1 var2 time)))
 (=> (and $x3102 $x70) (_117 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3106)))))
 )
(assert
 (forall ((time Int) )(let (($x3118 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3102 (_116 ?x69 var1 var2 time)))
 (let (($x2887 (and $x3102 $x81)))
 (=> $x2887 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3118)))))
 )
(assert
 (forall ((time Int) )(let (($x3132 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3128 (_117 ?x69 var1 var2 time)))
 (=> (and $x3128 $x70) (_118 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3132)))))
 )
(assert
 (forall ((time Int) )(let (($x3144 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3128 (_117 ?x69 var1 var2 time)))
 (let (($x2913 (and $x3128 $x81)))
 (=> $x2913 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3144)))))
 )
(assert
 (forall ((time Int) )(let (($x3158 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3154 (_118 ?x69 var1 var2 time)))
 (=> (and $x3154 $x70) (_119 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3158)))))
 )
(assert
 (forall ((time Int) )(let (($x3170 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3154 (_118 ?x69 var1 var2 time)))
 (let (($x2939 (and $x3154 $x81)))
 (=> $x2939 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3170)))))
 )
(assert
 (forall ((time Int) )(let (($x3184 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3180 (_119 ?x69 var1 var2 time)))
 (=> (and $x3180 $x70) (_120 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3184)))))
 )
(assert
 (forall ((time Int) )(let (($x3196 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3180 (_119 ?x69 var1 var2 time)))
 (let (($x2965 (and $x3180 $x81)))
 (=> $x2965 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3196)))))
 )
(assert
 (forall ((time Int) )(let (($x3196 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3180 (_119 ?x69 var1 var2 time)))
 (let (($x2965 (and $x3180 $x81)))
 (=> $x2965 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 130))))
 (=> $x78 $x3196)))))
 )
(check-sat)
