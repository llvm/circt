; 
(set-info :status unknown)
(declare-fun _0 (Int Int Int Int) Bool)
(declare-fun input-arg0 (Int) Int)
(declare-fun _1 (Int Int Int Int) Bool)
(declare-fun ERR (Int Int Int Int) Bool)
(declare-fun _2 (Int Int Int Int) Bool)
(declare-fun _3 (Int Int Int Int) Bool)
(declare-fun _4 (Int Int Int Int) Bool)
(declare-fun _5 (Int Int Int Int) Bool)
(declare-fun _6 (Int Int Int Int) Bool)
(declare-fun _7 (Int Int Int Int) Bool)
(declare-fun _8 (Int Int Int Int) Bool)
(declare-fun _9 (Int Int Int Int) Bool)
(declare-fun _10 (Int Int Int Int) Bool)
(declare-fun _11 (Int Int Int Int) Bool)
(declare-fun _12 (Int Int Int Int) Bool)
(declare-fun _13 (Int Int Int Int) Bool)
(declare-fun _14 (Int Int Int Int) Bool)
(declare-fun _15 (Int Int Int Int) Bool)
(declare-fun _16 (Int Int Int Int) Bool)
(declare-fun _17 (Int Int Int Int) Bool)
(declare-fun _18 (Int Int Int Int) Bool)
(declare-fun _19 (Int Int Int Int) Bool)
(declare-fun _20 (Int Int Int Int) Bool)
(assert
 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x19 (input-arg0 0)))
 (_0 ?x19 0 0 0)))
 )
 )
(assert
 (forall ((time Int) )(let (($x75 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (=> (and $x71 $x70) (_1 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x75)))))
 )
(assert
 (forall ((time Int) )(let (($x101 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (let (($x82 (and $x71 $x81)))
 (=> $x82 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x101)))))
 )
(assert
 (forall ((time Int) )(let (($x116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (=> (and $x112 $x70) (_2 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x116)))))
 )
(assert
 (forall ((time Int) )(let (($x128 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (let (($x57 (and $x112 $x81)))
 (=> $x57 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x128)))))
 )
(assert
 (forall ((time Int) )(let (($x142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (=> (and $x138 $x70) (_3 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x142)))))
 )
(assert
 (forall ((time Int) )(let (($x154 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (let (($x56 (and $x138 $x81)))
 (=> $x56 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x154)))))
 )
(assert
 (forall ((time Int) )(let (($x168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (=> (and $x164 $x70) (_4 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x168)))))
 )
(assert
 (forall ((time Int) )(let (($x180 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (let (($x54 (and $x164 $x81)))
 (=> $x54 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x180)))))
 )
(assert
 (forall ((time Int) )(let (($x194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (=> (and $x190 $x70) (_5 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x194)))))
 )
(assert
 (forall ((time Int) )(let (($x206 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (let (($x50 (and $x190 $x81)))
 (=> $x50 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x206)))))
 )
(assert
 (forall ((time Int) )(let (($x220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (=> (and $x216 $x70) (_6 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x220)))))
 )
(assert
 (forall ((time Int) )(let (($x232 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (let (($x62 (and $x216 $x81)))
 (=> $x62 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x232)))))
 )
(assert
 (forall ((time Int) )(let (($x246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (=> (and $x242 $x70) (_7 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x246)))))
 )
(assert
 (forall ((time Int) )(let (($x258 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (let (($x61 (and $x242 $x81)))
 (=> $x61 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x258)))))
 )
(assert
 (forall ((time Int) )(let (($x272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (=> (and $x268 $x70) (_8 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x272)))))
 )
(assert
 (forall ((time Int) )(let (($x284 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (let (($x53 (and $x268 $x81)))
 (=> $x53 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x284)))))
 )
(assert
 (forall ((time Int) )(let (($x298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (=> (and $x294 $x70) (_9 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x298)))))
 )
(assert
 (forall ((time Int) )(let (($x310 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (let (($x63 (and $x294 $x81)))
 (=> $x63 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x310)))))
 )
(assert
 (forall ((time Int) )(let (($x324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (=> (and $x320 $x70) (_10 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x324)))))
 )
(assert
 (forall ((time Int) )(let (($x336 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (let (($x104 (and $x320 $x81)))
 (=> $x104 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x336)))))
 )
(assert
 (forall ((time Int) )(let (($x350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (=> (and $x346 $x70) (_11 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x350)))))
 )
(assert
 (forall ((time Int) )(let (($x362 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (let (($x131 (and $x346 $x81)))
 (=> $x131 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x362)))))
 )
(assert
 (forall ((time Int) )(let (($x376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (=> (and $x372 $x70) (_12 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x376)))))
 )
(assert
 (forall ((time Int) )(let (($x388 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (let (($x157 (and $x372 $x81)))
 (=> $x157 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x388)))))
 )
(assert
 (forall ((time Int) )(let (($x402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (=> (and $x398 $x70) (_13 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x402)))))
 )
(assert
 (forall ((time Int) )(let (($x414 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (let (($x183 (and $x398 $x81)))
 (=> $x183 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x414)))))
 )
(assert
 (forall ((time Int) )(let (($x428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (=> (and $x424 $x70) (_14 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x428)))))
 )
(assert
 (forall ((time Int) )(let (($x440 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (let (($x209 (and $x424 $x81)))
 (=> $x209 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x440)))))
 )
(assert
 (forall ((time Int) )(let (($x454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (=> (and $x450 $x70) (_15 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x454)))))
 )
(assert
 (forall ((time Int) )(let (($x466 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (let (($x235 (and $x450 $x81)))
 (=> $x235 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x466)))))
 )
(assert
 (forall ((time Int) )(let (($x480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (=> (and $x476 $x70) (_16 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x480)))))
 )
(assert
 (forall ((time Int) )(let (($x492 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (let (($x261 (and $x476 $x81)))
 (=> $x261 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x492)))))
 )
(assert
 (forall ((time Int) )(let (($x506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (=> (and $x502 $x70) (_17 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x506)))))
 )
(assert
 (forall ((time Int) )(let (($x518 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (let (($x287 (and $x502 $x81)))
 (=> $x287 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x518)))))
 )
(assert
 (forall ((time Int) )(let (($x532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (=> (and $x528 $x70) (_18 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x532)))))
 )
(assert
 (forall ((time Int) )(let (($x544 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (let (($x313 (and $x528 $x81)))
 (=> $x313 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x544)))))
 )
(assert
 (forall ((time Int) )(let (($x558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (=> (and $x554 $x70) (_19 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x558)))))
 )
(assert
 (forall ((time Int) )(let (($x570 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (let (($x339 (and $x554 $x81)))
 (=> $x339 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x570)))))
 )
(assert
 (forall ((time Int) )(let (($x584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (=> (and $x580 $x70) (_20 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x584)))))
 )
(assert
 (forall ((time Int) )(let (($x596 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (let (($x365 (and $x580 $x81)))
 (=> $x365 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x596)))))
 )
(assert
 (forall ((time Int) )(let (($x596 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (let (($x365 (and $x580 $x81)))
 (=> $x365 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 30))))
 (=> $x78 $x596)))))
 )
(check-sat)
