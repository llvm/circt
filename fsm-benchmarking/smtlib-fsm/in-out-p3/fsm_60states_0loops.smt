; 
(set-info :status unknown)
(declare-fun _0 (Int Int Int Int) Bool)
(declare-fun input-arg0 (Int) Int)
(declare-fun _1 (Int Int Int Int) Bool)
(declare-fun ERR (Int Int Int Int) Bool)
(declare-fun _2 (Int Int Int Int) Bool)
(declare-fun _3 (Int Int Int Int) Bool)
(declare-fun _4 (Int Int Int Int) Bool)
(declare-fun _5 (Int Int Int Int) Bool)
(declare-fun _6 (Int Int Int Int) Bool)
(declare-fun _7 (Int Int Int Int) Bool)
(declare-fun _8 (Int Int Int Int) Bool)
(declare-fun _9 (Int Int Int Int) Bool)
(declare-fun _10 (Int Int Int Int) Bool)
(declare-fun _11 (Int Int Int Int) Bool)
(declare-fun _12 (Int Int Int Int) Bool)
(declare-fun _13 (Int Int Int Int) Bool)
(declare-fun _14 (Int Int Int Int) Bool)
(declare-fun _15 (Int Int Int Int) Bool)
(declare-fun _16 (Int Int Int Int) Bool)
(declare-fun _17 (Int Int Int Int) Bool)
(declare-fun _18 (Int Int Int Int) Bool)
(declare-fun _19 (Int Int Int Int) Bool)
(declare-fun _20 (Int Int Int Int) Bool)
(declare-fun _21 (Int Int Int Int) Bool)
(declare-fun _22 (Int Int Int Int) Bool)
(declare-fun _23 (Int Int Int Int) Bool)
(declare-fun _24 (Int Int Int Int) Bool)
(declare-fun _25 (Int Int Int Int) Bool)
(declare-fun _26 (Int Int Int Int) Bool)
(declare-fun _27 (Int Int Int Int) Bool)
(declare-fun _28 (Int Int Int Int) Bool)
(declare-fun _29 (Int Int Int Int) Bool)
(declare-fun _30 (Int Int Int Int) Bool)
(declare-fun _31 (Int Int Int Int) Bool)
(declare-fun _32 (Int Int Int Int) Bool)
(declare-fun _33 (Int Int Int Int) Bool)
(declare-fun _34 (Int Int Int Int) Bool)
(declare-fun _35 (Int Int Int Int) Bool)
(declare-fun _36 (Int Int Int Int) Bool)
(declare-fun _37 (Int Int Int Int) Bool)
(declare-fun _38 (Int Int Int Int) Bool)
(declare-fun _39 (Int Int Int Int) Bool)
(declare-fun _40 (Int Int Int Int) Bool)
(declare-fun _41 (Int Int Int Int) Bool)
(declare-fun _42 (Int Int Int Int) Bool)
(declare-fun _43 (Int Int Int Int) Bool)
(declare-fun _44 (Int Int Int Int) Bool)
(declare-fun _45 (Int Int Int Int) Bool)
(declare-fun _46 (Int Int Int Int) Bool)
(declare-fun _47 (Int Int Int Int) Bool)
(declare-fun _48 (Int Int Int Int) Bool)
(declare-fun _49 (Int Int Int Int) Bool)
(declare-fun _50 (Int Int Int Int) Bool)
(declare-fun _51 (Int Int Int Int) Bool)
(declare-fun _52 (Int Int Int Int) Bool)
(declare-fun _53 (Int Int Int Int) Bool)
(declare-fun _54 (Int Int Int Int) Bool)
(declare-fun _55 (Int Int Int Int) Bool)
(declare-fun _56 (Int Int Int Int) Bool)
(declare-fun _57 (Int Int Int Int) Bool)
(declare-fun _58 (Int Int Int Int) Bool)
(declare-fun _59 (Int Int Int Int) Bool)
(declare-fun _60 (Int Int Int Int) Bool)
(assert
 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x19 (input-arg0 0)))
 (_0 ?x19 0 0 0)))
 )
 )
(assert
 (forall ((time Int) )(let (($x75 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (=> (and $x71 $x70) (_1 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x75)))))
 )
(assert
 (forall ((time Int) )(let (($x101 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (let (($x82 (and $x71 $x81)))
 (=> $x82 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x101)))))
 )
(assert
 (forall ((time Int) )(let (($x116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (=> (and $x112 $x70) (_2 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x116)))))
 )
(assert
 (forall ((time Int) )(let (($x128 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (let (($x57 (and $x112 $x81)))
 (=> $x57 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x128)))))
 )
(assert
 (forall ((time Int) )(let (($x142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (=> (and $x138 $x70) (_3 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x142)))))
 )
(assert
 (forall ((time Int) )(let (($x154 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (let (($x56 (and $x138 $x81)))
 (=> $x56 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x154)))))
 )
(assert
 (forall ((time Int) )(let (($x168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (=> (and $x164 $x70) (_4 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x168)))))
 )
(assert
 (forall ((time Int) )(let (($x180 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (let (($x54 (and $x164 $x81)))
 (=> $x54 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x180)))))
 )
(assert
 (forall ((time Int) )(let (($x194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (=> (and $x190 $x70) (_5 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x194)))))
 )
(assert
 (forall ((time Int) )(let (($x206 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (let (($x50 (and $x190 $x81)))
 (=> $x50 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x206)))))
 )
(assert
 (forall ((time Int) )(let (($x220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (=> (and $x216 $x70) (_6 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x220)))))
 )
(assert
 (forall ((time Int) )(let (($x232 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (let (($x62 (and $x216 $x81)))
 (=> $x62 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x232)))))
 )
(assert
 (forall ((time Int) )(let (($x246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (=> (and $x242 $x70) (_7 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x246)))))
 )
(assert
 (forall ((time Int) )(let (($x258 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (let (($x61 (and $x242 $x81)))
 (=> $x61 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x258)))))
 )
(assert
 (forall ((time Int) )(let (($x272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (=> (and $x268 $x70) (_8 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x272)))))
 )
(assert
 (forall ((time Int) )(let (($x284 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (let (($x53 (and $x268 $x81)))
 (=> $x53 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x284)))))
 )
(assert
 (forall ((time Int) )(let (($x298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (=> (and $x294 $x70) (_9 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x298)))))
 )
(assert
 (forall ((time Int) )(let (($x310 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (let (($x63 (and $x294 $x81)))
 (=> $x63 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x310)))))
 )
(assert
 (forall ((time Int) )(let (($x324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (=> (and $x320 $x70) (_10 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x324)))))
 )
(assert
 (forall ((time Int) )(let (($x336 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (let (($x104 (and $x320 $x81)))
 (=> $x104 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x336)))))
 )
(assert
 (forall ((time Int) )(let (($x350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (=> (and $x346 $x70) (_11 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x350)))))
 )
(assert
 (forall ((time Int) )(let (($x362 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (let (($x131 (and $x346 $x81)))
 (=> $x131 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x362)))))
 )
(assert
 (forall ((time Int) )(let (($x376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (=> (and $x372 $x70) (_12 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x376)))))
 )
(assert
 (forall ((time Int) )(let (($x388 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (let (($x157 (and $x372 $x81)))
 (=> $x157 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x388)))))
 )
(assert
 (forall ((time Int) )(let (($x402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (=> (and $x398 $x70) (_13 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x402)))))
 )
(assert
 (forall ((time Int) )(let (($x414 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (let (($x183 (and $x398 $x81)))
 (=> $x183 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x414)))))
 )
(assert
 (forall ((time Int) )(let (($x428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (=> (and $x424 $x70) (_14 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x428)))))
 )
(assert
 (forall ((time Int) )(let (($x440 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (let (($x209 (and $x424 $x81)))
 (=> $x209 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x440)))))
 )
(assert
 (forall ((time Int) )(let (($x454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (=> (and $x450 $x70) (_15 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x454)))))
 )
(assert
 (forall ((time Int) )(let (($x466 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (let (($x235 (and $x450 $x81)))
 (=> $x235 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x466)))))
 )
(assert
 (forall ((time Int) )(let (($x480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (=> (and $x476 $x70) (_16 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x480)))))
 )
(assert
 (forall ((time Int) )(let (($x492 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (let (($x261 (and $x476 $x81)))
 (=> $x261 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x492)))))
 )
(assert
 (forall ((time Int) )(let (($x506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (=> (and $x502 $x70) (_17 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x506)))))
 )
(assert
 (forall ((time Int) )(let (($x518 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (let (($x287 (and $x502 $x81)))
 (=> $x287 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x518)))))
 )
(assert
 (forall ((time Int) )(let (($x532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (=> (and $x528 $x70) (_18 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x532)))))
 )
(assert
 (forall ((time Int) )(let (($x544 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (let (($x313 (and $x528 $x81)))
 (=> $x313 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x544)))))
 )
(assert
 (forall ((time Int) )(let (($x558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (=> (and $x554 $x70) (_19 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x558)))))
 )
(assert
 (forall ((time Int) )(let (($x570 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (let (($x339 (and $x554 $x81)))
 (=> $x339 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x570)))))
 )
(assert
 (forall ((time Int) )(let (($x584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (=> (and $x580 $x70) (_20 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x584)))))
 )
(assert
 (forall ((time Int) )(let (($x596 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (let (($x365 (and $x580 $x81)))
 (=> $x365 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x596)))))
 )
(assert
 (forall ((time Int) )(let (($x610 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x606 (_20 ?x69 var1 var2 time)))
 (=> (and $x606 $x70) (_21 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x610)))))
 )
(assert
 (forall ((time Int) )(let (($x622 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x606 (_20 ?x69 var1 var2 time)))
 (let (($x391 (and $x606 $x81)))
 (=> $x391 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x622)))))
 )
(assert
 (forall ((time Int) )(let (($x636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x632 (_21 ?x69 var1 var2 time)))
 (=> (and $x632 $x70) (_22 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x636)))))
 )
(assert
 (forall ((time Int) )(let (($x648 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x632 (_21 ?x69 var1 var2 time)))
 (let (($x417 (and $x632 $x81)))
 (=> $x417 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x648)))))
 )
(assert
 (forall ((time Int) )(let (($x662 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x658 (_22 ?x69 var1 var2 time)))
 (=> (and $x658 $x70) (_23 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x662)))))
 )
(assert
 (forall ((time Int) )(let (($x674 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x658 (_22 ?x69 var1 var2 time)))
 (let (($x443 (and $x658 $x81)))
 (=> $x443 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x674)))))
 )
(assert
 (forall ((time Int) )(let (($x688 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x684 (_23 ?x69 var1 var2 time)))
 (=> (and $x684 $x70) (_24 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x688)))))
 )
(assert
 (forall ((time Int) )(let (($x700 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x684 (_23 ?x69 var1 var2 time)))
 (let (($x469 (and $x684 $x81)))
 (=> $x469 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x700)))))
 )
(assert
 (forall ((time Int) )(let (($x714 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x710 (_24 ?x69 var1 var2 time)))
 (=> (and $x710 $x70) (_25 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x714)))))
 )
(assert
 (forall ((time Int) )(let (($x726 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x710 (_24 ?x69 var1 var2 time)))
 (let (($x495 (and $x710 $x81)))
 (=> $x495 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x726)))))
 )
(assert
 (forall ((time Int) )(let (($x740 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x736 (_25 ?x69 var1 var2 time)))
 (=> (and $x736 $x70) (_26 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x740)))))
 )
(assert
 (forall ((time Int) )(let (($x752 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x736 (_25 ?x69 var1 var2 time)))
 (let (($x521 (and $x736 $x81)))
 (=> $x521 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x752)))))
 )
(assert
 (forall ((time Int) )(let (($x766 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x762 (_26 ?x69 var1 var2 time)))
 (=> (and $x762 $x70) (_27 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x766)))))
 )
(assert
 (forall ((time Int) )(let (($x778 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x762 (_26 ?x69 var1 var2 time)))
 (let (($x547 (and $x762 $x81)))
 (=> $x547 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x778)))))
 )
(assert
 (forall ((time Int) )(let (($x792 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x788 (_27 ?x69 var1 var2 time)))
 (=> (and $x788 $x70) (_28 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x792)))))
 )
(assert
 (forall ((time Int) )(let (($x804 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x788 (_27 ?x69 var1 var2 time)))
 (let (($x573 (and $x788 $x81)))
 (=> $x573 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x804)))))
 )
(assert
 (forall ((time Int) )(let (($x818 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x814 (_28 ?x69 var1 var2 time)))
 (=> (and $x814 $x70) (_29 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x818)))))
 )
(assert
 (forall ((time Int) )(let (($x830 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x814 (_28 ?x69 var1 var2 time)))
 (let (($x599 (and $x814 $x81)))
 (=> $x599 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x830)))))
 )
(assert
 (forall ((time Int) )(let (($x844 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x840 (_29 ?x69 var1 var2 time)))
 (=> (and $x840 $x70) (_30 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x844)))))
 )
(assert
 (forall ((time Int) )(let (($x856 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x840 (_29 ?x69 var1 var2 time)))
 (let (($x625 (and $x840 $x81)))
 (=> $x625 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x856)))))
 )
(assert
 (forall ((time Int) )(let (($x870 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x866 (_30 ?x69 var1 var2 time)))
 (=> (and $x866 $x70) (_31 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x870)))))
 )
(assert
 (forall ((time Int) )(let (($x882 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x866 (_30 ?x69 var1 var2 time)))
 (let (($x651 (and $x866 $x81)))
 (=> $x651 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x882)))))
 )
(assert
 (forall ((time Int) )(let (($x896 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x892 (_31 ?x69 var1 var2 time)))
 (=> (and $x892 $x70) (_32 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x896)))))
 )
(assert
 (forall ((time Int) )(let (($x908 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x892 (_31 ?x69 var1 var2 time)))
 (let (($x677 (and $x892 $x81)))
 (=> $x677 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x908)))))
 )
(assert
 (forall ((time Int) )(let (($x922 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x918 (_32 ?x69 var1 var2 time)))
 (=> (and $x918 $x70) (_33 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x922)))))
 )
(assert
 (forall ((time Int) )(let (($x934 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x918 (_32 ?x69 var1 var2 time)))
 (let (($x703 (and $x918 $x81)))
 (=> $x703 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x934)))))
 )
(assert
 (forall ((time Int) )(let (($x948 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x944 (_33 ?x69 var1 var2 time)))
 (=> (and $x944 $x70) (_34 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x948)))))
 )
(assert
 (forall ((time Int) )(let (($x960 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x944 (_33 ?x69 var1 var2 time)))
 (let (($x729 (and $x944 $x81)))
 (=> $x729 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x960)))))
 )
(assert
 (forall ((time Int) )(let (($x974 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x970 (_34 ?x69 var1 var2 time)))
 (=> (and $x970 $x70) (_35 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x974)))))
 )
(assert
 (forall ((time Int) )(let (($x986 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x970 (_34 ?x69 var1 var2 time)))
 (let (($x755 (and $x970 $x81)))
 (=> $x755 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x986)))))
 )
(assert
 (forall ((time Int) )(let (($x1000 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x996 (_35 ?x69 var1 var2 time)))
 (=> (and $x996 $x70) (_36 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1000)))))
 )
(assert
 (forall ((time Int) )(let (($x1012 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x996 (_35 ?x69 var1 var2 time)))
 (let (($x781 (and $x996 $x81)))
 (=> $x781 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1012)))))
 )
(assert
 (forall ((time Int) )(let (($x1026 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1022 (_36 ?x69 var1 var2 time)))
 (=> (and $x1022 $x70) (_37 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1026)))))
 )
(assert
 (forall ((time Int) )(let (($x1038 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1022 (_36 ?x69 var1 var2 time)))
 (let (($x807 (and $x1022 $x81)))
 (=> $x807 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1038)))))
 )
(assert
 (forall ((time Int) )(let (($x1052 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1048 (_37 ?x69 var1 var2 time)))
 (=> (and $x1048 $x70) (_38 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1052)))))
 )
(assert
 (forall ((time Int) )(let (($x1064 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1048 (_37 ?x69 var1 var2 time)))
 (let (($x833 (and $x1048 $x81)))
 (=> $x833 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1064)))))
 )
(assert
 (forall ((time Int) )(let (($x1078 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1074 (_38 ?x69 var1 var2 time)))
 (=> (and $x1074 $x70) (_39 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1078)))))
 )
(assert
 (forall ((time Int) )(let (($x1090 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1074 (_38 ?x69 var1 var2 time)))
 (let (($x859 (and $x1074 $x81)))
 (=> $x859 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1090)))))
 )
(assert
 (forall ((time Int) )(let (($x1104 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1100 (_39 ?x69 var1 var2 time)))
 (=> (and $x1100 $x70) (_40 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1104)))))
 )
(assert
 (forall ((time Int) )(let (($x1116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1100 (_39 ?x69 var1 var2 time)))
 (let (($x885 (and $x1100 $x81)))
 (=> $x885 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1116)))))
 )
(assert
 (forall ((time Int) )(let (($x1130 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1126 (_40 ?x69 var1 var2 time)))
 (=> (and $x1126 $x70) (_41 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1130)))))
 )
(assert
 (forall ((time Int) )(let (($x1142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1126 (_40 ?x69 var1 var2 time)))
 (let (($x911 (and $x1126 $x81)))
 (=> $x911 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1142)))))
 )
(assert
 (forall ((time Int) )(let (($x1156 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1152 (_41 ?x69 var1 var2 time)))
 (=> (and $x1152 $x70) (_42 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1156)))))
 )
(assert
 (forall ((time Int) )(let (($x1168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1152 (_41 ?x69 var1 var2 time)))
 (let (($x937 (and $x1152 $x81)))
 (=> $x937 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1168)))))
 )
(assert
 (forall ((time Int) )(let (($x1182 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1178 (_42 ?x69 var1 var2 time)))
 (=> (and $x1178 $x70) (_43 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1182)))))
 )
(assert
 (forall ((time Int) )(let (($x1194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1178 (_42 ?x69 var1 var2 time)))
 (let (($x963 (and $x1178 $x81)))
 (=> $x963 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1194)))))
 )
(assert
 (forall ((time Int) )(let (($x1208 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1204 (_43 ?x69 var1 var2 time)))
 (=> (and $x1204 $x70) (_44 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1208)))))
 )
(assert
 (forall ((time Int) )(let (($x1220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1204 (_43 ?x69 var1 var2 time)))
 (let (($x989 (and $x1204 $x81)))
 (=> $x989 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1220)))))
 )
(assert
 (forall ((time Int) )(let (($x1234 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1230 (_44 ?x69 var1 var2 time)))
 (=> (and $x1230 $x70) (_45 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1234)))))
 )
(assert
 (forall ((time Int) )(let (($x1246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1230 (_44 ?x69 var1 var2 time)))
 (let (($x1015 (and $x1230 $x81)))
 (=> $x1015 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1246)))))
 )
(assert
 (forall ((time Int) )(let (($x1260 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1256 (_45 ?x69 var1 var2 time)))
 (=> (and $x1256 $x70) (_46 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1260)))))
 )
(assert
 (forall ((time Int) )(let (($x1272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1256 (_45 ?x69 var1 var2 time)))
 (let (($x1041 (and $x1256 $x81)))
 (=> $x1041 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1272)))))
 )
(assert
 (forall ((time Int) )(let (($x1286 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1282 (_46 ?x69 var1 var2 time)))
 (=> (and $x1282 $x70) (_47 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1286)))))
 )
(assert
 (forall ((time Int) )(let (($x1298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1282 (_46 ?x69 var1 var2 time)))
 (let (($x1067 (and $x1282 $x81)))
 (=> $x1067 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1298)))))
 )
(assert
 (forall ((time Int) )(let (($x1312 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1308 (_47 ?x69 var1 var2 time)))
 (=> (and $x1308 $x70) (_48 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1312)))))
 )
(assert
 (forall ((time Int) )(let (($x1324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1308 (_47 ?x69 var1 var2 time)))
 (let (($x1093 (and $x1308 $x81)))
 (=> $x1093 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1324)))))
 )
(assert
 (forall ((time Int) )(let (($x1338 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1334 (_48 ?x69 var1 var2 time)))
 (=> (and $x1334 $x70) (_49 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1338)))))
 )
(assert
 (forall ((time Int) )(let (($x1350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1334 (_48 ?x69 var1 var2 time)))
 (let (($x1119 (and $x1334 $x81)))
 (=> $x1119 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1350)))))
 )
(assert
 (forall ((time Int) )(let (($x1364 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1360 (_49 ?x69 var1 var2 time)))
 (=> (and $x1360 $x70) (_50 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1364)))))
 )
(assert
 (forall ((time Int) )(let (($x1376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1360 (_49 ?x69 var1 var2 time)))
 (let (($x1145 (and $x1360 $x81)))
 (=> $x1145 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1376)))))
 )
(assert
 (forall ((time Int) )(let (($x1390 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1386 (_50 ?x69 var1 var2 time)))
 (=> (and $x1386 $x70) (_51 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1390)))))
 )
(assert
 (forall ((time Int) )(let (($x1402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1386 (_50 ?x69 var1 var2 time)))
 (let (($x1171 (and $x1386 $x81)))
 (=> $x1171 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1402)))))
 )
(assert
 (forall ((time Int) )(let (($x1416 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1412 (_51 ?x69 var1 var2 time)))
 (=> (and $x1412 $x70) (_52 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1416)))))
 )
(assert
 (forall ((time Int) )(let (($x1428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1412 (_51 ?x69 var1 var2 time)))
 (let (($x1197 (and $x1412 $x81)))
 (=> $x1197 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1428)))))
 )
(assert
 (forall ((time Int) )(let (($x1442 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1438 (_52 ?x69 var1 var2 time)))
 (=> (and $x1438 $x70) (_53 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1442)))))
 )
(assert
 (forall ((time Int) )(let (($x1454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1438 (_52 ?x69 var1 var2 time)))
 (let (($x1223 (and $x1438 $x81)))
 (=> $x1223 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1454)))))
 )
(assert
 (forall ((time Int) )(let (($x1468 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1464 (_53 ?x69 var1 var2 time)))
 (=> (and $x1464 $x70) (_54 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1468)))))
 )
(assert
 (forall ((time Int) )(let (($x1480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1464 (_53 ?x69 var1 var2 time)))
 (let (($x1249 (and $x1464 $x81)))
 (=> $x1249 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1480)))))
 )
(assert
 (forall ((time Int) )(let (($x1494 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1490 (_54 ?x69 var1 var2 time)))
 (=> (and $x1490 $x70) (_55 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1494)))))
 )
(assert
 (forall ((time Int) )(let (($x1506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1490 (_54 ?x69 var1 var2 time)))
 (let (($x1275 (and $x1490 $x81)))
 (=> $x1275 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1506)))))
 )
(assert
 (forall ((time Int) )(let (($x1520 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1516 (_55 ?x69 var1 var2 time)))
 (=> (and $x1516 $x70) (_56 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1520)))))
 )
(assert
 (forall ((time Int) )(let (($x1532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1516 (_55 ?x69 var1 var2 time)))
 (let (($x1301 (and $x1516 $x81)))
 (=> $x1301 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1532)))))
 )
(assert
 (forall ((time Int) )(let (($x1546 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1542 (_56 ?x69 var1 var2 time)))
 (=> (and $x1542 $x70) (_57 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1546)))))
 )
(assert
 (forall ((time Int) )(let (($x1558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1542 (_56 ?x69 var1 var2 time)))
 (let (($x1327 (and $x1542 $x81)))
 (=> $x1327 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1558)))))
 )
(assert
 (forall ((time Int) )(let (($x1572 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1568 (_57 ?x69 var1 var2 time)))
 (=> (and $x1568 $x70) (_58 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1572)))))
 )
(assert
 (forall ((time Int) )(let (($x1584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1568 (_57 ?x69 var1 var2 time)))
 (let (($x1353 (and $x1568 $x81)))
 (=> $x1353 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1584)))))
 )
(assert
 (forall ((time Int) )(let (($x1598 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1594 (_58 ?x69 var1 var2 time)))
 (=> (and $x1594 $x70) (_59 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1598)))))
 )
(assert
 (forall ((time Int) )(let (($x1610 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1594 (_58 ?x69 var1 var2 time)))
 (let (($x1379 (and $x1594 $x81)))
 (=> $x1379 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1610)))))
 )
(assert
 (forall ((time Int) )(let (($x1624 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (=> (and $x1620 $x70) (_60 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1624)))))
 )
(assert
 (forall ((time Int) )(let (($x1636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (let (($x1405 (and $x1620 $x81)))
 (=> $x1405 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1636)))))
 )
(assert
 (forall ((time Int) )(let (($x1636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (let (($x1405 (and $x1620 $x81)))
 (=> $x1405 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 70))))
 (=> $x78 $x1636)))))
 )
(check-sat)
