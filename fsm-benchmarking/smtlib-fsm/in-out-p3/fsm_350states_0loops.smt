; 
(set-info :status unknown)
(declare-fun _0 (Int Int Int Int) Bool)
(declare-fun input-arg0 (Int) Int)
(declare-fun _1 (Int Int Int Int) Bool)
(declare-fun ERR (Int Int Int Int) Bool)
(declare-fun _2 (Int Int Int Int) Bool)
(declare-fun _3 (Int Int Int Int) Bool)
(declare-fun _4 (Int Int Int Int) Bool)
(declare-fun _5 (Int Int Int Int) Bool)
(declare-fun _6 (Int Int Int Int) Bool)
(declare-fun _7 (Int Int Int Int) Bool)
(declare-fun _8 (Int Int Int Int) Bool)
(declare-fun _9 (Int Int Int Int) Bool)
(declare-fun _10 (Int Int Int Int) Bool)
(declare-fun _11 (Int Int Int Int) Bool)
(declare-fun _12 (Int Int Int Int) Bool)
(declare-fun _13 (Int Int Int Int) Bool)
(declare-fun _14 (Int Int Int Int) Bool)
(declare-fun _15 (Int Int Int Int) Bool)
(declare-fun _16 (Int Int Int Int) Bool)
(declare-fun _17 (Int Int Int Int) Bool)
(declare-fun _18 (Int Int Int Int) Bool)
(declare-fun _19 (Int Int Int Int) Bool)
(declare-fun _20 (Int Int Int Int) Bool)
(declare-fun _21 (Int Int Int Int) Bool)
(declare-fun _22 (Int Int Int Int) Bool)
(declare-fun _23 (Int Int Int Int) Bool)
(declare-fun _24 (Int Int Int Int) Bool)
(declare-fun _25 (Int Int Int Int) Bool)
(declare-fun _26 (Int Int Int Int) Bool)
(declare-fun _27 (Int Int Int Int) Bool)
(declare-fun _28 (Int Int Int Int) Bool)
(declare-fun _29 (Int Int Int Int) Bool)
(declare-fun _30 (Int Int Int Int) Bool)
(declare-fun _31 (Int Int Int Int) Bool)
(declare-fun _32 (Int Int Int Int) Bool)
(declare-fun _33 (Int Int Int Int) Bool)
(declare-fun _34 (Int Int Int Int) Bool)
(declare-fun _35 (Int Int Int Int) Bool)
(declare-fun _36 (Int Int Int Int) Bool)
(declare-fun _37 (Int Int Int Int) Bool)
(declare-fun _38 (Int Int Int Int) Bool)
(declare-fun _39 (Int Int Int Int) Bool)
(declare-fun _40 (Int Int Int Int) Bool)
(declare-fun _41 (Int Int Int Int) Bool)
(declare-fun _42 (Int Int Int Int) Bool)
(declare-fun _43 (Int Int Int Int) Bool)
(declare-fun _44 (Int Int Int Int) Bool)
(declare-fun _45 (Int Int Int Int) Bool)
(declare-fun _46 (Int Int Int Int) Bool)
(declare-fun _47 (Int Int Int Int) Bool)
(declare-fun _48 (Int Int Int Int) Bool)
(declare-fun _49 (Int Int Int Int) Bool)
(declare-fun _50 (Int Int Int Int) Bool)
(declare-fun _51 (Int Int Int Int) Bool)
(declare-fun _52 (Int Int Int Int) Bool)
(declare-fun _53 (Int Int Int Int) Bool)
(declare-fun _54 (Int Int Int Int) Bool)
(declare-fun _55 (Int Int Int Int) Bool)
(declare-fun _56 (Int Int Int Int) Bool)
(declare-fun _57 (Int Int Int Int) Bool)
(declare-fun _58 (Int Int Int Int) Bool)
(declare-fun _59 (Int Int Int Int) Bool)
(declare-fun _60 (Int Int Int Int) Bool)
(declare-fun _61 (Int Int Int Int) Bool)
(declare-fun _62 (Int Int Int Int) Bool)
(declare-fun _63 (Int Int Int Int) Bool)
(declare-fun _64 (Int Int Int Int) Bool)
(declare-fun _65 (Int Int Int Int) Bool)
(declare-fun _66 (Int Int Int Int) Bool)
(declare-fun _67 (Int Int Int Int) Bool)
(declare-fun _68 (Int Int Int Int) Bool)
(declare-fun _69 (Int Int Int Int) Bool)
(declare-fun _70 (Int Int Int Int) Bool)
(declare-fun _71 (Int Int Int Int) Bool)
(declare-fun _72 (Int Int Int Int) Bool)
(declare-fun _73 (Int Int Int Int) Bool)
(declare-fun _74 (Int Int Int Int) Bool)
(declare-fun _75 (Int Int Int Int) Bool)
(declare-fun _76 (Int Int Int Int) Bool)
(declare-fun _77 (Int Int Int Int) Bool)
(declare-fun _78 (Int Int Int Int) Bool)
(declare-fun _79 (Int Int Int Int) Bool)
(declare-fun _80 (Int Int Int Int) Bool)
(declare-fun _81 (Int Int Int Int) Bool)
(declare-fun _82 (Int Int Int Int) Bool)
(declare-fun _83 (Int Int Int Int) Bool)
(declare-fun _84 (Int Int Int Int) Bool)
(declare-fun _85 (Int Int Int Int) Bool)
(declare-fun _86 (Int Int Int Int) Bool)
(declare-fun _87 (Int Int Int Int) Bool)
(declare-fun _88 (Int Int Int Int) Bool)
(declare-fun _89 (Int Int Int Int) Bool)
(declare-fun _90 (Int Int Int Int) Bool)
(declare-fun _91 (Int Int Int Int) Bool)
(declare-fun _92 (Int Int Int Int) Bool)
(declare-fun _93 (Int Int Int Int) Bool)
(declare-fun _94 (Int Int Int Int) Bool)
(declare-fun _95 (Int Int Int Int) Bool)
(declare-fun _96 (Int Int Int Int) Bool)
(declare-fun _97 (Int Int Int Int) Bool)
(declare-fun _98 (Int Int Int Int) Bool)
(declare-fun _99 (Int Int Int Int) Bool)
(declare-fun _100 (Int Int Int Int) Bool)
(declare-fun _101 (Int Int Int Int) Bool)
(declare-fun _102 (Int Int Int Int) Bool)
(declare-fun _103 (Int Int Int Int) Bool)
(declare-fun _104 (Int Int Int Int) Bool)
(declare-fun _105 (Int Int Int Int) Bool)
(declare-fun _106 (Int Int Int Int) Bool)
(declare-fun _107 (Int Int Int Int) Bool)
(declare-fun _108 (Int Int Int Int) Bool)
(declare-fun _109 (Int Int Int Int) Bool)
(declare-fun _110 (Int Int Int Int) Bool)
(declare-fun _111 (Int Int Int Int) Bool)
(declare-fun _112 (Int Int Int Int) Bool)
(declare-fun _113 (Int Int Int Int) Bool)
(declare-fun _114 (Int Int Int Int) Bool)
(declare-fun _115 (Int Int Int Int) Bool)
(declare-fun _116 (Int Int Int Int) Bool)
(declare-fun _117 (Int Int Int Int) Bool)
(declare-fun _118 (Int Int Int Int) Bool)
(declare-fun _119 (Int Int Int Int) Bool)
(declare-fun _120 (Int Int Int Int) Bool)
(declare-fun _121 (Int Int Int Int) Bool)
(declare-fun _122 (Int Int Int Int) Bool)
(declare-fun _123 (Int Int Int Int) Bool)
(declare-fun _124 (Int Int Int Int) Bool)
(declare-fun _125 (Int Int Int Int) Bool)
(declare-fun _126 (Int Int Int Int) Bool)
(declare-fun _127 (Int Int Int Int) Bool)
(declare-fun _128 (Int Int Int Int) Bool)
(declare-fun _129 (Int Int Int Int) Bool)
(declare-fun _130 (Int Int Int Int) Bool)
(declare-fun _131 (Int Int Int Int) Bool)
(declare-fun _132 (Int Int Int Int) Bool)
(declare-fun _133 (Int Int Int Int) Bool)
(declare-fun _134 (Int Int Int Int) Bool)
(declare-fun _135 (Int Int Int Int) Bool)
(declare-fun _136 (Int Int Int Int) Bool)
(declare-fun _137 (Int Int Int Int) Bool)
(declare-fun _138 (Int Int Int Int) Bool)
(declare-fun _139 (Int Int Int Int) Bool)
(declare-fun _140 (Int Int Int Int) Bool)
(declare-fun _141 (Int Int Int Int) Bool)
(declare-fun _142 (Int Int Int Int) Bool)
(declare-fun _143 (Int Int Int Int) Bool)
(declare-fun _144 (Int Int Int Int) Bool)
(declare-fun _145 (Int Int Int Int) Bool)
(declare-fun _146 (Int Int Int Int) Bool)
(declare-fun _147 (Int Int Int Int) Bool)
(declare-fun _148 (Int Int Int Int) Bool)
(declare-fun _149 (Int Int Int Int) Bool)
(declare-fun _150 (Int Int Int Int) Bool)
(declare-fun _151 (Int Int Int Int) Bool)
(declare-fun _152 (Int Int Int Int) Bool)
(declare-fun _153 (Int Int Int Int) Bool)
(declare-fun _154 (Int Int Int Int) Bool)
(declare-fun _155 (Int Int Int Int) Bool)
(declare-fun _156 (Int Int Int Int) Bool)
(declare-fun _157 (Int Int Int Int) Bool)
(declare-fun _158 (Int Int Int Int) Bool)
(declare-fun _159 (Int Int Int Int) Bool)
(declare-fun _160 (Int Int Int Int) Bool)
(declare-fun _161 (Int Int Int Int) Bool)
(declare-fun _162 (Int Int Int Int) Bool)
(declare-fun _163 (Int Int Int Int) Bool)
(declare-fun _164 (Int Int Int Int) Bool)
(declare-fun _165 (Int Int Int Int) Bool)
(declare-fun _166 (Int Int Int Int) Bool)
(declare-fun _167 (Int Int Int Int) Bool)
(declare-fun _168 (Int Int Int Int) Bool)
(declare-fun _169 (Int Int Int Int) Bool)
(declare-fun _170 (Int Int Int Int) Bool)
(declare-fun _171 (Int Int Int Int) Bool)
(declare-fun _172 (Int Int Int Int) Bool)
(declare-fun _173 (Int Int Int Int) Bool)
(declare-fun _174 (Int Int Int Int) Bool)
(declare-fun _175 (Int Int Int Int) Bool)
(declare-fun _176 (Int Int Int Int) Bool)
(declare-fun _177 (Int Int Int Int) Bool)
(declare-fun _178 (Int Int Int Int) Bool)
(declare-fun _179 (Int Int Int Int) Bool)
(declare-fun _180 (Int Int Int Int) Bool)
(declare-fun _181 (Int Int Int Int) Bool)
(declare-fun _182 (Int Int Int Int) Bool)
(declare-fun _183 (Int Int Int Int) Bool)
(declare-fun _184 (Int Int Int Int) Bool)
(declare-fun _185 (Int Int Int Int) Bool)
(declare-fun _186 (Int Int Int Int) Bool)
(declare-fun _187 (Int Int Int Int) Bool)
(declare-fun _188 (Int Int Int Int) Bool)
(declare-fun _189 (Int Int Int Int) Bool)
(declare-fun _190 (Int Int Int Int) Bool)
(declare-fun _191 (Int Int Int Int) Bool)
(declare-fun _192 (Int Int Int Int) Bool)
(declare-fun _193 (Int Int Int Int) Bool)
(declare-fun _194 (Int Int Int Int) Bool)
(declare-fun _195 (Int Int Int Int) Bool)
(declare-fun _196 (Int Int Int Int) Bool)
(declare-fun _197 (Int Int Int Int) Bool)
(declare-fun _198 (Int Int Int Int) Bool)
(declare-fun _199 (Int Int Int Int) Bool)
(declare-fun _200 (Int Int Int Int) Bool)
(declare-fun _201 (Int Int Int Int) Bool)
(declare-fun _202 (Int Int Int Int) Bool)
(declare-fun _203 (Int Int Int Int) Bool)
(declare-fun _204 (Int Int Int Int) Bool)
(declare-fun _205 (Int Int Int Int) Bool)
(declare-fun _206 (Int Int Int Int) Bool)
(declare-fun _207 (Int Int Int Int) Bool)
(declare-fun _208 (Int Int Int Int) Bool)
(declare-fun _209 (Int Int Int Int) Bool)
(declare-fun _210 (Int Int Int Int) Bool)
(declare-fun _211 (Int Int Int Int) Bool)
(declare-fun _212 (Int Int Int Int) Bool)
(declare-fun _213 (Int Int Int Int) Bool)
(declare-fun _214 (Int Int Int Int) Bool)
(declare-fun _215 (Int Int Int Int) Bool)
(declare-fun _216 (Int Int Int Int) Bool)
(declare-fun _217 (Int Int Int Int) Bool)
(declare-fun _218 (Int Int Int Int) Bool)
(declare-fun _219 (Int Int Int Int) Bool)
(declare-fun _220 (Int Int Int Int) Bool)
(declare-fun _221 (Int Int Int Int) Bool)
(declare-fun _222 (Int Int Int Int) Bool)
(declare-fun _223 (Int Int Int Int) Bool)
(declare-fun _224 (Int Int Int Int) Bool)
(declare-fun _225 (Int Int Int Int) Bool)
(declare-fun _226 (Int Int Int Int) Bool)
(declare-fun _227 (Int Int Int Int) Bool)
(declare-fun _228 (Int Int Int Int) Bool)
(declare-fun _229 (Int Int Int Int) Bool)
(declare-fun _230 (Int Int Int Int) Bool)
(declare-fun _231 (Int Int Int Int) Bool)
(declare-fun _232 (Int Int Int Int) Bool)
(declare-fun _233 (Int Int Int Int) Bool)
(declare-fun _234 (Int Int Int Int) Bool)
(declare-fun _235 (Int Int Int Int) Bool)
(declare-fun _236 (Int Int Int Int) Bool)
(declare-fun _237 (Int Int Int Int) Bool)
(declare-fun _238 (Int Int Int Int) Bool)
(declare-fun _239 (Int Int Int Int) Bool)
(declare-fun _240 (Int Int Int Int) Bool)
(declare-fun _241 (Int Int Int Int) Bool)
(declare-fun _242 (Int Int Int Int) Bool)
(declare-fun _243 (Int Int Int Int) Bool)
(declare-fun _244 (Int Int Int Int) Bool)
(declare-fun _245 (Int Int Int Int) Bool)
(declare-fun _246 (Int Int Int Int) Bool)
(declare-fun _247 (Int Int Int Int) Bool)
(declare-fun _248 (Int Int Int Int) Bool)
(declare-fun _249 (Int Int Int Int) Bool)
(declare-fun _250 (Int Int Int Int) Bool)
(declare-fun _251 (Int Int Int Int) Bool)
(declare-fun _252 (Int Int Int Int) Bool)
(declare-fun _253 (Int Int Int Int) Bool)
(declare-fun _254 (Int Int Int Int) Bool)
(declare-fun _255 (Int Int Int Int) Bool)
(declare-fun _256 (Int Int Int Int) Bool)
(declare-fun _257 (Int Int Int Int) Bool)
(declare-fun _258 (Int Int Int Int) Bool)
(declare-fun _259 (Int Int Int Int) Bool)
(declare-fun _260 (Int Int Int Int) Bool)
(declare-fun _261 (Int Int Int Int) Bool)
(declare-fun _262 (Int Int Int Int) Bool)
(declare-fun _263 (Int Int Int Int) Bool)
(declare-fun _264 (Int Int Int Int) Bool)
(declare-fun _265 (Int Int Int Int) Bool)
(declare-fun _266 (Int Int Int Int) Bool)
(declare-fun _267 (Int Int Int Int) Bool)
(declare-fun _268 (Int Int Int Int) Bool)
(declare-fun _269 (Int Int Int Int) Bool)
(declare-fun _270 (Int Int Int Int) Bool)
(declare-fun _271 (Int Int Int Int) Bool)
(declare-fun _272 (Int Int Int Int) Bool)
(declare-fun _273 (Int Int Int Int) Bool)
(declare-fun _274 (Int Int Int Int) Bool)
(declare-fun _275 (Int Int Int Int) Bool)
(declare-fun _276 (Int Int Int Int) Bool)
(declare-fun _277 (Int Int Int Int) Bool)
(declare-fun _278 (Int Int Int Int) Bool)
(declare-fun _279 (Int Int Int Int) Bool)
(declare-fun _280 (Int Int Int Int) Bool)
(declare-fun _281 (Int Int Int Int) Bool)
(declare-fun _282 (Int Int Int Int) Bool)
(declare-fun _283 (Int Int Int Int) Bool)
(declare-fun _284 (Int Int Int Int) Bool)
(declare-fun _285 (Int Int Int Int) Bool)
(declare-fun _286 (Int Int Int Int) Bool)
(declare-fun _287 (Int Int Int Int) Bool)
(declare-fun _288 (Int Int Int Int) Bool)
(declare-fun _289 (Int Int Int Int) Bool)
(declare-fun _290 (Int Int Int Int) Bool)
(declare-fun _291 (Int Int Int Int) Bool)
(declare-fun _292 (Int Int Int Int) Bool)
(declare-fun _293 (Int Int Int Int) Bool)
(declare-fun _294 (Int Int Int Int) Bool)
(declare-fun _295 (Int Int Int Int) Bool)
(declare-fun _296 (Int Int Int Int) Bool)
(declare-fun _297 (Int Int Int Int) Bool)
(declare-fun _298 (Int Int Int Int) Bool)
(declare-fun _299 (Int Int Int Int) Bool)
(declare-fun _300 (Int Int Int Int) Bool)
(declare-fun _301 (Int Int Int Int) Bool)
(declare-fun _302 (Int Int Int Int) Bool)
(declare-fun _303 (Int Int Int Int) Bool)
(declare-fun _304 (Int Int Int Int) Bool)
(declare-fun _305 (Int Int Int Int) Bool)
(declare-fun _306 (Int Int Int Int) Bool)
(declare-fun _307 (Int Int Int Int) Bool)
(declare-fun _308 (Int Int Int Int) Bool)
(declare-fun _309 (Int Int Int Int) Bool)
(declare-fun _310 (Int Int Int Int) Bool)
(declare-fun _311 (Int Int Int Int) Bool)
(declare-fun _312 (Int Int Int Int) Bool)
(declare-fun _313 (Int Int Int Int) Bool)
(declare-fun _314 (Int Int Int Int) Bool)
(declare-fun _315 (Int Int Int Int) Bool)
(declare-fun _316 (Int Int Int Int) Bool)
(declare-fun _317 (Int Int Int Int) Bool)
(declare-fun _318 (Int Int Int Int) Bool)
(declare-fun _319 (Int Int Int Int) Bool)
(declare-fun _320 (Int Int Int Int) Bool)
(declare-fun _321 (Int Int Int Int) Bool)
(declare-fun _322 (Int Int Int Int) Bool)
(declare-fun _323 (Int Int Int Int) Bool)
(declare-fun _324 (Int Int Int Int) Bool)
(declare-fun _325 (Int Int Int Int) Bool)
(declare-fun _326 (Int Int Int Int) Bool)
(declare-fun _327 (Int Int Int Int) Bool)
(declare-fun _328 (Int Int Int Int) Bool)
(declare-fun _329 (Int Int Int Int) Bool)
(declare-fun _330 (Int Int Int Int) Bool)
(declare-fun _331 (Int Int Int Int) Bool)
(declare-fun _332 (Int Int Int Int) Bool)
(declare-fun _333 (Int Int Int Int) Bool)
(declare-fun _334 (Int Int Int Int) Bool)
(declare-fun _335 (Int Int Int Int) Bool)
(declare-fun _336 (Int Int Int Int) Bool)
(declare-fun _337 (Int Int Int Int) Bool)
(declare-fun _338 (Int Int Int Int) Bool)
(declare-fun _339 (Int Int Int Int) Bool)
(declare-fun _340 (Int Int Int Int) Bool)
(declare-fun _341 (Int Int Int Int) Bool)
(declare-fun _342 (Int Int Int Int) Bool)
(declare-fun _343 (Int Int Int Int) Bool)
(declare-fun _344 (Int Int Int Int) Bool)
(declare-fun _345 (Int Int Int Int) Bool)
(declare-fun _346 (Int Int Int Int) Bool)
(declare-fun _347 (Int Int Int Int) Bool)
(declare-fun _348 (Int Int Int Int) Bool)
(declare-fun _349 (Int Int Int Int) Bool)
(declare-fun _350 (Int Int Int Int) Bool)
(assert
 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x19 (input-arg0 0)))
 (_0 ?x19 0 0 0)))
 )
 )
(assert
 (forall ((time Int) )(let (($x75 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (=> (and $x71 $x70) (_1 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x75)))))
 )
(assert
 (forall ((time Int) )(let (($x101 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x71 (_0 ?x69 var1 var2 time)))
 (let (($x82 (and $x71 $x81)))
 (=> $x82 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x101)))))
 )
(assert
 (forall ((time Int) )(let (($x116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (=> (and $x112 $x70) (_2 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x116)))))
 )
(assert
 (forall ((time Int) )(let (($x128 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x112 (_1 ?x69 var1 var2 time)))
 (let (($x57 (and $x112 $x81)))
 (=> $x57 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x128)))))
 )
(assert
 (forall ((time Int) )(let (($x142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (=> (and $x138 $x70) (_3 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x142)))))
 )
(assert
 (forall ((time Int) )(let (($x154 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x138 (_2 ?x69 var1 var2 time)))
 (let (($x56 (and $x138 $x81)))
 (=> $x56 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x154)))))
 )
(assert
 (forall ((time Int) )(let (($x168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (=> (and $x164 $x70) (_4 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x168)))))
 )
(assert
 (forall ((time Int) )(let (($x180 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x164 (_3 ?x69 var1 var2 time)))
 (let (($x54 (and $x164 $x81)))
 (=> $x54 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x180)))))
 )
(assert
 (forall ((time Int) )(let (($x194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (=> (and $x190 $x70) (_5 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x194)))))
 )
(assert
 (forall ((time Int) )(let (($x206 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x190 (_4 ?x69 var1 var2 time)))
 (let (($x50 (and $x190 $x81)))
 (=> $x50 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x206)))))
 )
(assert
 (forall ((time Int) )(let (($x220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (=> (and $x216 $x70) (_6 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x220)))))
 )
(assert
 (forall ((time Int) )(let (($x232 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x216 (_5 ?x69 var1 var2 time)))
 (let (($x62 (and $x216 $x81)))
 (=> $x62 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x232)))))
 )
(assert
 (forall ((time Int) )(let (($x246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (=> (and $x242 $x70) (_7 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x246)))))
 )
(assert
 (forall ((time Int) )(let (($x258 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x242 (_6 ?x69 var1 var2 time)))
 (let (($x61 (and $x242 $x81)))
 (=> $x61 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x258)))))
 )
(assert
 (forall ((time Int) )(let (($x272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (=> (and $x268 $x70) (_8 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x272)))))
 )
(assert
 (forall ((time Int) )(let (($x284 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x268 (_7 ?x69 var1 var2 time)))
 (let (($x53 (and $x268 $x81)))
 (=> $x53 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x284)))))
 )
(assert
 (forall ((time Int) )(let (($x298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (=> (and $x294 $x70) (_9 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x298)))))
 )
(assert
 (forall ((time Int) )(let (($x310 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x294 (_8 ?x69 var1 var2 time)))
 (let (($x63 (and $x294 $x81)))
 (=> $x63 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x310)))))
 )
(assert
 (forall ((time Int) )(let (($x324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (=> (and $x320 $x70) (_10 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x324)))))
 )
(assert
 (forall ((time Int) )(let (($x336 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x320 (_9 ?x69 var1 var2 time)))
 (let (($x104 (and $x320 $x81)))
 (=> $x104 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x336)))))
 )
(assert
 (forall ((time Int) )(let (($x350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (=> (and $x346 $x70) (_11 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x350)))))
 )
(assert
 (forall ((time Int) )(let (($x362 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x346 (_10 ?x69 var1 var2 time)))
 (let (($x131 (and $x346 $x81)))
 (=> $x131 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x362)))))
 )
(assert
 (forall ((time Int) )(let (($x376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (=> (and $x372 $x70) (_12 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x376)))))
 )
(assert
 (forall ((time Int) )(let (($x388 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x372 (_11 ?x69 var1 var2 time)))
 (let (($x157 (and $x372 $x81)))
 (=> $x157 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x388)))))
 )
(assert
 (forall ((time Int) )(let (($x402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (=> (and $x398 $x70) (_13 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x402)))))
 )
(assert
 (forall ((time Int) )(let (($x414 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x398 (_12 ?x69 var1 var2 time)))
 (let (($x183 (and $x398 $x81)))
 (=> $x183 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x414)))))
 )
(assert
 (forall ((time Int) )(let (($x428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (=> (and $x424 $x70) (_14 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x428)))))
 )
(assert
 (forall ((time Int) )(let (($x440 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x424 (_13 ?x69 var1 var2 time)))
 (let (($x209 (and $x424 $x81)))
 (=> $x209 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x440)))))
 )
(assert
 (forall ((time Int) )(let (($x454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (=> (and $x450 $x70) (_15 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x454)))))
 )
(assert
 (forall ((time Int) )(let (($x466 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x450 (_14 ?x69 var1 var2 time)))
 (let (($x235 (and $x450 $x81)))
 (=> $x235 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x466)))))
 )
(assert
 (forall ((time Int) )(let (($x480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (=> (and $x476 $x70) (_16 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x480)))))
 )
(assert
 (forall ((time Int) )(let (($x492 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x476 (_15 ?x69 var1 var2 time)))
 (let (($x261 (and $x476 $x81)))
 (=> $x261 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x492)))))
 )
(assert
 (forall ((time Int) )(let (($x506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (=> (and $x502 $x70) (_17 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x506)))))
 )
(assert
 (forall ((time Int) )(let (($x518 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x502 (_16 ?x69 var1 var2 time)))
 (let (($x287 (and $x502 $x81)))
 (=> $x287 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x518)))))
 )
(assert
 (forall ((time Int) )(let (($x532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (=> (and $x528 $x70) (_18 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x532)))))
 )
(assert
 (forall ((time Int) )(let (($x544 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x528 (_17 ?x69 var1 var2 time)))
 (let (($x313 (and $x528 $x81)))
 (=> $x313 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x544)))))
 )
(assert
 (forall ((time Int) )(let (($x558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (=> (and $x554 $x70) (_19 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x558)))))
 )
(assert
 (forall ((time Int) )(let (($x570 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x554 (_18 ?x69 var1 var2 time)))
 (let (($x339 (and $x554 $x81)))
 (=> $x339 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x570)))))
 )
(assert
 (forall ((time Int) )(let (($x584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (=> (and $x580 $x70) (_20 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x584)))))
 )
(assert
 (forall ((time Int) )(let (($x596 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x580 (_19 ?x69 var1 var2 time)))
 (let (($x365 (and $x580 $x81)))
 (=> $x365 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x596)))))
 )
(assert
 (forall ((time Int) )(let (($x610 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x606 (_20 ?x69 var1 var2 time)))
 (=> (and $x606 $x70) (_21 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x610)))))
 )
(assert
 (forall ((time Int) )(let (($x622 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x606 (_20 ?x69 var1 var2 time)))
 (let (($x391 (and $x606 $x81)))
 (=> $x391 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x622)))))
 )
(assert
 (forall ((time Int) )(let (($x636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x632 (_21 ?x69 var1 var2 time)))
 (=> (and $x632 $x70) (_22 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x636)))))
 )
(assert
 (forall ((time Int) )(let (($x648 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x632 (_21 ?x69 var1 var2 time)))
 (let (($x417 (and $x632 $x81)))
 (=> $x417 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x648)))))
 )
(assert
 (forall ((time Int) )(let (($x662 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x658 (_22 ?x69 var1 var2 time)))
 (=> (and $x658 $x70) (_23 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x662)))))
 )
(assert
 (forall ((time Int) )(let (($x674 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x658 (_22 ?x69 var1 var2 time)))
 (let (($x443 (and $x658 $x81)))
 (=> $x443 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x674)))))
 )
(assert
 (forall ((time Int) )(let (($x688 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x684 (_23 ?x69 var1 var2 time)))
 (=> (and $x684 $x70) (_24 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x688)))))
 )
(assert
 (forall ((time Int) )(let (($x700 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x684 (_23 ?x69 var1 var2 time)))
 (let (($x469 (and $x684 $x81)))
 (=> $x469 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x700)))))
 )
(assert
 (forall ((time Int) )(let (($x714 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x710 (_24 ?x69 var1 var2 time)))
 (=> (and $x710 $x70) (_25 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x714)))))
 )
(assert
 (forall ((time Int) )(let (($x726 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x710 (_24 ?x69 var1 var2 time)))
 (let (($x495 (and $x710 $x81)))
 (=> $x495 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x726)))))
 )
(assert
 (forall ((time Int) )(let (($x740 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x736 (_25 ?x69 var1 var2 time)))
 (=> (and $x736 $x70) (_26 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x740)))))
 )
(assert
 (forall ((time Int) )(let (($x752 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x736 (_25 ?x69 var1 var2 time)))
 (let (($x521 (and $x736 $x81)))
 (=> $x521 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x752)))))
 )
(assert
 (forall ((time Int) )(let (($x766 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x762 (_26 ?x69 var1 var2 time)))
 (=> (and $x762 $x70) (_27 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x766)))))
 )
(assert
 (forall ((time Int) )(let (($x778 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x762 (_26 ?x69 var1 var2 time)))
 (let (($x547 (and $x762 $x81)))
 (=> $x547 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x778)))))
 )
(assert
 (forall ((time Int) )(let (($x792 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x788 (_27 ?x69 var1 var2 time)))
 (=> (and $x788 $x70) (_28 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x792)))))
 )
(assert
 (forall ((time Int) )(let (($x804 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x788 (_27 ?x69 var1 var2 time)))
 (let (($x573 (and $x788 $x81)))
 (=> $x573 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x804)))))
 )
(assert
 (forall ((time Int) )(let (($x818 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x814 (_28 ?x69 var1 var2 time)))
 (=> (and $x814 $x70) (_29 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x818)))))
 )
(assert
 (forall ((time Int) )(let (($x830 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x814 (_28 ?x69 var1 var2 time)))
 (let (($x599 (and $x814 $x81)))
 (=> $x599 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x830)))))
 )
(assert
 (forall ((time Int) )(let (($x844 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x840 (_29 ?x69 var1 var2 time)))
 (=> (and $x840 $x70) (_30 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x844)))))
 )
(assert
 (forall ((time Int) )(let (($x856 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x840 (_29 ?x69 var1 var2 time)))
 (let (($x625 (and $x840 $x81)))
 (=> $x625 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x856)))))
 )
(assert
 (forall ((time Int) )(let (($x870 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x866 (_30 ?x69 var1 var2 time)))
 (=> (and $x866 $x70) (_31 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x870)))))
 )
(assert
 (forall ((time Int) )(let (($x882 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x866 (_30 ?x69 var1 var2 time)))
 (let (($x651 (and $x866 $x81)))
 (=> $x651 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x882)))))
 )
(assert
 (forall ((time Int) )(let (($x896 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x892 (_31 ?x69 var1 var2 time)))
 (=> (and $x892 $x70) (_32 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x896)))))
 )
(assert
 (forall ((time Int) )(let (($x908 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x892 (_31 ?x69 var1 var2 time)))
 (let (($x677 (and $x892 $x81)))
 (=> $x677 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x908)))))
 )
(assert
 (forall ((time Int) )(let (($x922 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x918 (_32 ?x69 var1 var2 time)))
 (=> (and $x918 $x70) (_33 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x922)))))
 )
(assert
 (forall ((time Int) )(let (($x934 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x918 (_32 ?x69 var1 var2 time)))
 (let (($x703 (and $x918 $x81)))
 (=> $x703 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x934)))))
 )
(assert
 (forall ((time Int) )(let (($x948 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x944 (_33 ?x69 var1 var2 time)))
 (=> (and $x944 $x70) (_34 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x948)))))
 )
(assert
 (forall ((time Int) )(let (($x960 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x944 (_33 ?x69 var1 var2 time)))
 (let (($x729 (and $x944 $x81)))
 (=> $x729 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x960)))))
 )
(assert
 (forall ((time Int) )(let (($x974 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x970 (_34 ?x69 var1 var2 time)))
 (=> (and $x970 $x70) (_35 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x974)))))
 )
(assert
 (forall ((time Int) )(let (($x986 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x970 (_34 ?x69 var1 var2 time)))
 (let (($x755 (and $x970 $x81)))
 (=> $x755 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x986)))))
 )
(assert
 (forall ((time Int) )(let (($x1000 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x996 (_35 ?x69 var1 var2 time)))
 (=> (and $x996 $x70) (_36 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1000)))))
 )
(assert
 (forall ((time Int) )(let (($x1012 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x996 (_35 ?x69 var1 var2 time)))
 (let (($x781 (and $x996 $x81)))
 (=> $x781 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1012)))))
 )
(assert
 (forall ((time Int) )(let (($x1026 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1022 (_36 ?x69 var1 var2 time)))
 (=> (and $x1022 $x70) (_37 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1026)))))
 )
(assert
 (forall ((time Int) )(let (($x1038 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1022 (_36 ?x69 var1 var2 time)))
 (let (($x807 (and $x1022 $x81)))
 (=> $x807 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1038)))))
 )
(assert
 (forall ((time Int) )(let (($x1052 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1048 (_37 ?x69 var1 var2 time)))
 (=> (and $x1048 $x70) (_38 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1052)))))
 )
(assert
 (forall ((time Int) )(let (($x1064 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1048 (_37 ?x69 var1 var2 time)))
 (let (($x833 (and $x1048 $x81)))
 (=> $x833 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1064)))))
 )
(assert
 (forall ((time Int) )(let (($x1078 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1074 (_38 ?x69 var1 var2 time)))
 (=> (and $x1074 $x70) (_39 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1078)))))
 )
(assert
 (forall ((time Int) )(let (($x1090 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1074 (_38 ?x69 var1 var2 time)))
 (let (($x859 (and $x1074 $x81)))
 (=> $x859 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1090)))))
 )
(assert
 (forall ((time Int) )(let (($x1104 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1100 (_39 ?x69 var1 var2 time)))
 (=> (and $x1100 $x70) (_40 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1104)))))
 )
(assert
 (forall ((time Int) )(let (($x1116 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1100 (_39 ?x69 var1 var2 time)))
 (let (($x885 (and $x1100 $x81)))
 (=> $x885 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1116)))))
 )
(assert
 (forall ((time Int) )(let (($x1130 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1126 (_40 ?x69 var1 var2 time)))
 (=> (and $x1126 $x70) (_41 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1130)))))
 )
(assert
 (forall ((time Int) )(let (($x1142 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1126 (_40 ?x69 var1 var2 time)))
 (let (($x911 (and $x1126 $x81)))
 (=> $x911 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1142)))))
 )
(assert
 (forall ((time Int) )(let (($x1156 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1152 (_41 ?x69 var1 var2 time)))
 (=> (and $x1152 $x70) (_42 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1156)))))
 )
(assert
 (forall ((time Int) )(let (($x1168 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1152 (_41 ?x69 var1 var2 time)))
 (let (($x937 (and $x1152 $x81)))
 (=> $x937 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1168)))))
 )
(assert
 (forall ((time Int) )(let (($x1182 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1178 (_42 ?x69 var1 var2 time)))
 (=> (and $x1178 $x70) (_43 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1182)))))
 )
(assert
 (forall ((time Int) )(let (($x1194 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1178 (_42 ?x69 var1 var2 time)))
 (let (($x963 (and $x1178 $x81)))
 (=> $x963 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1194)))))
 )
(assert
 (forall ((time Int) )(let (($x1208 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1204 (_43 ?x69 var1 var2 time)))
 (=> (and $x1204 $x70) (_44 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1208)))))
 )
(assert
 (forall ((time Int) )(let (($x1220 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1204 (_43 ?x69 var1 var2 time)))
 (let (($x989 (and $x1204 $x81)))
 (=> $x989 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1220)))))
 )
(assert
 (forall ((time Int) )(let (($x1234 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1230 (_44 ?x69 var1 var2 time)))
 (=> (and $x1230 $x70) (_45 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1234)))))
 )
(assert
 (forall ((time Int) )(let (($x1246 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1230 (_44 ?x69 var1 var2 time)))
 (let (($x1015 (and $x1230 $x81)))
 (=> $x1015 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1246)))))
 )
(assert
 (forall ((time Int) )(let (($x1260 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1256 (_45 ?x69 var1 var2 time)))
 (=> (and $x1256 $x70) (_46 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1260)))))
 )
(assert
 (forall ((time Int) )(let (($x1272 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1256 (_45 ?x69 var1 var2 time)))
 (let (($x1041 (and $x1256 $x81)))
 (=> $x1041 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1272)))))
 )
(assert
 (forall ((time Int) )(let (($x1286 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1282 (_46 ?x69 var1 var2 time)))
 (=> (and $x1282 $x70) (_47 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1286)))))
 )
(assert
 (forall ((time Int) )(let (($x1298 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1282 (_46 ?x69 var1 var2 time)))
 (let (($x1067 (and $x1282 $x81)))
 (=> $x1067 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1298)))))
 )
(assert
 (forall ((time Int) )(let (($x1312 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1308 (_47 ?x69 var1 var2 time)))
 (=> (and $x1308 $x70) (_48 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1312)))))
 )
(assert
 (forall ((time Int) )(let (($x1324 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1308 (_47 ?x69 var1 var2 time)))
 (let (($x1093 (and $x1308 $x81)))
 (=> $x1093 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1324)))))
 )
(assert
 (forall ((time Int) )(let (($x1338 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1334 (_48 ?x69 var1 var2 time)))
 (=> (and $x1334 $x70) (_49 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1338)))))
 )
(assert
 (forall ((time Int) )(let (($x1350 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1334 (_48 ?x69 var1 var2 time)))
 (let (($x1119 (and $x1334 $x81)))
 (=> $x1119 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1350)))))
 )
(assert
 (forall ((time Int) )(let (($x1364 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1360 (_49 ?x69 var1 var2 time)))
 (=> (and $x1360 $x70) (_50 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1364)))))
 )
(assert
 (forall ((time Int) )(let (($x1376 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1360 (_49 ?x69 var1 var2 time)))
 (let (($x1145 (and $x1360 $x81)))
 (=> $x1145 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1376)))))
 )
(assert
 (forall ((time Int) )(let (($x1390 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1386 (_50 ?x69 var1 var2 time)))
 (=> (and $x1386 $x70) (_51 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1390)))))
 )
(assert
 (forall ((time Int) )(let (($x1402 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1386 (_50 ?x69 var1 var2 time)))
 (let (($x1171 (and $x1386 $x81)))
 (=> $x1171 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1402)))))
 )
(assert
 (forall ((time Int) )(let (($x1416 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1412 (_51 ?x69 var1 var2 time)))
 (=> (and $x1412 $x70) (_52 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1416)))))
 )
(assert
 (forall ((time Int) )(let (($x1428 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1412 (_51 ?x69 var1 var2 time)))
 (let (($x1197 (and $x1412 $x81)))
 (=> $x1197 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1428)))))
 )
(assert
 (forall ((time Int) )(let (($x1442 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1438 (_52 ?x69 var1 var2 time)))
 (=> (and $x1438 $x70) (_53 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1442)))))
 )
(assert
 (forall ((time Int) )(let (($x1454 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1438 (_52 ?x69 var1 var2 time)))
 (let (($x1223 (and $x1438 $x81)))
 (=> $x1223 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1454)))))
 )
(assert
 (forall ((time Int) )(let (($x1468 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1464 (_53 ?x69 var1 var2 time)))
 (=> (and $x1464 $x70) (_54 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1468)))))
 )
(assert
 (forall ((time Int) )(let (($x1480 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1464 (_53 ?x69 var1 var2 time)))
 (let (($x1249 (and $x1464 $x81)))
 (=> $x1249 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1480)))))
 )
(assert
 (forall ((time Int) )(let (($x1494 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1490 (_54 ?x69 var1 var2 time)))
 (=> (and $x1490 $x70) (_55 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1494)))))
 )
(assert
 (forall ((time Int) )(let (($x1506 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1490 (_54 ?x69 var1 var2 time)))
 (let (($x1275 (and $x1490 $x81)))
 (=> $x1275 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1506)))))
 )
(assert
 (forall ((time Int) )(let (($x1520 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1516 (_55 ?x69 var1 var2 time)))
 (=> (and $x1516 $x70) (_56 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1520)))))
 )
(assert
 (forall ((time Int) )(let (($x1532 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1516 (_55 ?x69 var1 var2 time)))
 (let (($x1301 (and $x1516 $x81)))
 (=> $x1301 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1532)))))
 )
(assert
 (forall ((time Int) )(let (($x1546 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1542 (_56 ?x69 var1 var2 time)))
 (=> (and $x1542 $x70) (_57 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1546)))))
 )
(assert
 (forall ((time Int) )(let (($x1558 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1542 (_56 ?x69 var1 var2 time)))
 (let (($x1327 (and $x1542 $x81)))
 (=> $x1327 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1558)))))
 )
(assert
 (forall ((time Int) )(let (($x1572 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1568 (_57 ?x69 var1 var2 time)))
 (=> (and $x1568 $x70) (_58 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1572)))))
 )
(assert
 (forall ((time Int) )(let (($x1584 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1568 (_57 ?x69 var1 var2 time)))
 (let (($x1353 (and $x1568 $x81)))
 (=> $x1353 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1584)))))
 )
(assert
 (forall ((time Int) )(let (($x1598 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1594 (_58 ?x69 var1 var2 time)))
 (=> (and $x1594 $x70) (_59 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1598)))))
 )
(assert
 (forall ((time Int) )(let (($x1610 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1594 (_58 ?x69 var1 var2 time)))
 (let (($x1379 (and $x1594 $x81)))
 (=> $x1379 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1610)))))
 )
(assert
 (forall ((time Int) )(let (($x1624 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (=> (and $x1620 $x70) (_60 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1624)))))
 )
(assert
 (forall ((time Int) )(let (($x1636 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1620 (_59 ?x69 var1 var2 time)))
 (let (($x1405 (and $x1620 $x81)))
 (=> $x1405 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1636)))))
 )
(assert
 (forall ((time Int) )(let (($x1650 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1646 (_60 ?x69 var1 var2 time)))
 (=> (and $x1646 $x70) (_61 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1650)))))
 )
(assert
 (forall ((time Int) )(let (($x1662 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1646 (_60 ?x69 var1 var2 time)))
 (let (($x1431 (and $x1646 $x81)))
 (=> $x1431 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1662)))))
 )
(assert
 (forall ((time Int) )(let (($x1676 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1672 (_61 ?x69 var1 var2 time)))
 (=> (and $x1672 $x70) (_62 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1676)))))
 )
(assert
 (forall ((time Int) )(let (($x1688 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1672 (_61 ?x69 var1 var2 time)))
 (let (($x1457 (and $x1672 $x81)))
 (=> $x1457 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1688)))))
 )
(assert
 (forall ((time Int) )(let (($x1702 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1698 (_62 ?x69 var1 var2 time)))
 (=> (and $x1698 $x70) (_63 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1702)))))
 )
(assert
 (forall ((time Int) )(let (($x1714 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1698 (_62 ?x69 var1 var2 time)))
 (let (($x1483 (and $x1698 $x81)))
 (=> $x1483 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1714)))))
 )
(assert
 (forall ((time Int) )(let (($x1728 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1724 (_63 ?x69 var1 var2 time)))
 (=> (and $x1724 $x70) (_64 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1728)))))
 )
(assert
 (forall ((time Int) )(let (($x1740 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1724 (_63 ?x69 var1 var2 time)))
 (let (($x1509 (and $x1724 $x81)))
 (=> $x1509 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1740)))))
 )
(assert
 (forall ((time Int) )(let (($x1754 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1750 (_64 ?x69 var1 var2 time)))
 (=> (and $x1750 $x70) (_65 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1754)))))
 )
(assert
 (forall ((time Int) )(let (($x1766 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1750 (_64 ?x69 var1 var2 time)))
 (let (($x1535 (and $x1750 $x81)))
 (=> $x1535 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1766)))))
 )
(assert
 (forall ((time Int) )(let (($x1780 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1776 (_65 ?x69 var1 var2 time)))
 (=> (and $x1776 $x70) (_66 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1780)))))
 )
(assert
 (forall ((time Int) )(let (($x1792 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1776 (_65 ?x69 var1 var2 time)))
 (let (($x1561 (and $x1776 $x81)))
 (=> $x1561 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1792)))))
 )
(assert
 (forall ((time Int) )(let (($x1806 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1802 (_66 ?x69 var1 var2 time)))
 (=> (and $x1802 $x70) (_67 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1806)))))
 )
(assert
 (forall ((time Int) )(let (($x1818 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1802 (_66 ?x69 var1 var2 time)))
 (let (($x1587 (and $x1802 $x81)))
 (=> $x1587 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1818)))))
 )
(assert
 (forall ((time Int) )(let (($x1832 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1828 (_67 ?x69 var1 var2 time)))
 (=> (and $x1828 $x70) (_68 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1832)))))
 )
(assert
 (forall ((time Int) )(let (($x1844 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1828 (_67 ?x69 var1 var2 time)))
 (let (($x1613 (and $x1828 $x81)))
 (=> $x1613 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1844)))))
 )
(assert
 (forall ((time Int) )(let (($x1858 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1854 (_68 ?x69 var1 var2 time)))
 (=> (and $x1854 $x70) (_69 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1858)))))
 )
(assert
 (forall ((time Int) )(let (($x1870 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1854 (_68 ?x69 var1 var2 time)))
 (let (($x1639 (and $x1854 $x81)))
 (=> $x1639 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1870)))))
 )
(assert
 (forall ((time Int) )(let (($x1884 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1880 (_69 ?x69 var1 var2 time)))
 (=> (and $x1880 $x70) (_70 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1884)))))
 )
(assert
 (forall ((time Int) )(let (($x1896 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1880 (_69 ?x69 var1 var2 time)))
 (let (($x1665 (and $x1880 $x81)))
 (=> $x1665 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1896)))))
 )
(assert
 (forall ((time Int) )(let (($x1910 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1906 (_70 ?x69 var1 var2 time)))
 (=> (and $x1906 $x70) (_71 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1910)))))
 )
(assert
 (forall ((time Int) )(let (($x1922 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1906 (_70 ?x69 var1 var2 time)))
 (let (($x1691 (and $x1906 $x81)))
 (=> $x1691 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1922)))))
 )
(assert
 (forall ((time Int) )(let (($x1936 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1932 (_71 ?x69 var1 var2 time)))
 (=> (and $x1932 $x70) (_72 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1936)))))
 )
(assert
 (forall ((time Int) )(let (($x1948 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1932 (_71 ?x69 var1 var2 time)))
 (let (($x1717 (and $x1932 $x81)))
 (=> $x1717 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1948)))))
 )
(assert
 (forall ((time Int) )(let (($x1962 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1958 (_72 ?x69 var1 var2 time)))
 (=> (and $x1958 $x70) (_73 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1962)))))
 )
(assert
 (forall ((time Int) )(let (($x1974 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1958 (_72 ?x69 var1 var2 time)))
 (let (($x1743 (and $x1958 $x81)))
 (=> $x1743 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1974)))))
 )
(assert
 (forall ((time Int) )(let (($x1988 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x1984 (_73 ?x69 var1 var2 time)))
 (=> (and $x1984 $x70) (_74 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x1988)))))
 )
(assert
 (forall ((time Int) )(let (($x2000 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x1984 (_73 ?x69 var1 var2 time)))
 (let (($x1769 (and $x1984 $x81)))
 (=> $x1769 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2000)))))
 )
(assert
 (forall ((time Int) )(let (($x2014 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2010 (_74 ?x69 var1 var2 time)))
 (=> (and $x2010 $x70) (_75 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2014)))))
 )
(assert
 (forall ((time Int) )(let (($x2026 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2010 (_74 ?x69 var1 var2 time)))
 (let (($x1795 (and $x2010 $x81)))
 (=> $x1795 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2026)))))
 )
(assert
 (forall ((time Int) )(let (($x2040 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2036 (_75 ?x69 var1 var2 time)))
 (=> (and $x2036 $x70) (_76 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2040)))))
 )
(assert
 (forall ((time Int) )(let (($x2052 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2036 (_75 ?x69 var1 var2 time)))
 (let (($x1821 (and $x2036 $x81)))
 (=> $x1821 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2052)))))
 )
(assert
 (forall ((time Int) )(let (($x2066 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2062 (_76 ?x69 var1 var2 time)))
 (=> (and $x2062 $x70) (_77 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2066)))))
 )
(assert
 (forall ((time Int) )(let (($x2078 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2062 (_76 ?x69 var1 var2 time)))
 (let (($x1847 (and $x2062 $x81)))
 (=> $x1847 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2078)))))
 )
(assert
 (forall ((time Int) )(let (($x2092 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2088 (_77 ?x69 var1 var2 time)))
 (=> (and $x2088 $x70) (_78 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2092)))))
 )
(assert
 (forall ((time Int) )(let (($x2104 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2088 (_77 ?x69 var1 var2 time)))
 (let (($x1873 (and $x2088 $x81)))
 (=> $x1873 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2104)))))
 )
(assert
 (forall ((time Int) )(let (($x2118 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2114 (_78 ?x69 var1 var2 time)))
 (=> (and $x2114 $x70) (_79 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2118)))))
 )
(assert
 (forall ((time Int) )(let (($x2130 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2114 (_78 ?x69 var1 var2 time)))
 (let (($x1899 (and $x2114 $x81)))
 (=> $x1899 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2130)))))
 )
(assert
 (forall ((time Int) )(let (($x2144 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2140 (_79 ?x69 var1 var2 time)))
 (=> (and $x2140 $x70) (_80 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2144)))))
 )
(assert
 (forall ((time Int) )(let (($x2156 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2140 (_79 ?x69 var1 var2 time)))
 (let (($x1925 (and $x2140 $x81)))
 (=> $x1925 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2156)))))
 )
(assert
 (forall ((time Int) )(let (($x2170 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2166 (_80 ?x69 var1 var2 time)))
 (=> (and $x2166 $x70) (_81 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2170)))))
 )
(assert
 (forall ((time Int) )(let (($x2182 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2166 (_80 ?x69 var1 var2 time)))
 (let (($x1951 (and $x2166 $x81)))
 (=> $x1951 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2182)))))
 )
(assert
 (forall ((time Int) )(let (($x2196 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2192 (_81 ?x69 var1 var2 time)))
 (=> (and $x2192 $x70) (_82 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2196)))))
 )
(assert
 (forall ((time Int) )(let (($x2208 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2192 (_81 ?x69 var1 var2 time)))
 (let (($x1977 (and $x2192 $x81)))
 (=> $x1977 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2208)))))
 )
(assert
 (forall ((time Int) )(let (($x2222 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2218 (_82 ?x69 var1 var2 time)))
 (=> (and $x2218 $x70) (_83 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2222)))))
 )
(assert
 (forall ((time Int) )(let (($x2234 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2218 (_82 ?x69 var1 var2 time)))
 (let (($x2003 (and $x2218 $x81)))
 (=> $x2003 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2234)))))
 )
(assert
 (forall ((time Int) )(let (($x2248 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2244 (_83 ?x69 var1 var2 time)))
 (=> (and $x2244 $x70) (_84 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2248)))))
 )
(assert
 (forall ((time Int) )(let (($x2260 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2244 (_83 ?x69 var1 var2 time)))
 (let (($x2029 (and $x2244 $x81)))
 (=> $x2029 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2260)))))
 )
(assert
 (forall ((time Int) )(let (($x2274 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2270 (_84 ?x69 var1 var2 time)))
 (=> (and $x2270 $x70) (_85 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2274)))))
 )
(assert
 (forall ((time Int) )(let (($x2286 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2270 (_84 ?x69 var1 var2 time)))
 (let (($x2055 (and $x2270 $x81)))
 (=> $x2055 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2286)))))
 )
(assert
 (forall ((time Int) )(let (($x2300 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2296 (_85 ?x69 var1 var2 time)))
 (=> (and $x2296 $x70) (_86 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2300)))))
 )
(assert
 (forall ((time Int) )(let (($x2312 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2296 (_85 ?x69 var1 var2 time)))
 (let (($x2081 (and $x2296 $x81)))
 (=> $x2081 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2312)))))
 )
(assert
 (forall ((time Int) )(let (($x2326 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2322 (_86 ?x69 var1 var2 time)))
 (=> (and $x2322 $x70) (_87 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2326)))))
 )
(assert
 (forall ((time Int) )(let (($x2338 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2322 (_86 ?x69 var1 var2 time)))
 (let (($x2107 (and $x2322 $x81)))
 (=> $x2107 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2338)))))
 )
(assert
 (forall ((time Int) )(let (($x2352 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2348 (_87 ?x69 var1 var2 time)))
 (=> (and $x2348 $x70) (_88 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2352)))))
 )
(assert
 (forall ((time Int) )(let (($x2364 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2348 (_87 ?x69 var1 var2 time)))
 (let (($x2133 (and $x2348 $x81)))
 (=> $x2133 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2364)))))
 )
(assert
 (forall ((time Int) )(let (($x2378 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2374 (_88 ?x69 var1 var2 time)))
 (=> (and $x2374 $x70) (_89 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2378)))))
 )
(assert
 (forall ((time Int) )(let (($x2390 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2374 (_88 ?x69 var1 var2 time)))
 (let (($x2159 (and $x2374 $x81)))
 (=> $x2159 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2390)))))
 )
(assert
 (forall ((time Int) )(let (($x2404 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2400 (_89 ?x69 var1 var2 time)))
 (=> (and $x2400 $x70) (_90 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2404)))))
 )
(assert
 (forall ((time Int) )(let (($x2416 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2400 (_89 ?x69 var1 var2 time)))
 (let (($x2185 (and $x2400 $x81)))
 (=> $x2185 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2416)))))
 )
(assert
 (forall ((time Int) )(let (($x2430 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2426 (_90 ?x69 var1 var2 time)))
 (=> (and $x2426 $x70) (_91 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2430)))))
 )
(assert
 (forall ((time Int) )(let (($x2442 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2426 (_90 ?x69 var1 var2 time)))
 (let (($x2211 (and $x2426 $x81)))
 (=> $x2211 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2442)))))
 )
(assert
 (forall ((time Int) )(let (($x2456 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2452 (_91 ?x69 var1 var2 time)))
 (=> (and $x2452 $x70) (_92 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2456)))))
 )
(assert
 (forall ((time Int) )(let (($x2468 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2452 (_91 ?x69 var1 var2 time)))
 (let (($x2237 (and $x2452 $x81)))
 (=> $x2237 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2468)))))
 )
(assert
 (forall ((time Int) )(let (($x2482 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2478 (_92 ?x69 var1 var2 time)))
 (=> (and $x2478 $x70) (_93 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2482)))))
 )
(assert
 (forall ((time Int) )(let (($x2494 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2478 (_92 ?x69 var1 var2 time)))
 (let (($x2263 (and $x2478 $x81)))
 (=> $x2263 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2494)))))
 )
(assert
 (forall ((time Int) )(let (($x2508 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2504 (_93 ?x69 var1 var2 time)))
 (=> (and $x2504 $x70) (_94 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2508)))))
 )
(assert
 (forall ((time Int) )(let (($x2520 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2504 (_93 ?x69 var1 var2 time)))
 (let (($x2289 (and $x2504 $x81)))
 (=> $x2289 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2520)))))
 )
(assert
 (forall ((time Int) )(let (($x2534 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2530 (_94 ?x69 var1 var2 time)))
 (=> (and $x2530 $x70) (_95 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2534)))))
 )
(assert
 (forall ((time Int) )(let (($x2546 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2530 (_94 ?x69 var1 var2 time)))
 (let (($x2315 (and $x2530 $x81)))
 (=> $x2315 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2546)))))
 )
(assert
 (forall ((time Int) )(let (($x2560 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2556 (_95 ?x69 var1 var2 time)))
 (=> (and $x2556 $x70) (_96 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2560)))))
 )
(assert
 (forall ((time Int) )(let (($x2572 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2556 (_95 ?x69 var1 var2 time)))
 (let (($x2341 (and $x2556 $x81)))
 (=> $x2341 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2572)))))
 )
(assert
 (forall ((time Int) )(let (($x2586 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2582 (_96 ?x69 var1 var2 time)))
 (=> (and $x2582 $x70) (_97 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2586)))))
 )
(assert
 (forall ((time Int) )(let (($x2598 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2582 (_96 ?x69 var1 var2 time)))
 (let (($x2367 (and $x2582 $x81)))
 (=> $x2367 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2598)))))
 )
(assert
 (forall ((time Int) )(let (($x2612 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2608 (_97 ?x69 var1 var2 time)))
 (=> (and $x2608 $x70) (_98 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2612)))))
 )
(assert
 (forall ((time Int) )(let (($x2624 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2608 (_97 ?x69 var1 var2 time)))
 (let (($x2393 (and $x2608 $x81)))
 (=> $x2393 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2624)))))
 )
(assert
 (forall ((time Int) )(let (($x2638 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2634 (_98 ?x69 var1 var2 time)))
 (=> (and $x2634 $x70) (_99 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2638)))))
 )
(assert
 (forall ((time Int) )(let (($x2650 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2634 (_98 ?x69 var1 var2 time)))
 (let (($x2419 (and $x2634 $x81)))
 (=> $x2419 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2650)))))
 )
(assert
 (forall ((time Int) )(let (($x2664 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2660 (_99 ?x69 var1 var2 time)))
 (=> (and $x2660 $x70) (_100 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2664)))))
 )
(assert
 (forall ((time Int) )(let (($x2676 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2660 (_99 ?x69 var1 var2 time)))
 (let (($x2445 (and $x2660 $x81)))
 (=> $x2445 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2676)))))
 )
(assert
 (forall ((time Int) )(let (($x2690 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2686 (_100 ?x69 var1 var2 time)))
 (=> (and $x2686 $x70) (_101 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2690)))))
 )
(assert
 (forall ((time Int) )(let (($x2702 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2686 (_100 ?x69 var1 var2 time)))
 (let (($x2471 (and $x2686 $x81)))
 (=> $x2471 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2702)))))
 )
(assert
 (forall ((time Int) )(let (($x2716 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2712 (_101 ?x69 var1 var2 time)))
 (=> (and $x2712 $x70) (_102 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2716)))))
 )
(assert
 (forall ((time Int) )(let (($x2728 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2712 (_101 ?x69 var1 var2 time)))
 (let (($x2497 (and $x2712 $x81)))
 (=> $x2497 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2728)))))
 )
(assert
 (forall ((time Int) )(let (($x2742 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2738 (_102 ?x69 var1 var2 time)))
 (=> (and $x2738 $x70) (_103 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2742)))))
 )
(assert
 (forall ((time Int) )(let (($x2754 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2738 (_102 ?x69 var1 var2 time)))
 (let (($x2523 (and $x2738 $x81)))
 (=> $x2523 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2754)))))
 )
(assert
 (forall ((time Int) )(let (($x2768 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2764 (_103 ?x69 var1 var2 time)))
 (=> (and $x2764 $x70) (_104 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2768)))))
 )
(assert
 (forall ((time Int) )(let (($x2780 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2764 (_103 ?x69 var1 var2 time)))
 (let (($x2549 (and $x2764 $x81)))
 (=> $x2549 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2780)))))
 )
(assert
 (forall ((time Int) )(let (($x2794 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2790 (_104 ?x69 var1 var2 time)))
 (=> (and $x2790 $x70) (_105 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2794)))))
 )
(assert
 (forall ((time Int) )(let (($x2806 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2790 (_104 ?x69 var1 var2 time)))
 (let (($x2575 (and $x2790 $x81)))
 (=> $x2575 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2806)))))
 )
(assert
 (forall ((time Int) )(let (($x2820 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2816 (_105 ?x69 var1 var2 time)))
 (=> (and $x2816 $x70) (_106 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2820)))))
 )
(assert
 (forall ((time Int) )(let (($x2832 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2816 (_105 ?x69 var1 var2 time)))
 (let (($x2601 (and $x2816 $x81)))
 (=> $x2601 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2832)))))
 )
(assert
 (forall ((time Int) )(let (($x2846 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2842 (_106 ?x69 var1 var2 time)))
 (=> (and $x2842 $x70) (_107 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2846)))))
 )
(assert
 (forall ((time Int) )(let (($x2858 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2842 (_106 ?x69 var1 var2 time)))
 (let (($x2627 (and $x2842 $x81)))
 (=> $x2627 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2858)))))
 )
(assert
 (forall ((time Int) )(let (($x2872 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2868 (_107 ?x69 var1 var2 time)))
 (=> (and $x2868 $x70) (_108 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2872)))))
 )
(assert
 (forall ((time Int) )(let (($x2884 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2868 (_107 ?x69 var1 var2 time)))
 (let (($x2653 (and $x2868 $x81)))
 (=> $x2653 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2884)))))
 )
(assert
 (forall ((time Int) )(let (($x2898 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2894 (_108 ?x69 var1 var2 time)))
 (=> (and $x2894 $x70) (_109 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2898)))))
 )
(assert
 (forall ((time Int) )(let (($x2910 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2894 (_108 ?x69 var1 var2 time)))
 (let (($x2679 (and $x2894 $x81)))
 (=> $x2679 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2910)))))
 )
(assert
 (forall ((time Int) )(let (($x2924 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2920 (_109 ?x69 var1 var2 time)))
 (=> (and $x2920 $x70) (_110 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2924)))))
 )
(assert
 (forall ((time Int) )(let (($x2936 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2920 (_109 ?x69 var1 var2 time)))
 (let (($x2705 (and $x2920 $x81)))
 (=> $x2705 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2936)))))
 )
(assert
 (forall ((time Int) )(let (($x2950 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2946 (_110 ?x69 var1 var2 time)))
 (=> (and $x2946 $x70) (_111 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2950)))))
 )
(assert
 (forall ((time Int) )(let (($x2962 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2946 (_110 ?x69 var1 var2 time)))
 (let (($x2731 (and $x2946 $x81)))
 (=> $x2731 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2962)))))
 )
(assert
 (forall ((time Int) )(let (($x2976 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2972 (_111 ?x69 var1 var2 time)))
 (=> (and $x2972 $x70) (_112 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2976)))))
 )
(assert
 (forall ((time Int) )(let (($x2988 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2972 (_111 ?x69 var1 var2 time)))
 (let (($x2757 (and $x2972 $x81)))
 (=> $x2757 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x2988)))))
 )
(assert
 (forall ((time Int) )(let (($x3002 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x2998 (_112 ?x69 var1 var2 time)))
 (=> (and $x2998 $x70) (_113 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3002)))))
 )
(assert
 (forall ((time Int) )(let (($x3014 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x2998 (_112 ?x69 var1 var2 time)))
 (let (($x2783 (and $x2998 $x81)))
 (=> $x2783 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3014)))))
 )
(assert
 (forall ((time Int) )(let (($x3028 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3024 (_113 ?x69 var1 var2 time)))
 (=> (and $x3024 $x70) (_114 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3028)))))
 )
(assert
 (forall ((time Int) )(let (($x3040 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3024 (_113 ?x69 var1 var2 time)))
 (let (($x2809 (and $x3024 $x81)))
 (=> $x2809 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3040)))))
 )
(assert
 (forall ((time Int) )(let (($x3054 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3050 (_114 ?x69 var1 var2 time)))
 (=> (and $x3050 $x70) (_115 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3054)))))
 )
(assert
 (forall ((time Int) )(let (($x3066 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3050 (_114 ?x69 var1 var2 time)))
 (let (($x2835 (and $x3050 $x81)))
 (=> $x2835 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3066)))))
 )
(assert
 (forall ((time Int) )(let (($x3080 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3076 (_115 ?x69 var1 var2 time)))
 (=> (and $x3076 $x70) (_116 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3080)))))
 )
(assert
 (forall ((time Int) )(let (($x3092 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3076 (_115 ?x69 var1 var2 time)))
 (let (($x2861 (and $x3076 $x81)))
 (=> $x2861 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3092)))))
 )
(assert
 (forall ((time Int) )(let (($x3106 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3102 (_116 ?x69 var1 var2 time)))
 (=> (and $x3102 $x70) (_117 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3106)))))
 )
(assert
 (forall ((time Int) )(let (($x3118 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3102 (_116 ?x69 var1 var2 time)))
 (let (($x2887 (and $x3102 $x81)))
 (=> $x2887 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3118)))))
 )
(assert
 (forall ((time Int) )(let (($x3132 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3128 (_117 ?x69 var1 var2 time)))
 (=> (and $x3128 $x70) (_118 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3132)))))
 )
(assert
 (forall ((time Int) )(let (($x3144 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3128 (_117 ?x69 var1 var2 time)))
 (let (($x2913 (and $x3128 $x81)))
 (=> $x2913 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3144)))))
 )
(assert
 (forall ((time Int) )(let (($x3158 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3154 (_118 ?x69 var1 var2 time)))
 (=> (and $x3154 $x70) (_119 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3158)))))
 )
(assert
 (forall ((time Int) )(let (($x3170 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3154 (_118 ?x69 var1 var2 time)))
 (let (($x2939 (and $x3154 $x81)))
 (=> $x2939 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3170)))))
 )
(assert
 (forall ((time Int) )(let (($x3184 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3180 (_119 ?x69 var1 var2 time)))
 (=> (and $x3180 $x70) (_120 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3184)))))
 )
(assert
 (forall ((time Int) )(let (($x3196 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3180 (_119 ?x69 var1 var2 time)))
 (let (($x2965 (and $x3180 $x81)))
 (=> $x2965 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3196)))))
 )
(assert
 (forall ((time Int) )(let (($x3210 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3206 (_120 ?x69 var1 var2 time)))
 (=> (and $x3206 $x70) (_121 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3210)))))
 )
(assert
 (forall ((time Int) )(let (($x3222 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3206 (_120 ?x69 var1 var2 time)))
 (let (($x2991 (and $x3206 $x81)))
 (=> $x2991 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3222)))))
 )
(assert
 (forall ((time Int) )(let (($x3236 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3232 (_121 ?x69 var1 var2 time)))
 (=> (and $x3232 $x70) (_122 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3236)))))
 )
(assert
 (forall ((time Int) )(let (($x3248 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3232 (_121 ?x69 var1 var2 time)))
 (let (($x3017 (and $x3232 $x81)))
 (=> $x3017 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3248)))))
 )
(assert
 (forall ((time Int) )(let (($x3262 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3258 (_122 ?x69 var1 var2 time)))
 (=> (and $x3258 $x70) (_123 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3262)))))
 )
(assert
 (forall ((time Int) )(let (($x3274 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3258 (_122 ?x69 var1 var2 time)))
 (let (($x3043 (and $x3258 $x81)))
 (=> $x3043 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3274)))))
 )
(assert
 (forall ((time Int) )(let (($x3288 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3284 (_123 ?x69 var1 var2 time)))
 (=> (and $x3284 $x70) (_124 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3288)))))
 )
(assert
 (forall ((time Int) )(let (($x3300 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3284 (_123 ?x69 var1 var2 time)))
 (let (($x3069 (and $x3284 $x81)))
 (=> $x3069 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3300)))))
 )
(assert
 (forall ((time Int) )(let (($x3314 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3310 (_124 ?x69 var1 var2 time)))
 (=> (and $x3310 $x70) (_125 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3314)))))
 )
(assert
 (forall ((time Int) )(let (($x3326 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3310 (_124 ?x69 var1 var2 time)))
 (let (($x3095 (and $x3310 $x81)))
 (=> $x3095 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3326)))))
 )
(assert
 (forall ((time Int) )(let (($x3340 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3336 (_125 ?x69 var1 var2 time)))
 (=> (and $x3336 $x70) (_126 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3340)))))
 )
(assert
 (forall ((time Int) )(let (($x3352 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3336 (_125 ?x69 var1 var2 time)))
 (let (($x3121 (and $x3336 $x81)))
 (=> $x3121 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3352)))))
 )
(assert
 (forall ((time Int) )(let (($x3366 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3362 (_126 ?x69 var1 var2 time)))
 (=> (and $x3362 $x70) (_127 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3366)))))
 )
(assert
 (forall ((time Int) )(let (($x3378 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3362 (_126 ?x69 var1 var2 time)))
 (let (($x3147 (and $x3362 $x81)))
 (=> $x3147 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3378)))))
 )
(assert
 (forall ((time Int) )(let (($x3392 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3388 (_127 ?x69 var1 var2 time)))
 (=> (and $x3388 $x70) (_128 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3392)))))
 )
(assert
 (forall ((time Int) )(let (($x3404 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3388 (_127 ?x69 var1 var2 time)))
 (let (($x3173 (and $x3388 $x81)))
 (=> $x3173 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3404)))))
 )
(assert
 (forall ((time Int) )(let (($x3418 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3414 (_128 ?x69 var1 var2 time)))
 (=> (and $x3414 $x70) (_129 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3418)))))
 )
(assert
 (forall ((time Int) )(let (($x3430 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3414 (_128 ?x69 var1 var2 time)))
 (let (($x3199 (and $x3414 $x81)))
 (=> $x3199 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3430)))))
 )
(assert
 (forall ((time Int) )(let (($x3444 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3440 (_129 ?x69 var1 var2 time)))
 (=> (and $x3440 $x70) (_130 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3444)))))
 )
(assert
 (forall ((time Int) )(let (($x3456 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3440 (_129 ?x69 var1 var2 time)))
 (let (($x3225 (and $x3440 $x81)))
 (=> $x3225 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3456)))))
 )
(assert
 (forall ((time Int) )(let (($x3470 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3466 (_130 ?x69 var1 var2 time)))
 (=> (and $x3466 $x70) (_131 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3470)))))
 )
(assert
 (forall ((time Int) )(let (($x3482 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3466 (_130 ?x69 var1 var2 time)))
 (let (($x3251 (and $x3466 $x81)))
 (=> $x3251 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3482)))))
 )
(assert
 (forall ((time Int) )(let (($x3496 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3492 (_131 ?x69 var1 var2 time)))
 (=> (and $x3492 $x70) (_132 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3496)))))
 )
(assert
 (forall ((time Int) )(let (($x3508 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3492 (_131 ?x69 var1 var2 time)))
 (let (($x3277 (and $x3492 $x81)))
 (=> $x3277 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3508)))))
 )
(assert
 (forall ((time Int) )(let (($x3522 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3518 (_132 ?x69 var1 var2 time)))
 (=> (and $x3518 $x70) (_133 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3522)))))
 )
(assert
 (forall ((time Int) )(let (($x3534 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3518 (_132 ?x69 var1 var2 time)))
 (let (($x3303 (and $x3518 $x81)))
 (=> $x3303 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3534)))))
 )
(assert
 (forall ((time Int) )(let (($x3548 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3544 (_133 ?x69 var1 var2 time)))
 (=> (and $x3544 $x70) (_134 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3548)))))
 )
(assert
 (forall ((time Int) )(let (($x3560 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3544 (_133 ?x69 var1 var2 time)))
 (let (($x3329 (and $x3544 $x81)))
 (=> $x3329 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3560)))))
 )
(assert
 (forall ((time Int) )(let (($x3574 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3570 (_134 ?x69 var1 var2 time)))
 (=> (and $x3570 $x70) (_135 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3574)))))
 )
(assert
 (forall ((time Int) )(let (($x3586 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3570 (_134 ?x69 var1 var2 time)))
 (let (($x3355 (and $x3570 $x81)))
 (=> $x3355 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3586)))))
 )
(assert
 (forall ((time Int) )(let (($x3600 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3596 (_135 ?x69 var1 var2 time)))
 (=> (and $x3596 $x70) (_136 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3600)))))
 )
(assert
 (forall ((time Int) )(let (($x3612 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3596 (_135 ?x69 var1 var2 time)))
 (let (($x3381 (and $x3596 $x81)))
 (=> $x3381 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3612)))))
 )
(assert
 (forall ((time Int) )(let (($x3626 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3622 (_136 ?x69 var1 var2 time)))
 (=> (and $x3622 $x70) (_137 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3626)))))
 )
(assert
 (forall ((time Int) )(let (($x3638 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3622 (_136 ?x69 var1 var2 time)))
 (let (($x3407 (and $x3622 $x81)))
 (=> $x3407 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3638)))))
 )
(assert
 (forall ((time Int) )(let (($x3652 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3648 (_137 ?x69 var1 var2 time)))
 (=> (and $x3648 $x70) (_138 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3652)))))
 )
(assert
 (forall ((time Int) )(let (($x3664 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3648 (_137 ?x69 var1 var2 time)))
 (let (($x3433 (and $x3648 $x81)))
 (=> $x3433 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3664)))))
 )
(assert
 (forall ((time Int) )(let (($x3678 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3674 (_138 ?x69 var1 var2 time)))
 (=> (and $x3674 $x70) (_139 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3678)))))
 )
(assert
 (forall ((time Int) )(let (($x3690 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3674 (_138 ?x69 var1 var2 time)))
 (let (($x3459 (and $x3674 $x81)))
 (=> $x3459 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3690)))))
 )
(assert
 (forall ((time Int) )(let (($x3704 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3700 (_139 ?x69 var1 var2 time)))
 (=> (and $x3700 $x70) (_140 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3704)))))
 )
(assert
 (forall ((time Int) )(let (($x3716 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3700 (_139 ?x69 var1 var2 time)))
 (let (($x3485 (and $x3700 $x81)))
 (=> $x3485 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3716)))))
 )
(assert
 (forall ((time Int) )(let (($x3730 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3726 (_140 ?x69 var1 var2 time)))
 (=> (and $x3726 $x70) (_141 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3730)))))
 )
(assert
 (forall ((time Int) )(let (($x3742 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3726 (_140 ?x69 var1 var2 time)))
 (let (($x3511 (and $x3726 $x81)))
 (=> $x3511 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3742)))))
 )
(assert
 (forall ((time Int) )(let (($x3756 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3752 (_141 ?x69 var1 var2 time)))
 (=> (and $x3752 $x70) (_142 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3756)))))
 )
(assert
 (forall ((time Int) )(let (($x3768 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3752 (_141 ?x69 var1 var2 time)))
 (let (($x3537 (and $x3752 $x81)))
 (=> $x3537 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3768)))))
 )
(assert
 (forall ((time Int) )(let (($x3782 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3778 (_142 ?x69 var1 var2 time)))
 (=> (and $x3778 $x70) (_143 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3782)))))
 )
(assert
 (forall ((time Int) )(let (($x3794 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3778 (_142 ?x69 var1 var2 time)))
 (let (($x3563 (and $x3778 $x81)))
 (=> $x3563 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3794)))))
 )
(assert
 (forall ((time Int) )(let (($x3808 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3804 (_143 ?x69 var1 var2 time)))
 (=> (and $x3804 $x70) (_144 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3808)))))
 )
(assert
 (forall ((time Int) )(let (($x3820 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3804 (_143 ?x69 var1 var2 time)))
 (let (($x3589 (and $x3804 $x81)))
 (=> $x3589 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3820)))))
 )
(assert
 (forall ((time Int) )(let (($x3834 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3830 (_144 ?x69 var1 var2 time)))
 (=> (and $x3830 $x70) (_145 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3834)))))
 )
(assert
 (forall ((time Int) )(let (($x3846 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3830 (_144 ?x69 var1 var2 time)))
 (let (($x3615 (and $x3830 $x81)))
 (=> $x3615 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3846)))))
 )
(assert
 (forall ((time Int) )(let (($x3860 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3856 (_145 ?x69 var1 var2 time)))
 (=> (and $x3856 $x70) (_146 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3860)))))
 )
(assert
 (forall ((time Int) )(let (($x3872 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3856 (_145 ?x69 var1 var2 time)))
 (let (($x3641 (and $x3856 $x81)))
 (=> $x3641 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3872)))))
 )
(assert
 (forall ((time Int) )(let (($x3886 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3882 (_146 ?x69 var1 var2 time)))
 (=> (and $x3882 $x70) (_147 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3886)))))
 )
(assert
 (forall ((time Int) )(let (($x3898 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3882 (_146 ?x69 var1 var2 time)))
 (let (($x3667 (and $x3882 $x81)))
 (=> $x3667 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3898)))))
 )
(assert
 (forall ((time Int) )(let (($x3912 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3908 (_147 ?x69 var1 var2 time)))
 (=> (and $x3908 $x70) (_148 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3912)))))
 )
(assert
 (forall ((time Int) )(let (($x3924 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3908 (_147 ?x69 var1 var2 time)))
 (let (($x3693 (and $x3908 $x81)))
 (=> $x3693 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3924)))))
 )
(assert
 (forall ((time Int) )(let (($x3938 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3934 (_148 ?x69 var1 var2 time)))
 (=> (and $x3934 $x70) (_149 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3938)))))
 )
(assert
 (forall ((time Int) )(let (($x3950 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3934 (_148 ?x69 var1 var2 time)))
 (let (($x3719 (and $x3934 $x81)))
 (=> $x3719 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3950)))))
 )
(assert
 (forall ((time Int) )(let (($x3964 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3960 (_149 ?x69 var1 var2 time)))
 (=> (and $x3960 $x70) (_150 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3964)))))
 )
(assert
 (forall ((time Int) )(let (($x3976 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3960 (_149 ?x69 var1 var2 time)))
 (let (($x3745 (and $x3960 $x81)))
 (=> $x3745 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3976)))))
 )
(assert
 (forall ((time Int) )(let (($x3990 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x3986 (_150 ?x69 var1 var2 time)))
 (=> (and $x3986 $x70) (_151 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x3990)))))
 )
(assert
 (forall ((time Int) )(let (($x4002 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x3986 (_150 ?x69 var1 var2 time)))
 (let (($x3771 (and $x3986 $x81)))
 (=> $x3771 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4002)))))
 )
(assert
 (forall ((time Int) )(let (($x4016 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4012 (_151 ?x69 var1 var2 time)))
 (=> (and $x4012 $x70) (_152 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4016)))))
 )
(assert
 (forall ((time Int) )(let (($x4028 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4012 (_151 ?x69 var1 var2 time)))
 (let (($x3797 (and $x4012 $x81)))
 (=> $x3797 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4028)))))
 )
(assert
 (forall ((time Int) )(let (($x4042 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4038 (_152 ?x69 var1 var2 time)))
 (=> (and $x4038 $x70) (_153 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4042)))))
 )
(assert
 (forall ((time Int) )(let (($x4054 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4038 (_152 ?x69 var1 var2 time)))
 (let (($x3823 (and $x4038 $x81)))
 (=> $x3823 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4054)))))
 )
(assert
 (forall ((time Int) )(let (($x4068 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4064 (_153 ?x69 var1 var2 time)))
 (=> (and $x4064 $x70) (_154 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4068)))))
 )
(assert
 (forall ((time Int) )(let (($x4080 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4064 (_153 ?x69 var1 var2 time)))
 (let (($x3849 (and $x4064 $x81)))
 (=> $x3849 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4080)))))
 )
(assert
 (forall ((time Int) )(let (($x4094 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4090 (_154 ?x69 var1 var2 time)))
 (=> (and $x4090 $x70) (_155 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4094)))))
 )
(assert
 (forall ((time Int) )(let (($x4106 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4090 (_154 ?x69 var1 var2 time)))
 (let (($x3875 (and $x4090 $x81)))
 (=> $x3875 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4106)))))
 )
(assert
 (forall ((time Int) )(let (($x4120 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4116 (_155 ?x69 var1 var2 time)))
 (=> (and $x4116 $x70) (_156 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4120)))))
 )
(assert
 (forall ((time Int) )(let (($x4132 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4116 (_155 ?x69 var1 var2 time)))
 (let (($x3901 (and $x4116 $x81)))
 (=> $x3901 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4132)))))
 )
(assert
 (forall ((time Int) )(let (($x4146 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4142 (_156 ?x69 var1 var2 time)))
 (=> (and $x4142 $x70) (_157 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4146)))))
 )
(assert
 (forall ((time Int) )(let (($x4158 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4142 (_156 ?x69 var1 var2 time)))
 (let (($x3927 (and $x4142 $x81)))
 (=> $x3927 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4158)))))
 )
(assert
 (forall ((time Int) )(let (($x4172 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4168 (_157 ?x69 var1 var2 time)))
 (=> (and $x4168 $x70) (_158 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4172)))))
 )
(assert
 (forall ((time Int) )(let (($x4184 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4168 (_157 ?x69 var1 var2 time)))
 (let (($x3953 (and $x4168 $x81)))
 (=> $x3953 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4184)))))
 )
(assert
 (forall ((time Int) )(let (($x4198 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4194 (_158 ?x69 var1 var2 time)))
 (=> (and $x4194 $x70) (_159 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4198)))))
 )
(assert
 (forall ((time Int) )(let (($x4210 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4194 (_158 ?x69 var1 var2 time)))
 (let (($x3979 (and $x4194 $x81)))
 (=> $x3979 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4210)))))
 )
(assert
 (forall ((time Int) )(let (($x4224 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4220 (_159 ?x69 var1 var2 time)))
 (=> (and $x4220 $x70) (_160 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4224)))))
 )
(assert
 (forall ((time Int) )(let (($x4236 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4220 (_159 ?x69 var1 var2 time)))
 (let (($x4005 (and $x4220 $x81)))
 (=> $x4005 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4236)))))
 )
(assert
 (forall ((time Int) )(let (($x4250 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4246 (_160 ?x69 var1 var2 time)))
 (=> (and $x4246 $x70) (_161 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4250)))))
 )
(assert
 (forall ((time Int) )(let (($x4262 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4246 (_160 ?x69 var1 var2 time)))
 (let (($x4031 (and $x4246 $x81)))
 (=> $x4031 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4262)))))
 )
(assert
 (forall ((time Int) )(let (($x4276 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4272 (_161 ?x69 var1 var2 time)))
 (=> (and $x4272 $x70) (_162 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4276)))))
 )
(assert
 (forall ((time Int) )(let (($x4288 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4272 (_161 ?x69 var1 var2 time)))
 (let (($x4057 (and $x4272 $x81)))
 (=> $x4057 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4288)))))
 )
(assert
 (forall ((time Int) )(let (($x4302 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4298 (_162 ?x69 var1 var2 time)))
 (=> (and $x4298 $x70) (_163 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4302)))))
 )
(assert
 (forall ((time Int) )(let (($x4314 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4298 (_162 ?x69 var1 var2 time)))
 (let (($x4083 (and $x4298 $x81)))
 (=> $x4083 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4314)))))
 )
(assert
 (forall ((time Int) )(let (($x4328 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4324 (_163 ?x69 var1 var2 time)))
 (=> (and $x4324 $x70) (_164 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4328)))))
 )
(assert
 (forall ((time Int) )(let (($x4340 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4324 (_163 ?x69 var1 var2 time)))
 (let (($x4109 (and $x4324 $x81)))
 (=> $x4109 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4340)))))
 )
(assert
 (forall ((time Int) )(let (($x4354 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4350 (_164 ?x69 var1 var2 time)))
 (=> (and $x4350 $x70) (_165 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4354)))))
 )
(assert
 (forall ((time Int) )(let (($x4366 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4350 (_164 ?x69 var1 var2 time)))
 (let (($x4135 (and $x4350 $x81)))
 (=> $x4135 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4366)))))
 )
(assert
 (forall ((time Int) )(let (($x4380 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4376 (_165 ?x69 var1 var2 time)))
 (=> (and $x4376 $x70) (_166 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4380)))))
 )
(assert
 (forall ((time Int) )(let (($x4392 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4376 (_165 ?x69 var1 var2 time)))
 (let (($x4161 (and $x4376 $x81)))
 (=> $x4161 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4392)))))
 )
(assert
 (forall ((time Int) )(let (($x4406 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4402 (_166 ?x69 var1 var2 time)))
 (=> (and $x4402 $x70) (_167 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4406)))))
 )
(assert
 (forall ((time Int) )(let (($x4418 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4402 (_166 ?x69 var1 var2 time)))
 (let (($x4187 (and $x4402 $x81)))
 (=> $x4187 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4418)))))
 )
(assert
 (forall ((time Int) )(let (($x4432 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4428 (_167 ?x69 var1 var2 time)))
 (=> (and $x4428 $x70) (_168 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4432)))))
 )
(assert
 (forall ((time Int) )(let (($x4444 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4428 (_167 ?x69 var1 var2 time)))
 (let (($x4213 (and $x4428 $x81)))
 (=> $x4213 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4444)))))
 )
(assert
 (forall ((time Int) )(let (($x4458 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4454 (_168 ?x69 var1 var2 time)))
 (=> (and $x4454 $x70) (_169 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4458)))))
 )
(assert
 (forall ((time Int) )(let (($x4470 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4454 (_168 ?x69 var1 var2 time)))
 (let (($x4239 (and $x4454 $x81)))
 (=> $x4239 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4470)))))
 )
(assert
 (forall ((time Int) )(let (($x4484 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4480 (_169 ?x69 var1 var2 time)))
 (=> (and $x4480 $x70) (_170 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4484)))))
 )
(assert
 (forall ((time Int) )(let (($x4496 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4480 (_169 ?x69 var1 var2 time)))
 (let (($x4265 (and $x4480 $x81)))
 (=> $x4265 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4496)))))
 )
(assert
 (forall ((time Int) )(let (($x4510 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4506 (_170 ?x69 var1 var2 time)))
 (=> (and $x4506 $x70) (_171 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4510)))))
 )
(assert
 (forall ((time Int) )(let (($x4522 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4506 (_170 ?x69 var1 var2 time)))
 (let (($x4291 (and $x4506 $x81)))
 (=> $x4291 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4522)))))
 )
(assert
 (forall ((time Int) )(let (($x4536 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4532 (_171 ?x69 var1 var2 time)))
 (=> (and $x4532 $x70) (_172 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4536)))))
 )
(assert
 (forall ((time Int) )(let (($x4548 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4532 (_171 ?x69 var1 var2 time)))
 (let (($x4317 (and $x4532 $x81)))
 (=> $x4317 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4548)))))
 )
(assert
 (forall ((time Int) )(let (($x4562 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4558 (_172 ?x69 var1 var2 time)))
 (=> (and $x4558 $x70) (_173 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4562)))))
 )
(assert
 (forall ((time Int) )(let (($x4574 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4558 (_172 ?x69 var1 var2 time)))
 (let (($x4343 (and $x4558 $x81)))
 (=> $x4343 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4574)))))
 )
(assert
 (forall ((time Int) )(let (($x4588 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4584 (_173 ?x69 var1 var2 time)))
 (=> (and $x4584 $x70) (_174 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4588)))))
 )
(assert
 (forall ((time Int) )(let (($x4600 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4584 (_173 ?x69 var1 var2 time)))
 (let (($x4369 (and $x4584 $x81)))
 (=> $x4369 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4600)))))
 )
(assert
 (forall ((time Int) )(let (($x4614 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4610 (_174 ?x69 var1 var2 time)))
 (=> (and $x4610 $x70) (_175 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4614)))))
 )
(assert
 (forall ((time Int) )(let (($x4626 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4610 (_174 ?x69 var1 var2 time)))
 (let (($x4395 (and $x4610 $x81)))
 (=> $x4395 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4626)))))
 )
(assert
 (forall ((time Int) )(let (($x4640 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4636 (_175 ?x69 var1 var2 time)))
 (=> (and $x4636 $x70) (_176 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4640)))))
 )
(assert
 (forall ((time Int) )(let (($x4652 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4636 (_175 ?x69 var1 var2 time)))
 (let (($x4421 (and $x4636 $x81)))
 (=> $x4421 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4652)))))
 )
(assert
 (forall ((time Int) )(let (($x4666 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4662 (_176 ?x69 var1 var2 time)))
 (=> (and $x4662 $x70) (_177 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4666)))))
 )
(assert
 (forall ((time Int) )(let (($x4678 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4662 (_176 ?x69 var1 var2 time)))
 (let (($x4447 (and $x4662 $x81)))
 (=> $x4447 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4678)))))
 )
(assert
 (forall ((time Int) )(let (($x4692 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4688 (_177 ?x69 var1 var2 time)))
 (=> (and $x4688 $x70) (_178 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4692)))))
 )
(assert
 (forall ((time Int) )(let (($x4704 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4688 (_177 ?x69 var1 var2 time)))
 (let (($x4473 (and $x4688 $x81)))
 (=> $x4473 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4704)))))
 )
(assert
 (forall ((time Int) )(let (($x4718 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4714 (_178 ?x69 var1 var2 time)))
 (=> (and $x4714 $x70) (_179 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4718)))))
 )
(assert
 (forall ((time Int) )(let (($x4730 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4714 (_178 ?x69 var1 var2 time)))
 (let (($x4499 (and $x4714 $x81)))
 (=> $x4499 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4730)))))
 )
(assert
 (forall ((time Int) )(let (($x4744 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4740 (_179 ?x69 var1 var2 time)))
 (=> (and $x4740 $x70) (_180 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4744)))))
 )
(assert
 (forall ((time Int) )(let (($x4756 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4740 (_179 ?x69 var1 var2 time)))
 (let (($x4525 (and $x4740 $x81)))
 (=> $x4525 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4756)))))
 )
(assert
 (forall ((time Int) )(let (($x4770 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4766 (_180 ?x69 var1 var2 time)))
 (=> (and $x4766 $x70) (_181 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4770)))))
 )
(assert
 (forall ((time Int) )(let (($x4782 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4766 (_180 ?x69 var1 var2 time)))
 (let (($x4551 (and $x4766 $x81)))
 (=> $x4551 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4782)))))
 )
(assert
 (forall ((time Int) )(let (($x4796 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4792 (_181 ?x69 var1 var2 time)))
 (=> (and $x4792 $x70) (_182 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4796)))))
 )
(assert
 (forall ((time Int) )(let (($x4808 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4792 (_181 ?x69 var1 var2 time)))
 (let (($x4577 (and $x4792 $x81)))
 (=> $x4577 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4808)))))
 )
(assert
 (forall ((time Int) )(let (($x4822 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4818 (_182 ?x69 var1 var2 time)))
 (=> (and $x4818 $x70) (_183 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4822)))))
 )
(assert
 (forall ((time Int) )(let (($x4834 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4818 (_182 ?x69 var1 var2 time)))
 (let (($x4603 (and $x4818 $x81)))
 (=> $x4603 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4834)))))
 )
(assert
 (forall ((time Int) )(let (($x4848 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4844 (_183 ?x69 var1 var2 time)))
 (=> (and $x4844 $x70) (_184 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4848)))))
 )
(assert
 (forall ((time Int) )(let (($x4860 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4844 (_183 ?x69 var1 var2 time)))
 (let (($x4629 (and $x4844 $x81)))
 (=> $x4629 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4860)))))
 )
(assert
 (forall ((time Int) )(let (($x4874 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4870 (_184 ?x69 var1 var2 time)))
 (=> (and $x4870 $x70) (_185 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4874)))))
 )
(assert
 (forall ((time Int) )(let (($x4886 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4870 (_184 ?x69 var1 var2 time)))
 (let (($x4655 (and $x4870 $x81)))
 (=> $x4655 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4886)))))
 )
(assert
 (forall ((time Int) )(let (($x4900 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4896 (_185 ?x69 var1 var2 time)))
 (=> (and $x4896 $x70) (_186 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4900)))))
 )
(assert
 (forall ((time Int) )(let (($x4912 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4896 (_185 ?x69 var1 var2 time)))
 (let (($x4681 (and $x4896 $x81)))
 (=> $x4681 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4912)))))
 )
(assert
 (forall ((time Int) )(let (($x4926 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4922 (_186 ?x69 var1 var2 time)))
 (=> (and $x4922 $x70) (_187 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4926)))))
 )
(assert
 (forall ((time Int) )(let (($x4938 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4922 (_186 ?x69 var1 var2 time)))
 (let (($x4707 (and $x4922 $x81)))
 (=> $x4707 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4938)))))
 )
(assert
 (forall ((time Int) )(let (($x4952 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4948 (_187 ?x69 var1 var2 time)))
 (=> (and $x4948 $x70) (_188 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4952)))))
 )
(assert
 (forall ((time Int) )(let (($x4964 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4948 (_187 ?x69 var1 var2 time)))
 (let (($x4733 (and $x4948 $x81)))
 (=> $x4733 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4964)))))
 )
(assert
 (forall ((time Int) )(let (($x4978 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x4974 (_188 ?x69 var1 var2 time)))
 (=> (and $x4974 $x70) (_189 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4978)))))
 )
(assert
 (forall ((time Int) )(let (($x4990 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x4974 (_188 ?x69 var1 var2 time)))
 (let (($x4759 (and $x4974 $x81)))
 (=> $x4759 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x4990)))))
 )
(assert
 (forall ((time Int) )(let (($x5004 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5000 (_189 ?x69 var1 var2 time)))
 (=> (and $x5000 $x70) (_190 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5004)))))
 )
(assert
 (forall ((time Int) )(let (($x5016 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5000 (_189 ?x69 var1 var2 time)))
 (let (($x4785 (and $x5000 $x81)))
 (=> $x4785 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5016)))))
 )
(assert
 (forall ((time Int) )(let (($x5030 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5026 (_190 ?x69 var1 var2 time)))
 (=> (and $x5026 $x70) (_191 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5030)))))
 )
(assert
 (forall ((time Int) )(let (($x5042 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5026 (_190 ?x69 var1 var2 time)))
 (let (($x4811 (and $x5026 $x81)))
 (=> $x4811 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5042)))))
 )
(assert
 (forall ((time Int) )(let (($x5056 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5052 (_191 ?x69 var1 var2 time)))
 (=> (and $x5052 $x70) (_192 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5056)))))
 )
(assert
 (forall ((time Int) )(let (($x5068 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5052 (_191 ?x69 var1 var2 time)))
 (let (($x4837 (and $x5052 $x81)))
 (=> $x4837 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5068)))))
 )
(assert
 (forall ((time Int) )(let (($x5082 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5078 (_192 ?x69 var1 var2 time)))
 (=> (and $x5078 $x70) (_193 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5082)))))
 )
(assert
 (forall ((time Int) )(let (($x5094 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5078 (_192 ?x69 var1 var2 time)))
 (let (($x4863 (and $x5078 $x81)))
 (=> $x4863 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5094)))))
 )
(assert
 (forall ((time Int) )(let (($x5108 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5104 (_193 ?x69 var1 var2 time)))
 (=> (and $x5104 $x70) (_194 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5108)))))
 )
(assert
 (forall ((time Int) )(let (($x5120 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5104 (_193 ?x69 var1 var2 time)))
 (let (($x4889 (and $x5104 $x81)))
 (=> $x4889 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5120)))))
 )
(assert
 (forall ((time Int) )(let (($x5134 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5130 (_194 ?x69 var1 var2 time)))
 (=> (and $x5130 $x70) (_195 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5134)))))
 )
(assert
 (forall ((time Int) )(let (($x5146 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5130 (_194 ?x69 var1 var2 time)))
 (let (($x4915 (and $x5130 $x81)))
 (=> $x4915 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5146)))))
 )
(assert
 (forall ((time Int) )(let (($x5160 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5156 (_195 ?x69 var1 var2 time)))
 (=> (and $x5156 $x70) (_196 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5160)))))
 )
(assert
 (forall ((time Int) )(let (($x5172 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5156 (_195 ?x69 var1 var2 time)))
 (let (($x4941 (and $x5156 $x81)))
 (=> $x4941 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5172)))))
 )
(assert
 (forall ((time Int) )(let (($x5186 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5182 (_196 ?x69 var1 var2 time)))
 (=> (and $x5182 $x70) (_197 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5186)))))
 )
(assert
 (forall ((time Int) )(let (($x5198 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5182 (_196 ?x69 var1 var2 time)))
 (let (($x4967 (and $x5182 $x81)))
 (=> $x4967 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5198)))))
 )
(assert
 (forall ((time Int) )(let (($x5212 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5208 (_197 ?x69 var1 var2 time)))
 (=> (and $x5208 $x70) (_198 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5212)))))
 )
(assert
 (forall ((time Int) )(let (($x5224 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5208 (_197 ?x69 var1 var2 time)))
 (let (($x4993 (and $x5208 $x81)))
 (=> $x4993 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5224)))))
 )
(assert
 (forall ((time Int) )(let (($x5238 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5234 (_198 ?x69 var1 var2 time)))
 (=> (and $x5234 $x70) (_199 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5238)))))
 )
(assert
 (forall ((time Int) )(let (($x5250 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5234 (_198 ?x69 var1 var2 time)))
 (let (($x5019 (and $x5234 $x81)))
 (=> $x5019 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5250)))))
 )
(assert
 (forall ((time Int) )(let (($x5264 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5260 (_199 ?x69 var1 var2 time)))
 (=> (and $x5260 $x70) (_200 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5264)))))
 )
(assert
 (forall ((time Int) )(let (($x5276 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5260 (_199 ?x69 var1 var2 time)))
 (let (($x5045 (and $x5260 $x81)))
 (=> $x5045 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5276)))))
 )
(assert
 (forall ((time Int) )(let (($x5290 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5286 (_200 ?x69 var1 var2 time)))
 (=> (and $x5286 $x70) (_201 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5290)))))
 )
(assert
 (forall ((time Int) )(let (($x5302 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5286 (_200 ?x69 var1 var2 time)))
 (let (($x5071 (and $x5286 $x81)))
 (=> $x5071 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5302)))))
 )
(assert
 (forall ((time Int) )(let (($x5316 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5312 (_201 ?x69 var1 var2 time)))
 (=> (and $x5312 $x70) (_202 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5316)))))
 )
(assert
 (forall ((time Int) )(let (($x5328 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5312 (_201 ?x69 var1 var2 time)))
 (let (($x5097 (and $x5312 $x81)))
 (=> $x5097 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5328)))))
 )
(assert
 (forall ((time Int) )(let (($x5342 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5338 (_202 ?x69 var1 var2 time)))
 (=> (and $x5338 $x70) (_203 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5342)))))
 )
(assert
 (forall ((time Int) )(let (($x5354 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5338 (_202 ?x69 var1 var2 time)))
 (let (($x5123 (and $x5338 $x81)))
 (=> $x5123 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5354)))))
 )
(assert
 (forall ((time Int) )(let (($x5368 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5364 (_203 ?x69 var1 var2 time)))
 (=> (and $x5364 $x70) (_204 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5368)))))
 )
(assert
 (forall ((time Int) )(let (($x5380 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5364 (_203 ?x69 var1 var2 time)))
 (let (($x5149 (and $x5364 $x81)))
 (=> $x5149 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5380)))))
 )
(assert
 (forall ((time Int) )(let (($x5394 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5390 (_204 ?x69 var1 var2 time)))
 (=> (and $x5390 $x70) (_205 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5394)))))
 )
(assert
 (forall ((time Int) )(let (($x5406 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5390 (_204 ?x69 var1 var2 time)))
 (let (($x5175 (and $x5390 $x81)))
 (=> $x5175 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5406)))))
 )
(assert
 (forall ((time Int) )(let (($x5420 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5416 (_205 ?x69 var1 var2 time)))
 (=> (and $x5416 $x70) (_206 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5420)))))
 )
(assert
 (forall ((time Int) )(let (($x5432 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5416 (_205 ?x69 var1 var2 time)))
 (let (($x5201 (and $x5416 $x81)))
 (=> $x5201 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5432)))))
 )
(assert
 (forall ((time Int) )(let (($x5446 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5442 (_206 ?x69 var1 var2 time)))
 (=> (and $x5442 $x70) (_207 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5446)))))
 )
(assert
 (forall ((time Int) )(let (($x5458 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5442 (_206 ?x69 var1 var2 time)))
 (let (($x5227 (and $x5442 $x81)))
 (=> $x5227 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5458)))))
 )
(assert
 (forall ((time Int) )(let (($x5472 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5468 (_207 ?x69 var1 var2 time)))
 (=> (and $x5468 $x70) (_208 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5472)))))
 )
(assert
 (forall ((time Int) )(let (($x5484 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5468 (_207 ?x69 var1 var2 time)))
 (let (($x5253 (and $x5468 $x81)))
 (=> $x5253 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5484)))))
 )
(assert
 (forall ((time Int) )(let (($x5498 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5494 (_208 ?x69 var1 var2 time)))
 (=> (and $x5494 $x70) (_209 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5498)))))
 )
(assert
 (forall ((time Int) )(let (($x5510 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5494 (_208 ?x69 var1 var2 time)))
 (let (($x5279 (and $x5494 $x81)))
 (=> $x5279 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5510)))))
 )
(assert
 (forall ((time Int) )(let (($x5524 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5520 (_209 ?x69 var1 var2 time)))
 (=> (and $x5520 $x70) (_210 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5524)))))
 )
(assert
 (forall ((time Int) )(let (($x5536 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5520 (_209 ?x69 var1 var2 time)))
 (let (($x5305 (and $x5520 $x81)))
 (=> $x5305 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5536)))))
 )
(assert
 (forall ((time Int) )(let (($x5550 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5546 (_210 ?x69 var1 var2 time)))
 (=> (and $x5546 $x70) (_211 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5550)))))
 )
(assert
 (forall ((time Int) )(let (($x5562 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5546 (_210 ?x69 var1 var2 time)))
 (let (($x5331 (and $x5546 $x81)))
 (=> $x5331 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5562)))))
 )
(assert
 (forall ((time Int) )(let (($x5576 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5572 (_211 ?x69 var1 var2 time)))
 (=> (and $x5572 $x70) (_212 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5576)))))
 )
(assert
 (forall ((time Int) )(let (($x5588 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5572 (_211 ?x69 var1 var2 time)))
 (let (($x5357 (and $x5572 $x81)))
 (=> $x5357 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5588)))))
 )
(assert
 (forall ((time Int) )(let (($x5602 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5598 (_212 ?x69 var1 var2 time)))
 (=> (and $x5598 $x70) (_213 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5602)))))
 )
(assert
 (forall ((time Int) )(let (($x5614 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5598 (_212 ?x69 var1 var2 time)))
 (let (($x5383 (and $x5598 $x81)))
 (=> $x5383 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5614)))))
 )
(assert
 (forall ((time Int) )(let (($x5628 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5624 (_213 ?x69 var1 var2 time)))
 (=> (and $x5624 $x70) (_214 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5628)))))
 )
(assert
 (forall ((time Int) )(let (($x5640 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5624 (_213 ?x69 var1 var2 time)))
 (let (($x5409 (and $x5624 $x81)))
 (=> $x5409 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5640)))))
 )
(assert
 (forall ((time Int) )(let (($x5654 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5650 (_214 ?x69 var1 var2 time)))
 (=> (and $x5650 $x70) (_215 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5654)))))
 )
(assert
 (forall ((time Int) )(let (($x5666 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5650 (_214 ?x69 var1 var2 time)))
 (let (($x5435 (and $x5650 $x81)))
 (=> $x5435 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5666)))))
 )
(assert
 (forall ((time Int) )(let (($x5680 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5676 (_215 ?x69 var1 var2 time)))
 (=> (and $x5676 $x70) (_216 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5680)))))
 )
(assert
 (forall ((time Int) )(let (($x5692 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5676 (_215 ?x69 var1 var2 time)))
 (let (($x5461 (and $x5676 $x81)))
 (=> $x5461 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5692)))))
 )
(assert
 (forall ((time Int) )(let (($x5706 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5702 (_216 ?x69 var1 var2 time)))
 (=> (and $x5702 $x70) (_217 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5706)))))
 )
(assert
 (forall ((time Int) )(let (($x5718 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5702 (_216 ?x69 var1 var2 time)))
 (let (($x5487 (and $x5702 $x81)))
 (=> $x5487 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5718)))))
 )
(assert
 (forall ((time Int) )(let (($x5732 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5728 (_217 ?x69 var1 var2 time)))
 (=> (and $x5728 $x70) (_218 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5732)))))
 )
(assert
 (forall ((time Int) )(let (($x5744 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5728 (_217 ?x69 var1 var2 time)))
 (let (($x5513 (and $x5728 $x81)))
 (=> $x5513 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5744)))))
 )
(assert
 (forall ((time Int) )(let (($x5758 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5754 (_218 ?x69 var1 var2 time)))
 (=> (and $x5754 $x70) (_219 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5758)))))
 )
(assert
 (forall ((time Int) )(let (($x5770 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5754 (_218 ?x69 var1 var2 time)))
 (let (($x5539 (and $x5754 $x81)))
 (=> $x5539 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5770)))))
 )
(assert
 (forall ((time Int) )(let (($x5784 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5780 (_219 ?x69 var1 var2 time)))
 (=> (and $x5780 $x70) (_220 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5784)))))
 )
(assert
 (forall ((time Int) )(let (($x5796 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5780 (_219 ?x69 var1 var2 time)))
 (let (($x5565 (and $x5780 $x81)))
 (=> $x5565 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5796)))))
 )
(assert
 (forall ((time Int) )(let (($x5810 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5806 (_220 ?x69 var1 var2 time)))
 (=> (and $x5806 $x70) (_221 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5810)))))
 )
(assert
 (forall ((time Int) )(let (($x5822 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5806 (_220 ?x69 var1 var2 time)))
 (let (($x5591 (and $x5806 $x81)))
 (=> $x5591 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5822)))))
 )
(assert
 (forall ((time Int) )(let (($x5836 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5832 (_221 ?x69 var1 var2 time)))
 (=> (and $x5832 $x70) (_222 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5836)))))
 )
(assert
 (forall ((time Int) )(let (($x5848 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5832 (_221 ?x69 var1 var2 time)))
 (let (($x5617 (and $x5832 $x81)))
 (=> $x5617 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5848)))))
 )
(assert
 (forall ((time Int) )(let (($x5862 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5858 (_222 ?x69 var1 var2 time)))
 (=> (and $x5858 $x70) (_223 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5862)))))
 )
(assert
 (forall ((time Int) )(let (($x5874 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5858 (_222 ?x69 var1 var2 time)))
 (let (($x5643 (and $x5858 $x81)))
 (=> $x5643 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5874)))))
 )
(assert
 (forall ((time Int) )(let (($x5888 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5884 (_223 ?x69 var1 var2 time)))
 (=> (and $x5884 $x70) (_224 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5888)))))
 )
(assert
 (forall ((time Int) )(let (($x5900 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5884 (_223 ?x69 var1 var2 time)))
 (let (($x5669 (and $x5884 $x81)))
 (=> $x5669 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5900)))))
 )
(assert
 (forall ((time Int) )(let (($x5914 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5910 (_224 ?x69 var1 var2 time)))
 (=> (and $x5910 $x70) (_225 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5914)))))
 )
(assert
 (forall ((time Int) )(let (($x5926 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5910 (_224 ?x69 var1 var2 time)))
 (let (($x5695 (and $x5910 $x81)))
 (=> $x5695 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5926)))))
 )
(assert
 (forall ((time Int) )(let (($x5940 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5936 (_225 ?x69 var1 var2 time)))
 (=> (and $x5936 $x70) (_226 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5940)))))
 )
(assert
 (forall ((time Int) )(let (($x5952 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5936 (_225 ?x69 var1 var2 time)))
 (let (($x5721 (and $x5936 $x81)))
 (=> $x5721 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5952)))))
 )
(assert
 (forall ((time Int) )(let (($x5966 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5962 (_226 ?x69 var1 var2 time)))
 (=> (and $x5962 $x70) (_227 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5966)))))
 )
(assert
 (forall ((time Int) )(let (($x5978 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5962 (_226 ?x69 var1 var2 time)))
 (let (($x5747 (and $x5962 $x81)))
 (=> $x5747 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5978)))))
 )
(assert
 (forall ((time Int) )(let (($x5992 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x5988 (_227 ?x69 var1 var2 time)))
 (=> (and $x5988 $x70) (_228 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x5992)))))
 )
(assert
 (forall ((time Int) )(let (($x6004 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x5988 (_227 ?x69 var1 var2 time)))
 (let (($x5773 (and $x5988 $x81)))
 (=> $x5773 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6004)))))
 )
(assert
 (forall ((time Int) )(let (($x6018 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6014 (_228 ?x69 var1 var2 time)))
 (=> (and $x6014 $x70) (_229 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6018)))))
 )
(assert
 (forall ((time Int) )(let (($x6030 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6014 (_228 ?x69 var1 var2 time)))
 (let (($x5799 (and $x6014 $x81)))
 (=> $x5799 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6030)))))
 )
(assert
 (forall ((time Int) )(let (($x6044 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6040 (_229 ?x69 var1 var2 time)))
 (=> (and $x6040 $x70) (_230 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6044)))))
 )
(assert
 (forall ((time Int) )(let (($x6056 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6040 (_229 ?x69 var1 var2 time)))
 (let (($x5825 (and $x6040 $x81)))
 (=> $x5825 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6056)))))
 )
(assert
 (forall ((time Int) )(let (($x6070 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6066 (_230 ?x69 var1 var2 time)))
 (=> (and $x6066 $x70) (_231 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6070)))))
 )
(assert
 (forall ((time Int) )(let (($x6082 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6066 (_230 ?x69 var1 var2 time)))
 (let (($x5851 (and $x6066 $x81)))
 (=> $x5851 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6082)))))
 )
(assert
 (forall ((time Int) )(let (($x6096 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6092 (_231 ?x69 var1 var2 time)))
 (=> (and $x6092 $x70) (_232 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6096)))))
 )
(assert
 (forall ((time Int) )(let (($x6108 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6092 (_231 ?x69 var1 var2 time)))
 (let (($x5877 (and $x6092 $x81)))
 (=> $x5877 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6108)))))
 )
(assert
 (forall ((time Int) )(let (($x6122 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6118 (_232 ?x69 var1 var2 time)))
 (=> (and $x6118 $x70) (_233 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6122)))))
 )
(assert
 (forall ((time Int) )(let (($x6134 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6118 (_232 ?x69 var1 var2 time)))
 (let (($x5903 (and $x6118 $x81)))
 (=> $x5903 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6134)))))
 )
(assert
 (forall ((time Int) )(let (($x6148 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6144 (_233 ?x69 var1 var2 time)))
 (=> (and $x6144 $x70) (_234 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6148)))))
 )
(assert
 (forall ((time Int) )(let (($x6160 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6144 (_233 ?x69 var1 var2 time)))
 (let (($x5929 (and $x6144 $x81)))
 (=> $x5929 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6160)))))
 )
(assert
 (forall ((time Int) )(let (($x6174 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6170 (_234 ?x69 var1 var2 time)))
 (=> (and $x6170 $x70) (_235 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6174)))))
 )
(assert
 (forall ((time Int) )(let (($x6186 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6170 (_234 ?x69 var1 var2 time)))
 (let (($x5955 (and $x6170 $x81)))
 (=> $x5955 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6186)))))
 )
(assert
 (forall ((time Int) )(let (($x6200 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6196 (_235 ?x69 var1 var2 time)))
 (=> (and $x6196 $x70) (_236 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6200)))))
 )
(assert
 (forall ((time Int) )(let (($x6212 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6196 (_235 ?x69 var1 var2 time)))
 (let (($x5981 (and $x6196 $x81)))
 (=> $x5981 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6212)))))
 )
(assert
 (forall ((time Int) )(let (($x6226 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6222 (_236 ?x69 var1 var2 time)))
 (=> (and $x6222 $x70) (_237 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6226)))))
 )
(assert
 (forall ((time Int) )(let (($x6238 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6222 (_236 ?x69 var1 var2 time)))
 (let (($x6007 (and $x6222 $x81)))
 (=> $x6007 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6238)))))
 )
(assert
 (forall ((time Int) )(let (($x6252 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6248 (_237 ?x69 var1 var2 time)))
 (=> (and $x6248 $x70) (_238 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6252)))))
 )
(assert
 (forall ((time Int) )(let (($x6264 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6248 (_237 ?x69 var1 var2 time)))
 (let (($x6033 (and $x6248 $x81)))
 (=> $x6033 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6264)))))
 )
(assert
 (forall ((time Int) )(let (($x6278 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6274 (_238 ?x69 var1 var2 time)))
 (=> (and $x6274 $x70) (_239 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6278)))))
 )
(assert
 (forall ((time Int) )(let (($x6290 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6274 (_238 ?x69 var1 var2 time)))
 (let (($x6059 (and $x6274 $x81)))
 (=> $x6059 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6290)))))
 )
(assert
 (forall ((time Int) )(let (($x6304 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6300 (_239 ?x69 var1 var2 time)))
 (=> (and $x6300 $x70) (_240 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6304)))))
 )
(assert
 (forall ((time Int) )(let (($x6316 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6300 (_239 ?x69 var1 var2 time)))
 (let (($x6085 (and $x6300 $x81)))
 (=> $x6085 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6316)))))
 )
(assert
 (forall ((time Int) )(let (($x6330 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6326 (_240 ?x69 var1 var2 time)))
 (=> (and $x6326 $x70) (_241 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6330)))))
 )
(assert
 (forall ((time Int) )(let (($x6342 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6326 (_240 ?x69 var1 var2 time)))
 (let (($x6111 (and $x6326 $x81)))
 (=> $x6111 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6342)))))
 )
(assert
 (forall ((time Int) )(let (($x6356 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6352 (_241 ?x69 var1 var2 time)))
 (=> (and $x6352 $x70) (_242 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6356)))))
 )
(assert
 (forall ((time Int) )(let (($x6368 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6352 (_241 ?x69 var1 var2 time)))
 (let (($x6137 (and $x6352 $x81)))
 (=> $x6137 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6368)))))
 )
(assert
 (forall ((time Int) )(let (($x6382 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6378 (_242 ?x69 var1 var2 time)))
 (=> (and $x6378 $x70) (_243 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6382)))))
 )
(assert
 (forall ((time Int) )(let (($x6394 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6378 (_242 ?x69 var1 var2 time)))
 (let (($x6163 (and $x6378 $x81)))
 (=> $x6163 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6394)))))
 )
(assert
 (forall ((time Int) )(let (($x6408 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6404 (_243 ?x69 var1 var2 time)))
 (=> (and $x6404 $x70) (_244 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6408)))))
 )
(assert
 (forall ((time Int) )(let (($x6420 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6404 (_243 ?x69 var1 var2 time)))
 (let (($x6189 (and $x6404 $x81)))
 (=> $x6189 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6420)))))
 )
(assert
 (forall ((time Int) )(let (($x6434 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6430 (_244 ?x69 var1 var2 time)))
 (=> (and $x6430 $x70) (_245 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6434)))))
 )
(assert
 (forall ((time Int) )(let (($x6446 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6430 (_244 ?x69 var1 var2 time)))
 (let (($x6215 (and $x6430 $x81)))
 (=> $x6215 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6446)))))
 )
(assert
 (forall ((time Int) )(let (($x6460 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6456 (_245 ?x69 var1 var2 time)))
 (=> (and $x6456 $x70) (_246 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6460)))))
 )
(assert
 (forall ((time Int) )(let (($x6472 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6456 (_245 ?x69 var1 var2 time)))
 (let (($x6241 (and $x6456 $x81)))
 (=> $x6241 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6472)))))
 )
(assert
 (forall ((time Int) )(let (($x6486 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6482 (_246 ?x69 var1 var2 time)))
 (=> (and $x6482 $x70) (_247 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6486)))))
 )
(assert
 (forall ((time Int) )(let (($x6498 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6482 (_246 ?x69 var1 var2 time)))
 (let (($x6267 (and $x6482 $x81)))
 (=> $x6267 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6498)))))
 )
(assert
 (forall ((time Int) )(let (($x6512 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6508 (_247 ?x69 var1 var2 time)))
 (=> (and $x6508 $x70) (_248 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6512)))))
 )
(assert
 (forall ((time Int) )(let (($x6524 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6508 (_247 ?x69 var1 var2 time)))
 (let (($x6293 (and $x6508 $x81)))
 (=> $x6293 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6524)))))
 )
(assert
 (forall ((time Int) )(let (($x6538 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6534 (_248 ?x69 var1 var2 time)))
 (=> (and $x6534 $x70) (_249 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6538)))))
 )
(assert
 (forall ((time Int) )(let (($x6550 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6534 (_248 ?x69 var1 var2 time)))
 (let (($x6319 (and $x6534 $x81)))
 (=> $x6319 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6550)))))
 )
(assert
 (forall ((time Int) )(let (($x6564 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6560 (_249 ?x69 var1 var2 time)))
 (=> (and $x6560 $x70) (_250 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6564)))))
 )
(assert
 (forall ((time Int) )(let (($x6576 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6560 (_249 ?x69 var1 var2 time)))
 (let (($x6345 (and $x6560 $x81)))
 (=> $x6345 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6576)))))
 )
(assert
 (forall ((time Int) )(let (($x6590 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6586 (_250 ?x69 var1 var2 time)))
 (=> (and $x6586 $x70) (_251 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6590)))))
 )
(assert
 (forall ((time Int) )(let (($x6602 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6586 (_250 ?x69 var1 var2 time)))
 (let (($x6371 (and $x6586 $x81)))
 (=> $x6371 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6602)))))
 )
(assert
 (forall ((time Int) )(let (($x6616 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6612 (_251 ?x69 var1 var2 time)))
 (=> (and $x6612 $x70) (_252 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6616)))))
 )
(assert
 (forall ((time Int) )(let (($x6628 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6612 (_251 ?x69 var1 var2 time)))
 (let (($x6397 (and $x6612 $x81)))
 (=> $x6397 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6628)))))
 )
(assert
 (forall ((time Int) )(let (($x6642 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6638 (_252 ?x69 var1 var2 time)))
 (=> (and $x6638 $x70) (_253 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6642)))))
 )
(assert
 (forall ((time Int) )(let (($x6654 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6638 (_252 ?x69 var1 var2 time)))
 (let (($x6423 (and $x6638 $x81)))
 (=> $x6423 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6654)))))
 )
(assert
 (forall ((time Int) )(let (($x6668 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6664 (_253 ?x69 var1 var2 time)))
 (=> (and $x6664 $x70) (_254 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6668)))))
 )
(assert
 (forall ((time Int) )(let (($x6680 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6664 (_253 ?x69 var1 var2 time)))
 (let (($x6449 (and $x6664 $x81)))
 (=> $x6449 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6680)))))
 )
(assert
 (forall ((time Int) )(let (($x6694 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6690 (_254 ?x69 var1 var2 time)))
 (=> (and $x6690 $x70) (_255 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6694)))))
 )
(assert
 (forall ((time Int) )(let (($x6706 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6690 (_254 ?x69 var1 var2 time)))
 (let (($x6475 (and $x6690 $x81)))
 (=> $x6475 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6706)))))
 )
(assert
 (forall ((time Int) )(let (($x6720 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6716 (_255 ?x69 var1 var2 time)))
 (=> (and $x6716 $x70) (_256 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6720)))))
 )
(assert
 (forall ((time Int) )(let (($x6732 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6716 (_255 ?x69 var1 var2 time)))
 (let (($x6501 (and $x6716 $x81)))
 (=> $x6501 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6732)))))
 )
(assert
 (forall ((time Int) )(let (($x6746 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6742 (_256 ?x69 var1 var2 time)))
 (=> (and $x6742 $x70) (_257 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6746)))))
 )
(assert
 (forall ((time Int) )(let (($x6758 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6742 (_256 ?x69 var1 var2 time)))
 (let (($x6527 (and $x6742 $x81)))
 (=> $x6527 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6758)))))
 )
(assert
 (forall ((time Int) )(let (($x6772 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6768 (_257 ?x69 var1 var2 time)))
 (=> (and $x6768 $x70) (_258 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6772)))))
 )
(assert
 (forall ((time Int) )(let (($x6784 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6768 (_257 ?x69 var1 var2 time)))
 (let (($x6553 (and $x6768 $x81)))
 (=> $x6553 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6784)))))
 )
(assert
 (forall ((time Int) )(let (($x6798 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6794 (_258 ?x69 var1 var2 time)))
 (=> (and $x6794 $x70) (_259 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6798)))))
 )
(assert
 (forall ((time Int) )(let (($x6810 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6794 (_258 ?x69 var1 var2 time)))
 (let (($x6579 (and $x6794 $x81)))
 (=> $x6579 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6810)))))
 )
(assert
 (forall ((time Int) )(let (($x6824 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6820 (_259 ?x69 var1 var2 time)))
 (=> (and $x6820 $x70) (_260 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6824)))))
 )
(assert
 (forall ((time Int) )(let (($x6836 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6820 (_259 ?x69 var1 var2 time)))
 (let (($x6605 (and $x6820 $x81)))
 (=> $x6605 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6836)))))
 )
(assert
 (forall ((time Int) )(let (($x6850 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6846 (_260 ?x69 var1 var2 time)))
 (=> (and $x6846 $x70) (_261 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6850)))))
 )
(assert
 (forall ((time Int) )(let (($x6862 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6846 (_260 ?x69 var1 var2 time)))
 (let (($x6631 (and $x6846 $x81)))
 (=> $x6631 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6862)))))
 )
(assert
 (forall ((time Int) )(let (($x6876 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6872 (_261 ?x69 var1 var2 time)))
 (=> (and $x6872 $x70) (_262 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6876)))))
 )
(assert
 (forall ((time Int) )(let (($x6888 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6872 (_261 ?x69 var1 var2 time)))
 (let (($x6657 (and $x6872 $x81)))
 (=> $x6657 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6888)))))
 )
(assert
 (forall ((time Int) )(let (($x6902 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6898 (_262 ?x69 var1 var2 time)))
 (=> (and $x6898 $x70) (_263 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6902)))))
 )
(assert
 (forall ((time Int) )(let (($x6914 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6898 (_262 ?x69 var1 var2 time)))
 (let (($x6683 (and $x6898 $x81)))
 (=> $x6683 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6914)))))
 )
(assert
 (forall ((time Int) )(let (($x6928 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6924 (_263 ?x69 var1 var2 time)))
 (=> (and $x6924 $x70) (_264 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6928)))))
 )
(assert
 (forall ((time Int) )(let (($x6940 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6924 (_263 ?x69 var1 var2 time)))
 (let (($x6709 (and $x6924 $x81)))
 (=> $x6709 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6940)))))
 )
(assert
 (forall ((time Int) )(let (($x6954 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6950 (_264 ?x69 var1 var2 time)))
 (=> (and $x6950 $x70) (_265 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6954)))))
 )
(assert
 (forall ((time Int) )(let (($x6966 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6950 (_264 ?x69 var1 var2 time)))
 (let (($x6735 (and $x6950 $x81)))
 (=> $x6735 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6966)))))
 )
(assert
 (forall ((time Int) )(let (($x6980 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x6976 (_265 ?x69 var1 var2 time)))
 (=> (and $x6976 $x70) (_266 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6980)))))
 )
(assert
 (forall ((time Int) )(let (($x6992 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x6976 (_265 ?x69 var1 var2 time)))
 (let (($x6761 (and $x6976 $x81)))
 (=> $x6761 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x6992)))))
 )
(assert
 (forall ((time Int) )(let (($x7006 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7002 (_266 ?x69 var1 var2 time)))
 (=> (and $x7002 $x70) (_267 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7006)))))
 )
(assert
 (forall ((time Int) )(let (($x7018 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7002 (_266 ?x69 var1 var2 time)))
 (let (($x6787 (and $x7002 $x81)))
 (=> $x6787 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7018)))))
 )
(assert
 (forall ((time Int) )(let (($x7032 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7028 (_267 ?x69 var1 var2 time)))
 (=> (and $x7028 $x70) (_268 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7032)))))
 )
(assert
 (forall ((time Int) )(let (($x7044 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7028 (_267 ?x69 var1 var2 time)))
 (let (($x6813 (and $x7028 $x81)))
 (=> $x6813 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7044)))))
 )
(assert
 (forall ((time Int) )(let (($x7058 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7054 (_268 ?x69 var1 var2 time)))
 (=> (and $x7054 $x70) (_269 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7058)))))
 )
(assert
 (forall ((time Int) )(let (($x7070 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7054 (_268 ?x69 var1 var2 time)))
 (let (($x6839 (and $x7054 $x81)))
 (=> $x6839 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7070)))))
 )
(assert
 (forall ((time Int) )(let (($x7084 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7080 (_269 ?x69 var1 var2 time)))
 (=> (and $x7080 $x70) (_270 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7084)))))
 )
(assert
 (forall ((time Int) )(let (($x7096 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7080 (_269 ?x69 var1 var2 time)))
 (let (($x6865 (and $x7080 $x81)))
 (=> $x6865 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7096)))))
 )
(assert
 (forall ((time Int) )(let (($x7110 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7106 (_270 ?x69 var1 var2 time)))
 (=> (and $x7106 $x70) (_271 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7110)))))
 )
(assert
 (forall ((time Int) )(let (($x7122 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7106 (_270 ?x69 var1 var2 time)))
 (let (($x6891 (and $x7106 $x81)))
 (=> $x6891 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7122)))))
 )
(assert
 (forall ((time Int) )(let (($x7136 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7132 (_271 ?x69 var1 var2 time)))
 (=> (and $x7132 $x70) (_272 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7136)))))
 )
(assert
 (forall ((time Int) )(let (($x7148 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7132 (_271 ?x69 var1 var2 time)))
 (let (($x6917 (and $x7132 $x81)))
 (=> $x6917 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7148)))))
 )
(assert
 (forall ((time Int) )(let (($x7162 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7158 (_272 ?x69 var1 var2 time)))
 (=> (and $x7158 $x70) (_273 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7162)))))
 )
(assert
 (forall ((time Int) )(let (($x7174 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7158 (_272 ?x69 var1 var2 time)))
 (let (($x6943 (and $x7158 $x81)))
 (=> $x6943 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7174)))))
 )
(assert
 (forall ((time Int) )(let (($x7188 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7184 (_273 ?x69 var1 var2 time)))
 (=> (and $x7184 $x70) (_274 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7188)))))
 )
(assert
 (forall ((time Int) )(let (($x7200 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7184 (_273 ?x69 var1 var2 time)))
 (let (($x6969 (and $x7184 $x81)))
 (=> $x6969 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7200)))))
 )
(assert
 (forall ((time Int) )(let (($x7214 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7210 (_274 ?x69 var1 var2 time)))
 (=> (and $x7210 $x70) (_275 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7214)))))
 )
(assert
 (forall ((time Int) )(let (($x7226 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7210 (_274 ?x69 var1 var2 time)))
 (let (($x6995 (and $x7210 $x81)))
 (=> $x6995 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7226)))))
 )
(assert
 (forall ((time Int) )(let (($x7240 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7236 (_275 ?x69 var1 var2 time)))
 (=> (and $x7236 $x70) (_276 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7240)))))
 )
(assert
 (forall ((time Int) )(let (($x7252 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7236 (_275 ?x69 var1 var2 time)))
 (let (($x7021 (and $x7236 $x81)))
 (=> $x7021 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7252)))))
 )
(assert
 (forall ((time Int) )(let (($x7266 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7262 (_276 ?x69 var1 var2 time)))
 (=> (and $x7262 $x70) (_277 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7266)))))
 )
(assert
 (forall ((time Int) )(let (($x7278 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7262 (_276 ?x69 var1 var2 time)))
 (let (($x7047 (and $x7262 $x81)))
 (=> $x7047 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7278)))))
 )
(assert
 (forall ((time Int) )(let (($x7292 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7288 (_277 ?x69 var1 var2 time)))
 (=> (and $x7288 $x70) (_278 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7292)))))
 )
(assert
 (forall ((time Int) )(let (($x7304 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7288 (_277 ?x69 var1 var2 time)))
 (let (($x7073 (and $x7288 $x81)))
 (=> $x7073 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7304)))))
 )
(assert
 (forall ((time Int) )(let (($x7318 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7314 (_278 ?x69 var1 var2 time)))
 (=> (and $x7314 $x70) (_279 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7318)))))
 )
(assert
 (forall ((time Int) )(let (($x7330 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7314 (_278 ?x69 var1 var2 time)))
 (let (($x7099 (and $x7314 $x81)))
 (=> $x7099 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7330)))))
 )
(assert
 (forall ((time Int) )(let (($x7344 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7340 (_279 ?x69 var1 var2 time)))
 (=> (and $x7340 $x70) (_280 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7344)))))
 )
(assert
 (forall ((time Int) )(let (($x7356 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7340 (_279 ?x69 var1 var2 time)))
 (let (($x7125 (and $x7340 $x81)))
 (=> $x7125 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7356)))))
 )
(assert
 (forall ((time Int) )(let (($x7370 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7366 (_280 ?x69 var1 var2 time)))
 (=> (and $x7366 $x70) (_281 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7370)))))
 )
(assert
 (forall ((time Int) )(let (($x7382 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7366 (_280 ?x69 var1 var2 time)))
 (let (($x7151 (and $x7366 $x81)))
 (=> $x7151 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7382)))))
 )
(assert
 (forall ((time Int) )(let (($x7396 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7392 (_281 ?x69 var1 var2 time)))
 (=> (and $x7392 $x70) (_282 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7396)))))
 )
(assert
 (forall ((time Int) )(let (($x7408 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7392 (_281 ?x69 var1 var2 time)))
 (let (($x7177 (and $x7392 $x81)))
 (=> $x7177 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7408)))))
 )
(assert
 (forall ((time Int) )(let (($x7422 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7418 (_282 ?x69 var1 var2 time)))
 (=> (and $x7418 $x70) (_283 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7422)))))
 )
(assert
 (forall ((time Int) )(let (($x7434 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7418 (_282 ?x69 var1 var2 time)))
 (let (($x7203 (and $x7418 $x81)))
 (=> $x7203 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7434)))))
 )
(assert
 (forall ((time Int) )(let (($x7448 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7444 (_283 ?x69 var1 var2 time)))
 (=> (and $x7444 $x70) (_284 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7448)))))
 )
(assert
 (forall ((time Int) )(let (($x7460 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7444 (_283 ?x69 var1 var2 time)))
 (let (($x7229 (and $x7444 $x81)))
 (=> $x7229 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7460)))))
 )
(assert
 (forall ((time Int) )(let (($x7474 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7470 (_284 ?x69 var1 var2 time)))
 (=> (and $x7470 $x70) (_285 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7474)))))
 )
(assert
 (forall ((time Int) )(let (($x7486 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7470 (_284 ?x69 var1 var2 time)))
 (let (($x7255 (and $x7470 $x81)))
 (=> $x7255 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7486)))))
 )
(assert
 (forall ((time Int) )(let (($x7500 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7496 (_285 ?x69 var1 var2 time)))
 (=> (and $x7496 $x70) (_286 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7500)))))
 )
(assert
 (forall ((time Int) )(let (($x7512 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7496 (_285 ?x69 var1 var2 time)))
 (let (($x7281 (and $x7496 $x81)))
 (=> $x7281 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7512)))))
 )
(assert
 (forall ((time Int) )(let (($x7526 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7522 (_286 ?x69 var1 var2 time)))
 (=> (and $x7522 $x70) (_287 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7526)))))
 )
(assert
 (forall ((time Int) )(let (($x7538 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7522 (_286 ?x69 var1 var2 time)))
 (let (($x7307 (and $x7522 $x81)))
 (=> $x7307 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7538)))))
 )
(assert
 (forall ((time Int) )(let (($x7552 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7548 (_287 ?x69 var1 var2 time)))
 (=> (and $x7548 $x70) (_288 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7552)))))
 )
(assert
 (forall ((time Int) )(let (($x7564 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7548 (_287 ?x69 var1 var2 time)))
 (let (($x7333 (and $x7548 $x81)))
 (=> $x7333 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7564)))))
 )
(assert
 (forall ((time Int) )(let (($x7578 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7574 (_288 ?x69 var1 var2 time)))
 (=> (and $x7574 $x70) (_289 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7578)))))
 )
(assert
 (forall ((time Int) )(let (($x7590 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7574 (_288 ?x69 var1 var2 time)))
 (let (($x7359 (and $x7574 $x81)))
 (=> $x7359 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7590)))))
 )
(assert
 (forall ((time Int) )(let (($x7604 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7600 (_289 ?x69 var1 var2 time)))
 (=> (and $x7600 $x70) (_290 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7604)))))
 )
(assert
 (forall ((time Int) )(let (($x7616 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7600 (_289 ?x69 var1 var2 time)))
 (let (($x7385 (and $x7600 $x81)))
 (=> $x7385 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7616)))))
 )
(assert
 (forall ((time Int) )(let (($x7630 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7626 (_290 ?x69 var1 var2 time)))
 (=> (and $x7626 $x70) (_291 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7630)))))
 )
(assert
 (forall ((time Int) )(let (($x7642 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7626 (_290 ?x69 var1 var2 time)))
 (let (($x7411 (and $x7626 $x81)))
 (=> $x7411 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7642)))))
 )
(assert
 (forall ((time Int) )(let (($x7656 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7652 (_291 ?x69 var1 var2 time)))
 (=> (and $x7652 $x70) (_292 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7656)))))
 )
(assert
 (forall ((time Int) )(let (($x7668 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7652 (_291 ?x69 var1 var2 time)))
 (let (($x7437 (and $x7652 $x81)))
 (=> $x7437 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7668)))))
 )
(assert
 (forall ((time Int) )(let (($x7682 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7678 (_292 ?x69 var1 var2 time)))
 (=> (and $x7678 $x70) (_293 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7682)))))
 )
(assert
 (forall ((time Int) )(let (($x7694 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7678 (_292 ?x69 var1 var2 time)))
 (let (($x7463 (and $x7678 $x81)))
 (=> $x7463 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7694)))))
 )
(assert
 (forall ((time Int) )(let (($x7708 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7704 (_293 ?x69 var1 var2 time)))
 (=> (and $x7704 $x70) (_294 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7708)))))
 )
(assert
 (forall ((time Int) )(let (($x7720 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7704 (_293 ?x69 var1 var2 time)))
 (let (($x7489 (and $x7704 $x81)))
 (=> $x7489 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7720)))))
 )
(assert
 (forall ((time Int) )(let (($x7734 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7730 (_294 ?x69 var1 var2 time)))
 (=> (and $x7730 $x70) (_295 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7734)))))
 )
(assert
 (forall ((time Int) )(let (($x7746 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7730 (_294 ?x69 var1 var2 time)))
 (let (($x7515 (and $x7730 $x81)))
 (=> $x7515 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7746)))))
 )
(assert
 (forall ((time Int) )(let (($x7760 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7756 (_295 ?x69 var1 var2 time)))
 (=> (and $x7756 $x70) (_296 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7760)))))
 )
(assert
 (forall ((time Int) )(let (($x7772 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7756 (_295 ?x69 var1 var2 time)))
 (let (($x7541 (and $x7756 $x81)))
 (=> $x7541 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7772)))))
 )
(assert
 (forall ((time Int) )(let (($x7786 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7782 (_296 ?x69 var1 var2 time)))
 (=> (and $x7782 $x70) (_297 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7786)))))
 )
(assert
 (forall ((time Int) )(let (($x7798 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7782 (_296 ?x69 var1 var2 time)))
 (let (($x7567 (and $x7782 $x81)))
 (=> $x7567 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7798)))))
 )
(assert
 (forall ((time Int) )(let (($x7812 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7808 (_297 ?x69 var1 var2 time)))
 (=> (and $x7808 $x70) (_298 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7812)))))
 )
(assert
 (forall ((time Int) )(let (($x7824 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7808 (_297 ?x69 var1 var2 time)))
 (let (($x7593 (and $x7808 $x81)))
 (=> $x7593 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7824)))))
 )
(assert
 (forall ((time Int) )(let (($x7838 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7834 (_298 ?x69 var1 var2 time)))
 (=> (and $x7834 $x70) (_299 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7838)))))
 )
(assert
 (forall ((time Int) )(let (($x7850 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7834 (_298 ?x69 var1 var2 time)))
 (let (($x7619 (and $x7834 $x81)))
 (=> $x7619 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7850)))))
 )
(assert
 (forall ((time Int) )(let (($x7864 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7860 (_299 ?x69 var1 var2 time)))
 (=> (and $x7860 $x70) (_300 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7864)))))
 )
(assert
 (forall ((time Int) )(let (($x7876 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7860 (_299 ?x69 var1 var2 time)))
 (let (($x7645 (and $x7860 $x81)))
 (=> $x7645 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7876)))))
 )
(assert
 (forall ((time Int) )(let (($x7890 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7886 (_300 ?x69 var1 var2 time)))
 (=> (and $x7886 $x70) (_301 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7890)))))
 )
(assert
 (forall ((time Int) )(let (($x7902 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7886 (_300 ?x69 var1 var2 time)))
 (let (($x7671 (and $x7886 $x81)))
 (=> $x7671 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7902)))))
 )
(assert
 (forall ((time Int) )(let (($x7916 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7912 (_301 ?x69 var1 var2 time)))
 (=> (and $x7912 $x70) (_302 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7916)))))
 )
(assert
 (forall ((time Int) )(let (($x7928 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7912 (_301 ?x69 var1 var2 time)))
 (let (($x7697 (and $x7912 $x81)))
 (=> $x7697 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7928)))))
 )
(assert
 (forall ((time Int) )(let (($x7942 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7938 (_302 ?x69 var1 var2 time)))
 (=> (and $x7938 $x70) (_303 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7942)))))
 )
(assert
 (forall ((time Int) )(let (($x7954 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7938 (_302 ?x69 var1 var2 time)))
 (let (($x7723 (and $x7938 $x81)))
 (=> $x7723 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7954)))))
 )
(assert
 (forall ((time Int) )(let (($x7968 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7964 (_303 ?x69 var1 var2 time)))
 (=> (and $x7964 $x70) (_304 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7968)))))
 )
(assert
 (forall ((time Int) )(let (($x7980 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7964 (_303 ?x69 var1 var2 time)))
 (let (($x7749 (and $x7964 $x81)))
 (=> $x7749 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7980)))))
 )
(assert
 (forall ((time Int) )(let (($x7994 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x7990 (_304 ?x69 var1 var2 time)))
 (=> (and $x7990 $x70) (_305 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x7994)))))
 )
(assert
 (forall ((time Int) )(let (($x8006 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x7990 (_304 ?x69 var1 var2 time)))
 (let (($x7775 (and $x7990 $x81)))
 (=> $x7775 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8006)))))
 )
(assert
 (forall ((time Int) )(let (($x8020 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8016 (_305 ?x69 var1 var2 time)))
 (=> (and $x8016 $x70) (_306 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8020)))))
 )
(assert
 (forall ((time Int) )(let (($x8032 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8016 (_305 ?x69 var1 var2 time)))
 (let (($x7801 (and $x8016 $x81)))
 (=> $x7801 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8032)))))
 )
(assert
 (forall ((time Int) )(let (($x8046 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8042 (_306 ?x69 var1 var2 time)))
 (=> (and $x8042 $x70) (_307 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8046)))))
 )
(assert
 (forall ((time Int) )(let (($x8058 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8042 (_306 ?x69 var1 var2 time)))
 (let (($x7827 (and $x8042 $x81)))
 (=> $x7827 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8058)))))
 )
(assert
 (forall ((time Int) )(let (($x8072 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8068 (_307 ?x69 var1 var2 time)))
 (=> (and $x8068 $x70) (_308 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8072)))))
 )
(assert
 (forall ((time Int) )(let (($x8084 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8068 (_307 ?x69 var1 var2 time)))
 (let (($x7853 (and $x8068 $x81)))
 (=> $x7853 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8084)))))
 )
(assert
 (forall ((time Int) )(let (($x8098 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8094 (_308 ?x69 var1 var2 time)))
 (=> (and $x8094 $x70) (_309 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8098)))))
 )
(assert
 (forall ((time Int) )(let (($x8110 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8094 (_308 ?x69 var1 var2 time)))
 (let (($x7879 (and $x8094 $x81)))
 (=> $x7879 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8110)))))
 )
(assert
 (forall ((time Int) )(let (($x8124 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8120 (_309 ?x69 var1 var2 time)))
 (=> (and $x8120 $x70) (_310 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8124)))))
 )
(assert
 (forall ((time Int) )(let (($x8136 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8120 (_309 ?x69 var1 var2 time)))
 (let (($x7905 (and $x8120 $x81)))
 (=> $x7905 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8136)))))
 )
(assert
 (forall ((time Int) )(let (($x8150 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8146 (_310 ?x69 var1 var2 time)))
 (=> (and $x8146 $x70) (_311 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8150)))))
 )
(assert
 (forall ((time Int) )(let (($x8162 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8146 (_310 ?x69 var1 var2 time)))
 (let (($x7931 (and $x8146 $x81)))
 (=> $x7931 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8162)))))
 )
(assert
 (forall ((time Int) )(let (($x8176 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8172 (_311 ?x69 var1 var2 time)))
 (=> (and $x8172 $x70) (_312 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8176)))))
 )
(assert
 (forall ((time Int) )(let (($x8188 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8172 (_311 ?x69 var1 var2 time)))
 (let (($x7957 (and $x8172 $x81)))
 (=> $x7957 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8188)))))
 )
(assert
 (forall ((time Int) )(let (($x8202 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8198 (_312 ?x69 var1 var2 time)))
 (=> (and $x8198 $x70) (_313 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8202)))))
 )
(assert
 (forall ((time Int) )(let (($x8214 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8198 (_312 ?x69 var1 var2 time)))
 (let (($x7983 (and $x8198 $x81)))
 (=> $x7983 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8214)))))
 )
(assert
 (forall ((time Int) )(let (($x8228 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8224 (_313 ?x69 var1 var2 time)))
 (=> (and $x8224 $x70) (_314 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8228)))))
 )
(assert
 (forall ((time Int) )(let (($x8240 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8224 (_313 ?x69 var1 var2 time)))
 (let (($x8009 (and $x8224 $x81)))
 (=> $x8009 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8240)))))
 )
(assert
 (forall ((time Int) )(let (($x8254 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8250 (_314 ?x69 var1 var2 time)))
 (=> (and $x8250 $x70) (_315 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8254)))))
 )
(assert
 (forall ((time Int) )(let (($x8266 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8250 (_314 ?x69 var1 var2 time)))
 (let (($x8035 (and $x8250 $x81)))
 (=> $x8035 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8266)))))
 )
(assert
 (forall ((time Int) )(let (($x8280 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8276 (_315 ?x69 var1 var2 time)))
 (=> (and $x8276 $x70) (_316 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8280)))))
 )
(assert
 (forall ((time Int) )(let (($x8292 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8276 (_315 ?x69 var1 var2 time)))
 (let (($x8061 (and $x8276 $x81)))
 (=> $x8061 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8292)))))
 )
(assert
 (forall ((time Int) )(let (($x8306 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8302 (_316 ?x69 var1 var2 time)))
 (=> (and $x8302 $x70) (_317 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8306)))))
 )
(assert
 (forall ((time Int) )(let (($x8318 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8302 (_316 ?x69 var1 var2 time)))
 (let (($x8087 (and $x8302 $x81)))
 (=> $x8087 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8318)))))
 )
(assert
 (forall ((time Int) )(let (($x8332 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8328 (_317 ?x69 var1 var2 time)))
 (=> (and $x8328 $x70) (_318 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8332)))))
 )
(assert
 (forall ((time Int) )(let (($x8344 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8328 (_317 ?x69 var1 var2 time)))
 (let (($x8113 (and $x8328 $x81)))
 (=> $x8113 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8344)))))
 )
(assert
 (forall ((time Int) )(let (($x8358 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8354 (_318 ?x69 var1 var2 time)))
 (=> (and $x8354 $x70) (_319 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8358)))))
 )
(assert
 (forall ((time Int) )(let (($x8370 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8354 (_318 ?x69 var1 var2 time)))
 (let (($x8139 (and $x8354 $x81)))
 (=> $x8139 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8370)))))
 )
(assert
 (forall ((time Int) )(let (($x8384 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8380 (_319 ?x69 var1 var2 time)))
 (=> (and $x8380 $x70) (_320 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8384)))))
 )
(assert
 (forall ((time Int) )(let (($x8396 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8380 (_319 ?x69 var1 var2 time)))
 (let (($x8165 (and $x8380 $x81)))
 (=> $x8165 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8396)))))
 )
(assert
 (forall ((time Int) )(let (($x8410 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8406 (_320 ?x69 var1 var2 time)))
 (=> (and $x8406 $x70) (_321 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8410)))))
 )
(assert
 (forall ((time Int) )(let (($x8422 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8406 (_320 ?x69 var1 var2 time)))
 (let (($x8191 (and $x8406 $x81)))
 (=> $x8191 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8422)))))
 )
(assert
 (forall ((time Int) )(let (($x8436 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8432 (_321 ?x69 var1 var2 time)))
 (=> (and $x8432 $x70) (_322 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8436)))))
 )
(assert
 (forall ((time Int) )(let (($x8448 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8432 (_321 ?x69 var1 var2 time)))
 (let (($x8217 (and $x8432 $x81)))
 (=> $x8217 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8448)))))
 )
(assert
 (forall ((time Int) )(let (($x8462 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8458 (_322 ?x69 var1 var2 time)))
 (=> (and $x8458 $x70) (_323 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8462)))))
 )
(assert
 (forall ((time Int) )(let (($x8474 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8458 (_322 ?x69 var1 var2 time)))
 (let (($x8243 (and $x8458 $x81)))
 (=> $x8243 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8474)))))
 )
(assert
 (forall ((time Int) )(let (($x8488 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8484 (_323 ?x69 var1 var2 time)))
 (=> (and $x8484 $x70) (_324 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8488)))))
 )
(assert
 (forall ((time Int) )(let (($x8500 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8484 (_323 ?x69 var1 var2 time)))
 (let (($x8269 (and $x8484 $x81)))
 (=> $x8269 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8500)))))
 )
(assert
 (forall ((time Int) )(let (($x8514 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8510 (_324 ?x69 var1 var2 time)))
 (=> (and $x8510 $x70) (_325 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8514)))))
 )
(assert
 (forall ((time Int) )(let (($x8526 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8510 (_324 ?x69 var1 var2 time)))
 (let (($x8295 (and $x8510 $x81)))
 (=> $x8295 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8526)))))
 )
(assert
 (forall ((time Int) )(let (($x8540 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8536 (_325 ?x69 var1 var2 time)))
 (=> (and $x8536 $x70) (_326 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8540)))))
 )
(assert
 (forall ((time Int) )(let (($x8552 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8536 (_325 ?x69 var1 var2 time)))
 (let (($x8321 (and $x8536 $x81)))
 (=> $x8321 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8552)))))
 )
(assert
 (forall ((time Int) )(let (($x8566 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8562 (_326 ?x69 var1 var2 time)))
 (=> (and $x8562 $x70) (_327 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8566)))))
 )
(assert
 (forall ((time Int) )(let (($x8578 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8562 (_326 ?x69 var1 var2 time)))
 (let (($x8347 (and $x8562 $x81)))
 (=> $x8347 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8578)))))
 )
(assert
 (forall ((time Int) )(let (($x8592 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8588 (_327 ?x69 var1 var2 time)))
 (=> (and $x8588 $x70) (_328 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8592)))))
 )
(assert
 (forall ((time Int) )(let (($x8604 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8588 (_327 ?x69 var1 var2 time)))
 (let (($x8373 (and $x8588 $x81)))
 (=> $x8373 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8604)))))
 )
(assert
 (forall ((time Int) )(let (($x8618 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8614 (_328 ?x69 var1 var2 time)))
 (=> (and $x8614 $x70) (_329 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8618)))))
 )
(assert
 (forall ((time Int) )(let (($x8630 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8614 (_328 ?x69 var1 var2 time)))
 (let (($x8399 (and $x8614 $x81)))
 (=> $x8399 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8630)))))
 )
(assert
 (forall ((time Int) )(let (($x8644 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8640 (_329 ?x69 var1 var2 time)))
 (=> (and $x8640 $x70) (_330 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8644)))))
 )
(assert
 (forall ((time Int) )(let (($x8656 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8640 (_329 ?x69 var1 var2 time)))
 (let (($x8425 (and $x8640 $x81)))
 (=> $x8425 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8656)))))
 )
(assert
 (forall ((time Int) )(let (($x8670 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8666 (_330 ?x69 var1 var2 time)))
 (=> (and $x8666 $x70) (_331 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8670)))))
 )
(assert
 (forall ((time Int) )(let (($x8682 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8666 (_330 ?x69 var1 var2 time)))
 (let (($x8451 (and $x8666 $x81)))
 (=> $x8451 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8682)))))
 )
(assert
 (forall ((time Int) )(let (($x8696 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8692 (_331 ?x69 var1 var2 time)))
 (=> (and $x8692 $x70) (_332 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8696)))))
 )
(assert
 (forall ((time Int) )(let (($x8708 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8692 (_331 ?x69 var1 var2 time)))
 (let (($x8477 (and $x8692 $x81)))
 (=> $x8477 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8708)))))
 )
(assert
 (forall ((time Int) )(let (($x8722 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8718 (_332 ?x69 var1 var2 time)))
 (=> (and $x8718 $x70) (_333 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8722)))))
 )
(assert
 (forall ((time Int) )(let (($x8734 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8718 (_332 ?x69 var1 var2 time)))
 (let (($x8503 (and $x8718 $x81)))
 (=> $x8503 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8734)))))
 )
(assert
 (forall ((time Int) )(let (($x8748 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8744 (_333 ?x69 var1 var2 time)))
 (=> (and $x8744 $x70) (_334 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8748)))))
 )
(assert
 (forall ((time Int) )(let (($x8760 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8744 (_333 ?x69 var1 var2 time)))
 (let (($x8529 (and $x8744 $x81)))
 (=> $x8529 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8760)))))
 )
(assert
 (forall ((time Int) )(let (($x8774 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8770 (_334 ?x69 var1 var2 time)))
 (=> (and $x8770 $x70) (_335 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8774)))))
 )
(assert
 (forall ((time Int) )(let (($x8786 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8770 (_334 ?x69 var1 var2 time)))
 (let (($x8555 (and $x8770 $x81)))
 (=> $x8555 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8786)))))
 )
(assert
 (forall ((time Int) )(let (($x8800 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8796 (_335 ?x69 var1 var2 time)))
 (=> (and $x8796 $x70) (_336 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8800)))))
 )
(assert
 (forall ((time Int) )(let (($x8812 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8796 (_335 ?x69 var1 var2 time)))
 (let (($x8581 (and $x8796 $x81)))
 (=> $x8581 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8812)))))
 )
(assert
 (forall ((time Int) )(let (($x8826 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8822 (_336 ?x69 var1 var2 time)))
 (=> (and $x8822 $x70) (_337 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8826)))))
 )
(assert
 (forall ((time Int) )(let (($x8838 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8822 (_336 ?x69 var1 var2 time)))
 (let (($x8607 (and $x8822 $x81)))
 (=> $x8607 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8838)))))
 )
(assert
 (forall ((time Int) )(let (($x8852 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8848 (_337 ?x69 var1 var2 time)))
 (=> (and $x8848 $x70) (_338 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8852)))))
 )
(assert
 (forall ((time Int) )(let (($x8864 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8848 (_337 ?x69 var1 var2 time)))
 (let (($x8633 (and $x8848 $x81)))
 (=> $x8633 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8864)))))
 )
(assert
 (forall ((time Int) )(let (($x8878 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8874 (_338 ?x69 var1 var2 time)))
 (=> (and $x8874 $x70) (_339 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8878)))))
 )
(assert
 (forall ((time Int) )(let (($x8890 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8874 (_338 ?x69 var1 var2 time)))
 (let (($x8659 (and $x8874 $x81)))
 (=> $x8659 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8890)))))
 )
(assert
 (forall ((time Int) )(let (($x8904 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8900 (_339 ?x69 var1 var2 time)))
 (=> (and $x8900 $x70) (_340 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8904)))))
 )
(assert
 (forall ((time Int) )(let (($x8916 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8900 (_339 ?x69 var1 var2 time)))
 (let (($x8685 (and $x8900 $x81)))
 (=> $x8685 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8916)))))
 )
(assert
 (forall ((time Int) )(let (($x8930 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8926 (_340 ?x69 var1 var2 time)))
 (=> (and $x8926 $x70) (_341 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8930)))))
 )
(assert
 (forall ((time Int) )(let (($x8942 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8926 (_340 ?x69 var1 var2 time)))
 (let (($x8711 (and $x8926 $x81)))
 (=> $x8711 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8942)))))
 )
(assert
 (forall ((time Int) )(let (($x8956 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8952 (_341 ?x69 var1 var2 time)))
 (=> (and $x8952 $x70) (_342 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8956)))))
 )
(assert
 (forall ((time Int) )(let (($x8968 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8952 (_341 ?x69 var1 var2 time)))
 (let (($x8737 (and $x8952 $x81)))
 (=> $x8737 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8968)))))
 )
(assert
 (forall ((time Int) )(let (($x8982 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x8978 (_342 ?x69 var1 var2 time)))
 (=> (and $x8978 $x70) (_343 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8982)))))
 )
(assert
 (forall ((time Int) )(let (($x8994 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x8978 (_342 ?x69 var1 var2 time)))
 (let (($x8763 (and $x8978 $x81)))
 (=> $x8763 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x8994)))))
 )
(assert
 (forall ((time Int) )(let (($x9008 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9004 (_343 ?x69 var1 var2 time)))
 (=> (and $x9004 $x70) (_344 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9008)))))
 )
(assert
 (forall ((time Int) )(let (($x9020 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9004 (_343 ?x69 var1 var2 time)))
 (let (($x8789 (and $x9004 $x81)))
 (=> $x8789 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9020)))))
 )
(assert
 (forall ((time Int) )(let (($x9034 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9030 (_344 ?x69 var1 var2 time)))
 (=> (and $x9030 $x70) (_345 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9034)))))
 )
(assert
 (forall ((time Int) )(let (($x9046 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9030 (_344 ?x69 var1 var2 time)))
 (let (($x8815 (and $x9030 $x81)))
 (=> $x8815 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9046)))))
 )
(assert
 (forall ((time Int) )(let (($x9060 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9056 (_345 ?x69 var1 var2 time)))
 (=> (and $x9056 $x70) (_346 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9060)))))
 )
(assert
 (forall ((time Int) )(let (($x9072 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9056 (_345 ?x69 var1 var2 time)))
 (let (($x8841 (and $x9056 $x81)))
 (=> $x8841 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9072)))))
 )
(assert
 (forall ((time Int) )(let (($x9086 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9082 (_346 ?x69 var1 var2 time)))
 (=> (and $x9082 $x70) (_347 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9086)))))
 )
(assert
 (forall ((time Int) )(let (($x9098 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9082 (_346 ?x69 var1 var2 time)))
 (let (($x8867 (and $x9082 $x81)))
 (=> $x8867 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9098)))))
 )
(assert
 (forall ((time Int) )(let (($x9112 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9108 (_347 ?x69 var1 var2 time)))
 (=> (and $x9108 $x70) (_348 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9112)))))
 )
(assert
 (forall ((time Int) )(let (($x9124 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9108 (_347 ?x69 var1 var2 time)))
 (let (($x8893 (and $x9108 $x81)))
 (=> $x8893 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9124)))))
 )
(assert
 (forall ((time Int) )(let (($x9138 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9134 (_348 ?x69 var1 var2 time)))
 (=> (and $x9134 $x70) (_349 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9138)))))
 )
(assert
 (forall ((time Int) )(let (($x9150 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9134 (_348 ?x69 var1 var2 time)))
 (let (($x8919 (and $x9134 $x81)))
 (=> $x8919 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9150)))))
 )
(assert
 (forall ((time Int) )(let (($x9164 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x52 (+ var1 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x70 (and (distinct ?x69 0) true)))
 (let (($x9160 (_349 ?x69 var1 var2 time)))
 (=> (and $x9160 $x70) (_350 ?x67 ?x52 ?x52 ?x66)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9164)))))
 )
(assert
 (forall ((time Int) )(let (($x9176 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9160 (_349 ?x69 var1 var2 time)))
 (let (($x8945 (and $x9160 $x81)))
 (=> $x8945 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9176)))))
 )
(assert
 (forall ((time Int) )(let (($x9176 (forall ((var2 Int) )(forall ((var1 Int) )(let ((?x66 (+ time 1)))
 (let ((?x67 (input-arg0 ?x66)))
 (let (($x64 (ERR ?x67 var1 var1 ?x66)))
 (let ((?x69 (input-arg0 time)))
 (let (($x81 (= ?x69 1)))
 (let (($x9160 (_349 ?x69 var1 var2 time)))
 (let (($x8945 (and $x9160 $x81)))
 (=> $x8945 $x64)))))))))
 )
 ))
 (let (($x77 (>= time 0)))
 (let (($x78 (and $x77 (< time 360))))
 (=> $x78 $x9176)))))
 )
(check-sat)
