workspace(name = "circt")

load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive") 
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

# Create a repository pointing to the CIRCT root directory
new_local_repository(
    name = "circt-raw",
    build_file_content = "# empty",
    path = "../../",
)

# Bazel skylib is a required dependency for the LLVM/MLIR Bazel build overlay
http_archive(
    name = "bazel_skylib",
    sha256 = "74d544d96f4a5bb630d465ca8bbcfe231e3594e5aae57e1edbf17a6eb3ca2506",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

load("@bazel_skylib//lib:versions.bzl", "versions")

versions.check(minimum_bazel_version = "6.3.2")

# Build LLVM/MLIR using a two-step process (following the successful approach from mlir-tutorial)
# Step 1: Download the raw source as a git repository
new_git_repository(
    name = "llvm-raw",
    # This BUILD file is intentionally empty because the LLVM project contains its own overlay Bazel BUILD files
    build_file_content = "# empty",
    commit = "945ce1aa3d29e24c49720ae9e0bcfbac88f2defd",  # CIRCT compatible version
    init_submodules = False,
    remote = "https://github.com/llvm/llvm-project.git",
)

# Step 2: Use LLVM's built-in configuration function to set up the build overlay
load("@llvm-raw//utils/bazel:configure.bzl", "llvm_configure")

llvm_configure(name = "llvm-project")

# Step 3: Configure CIRCT overlay using our configure function
load("@circt-raw//utils/bazel:configure.bzl", "circt_configure")

circt_configure(name = "circt-project")

# Python rules (required dependency for LLVM)
new_git_repository(
    name = "rules_python",
    commit = "9ffb1ecd9b4e46d2a0bca838ac80d7128a352f9f",  # v0.23.1
    remote = "https://github.com/bazelbuild/rules_python.git",
)

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python3_10",
    python_version = "3.10",
)

# Optional LLVM dependencies: zstd and zlib (for performance improvement)
maybe(
    http_archive,
    name = "llvm_zstd",
    build_file = "@llvm-raw//utils/bazel/third_party_build:zstd.BUILD",
    sha256 = "7c42d56fac126929a6a85dbc73ff1db2411d04f104fae9bdea51305663a83fd0",
    strip_prefix = "zstd-1.5.2",
    urls = [
        "https://github.com/facebook/zstd/releases/download/v1.5.2/zstd-1.5.2.tar.gz",
    ],
)

maybe(
    http_archive,
    name = "llvm_zlib",
    build_file = "@llvm-raw//utils/bazel/third_party_build:zlib-ng.BUILD",
    sha256 = "e36bb346c00472a1f9ff2a0a4643e590a254be6379da7cddd9daeb9a7f296731",
    strip_prefix = "zlib-ng-2.0.7",
    urls = [
        "https://github.com/zlib-ng/zlib-ng/archive/refs/tags/2.0.7.zip",
    ],
)

# Configure the CIRCT project
load("@circt-raw//utils/bazel:configure.bzl", "circt_configure")

circt_configure(name = "circt-project") 