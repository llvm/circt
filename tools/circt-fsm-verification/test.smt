(set-info :status unknown)
(set-option :proof true)
(declare-fun _0 ((_ BitVec 16) (_ BitVec 16)) Bool)
(declare-fun _1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(declare-fun _2 ((_ BitVec 16) (_ BitVec 16)) Bool)
(declare-fun _3 ((_ BitVec 16) (_ BitVec 16)) Bool)
(declare-fun _4 ((_ BitVec 16) (_ BitVec 16)) Bool)
(declare-fun _5 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert
 (forall ((arg0 (_ BitVec 16)) )(_0 #x0000 #x0000))
 )
(assert
 (forall ((time (_ BitVec 16)) )(let (($x52 (forall ((arg0 (_ BitVec 16)) )(let (($x50 (_0 arg0 time)))
 (=> $x50 (_1 (bvadd arg0 #x0001) (bvadd time #x0001)))))
 ))
 (let (($x54 (bvuge time #x0000)))
 (let (($x55 (and $x54 (bvult time #x0010))))
 (=> $x55 $x52)))))
 )
(assert
 (forall ((time (_ BitVec 16)) )(let (($x73 (forall ((arg0 (_ BitVec 16)) )(let (($x59 (_1 arg0 time)))
 (=> $x59 (_2 (bvadd arg0 #x0001) (bvadd time #x0001)))))
 ))
 (let (($x54 (bvuge time #x0000)))
 (let (($x55 (and $x54 (bvult time #x0010))))
 (=> $x55 $x73)))))
 )
(assert
 (forall ((time (_ BitVec 16)) )(let (($x85 (forall ((arg0 (_ BitVec 16)) )(let (($x77 (_2 arg0 time)))
 (=> $x77 (_3 (bvadd arg0 #x0001) (bvadd time #x0001)))))
 ))
 (let (($x54 (bvuge time #x0000)))
 (let (($x55 (and $x54 (bvult time #x0010))))
 (=> $x55 $x85)))))
 )
(assert
 (forall ((time (_ BitVec 16)) )(let (($x97 (forall ((arg0 (_ BitVec 16)) )(let (($x89 (_3 arg0 time)))
 (=> $x89 (_4 (bvadd arg0 #x0001) (bvadd time #x0001)))))
 ))
 (let (($x54 (bvuge time #x0000)))
 (let (($x55 (and $x54 (bvult time #x0010))))
 (=> $x55 $x97)))))
 )
(assert
 (forall ((time (_ BitVec 16)) )(let (($x109 (forall ((arg0 (_ BitVec 16)) )(let (($x101 (_4 arg0 time)))
 (=> $x101 (_5 (bvadd arg0 #x0001) (bvadd time #x0001)))))
 ))
 (let (($x54 (bvuge time #x0000)))
 (let (($x55 (and $x54 (bvult time #x0010))))
 (=> $x55 $x109)))))
 )
(assert
 (exists ((time (_ BitVec 16)) )(forall ((arg0 (_ BitVec 16)) )(let (($x59 (_1 arg0 time)))
 (and $x59 (= arg0 #x0001))))
 )
 )
(check-sat)