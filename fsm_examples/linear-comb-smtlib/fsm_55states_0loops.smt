; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun var0_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(assert
 (let ((?x63 (time-to-state 0)))
 (= ?x63 _0)))
(assert
 (let ((?x83 (var0_0 0)))
 (= ?x83 0)))
(assert
 (let ((?x83 (var0_0 0)))
 (= ?x83 0)))
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x107 (= ?x106 _0)))
 (=> $x107 (and (= (time-to-state (+ time 1)) _1) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x124 (= ?x106 _1)))
 (=> $x124 (and (= (time-to-state (+ time 1)) _2) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x134 (= ?x106 _2)))
 (=> $x134 (and (= (time-to-state (+ time 1)) _3) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x144 (= ?x106 _3)))
 (=> $x144 (and (= (time-to-state (+ time 1)) _4) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x154 (= ?x106 _4)))
 (=> $x154 (and (= (time-to-state (+ time 1)) _5) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x164 (= ?x106 _5)))
 (=> $x164 (and (= (time-to-state (+ time 1)) _6) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x174 (= ?x106 _6)))
 (=> $x174 (and (= (time-to-state (+ time 1)) _7) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x184 (= ?x106 _7)))
 (=> $x184 (and (= (time-to-state (+ time 1)) _8) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x194 (= ?x106 _8)))
 (=> $x194 (and (= (time-to-state (+ time 1)) _9) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x204 (= ?x106 _9)))
 (=> $x204 (and (= (time-to-state (+ time 1)) _10) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x214 (= ?x106 _10)))
 (=> $x214 (and (= (time-to-state (+ time 1)) _11) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x224 (= ?x106 _11)))
 (=> $x224 (and (= (time-to-state (+ time 1)) _12) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x234 (= ?x106 _12)))
 (=> $x234 (and (= (time-to-state (+ time 1)) _13) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x244 (= ?x106 _13)))
 (=> $x244 (and (= (time-to-state (+ time 1)) _14) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x254 (= ?x106 _14)))
 (=> $x254 (and (= (time-to-state (+ time 1)) _15) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x264 (= ?x106 _15)))
 (=> $x264 (and (= (time-to-state (+ time 1)) _16) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x274 (= ?x106 _16)))
 (=> $x274 (and (= (time-to-state (+ time 1)) _17) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x284 (= ?x106 _17)))
 (=> $x284 (and (= (time-to-state (+ time 1)) _18) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x294 (= ?x106 _18)))
 (=> $x294 (and (= (time-to-state (+ time 1)) _19) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x304 (= ?x106 _19)))
 (=> $x304 (and (= (time-to-state (+ time 1)) _20) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x314 (= ?x106 _20)))
 (=> $x314 (and (= (time-to-state (+ time 1)) _21) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x324 (= ?x106 _21)))
 (=> $x324 (and (= (time-to-state (+ time 1)) _22) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x334 (= ?x106 _22)))
 (=> $x334 (and (= (time-to-state (+ time 1)) _23) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x344 (= ?x106 _23)))
 (=> $x344 (and (= (time-to-state (+ time 1)) _24) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x354 (= ?x106 _24)))
 (=> $x354 (and (= (time-to-state (+ time 1)) _25) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x364 (= ?x106 _25)))
 (=> $x364 (and (= (time-to-state (+ time 1)) _26) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x374 (= ?x106 _26)))
 (=> $x374 (and (= (time-to-state (+ time 1)) _27) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x384 (= ?x106 _27)))
 (=> $x384 (and (= (time-to-state (+ time 1)) _28) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x394 (= ?x106 _28)))
 (=> $x394 (and (= (time-to-state (+ time 1)) _29) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x404 (= ?x106 _29)))
 (=> $x404 (and (= (time-to-state (+ time 1)) _30) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x414 (= ?x106 _30)))
 (=> $x414 (and (= (time-to-state (+ time 1)) _31) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x424 (= ?x106 _31)))
 (=> $x424 (and (= (time-to-state (+ time 1)) _32) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x434 (= ?x106 _32)))
 (=> $x434 (and (= (time-to-state (+ time 1)) _33) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x444 (= ?x106 _33)))
 (=> $x444 (and (= (time-to-state (+ time 1)) _34) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x454 (= ?x106 _34)))
 (=> $x454 (and (= (time-to-state (+ time 1)) _35) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x464 (= ?x106 _35)))
 (=> $x464 (and (= (time-to-state (+ time 1)) _36) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x474 (= ?x106 _36)))
 (=> $x474 (and (= (time-to-state (+ time 1)) _37) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x484 (= ?x106 _37)))
 (=> $x484 (and (= (time-to-state (+ time 1)) _38) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x494 (= ?x106 _38)))
 (=> $x494 (and (= (time-to-state (+ time 1)) _39) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x504 (= ?x106 _39)))
 (=> $x504 (and (= (time-to-state (+ time 1)) _40) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x514 (= ?x106 _40)))
 (=> $x514 (and (= (time-to-state (+ time 1)) _41) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x524 (= ?x106 _41)))
 (=> $x524 (and (= (time-to-state (+ time 1)) _42) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x534 (= ?x106 _42)))
 (=> $x534 (and (= (time-to-state (+ time 1)) _43) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x544 (= ?x106 _43)))
 (=> $x544 (and (= (time-to-state (+ time 1)) _44) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x554 (= ?x106 _44)))
 (=> $x554 (and (= (time-to-state (+ time 1)) _45) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x564 (= ?x106 _45)))
 (=> $x564 (and (= (time-to-state (+ time 1)) _46) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x574 (= ?x106 _46)))
 (=> $x574 (and (= (time-to-state (+ time 1)) _47) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x584 (= ?x106 _47)))
 (=> $x584 (and (= (time-to-state (+ time 1)) _48) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x594 (= ?x106 _48)))
 (=> $x594 (and (= (time-to-state (+ time 1)) _49) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x604 (= ?x106 _49)))
 (=> $x604 (and (= (time-to-state (+ time 1)) _50) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x614 (= ?x106 _50)))
 (=> $x614 (and (= (time-to-state (+ time 1)) _51) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x624 (= ?x106 _51)))
 (=> $x624 (and (= (time-to-state (+ time 1)) _52) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x634 (= ?x106 _52)))
 (=> $x634 (and (= (time-to-state (+ time 1)) _53) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x644 (= ?x106 _53)))
 (=> $x644 (and (= (time-to-state (+ time 1)) _54) $x102))))))
 )
(assert
 (forall ((time Int) )(let (($x102 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x106 (time-to-state time)))
 (let (($x654 (= ?x106 _54)))
 (=> $x654 (and (= (time-to-state (+ time 1)) _55) $x102))))))
 )
(assert
 (forall ((time Int) )(let ((?x106 (time-to-state time)))
 (let (($x654 (= ?x106 _54)))
 (= $x654 (and (distinct (var0_0 time) 54) true)))))
 )
(assert
 (and (distinct _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55) true))
(check-sat)
