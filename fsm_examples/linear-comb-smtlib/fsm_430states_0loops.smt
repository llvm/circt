; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun var0_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(declare-fun _371 () STATE)
(declare-fun _372 () STATE)
(declare-fun _373 () STATE)
(declare-fun _374 () STATE)
(declare-fun _375 () STATE)
(declare-fun _376 () STATE)
(declare-fun _377 () STATE)
(declare-fun _378 () STATE)
(declare-fun _379 () STATE)
(declare-fun _380 () STATE)
(declare-fun _381 () STATE)
(declare-fun _382 () STATE)
(declare-fun _383 () STATE)
(declare-fun _384 () STATE)
(declare-fun _385 () STATE)
(declare-fun _386 () STATE)
(declare-fun _387 () STATE)
(declare-fun _388 () STATE)
(declare-fun _389 () STATE)
(declare-fun _390 () STATE)
(declare-fun _391 () STATE)
(declare-fun _392 () STATE)
(declare-fun _393 () STATE)
(declare-fun _394 () STATE)
(declare-fun _395 () STATE)
(declare-fun _396 () STATE)
(declare-fun _397 () STATE)
(declare-fun _398 () STATE)
(declare-fun _399 () STATE)
(declare-fun _400 () STATE)
(declare-fun _401 () STATE)
(declare-fun _402 () STATE)
(declare-fun _403 () STATE)
(declare-fun _404 () STATE)
(declare-fun _405 () STATE)
(declare-fun _406 () STATE)
(declare-fun _407 () STATE)
(declare-fun _408 () STATE)
(declare-fun _409 () STATE)
(declare-fun _410 () STATE)
(declare-fun _411 () STATE)
(declare-fun _412 () STATE)
(declare-fun _413 () STATE)
(declare-fun _414 () STATE)
(declare-fun _415 () STATE)
(declare-fun _416 () STATE)
(declare-fun _417 () STATE)
(declare-fun _418 () STATE)
(declare-fun _419 () STATE)
(declare-fun _420 () STATE)
(declare-fun _421 () STATE)
(declare-fun _422 () STATE)
(declare-fun _423 () STATE)
(declare-fun _424 () STATE)
(declare-fun _425 () STATE)
(declare-fun _426 () STATE)
(declare-fun _427 () STATE)
(declare-fun _428 () STATE)
(declare-fun _429 () STATE)
(declare-fun _430 () STATE)
(assert
 (let ((?x438 (time-to-state 0)))
 (= ?x438 _0)))
(assert
 (let ((?x458 (var0_0 0)))
 (= ?x458 0)))
(assert
 (let ((?x458 (var0_0 0)))
 (= ?x458 0)))
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x482 (= ?x481 _0)))
 (=> $x482 (and (= (time-to-state (+ time 1)) _1) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x499 (= ?x481 _1)))
 (=> $x499 (and (= (time-to-state (+ time 1)) _2) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x509 (= ?x481 _2)))
 (=> $x509 (and (= (time-to-state (+ time 1)) _3) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x519 (= ?x481 _3)))
 (=> $x519 (and (= (time-to-state (+ time 1)) _4) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x529 (= ?x481 _4)))
 (=> $x529 (and (= (time-to-state (+ time 1)) _5) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x539 (= ?x481 _5)))
 (=> $x539 (and (= (time-to-state (+ time 1)) _6) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x549 (= ?x481 _6)))
 (=> $x549 (and (= (time-to-state (+ time 1)) _7) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x559 (= ?x481 _7)))
 (=> $x559 (and (= (time-to-state (+ time 1)) _8) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x569 (= ?x481 _8)))
 (=> $x569 (and (= (time-to-state (+ time 1)) _9) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x579 (= ?x481 _9)))
 (=> $x579 (and (= (time-to-state (+ time 1)) _10) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x589 (= ?x481 _10)))
 (=> $x589 (and (= (time-to-state (+ time 1)) _11) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x599 (= ?x481 _11)))
 (=> $x599 (and (= (time-to-state (+ time 1)) _12) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x609 (= ?x481 _12)))
 (=> $x609 (and (= (time-to-state (+ time 1)) _13) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x619 (= ?x481 _13)))
 (=> $x619 (and (= (time-to-state (+ time 1)) _14) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x629 (= ?x481 _14)))
 (=> $x629 (and (= (time-to-state (+ time 1)) _15) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x639 (= ?x481 _15)))
 (=> $x639 (and (= (time-to-state (+ time 1)) _16) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x649 (= ?x481 _16)))
 (=> $x649 (and (= (time-to-state (+ time 1)) _17) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x659 (= ?x481 _17)))
 (=> $x659 (and (= (time-to-state (+ time 1)) _18) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x669 (= ?x481 _18)))
 (=> $x669 (and (= (time-to-state (+ time 1)) _19) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x679 (= ?x481 _19)))
 (=> $x679 (and (= (time-to-state (+ time 1)) _20) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x689 (= ?x481 _20)))
 (=> $x689 (and (= (time-to-state (+ time 1)) _21) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x699 (= ?x481 _21)))
 (=> $x699 (and (= (time-to-state (+ time 1)) _22) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x709 (= ?x481 _22)))
 (=> $x709 (and (= (time-to-state (+ time 1)) _23) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x719 (= ?x481 _23)))
 (=> $x719 (and (= (time-to-state (+ time 1)) _24) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x729 (= ?x481 _24)))
 (=> $x729 (and (= (time-to-state (+ time 1)) _25) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x739 (= ?x481 _25)))
 (=> $x739 (and (= (time-to-state (+ time 1)) _26) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x749 (= ?x481 _26)))
 (=> $x749 (and (= (time-to-state (+ time 1)) _27) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x759 (= ?x481 _27)))
 (=> $x759 (and (= (time-to-state (+ time 1)) _28) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x769 (= ?x481 _28)))
 (=> $x769 (and (= (time-to-state (+ time 1)) _29) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x779 (= ?x481 _29)))
 (=> $x779 (and (= (time-to-state (+ time 1)) _30) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x789 (= ?x481 _30)))
 (=> $x789 (and (= (time-to-state (+ time 1)) _31) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x799 (= ?x481 _31)))
 (=> $x799 (and (= (time-to-state (+ time 1)) _32) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x809 (= ?x481 _32)))
 (=> $x809 (and (= (time-to-state (+ time 1)) _33) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x819 (= ?x481 _33)))
 (=> $x819 (and (= (time-to-state (+ time 1)) _34) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x829 (= ?x481 _34)))
 (=> $x829 (and (= (time-to-state (+ time 1)) _35) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x839 (= ?x481 _35)))
 (=> $x839 (and (= (time-to-state (+ time 1)) _36) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x849 (= ?x481 _36)))
 (=> $x849 (and (= (time-to-state (+ time 1)) _37) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x859 (= ?x481 _37)))
 (=> $x859 (and (= (time-to-state (+ time 1)) _38) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x869 (= ?x481 _38)))
 (=> $x869 (and (= (time-to-state (+ time 1)) _39) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x879 (= ?x481 _39)))
 (=> $x879 (and (= (time-to-state (+ time 1)) _40) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x889 (= ?x481 _40)))
 (=> $x889 (and (= (time-to-state (+ time 1)) _41) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x899 (= ?x481 _41)))
 (=> $x899 (and (= (time-to-state (+ time 1)) _42) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x909 (= ?x481 _42)))
 (=> $x909 (and (= (time-to-state (+ time 1)) _43) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x919 (= ?x481 _43)))
 (=> $x919 (and (= (time-to-state (+ time 1)) _44) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x929 (= ?x481 _44)))
 (=> $x929 (and (= (time-to-state (+ time 1)) _45) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x939 (= ?x481 _45)))
 (=> $x939 (and (= (time-to-state (+ time 1)) _46) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x949 (= ?x481 _46)))
 (=> $x949 (and (= (time-to-state (+ time 1)) _47) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x959 (= ?x481 _47)))
 (=> $x959 (and (= (time-to-state (+ time 1)) _48) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x969 (= ?x481 _48)))
 (=> $x969 (and (= (time-to-state (+ time 1)) _49) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x979 (= ?x481 _49)))
 (=> $x979 (and (= (time-to-state (+ time 1)) _50) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x989 (= ?x481 _50)))
 (=> $x989 (and (= (time-to-state (+ time 1)) _51) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x999 (= ?x481 _51)))
 (=> $x999 (and (= (time-to-state (+ time 1)) _52) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1009 (= ?x481 _52)))
 (=> $x1009 (and (= (time-to-state (+ time 1)) _53) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1019 (= ?x481 _53)))
 (=> $x1019 (and (= (time-to-state (+ time 1)) _54) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1029 (= ?x481 _54)))
 (=> $x1029 (and (= (time-to-state (+ time 1)) _55) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1039 (= ?x481 _55)))
 (=> $x1039 (and (= (time-to-state (+ time 1)) _56) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1049 (= ?x481 _56)))
 (=> $x1049 (and (= (time-to-state (+ time 1)) _57) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1059 (= ?x481 _57)))
 (=> $x1059 (and (= (time-to-state (+ time 1)) _58) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1069 (= ?x481 _58)))
 (=> $x1069 (and (= (time-to-state (+ time 1)) _59) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1079 (= ?x481 _59)))
 (=> $x1079 (and (= (time-to-state (+ time 1)) _60) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1089 (= ?x481 _60)))
 (=> $x1089 (and (= (time-to-state (+ time 1)) _61) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1099 (= ?x481 _61)))
 (=> $x1099 (and (= (time-to-state (+ time 1)) _62) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1109 (= ?x481 _62)))
 (=> $x1109 (and (= (time-to-state (+ time 1)) _63) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1119 (= ?x481 _63)))
 (=> $x1119 (and (= (time-to-state (+ time 1)) _64) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1129 (= ?x481 _64)))
 (=> $x1129 (and (= (time-to-state (+ time 1)) _65) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1139 (= ?x481 _65)))
 (=> $x1139 (and (= (time-to-state (+ time 1)) _66) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1149 (= ?x481 _66)))
 (=> $x1149 (and (= (time-to-state (+ time 1)) _67) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1159 (= ?x481 _67)))
 (=> $x1159 (and (= (time-to-state (+ time 1)) _68) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1169 (= ?x481 _68)))
 (=> $x1169 (and (= (time-to-state (+ time 1)) _69) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1179 (= ?x481 _69)))
 (=> $x1179 (and (= (time-to-state (+ time 1)) _70) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1189 (= ?x481 _70)))
 (=> $x1189 (and (= (time-to-state (+ time 1)) _71) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1199 (= ?x481 _71)))
 (=> $x1199 (and (= (time-to-state (+ time 1)) _72) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1209 (= ?x481 _72)))
 (=> $x1209 (and (= (time-to-state (+ time 1)) _73) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1219 (= ?x481 _73)))
 (=> $x1219 (and (= (time-to-state (+ time 1)) _74) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1229 (= ?x481 _74)))
 (=> $x1229 (and (= (time-to-state (+ time 1)) _75) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1239 (= ?x481 _75)))
 (=> $x1239 (and (= (time-to-state (+ time 1)) _76) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1249 (= ?x481 _76)))
 (=> $x1249 (and (= (time-to-state (+ time 1)) _77) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1259 (= ?x481 _77)))
 (=> $x1259 (and (= (time-to-state (+ time 1)) _78) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1269 (= ?x481 _78)))
 (=> $x1269 (and (= (time-to-state (+ time 1)) _79) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1279 (= ?x481 _79)))
 (=> $x1279 (and (= (time-to-state (+ time 1)) _80) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1289 (= ?x481 _80)))
 (=> $x1289 (and (= (time-to-state (+ time 1)) _81) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1299 (= ?x481 _81)))
 (=> $x1299 (and (= (time-to-state (+ time 1)) _82) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1309 (= ?x481 _82)))
 (=> $x1309 (and (= (time-to-state (+ time 1)) _83) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1319 (= ?x481 _83)))
 (=> $x1319 (and (= (time-to-state (+ time 1)) _84) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1329 (= ?x481 _84)))
 (=> $x1329 (and (= (time-to-state (+ time 1)) _85) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1339 (= ?x481 _85)))
 (=> $x1339 (and (= (time-to-state (+ time 1)) _86) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1349 (= ?x481 _86)))
 (=> $x1349 (and (= (time-to-state (+ time 1)) _87) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1359 (= ?x481 _87)))
 (=> $x1359 (and (= (time-to-state (+ time 1)) _88) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1369 (= ?x481 _88)))
 (=> $x1369 (and (= (time-to-state (+ time 1)) _89) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1379 (= ?x481 _89)))
 (=> $x1379 (and (= (time-to-state (+ time 1)) _90) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1389 (= ?x481 _90)))
 (=> $x1389 (and (= (time-to-state (+ time 1)) _91) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1399 (= ?x481 _91)))
 (=> $x1399 (and (= (time-to-state (+ time 1)) _92) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1409 (= ?x481 _92)))
 (=> $x1409 (and (= (time-to-state (+ time 1)) _93) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1419 (= ?x481 _93)))
 (=> $x1419 (and (= (time-to-state (+ time 1)) _94) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1429 (= ?x481 _94)))
 (=> $x1429 (and (= (time-to-state (+ time 1)) _95) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1439 (= ?x481 _95)))
 (=> $x1439 (and (= (time-to-state (+ time 1)) _96) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1449 (= ?x481 _96)))
 (=> $x1449 (and (= (time-to-state (+ time 1)) _97) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1459 (= ?x481 _97)))
 (=> $x1459 (and (= (time-to-state (+ time 1)) _98) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1469 (= ?x481 _98)))
 (=> $x1469 (and (= (time-to-state (+ time 1)) _99) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1479 (= ?x481 _99)))
 (=> $x1479 (and (= (time-to-state (+ time 1)) _100) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1489 (= ?x481 _100)))
 (=> $x1489 (and (= (time-to-state (+ time 1)) _101) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1499 (= ?x481 _101)))
 (=> $x1499 (and (= (time-to-state (+ time 1)) _102) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1509 (= ?x481 _102)))
 (=> $x1509 (and (= (time-to-state (+ time 1)) _103) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1519 (= ?x481 _103)))
 (=> $x1519 (and (= (time-to-state (+ time 1)) _104) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1529 (= ?x481 _104)))
 (=> $x1529 (and (= (time-to-state (+ time 1)) _105) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1539 (= ?x481 _105)))
 (=> $x1539 (and (= (time-to-state (+ time 1)) _106) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1549 (= ?x481 _106)))
 (=> $x1549 (and (= (time-to-state (+ time 1)) _107) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1559 (= ?x481 _107)))
 (=> $x1559 (and (= (time-to-state (+ time 1)) _108) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1569 (= ?x481 _108)))
 (=> $x1569 (and (= (time-to-state (+ time 1)) _109) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1579 (= ?x481 _109)))
 (=> $x1579 (and (= (time-to-state (+ time 1)) _110) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1589 (= ?x481 _110)))
 (=> $x1589 (and (= (time-to-state (+ time 1)) _111) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1599 (= ?x481 _111)))
 (=> $x1599 (and (= (time-to-state (+ time 1)) _112) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1609 (= ?x481 _112)))
 (=> $x1609 (and (= (time-to-state (+ time 1)) _113) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1619 (= ?x481 _113)))
 (=> $x1619 (and (= (time-to-state (+ time 1)) _114) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1629 (= ?x481 _114)))
 (=> $x1629 (and (= (time-to-state (+ time 1)) _115) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1639 (= ?x481 _115)))
 (=> $x1639 (and (= (time-to-state (+ time 1)) _116) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1649 (= ?x481 _116)))
 (=> $x1649 (and (= (time-to-state (+ time 1)) _117) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1659 (= ?x481 _117)))
 (=> $x1659 (and (= (time-to-state (+ time 1)) _118) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1669 (= ?x481 _118)))
 (=> $x1669 (and (= (time-to-state (+ time 1)) _119) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1679 (= ?x481 _119)))
 (=> $x1679 (and (= (time-to-state (+ time 1)) _120) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1689 (= ?x481 _120)))
 (=> $x1689 (and (= (time-to-state (+ time 1)) _121) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1699 (= ?x481 _121)))
 (=> $x1699 (and (= (time-to-state (+ time 1)) _122) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1709 (= ?x481 _122)))
 (=> $x1709 (and (= (time-to-state (+ time 1)) _123) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1719 (= ?x481 _123)))
 (=> $x1719 (and (= (time-to-state (+ time 1)) _124) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1729 (= ?x481 _124)))
 (=> $x1729 (and (= (time-to-state (+ time 1)) _125) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1739 (= ?x481 _125)))
 (=> $x1739 (and (= (time-to-state (+ time 1)) _126) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1749 (= ?x481 _126)))
 (=> $x1749 (and (= (time-to-state (+ time 1)) _127) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1759 (= ?x481 _127)))
 (=> $x1759 (and (= (time-to-state (+ time 1)) _128) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1769 (= ?x481 _128)))
 (=> $x1769 (and (= (time-to-state (+ time 1)) _129) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1779 (= ?x481 _129)))
 (=> $x1779 (and (= (time-to-state (+ time 1)) _130) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1789 (= ?x481 _130)))
 (=> $x1789 (and (= (time-to-state (+ time 1)) _131) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1799 (= ?x481 _131)))
 (=> $x1799 (and (= (time-to-state (+ time 1)) _132) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1809 (= ?x481 _132)))
 (=> $x1809 (and (= (time-to-state (+ time 1)) _133) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1819 (= ?x481 _133)))
 (=> $x1819 (and (= (time-to-state (+ time 1)) _134) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1829 (= ?x481 _134)))
 (=> $x1829 (and (= (time-to-state (+ time 1)) _135) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1839 (= ?x481 _135)))
 (=> $x1839 (and (= (time-to-state (+ time 1)) _136) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1849 (= ?x481 _136)))
 (=> $x1849 (and (= (time-to-state (+ time 1)) _137) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1859 (= ?x481 _137)))
 (=> $x1859 (and (= (time-to-state (+ time 1)) _138) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1869 (= ?x481 _138)))
 (=> $x1869 (and (= (time-to-state (+ time 1)) _139) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1879 (= ?x481 _139)))
 (=> $x1879 (and (= (time-to-state (+ time 1)) _140) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1889 (= ?x481 _140)))
 (=> $x1889 (and (= (time-to-state (+ time 1)) _141) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1899 (= ?x481 _141)))
 (=> $x1899 (and (= (time-to-state (+ time 1)) _142) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1909 (= ?x481 _142)))
 (=> $x1909 (and (= (time-to-state (+ time 1)) _143) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1919 (= ?x481 _143)))
 (=> $x1919 (and (= (time-to-state (+ time 1)) _144) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1929 (= ?x481 _144)))
 (=> $x1929 (and (= (time-to-state (+ time 1)) _145) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1939 (= ?x481 _145)))
 (=> $x1939 (and (= (time-to-state (+ time 1)) _146) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1949 (= ?x481 _146)))
 (=> $x1949 (and (= (time-to-state (+ time 1)) _147) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1959 (= ?x481 _147)))
 (=> $x1959 (and (= (time-to-state (+ time 1)) _148) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1969 (= ?x481 _148)))
 (=> $x1969 (and (= (time-to-state (+ time 1)) _149) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1979 (= ?x481 _149)))
 (=> $x1979 (and (= (time-to-state (+ time 1)) _150) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1989 (= ?x481 _150)))
 (=> $x1989 (and (= (time-to-state (+ time 1)) _151) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x1999 (= ?x481 _151)))
 (=> $x1999 (and (= (time-to-state (+ time 1)) _152) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2009 (= ?x481 _152)))
 (=> $x2009 (and (= (time-to-state (+ time 1)) _153) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2019 (= ?x481 _153)))
 (=> $x2019 (and (= (time-to-state (+ time 1)) _154) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2029 (= ?x481 _154)))
 (=> $x2029 (and (= (time-to-state (+ time 1)) _155) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2039 (= ?x481 _155)))
 (=> $x2039 (and (= (time-to-state (+ time 1)) _156) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2049 (= ?x481 _156)))
 (=> $x2049 (and (= (time-to-state (+ time 1)) _157) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2059 (= ?x481 _157)))
 (=> $x2059 (and (= (time-to-state (+ time 1)) _158) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2069 (= ?x481 _158)))
 (=> $x2069 (and (= (time-to-state (+ time 1)) _159) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2079 (= ?x481 _159)))
 (=> $x2079 (and (= (time-to-state (+ time 1)) _160) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2089 (= ?x481 _160)))
 (=> $x2089 (and (= (time-to-state (+ time 1)) _161) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2099 (= ?x481 _161)))
 (=> $x2099 (and (= (time-to-state (+ time 1)) _162) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2109 (= ?x481 _162)))
 (=> $x2109 (and (= (time-to-state (+ time 1)) _163) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2119 (= ?x481 _163)))
 (=> $x2119 (and (= (time-to-state (+ time 1)) _164) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2129 (= ?x481 _164)))
 (=> $x2129 (and (= (time-to-state (+ time 1)) _165) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2139 (= ?x481 _165)))
 (=> $x2139 (and (= (time-to-state (+ time 1)) _166) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2149 (= ?x481 _166)))
 (=> $x2149 (and (= (time-to-state (+ time 1)) _167) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2159 (= ?x481 _167)))
 (=> $x2159 (and (= (time-to-state (+ time 1)) _168) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2169 (= ?x481 _168)))
 (=> $x2169 (and (= (time-to-state (+ time 1)) _169) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2179 (= ?x481 _169)))
 (=> $x2179 (and (= (time-to-state (+ time 1)) _170) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2189 (= ?x481 _170)))
 (=> $x2189 (and (= (time-to-state (+ time 1)) _171) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2199 (= ?x481 _171)))
 (=> $x2199 (and (= (time-to-state (+ time 1)) _172) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2209 (= ?x481 _172)))
 (=> $x2209 (and (= (time-to-state (+ time 1)) _173) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2219 (= ?x481 _173)))
 (=> $x2219 (and (= (time-to-state (+ time 1)) _174) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2229 (= ?x481 _174)))
 (=> $x2229 (and (= (time-to-state (+ time 1)) _175) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2239 (= ?x481 _175)))
 (=> $x2239 (and (= (time-to-state (+ time 1)) _176) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2249 (= ?x481 _176)))
 (=> $x2249 (and (= (time-to-state (+ time 1)) _177) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2259 (= ?x481 _177)))
 (=> $x2259 (and (= (time-to-state (+ time 1)) _178) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2269 (= ?x481 _178)))
 (=> $x2269 (and (= (time-to-state (+ time 1)) _179) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2279 (= ?x481 _179)))
 (=> $x2279 (and (= (time-to-state (+ time 1)) _180) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2289 (= ?x481 _180)))
 (=> $x2289 (and (= (time-to-state (+ time 1)) _181) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2299 (= ?x481 _181)))
 (=> $x2299 (and (= (time-to-state (+ time 1)) _182) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2309 (= ?x481 _182)))
 (=> $x2309 (and (= (time-to-state (+ time 1)) _183) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2319 (= ?x481 _183)))
 (=> $x2319 (and (= (time-to-state (+ time 1)) _184) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2329 (= ?x481 _184)))
 (=> $x2329 (and (= (time-to-state (+ time 1)) _185) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2339 (= ?x481 _185)))
 (=> $x2339 (and (= (time-to-state (+ time 1)) _186) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2349 (= ?x481 _186)))
 (=> $x2349 (and (= (time-to-state (+ time 1)) _187) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2359 (= ?x481 _187)))
 (=> $x2359 (and (= (time-to-state (+ time 1)) _188) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2369 (= ?x481 _188)))
 (=> $x2369 (and (= (time-to-state (+ time 1)) _189) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2379 (= ?x481 _189)))
 (=> $x2379 (and (= (time-to-state (+ time 1)) _190) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2389 (= ?x481 _190)))
 (=> $x2389 (and (= (time-to-state (+ time 1)) _191) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2399 (= ?x481 _191)))
 (=> $x2399 (and (= (time-to-state (+ time 1)) _192) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2409 (= ?x481 _192)))
 (=> $x2409 (and (= (time-to-state (+ time 1)) _193) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2419 (= ?x481 _193)))
 (=> $x2419 (and (= (time-to-state (+ time 1)) _194) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2429 (= ?x481 _194)))
 (=> $x2429 (and (= (time-to-state (+ time 1)) _195) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2439 (= ?x481 _195)))
 (=> $x2439 (and (= (time-to-state (+ time 1)) _196) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2449 (= ?x481 _196)))
 (=> $x2449 (and (= (time-to-state (+ time 1)) _197) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2459 (= ?x481 _197)))
 (=> $x2459 (and (= (time-to-state (+ time 1)) _198) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2469 (= ?x481 _198)))
 (=> $x2469 (and (= (time-to-state (+ time 1)) _199) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2479 (= ?x481 _199)))
 (=> $x2479 (and (= (time-to-state (+ time 1)) _200) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2489 (= ?x481 _200)))
 (=> $x2489 (and (= (time-to-state (+ time 1)) _201) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2499 (= ?x481 _201)))
 (=> $x2499 (and (= (time-to-state (+ time 1)) _202) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2509 (= ?x481 _202)))
 (=> $x2509 (and (= (time-to-state (+ time 1)) _203) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2519 (= ?x481 _203)))
 (=> $x2519 (and (= (time-to-state (+ time 1)) _204) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2529 (= ?x481 _204)))
 (=> $x2529 (and (= (time-to-state (+ time 1)) _205) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2539 (= ?x481 _205)))
 (=> $x2539 (and (= (time-to-state (+ time 1)) _206) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2549 (= ?x481 _206)))
 (=> $x2549 (and (= (time-to-state (+ time 1)) _207) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2559 (= ?x481 _207)))
 (=> $x2559 (and (= (time-to-state (+ time 1)) _208) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2569 (= ?x481 _208)))
 (=> $x2569 (and (= (time-to-state (+ time 1)) _209) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2579 (= ?x481 _209)))
 (=> $x2579 (and (= (time-to-state (+ time 1)) _210) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2589 (= ?x481 _210)))
 (=> $x2589 (and (= (time-to-state (+ time 1)) _211) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2599 (= ?x481 _211)))
 (=> $x2599 (and (= (time-to-state (+ time 1)) _212) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2609 (= ?x481 _212)))
 (=> $x2609 (and (= (time-to-state (+ time 1)) _213) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2619 (= ?x481 _213)))
 (=> $x2619 (and (= (time-to-state (+ time 1)) _214) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2629 (= ?x481 _214)))
 (=> $x2629 (and (= (time-to-state (+ time 1)) _215) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2639 (= ?x481 _215)))
 (=> $x2639 (and (= (time-to-state (+ time 1)) _216) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2649 (= ?x481 _216)))
 (=> $x2649 (and (= (time-to-state (+ time 1)) _217) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2659 (= ?x481 _217)))
 (=> $x2659 (and (= (time-to-state (+ time 1)) _218) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2669 (= ?x481 _218)))
 (=> $x2669 (and (= (time-to-state (+ time 1)) _219) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2679 (= ?x481 _219)))
 (=> $x2679 (and (= (time-to-state (+ time 1)) _220) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2689 (= ?x481 _220)))
 (=> $x2689 (and (= (time-to-state (+ time 1)) _221) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2699 (= ?x481 _221)))
 (=> $x2699 (and (= (time-to-state (+ time 1)) _222) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2709 (= ?x481 _222)))
 (=> $x2709 (and (= (time-to-state (+ time 1)) _223) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2719 (= ?x481 _223)))
 (=> $x2719 (and (= (time-to-state (+ time 1)) _224) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2729 (= ?x481 _224)))
 (=> $x2729 (and (= (time-to-state (+ time 1)) _225) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2739 (= ?x481 _225)))
 (=> $x2739 (and (= (time-to-state (+ time 1)) _226) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2749 (= ?x481 _226)))
 (=> $x2749 (and (= (time-to-state (+ time 1)) _227) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2759 (= ?x481 _227)))
 (=> $x2759 (and (= (time-to-state (+ time 1)) _228) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2769 (= ?x481 _228)))
 (=> $x2769 (and (= (time-to-state (+ time 1)) _229) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2779 (= ?x481 _229)))
 (=> $x2779 (and (= (time-to-state (+ time 1)) _230) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2789 (= ?x481 _230)))
 (=> $x2789 (and (= (time-to-state (+ time 1)) _231) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2799 (= ?x481 _231)))
 (=> $x2799 (and (= (time-to-state (+ time 1)) _232) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2809 (= ?x481 _232)))
 (=> $x2809 (and (= (time-to-state (+ time 1)) _233) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2819 (= ?x481 _233)))
 (=> $x2819 (and (= (time-to-state (+ time 1)) _234) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2829 (= ?x481 _234)))
 (=> $x2829 (and (= (time-to-state (+ time 1)) _235) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2839 (= ?x481 _235)))
 (=> $x2839 (and (= (time-to-state (+ time 1)) _236) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2849 (= ?x481 _236)))
 (=> $x2849 (and (= (time-to-state (+ time 1)) _237) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2859 (= ?x481 _237)))
 (=> $x2859 (and (= (time-to-state (+ time 1)) _238) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2869 (= ?x481 _238)))
 (=> $x2869 (and (= (time-to-state (+ time 1)) _239) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2879 (= ?x481 _239)))
 (=> $x2879 (and (= (time-to-state (+ time 1)) _240) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2889 (= ?x481 _240)))
 (=> $x2889 (and (= (time-to-state (+ time 1)) _241) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2899 (= ?x481 _241)))
 (=> $x2899 (and (= (time-to-state (+ time 1)) _242) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2909 (= ?x481 _242)))
 (=> $x2909 (and (= (time-to-state (+ time 1)) _243) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2919 (= ?x481 _243)))
 (=> $x2919 (and (= (time-to-state (+ time 1)) _244) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2929 (= ?x481 _244)))
 (=> $x2929 (and (= (time-to-state (+ time 1)) _245) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2939 (= ?x481 _245)))
 (=> $x2939 (and (= (time-to-state (+ time 1)) _246) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2949 (= ?x481 _246)))
 (=> $x2949 (and (= (time-to-state (+ time 1)) _247) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2959 (= ?x481 _247)))
 (=> $x2959 (and (= (time-to-state (+ time 1)) _248) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2969 (= ?x481 _248)))
 (=> $x2969 (and (= (time-to-state (+ time 1)) _249) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2979 (= ?x481 _249)))
 (=> $x2979 (and (= (time-to-state (+ time 1)) _250) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2989 (= ?x481 _250)))
 (=> $x2989 (and (= (time-to-state (+ time 1)) _251) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x2999 (= ?x481 _251)))
 (=> $x2999 (and (= (time-to-state (+ time 1)) _252) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3009 (= ?x481 _252)))
 (=> $x3009 (and (= (time-to-state (+ time 1)) _253) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3019 (= ?x481 _253)))
 (=> $x3019 (and (= (time-to-state (+ time 1)) _254) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3029 (= ?x481 _254)))
 (=> $x3029 (and (= (time-to-state (+ time 1)) _255) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3039 (= ?x481 _255)))
 (=> $x3039 (and (= (time-to-state (+ time 1)) _256) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3049 (= ?x481 _256)))
 (=> $x3049 (and (= (time-to-state (+ time 1)) _257) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3059 (= ?x481 _257)))
 (=> $x3059 (and (= (time-to-state (+ time 1)) _258) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3069 (= ?x481 _258)))
 (=> $x3069 (and (= (time-to-state (+ time 1)) _259) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3079 (= ?x481 _259)))
 (=> $x3079 (and (= (time-to-state (+ time 1)) _260) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3089 (= ?x481 _260)))
 (=> $x3089 (and (= (time-to-state (+ time 1)) _261) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3099 (= ?x481 _261)))
 (=> $x3099 (and (= (time-to-state (+ time 1)) _262) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3109 (= ?x481 _262)))
 (=> $x3109 (and (= (time-to-state (+ time 1)) _263) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3119 (= ?x481 _263)))
 (=> $x3119 (and (= (time-to-state (+ time 1)) _264) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3129 (= ?x481 _264)))
 (=> $x3129 (and (= (time-to-state (+ time 1)) _265) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3139 (= ?x481 _265)))
 (=> $x3139 (and (= (time-to-state (+ time 1)) _266) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3149 (= ?x481 _266)))
 (=> $x3149 (and (= (time-to-state (+ time 1)) _267) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3159 (= ?x481 _267)))
 (=> $x3159 (and (= (time-to-state (+ time 1)) _268) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3169 (= ?x481 _268)))
 (=> $x3169 (and (= (time-to-state (+ time 1)) _269) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3179 (= ?x481 _269)))
 (=> $x3179 (and (= (time-to-state (+ time 1)) _270) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3189 (= ?x481 _270)))
 (=> $x3189 (and (= (time-to-state (+ time 1)) _271) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3199 (= ?x481 _271)))
 (=> $x3199 (and (= (time-to-state (+ time 1)) _272) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3209 (= ?x481 _272)))
 (=> $x3209 (and (= (time-to-state (+ time 1)) _273) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3219 (= ?x481 _273)))
 (=> $x3219 (and (= (time-to-state (+ time 1)) _274) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3229 (= ?x481 _274)))
 (=> $x3229 (and (= (time-to-state (+ time 1)) _275) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3239 (= ?x481 _275)))
 (=> $x3239 (and (= (time-to-state (+ time 1)) _276) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3249 (= ?x481 _276)))
 (=> $x3249 (and (= (time-to-state (+ time 1)) _277) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3259 (= ?x481 _277)))
 (=> $x3259 (and (= (time-to-state (+ time 1)) _278) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3269 (= ?x481 _278)))
 (=> $x3269 (and (= (time-to-state (+ time 1)) _279) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3279 (= ?x481 _279)))
 (=> $x3279 (and (= (time-to-state (+ time 1)) _280) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3289 (= ?x481 _280)))
 (=> $x3289 (and (= (time-to-state (+ time 1)) _281) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3299 (= ?x481 _281)))
 (=> $x3299 (and (= (time-to-state (+ time 1)) _282) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3309 (= ?x481 _282)))
 (=> $x3309 (and (= (time-to-state (+ time 1)) _283) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3319 (= ?x481 _283)))
 (=> $x3319 (and (= (time-to-state (+ time 1)) _284) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3329 (= ?x481 _284)))
 (=> $x3329 (and (= (time-to-state (+ time 1)) _285) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3339 (= ?x481 _285)))
 (=> $x3339 (and (= (time-to-state (+ time 1)) _286) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3349 (= ?x481 _286)))
 (=> $x3349 (and (= (time-to-state (+ time 1)) _287) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3359 (= ?x481 _287)))
 (=> $x3359 (and (= (time-to-state (+ time 1)) _288) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3369 (= ?x481 _288)))
 (=> $x3369 (and (= (time-to-state (+ time 1)) _289) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3379 (= ?x481 _289)))
 (=> $x3379 (and (= (time-to-state (+ time 1)) _290) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3389 (= ?x481 _290)))
 (=> $x3389 (and (= (time-to-state (+ time 1)) _291) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3399 (= ?x481 _291)))
 (=> $x3399 (and (= (time-to-state (+ time 1)) _292) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3409 (= ?x481 _292)))
 (=> $x3409 (and (= (time-to-state (+ time 1)) _293) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3419 (= ?x481 _293)))
 (=> $x3419 (and (= (time-to-state (+ time 1)) _294) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3429 (= ?x481 _294)))
 (=> $x3429 (and (= (time-to-state (+ time 1)) _295) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3439 (= ?x481 _295)))
 (=> $x3439 (and (= (time-to-state (+ time 1)) _296) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3449 (= ?x481 _296)))
 (=> $x3449 (and (= (time-to-state (+ time 1)) _297) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3459 (= ?x481 _297)))
 (=> $x3459 (and (= (time-to-state (+ time 1)) _298) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3469 (= ?x481 _298)))
 (=> $x3469 (and (= (time-to-state (+ time 1)) _299) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3479 (= ?x481 _299)))
 (=> $x3479 (and (= (time-to-state (+ time 1)) _300) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3489 (= ?x481 _300)))
 (=> $x3489 (and (= (time-to-state (+ time 1)) _301) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3499 (= ?x481 _301)))
 (=> $x3499 (and (= (time-to-state (+ time 1)) _302) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3509 (= ?x481 _302)))
 (=> $x3509 (and (= (time-to-state (+ time 1)) _303) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3519 (= ?x481 _303)))
 (=> $x3519 (and (= (time-to-state (+ time 1)) _304) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3529 (= ?x481 _304)))
 (=> $x3529 (and (= (time-to-state (+ time 1)) _305) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3539 (= ?x481 _305)))
 (=> $x3539 (and (= (time-to-state (+ time 1)) _306) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3549 (= ?x481 _306)))
 (=> $x3549 (and (= (time-to-state (+ time 1)) _307) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3559 (= ?x481 _307)))
 (=> $x3559 (and (= (time-to-state (+ time 1)) _308) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3569 (= ?x481 _308)))
 (=> $x3569 (and (= (time-to-state (+ time 1)) _309) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3579 (= ?x481 _309)))
 (=> $x3579 (and (= (time-to-state (+ time 1)) _310) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3589 (= ?x481 _310)))
 (=> $x3589 (and (= (time-to-state (+ time 1)) _311) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3599 (= ?x481 _311)))
 (=> $x3599 (and (= (time-to-state (+ time 1)) _312) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3609 (= ?x481 _312)))
 (=> $x3609 (and (= (time-to-state (+ time 1)) _313) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3619 (= ?x481 _313)))
 (=> $x3619 (and (= (time-to-state (+ time 1)) _314) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3629 (= ?x481 _314)))
 (=> $x3629 (and (= (time-to-state (+ time 1)) _315) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3639 (= ?x481 _315)))
 (=> $x3639 (and (= (time-to-state (+ time 1)) _316) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3649 (= ?x481 _316)))
 (=> $x3649 (and (= (time-to-state (+ time 1)) _317) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3659 (= ?x481 _317)))
 (=> $x3659 (and (= (time-to-state (+ time 1)) _318) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3669 (= ?x481 _318)))
 (=> $x3669 (and (= (time-to-state (+ time 1)) _319) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3679 (= ?x481 _319)))
 (=> $x3679 (and (= (time-to-state (+ time 1)) _320) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3689 (= ?x481 _320)))
 (=> $x3689 (and (= (time-to-state (+ time 1)) _321) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3699 (= ?x481 _321)))
 (=> $x3699 (and (= (time-to-state (+ time 1)) _322) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3709 (= ?x481 _322)))
 (=> $x3709 (and (= (time-to-state (+ time 1)) _323) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3719 (= ?x481 _323)))
 (=> $x3719 (and (= (time-to-state (+ time 1)) _324) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3729 (= ?x481 _324)))
 (=> $x3729 (and (= (time-to-state (+ time 1)) _325) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3739 (= ?x481 _325)))
 (=> $x3739 (and (= (time-to-state (+ time 1)) _326) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3749 (= ?x481 _326)))
 (=> $x3749 (and (= (time-to-state (+ time 1)) _327) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3759 (= ?x481 _327)))
 (=> $x3759 (and (= (time-to-state (+ time 1)) _328) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3769 (= ?x481 _328)))
 (=> $x3769 (and (= (time-to-state (+ time 1)) _329) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3779 (= ?x481 _329)))
 (=> $x3779 (and (= (time-to-state (+ time 1)) _330) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3789 (= ?x481 _330)))
 (=> $x3789 (and (= (time-to-state (+ time 1)) _331) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3799 (= ?x481 _331)))
 (=> $x3799 (and (= (time-to-state (+ time 1)) _332) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3809 (= ?x481 _332)))
 (=> $x3809 (and (= (time-to-state (+ time 1)) _333) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3819 (= ?x481 _333)))
 (=> $x3819 (and (= (time-to-state (+ time 1)) _334) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3829 (= ?x481 _334)))
 (=> $x3829 (and (= (time-to-state (+ time 1)) _335) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3839 (= ?x481 _335)))
 (=> $x3839 (and (= (time-to-state (+ time 1)) _336) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3849 (= ?x481 _336)))
 (=> $x3849 (and (= (time-to-state (+ time 1)) _337) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3859 (= ?x481 _337)))
 (=> $x3859 (and (= (time-to-state (+ time 1)) _338) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3869 (= ?x481 _338)))
 (=> $x3869 (and (= (time-to-state (+ time 1)) _339) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3879 (= ?x481 _339)))
 (=> $x3879 (and (= (time-to-state (+ time 1)) _340) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3889 (= ?x481 _340)))
 (=> $x3889 (and (= (time-to-state (+ time 1)) _341) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3899 (= ?x481 _341)))
 (=> $x3899 (and (= (time-to-state (+ time 1)) _342) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3909 (= ?x481 _342)))
 (=> $x3909 (and (= (time-to-state (+ time 1)) _343) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3919 (= ?x481 _343)))
 (=> $x3919 (and (= (time-to-state (+ time 1)) _344) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3929 (= ?x481 _344)))
 (=> $x3929 (and (= (time-to-state (+ time 1)) _345) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3939 (= ?x481 _345)))
 (=> $x3939 (and (= (time-to-state (+ time 1)) _346) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3949 (= ?x481 _346)))
 (=> $x3949 (and (= (time-to-state (+ time 1)) _347) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3959 (= ?x481 _347)))
 (=> $x3959 (and (= (time-to-state (+ time 1)) _348) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3969 (= ?x481 _348)))
 (=> $x3969 (and (= (time-to-state (+ time 1)) _349) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3979 (= ?x481 _349)))
 (=> $x3979 (and (= (time-to-state (+ time 1)) _350) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3989 (= ?x481 _350)))
 (=> $x3989 (and (= (time-to-state (+ time 1)) _351) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x3999 (= ?x481 _351)))
 (=> $x3999 (and (= (time-to-state (+ time 1)) _352) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4009 (= ?x481 _352)))
 (=> $x4009 (and (= (time-to-state (+ time 1)) _353) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4019 (= ?x481 _353)))
 (=> $x4019 (and (= (time-to-state (+ time 1)) _354) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4029 (= ?x481 _354)))
 (=> $x4029 (and (= (time-to-state (+ time 1)) _355) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4039 (= ?x481 _355)))
 (=> $x4039 (and (= (time-to-state (+ time 1)) _356) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4049 (= ?x481 _356)))
 (=> $x4049 (and (= (time-to-state (+ time 1)) _357) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4059 (= ?x481 _357)))
 (=> $x4059 (and (= (time-to-state (+ time 1)) _358) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4069 (= ?x481 _358)))
 (=> $x4069 (and (= (time-to-state (+ time 1)) _359) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4079 (= ?x481 _359)))
 (=> $x4079 (and (= (time-to-state (+ time 1)) _360) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4089 (= ?x481 _360)))
 (=> $x4089 (and (= (time-to-state (+ time 1)) _361) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4099 (= ?x481 _361)))
 (=> $x4099 (and (= (time-to-state (+ time 1)) _362) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4109 (= ?x481 _362)))
 (=> $x4109 (and (= (time-to-state (+ time 1)) _363) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4119 (= ?x481 _363)))
 (=> $x4119 (and (= (time-to-state (+ time 1)) _364) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4129 (= ?x481 _364)))
 (=> $x4129 (and (= (time-to-state (+ time 1)) _365) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4139 (= ?x481 _365)))
 (=> $x4139 (and (= (time-to-state (+ time 1)) _366) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4149 (= ?x481 _366)))
 (=> $x4149 (and (= (time-to-state (+ time 1)) _367) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4159 (= ?x481 _367)))
 (=> $x4159 (and (= (time-to-state (+ time 1)) _368) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4169 (= ?x481 _368)))
 (=> $x4169 (and (= (time-to-state (+ time 1)) _369) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4179 (= ?x481 _369)))
 (=> $x4179 (and (= (time-to-state (+ time 1)) _370) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4189 (= ?x481 _370)))
 (=> $x4189 (and (= (time-to-state (+ time 1)) _371) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4199 (= ?x481 _371)))
 (=> $x4199 (and (= (time-to-state (+ time 1)) _372) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4209 (= ?x481 _372)))
 (=> $x4209 (and (= (time-to-state (+ time 1)) _373) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4219 (= ?x481 _373)))
 (=> $x4219 (and (= (time-to-state (+ time 1)) _374) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4229 (= ?x481 _374)))
 (=> $x4229 (and (= (time-to-state (+ time 1)) _375) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4239 (= ?x481 _375)))
 (=> $x4239 (and (= (time-to-state (+ time 1)) _376) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4249 (= ?x481 _376)))
 (=> $x4249 (and (= (time-to-state (+ time 1)) _377) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4259 (= ?x481 _377)))
 (=> $x4259 (and (= (time-to-state (+ time 1)) _378) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4269 (= ?x481 _378)))
 (=> $x4269 (and (= (time-to-state (+ time 1)) _379) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4279 (= ?x481 _379)))
 (=> $x4279 (and (= (time-to-state (+ time 1)) _380) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4289 (= ?x481 _380)))
 (=> $x4289 (and (= (time-to-state (+ time 1)) _381) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4299 (= ?x481 _381)))
 (=> $x4299 (and (= (time-to-state (+ time 1)) _382) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4309 (= ?x481 _382)))
 (=> $x4309 (and (= (time-to-state (+ time 1)) _383) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4319 (= ?x481 _383)))
 (=> $x4319 (and (= (time-to-state (+ time 1)) _384) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4329 (= ?x481 _384)))
 (=> $x4329 (and (= (time-to-state (+ time 1)) _385) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4339 (= ?x481 _385)))
 (=> $x4339 (and (= (time-to-state (+ time 1)) _386) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4349 (= ?x481 _386)))
 (=> $x4349 (and (= (time-to-state (+ time 1)) _387) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4359 (= ?x481 _387)))
 (=> $x4359 (and (= (time-to-state (+ time 1)) _388) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4369 (= ?x481 _388)))
 (=> $x4369 (and (= (time-to-state (+ time 1)) _389) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4379 (= ?x481 _389)))
 (=> $x4379 (and (= (time-to-state (+ time 1)) _390) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4389 (= ?x481 _390)))
 (=> $x4389 (and (= (time-to-state (+ time 1)) _391) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4399 (= ?x481 _391)))
 (=> $x4399 (and (= (time-to-state (+ time 1)) _392) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4409 (= ?x481 _392)))
 (=> $x4409 (and (= (time-to-state (+ time 1)) _393) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4419 (= ?x481 _393)))
 (=> $x4419 (and (= (time-to-state (+ time 1)) _394) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4429 (= ?x481 _394)))
 (=> $x4429 (and (= (time-to-state (+ time 1)) _395) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4439 (= ?x481 _395)))
 (=> $x4439 (and (= (time-to-state (+ time 1)) _396) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4449 (= ?x481 _396)))
 (=> $x4449 (and (= (time-to-state (+ time 1)) _397) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4459 (= ?x481 _397)))
 (=> $x4459 (and (= (time-to-state (+ time 1)) _398) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4469 (= ?x481 _398)))
 (=> $x4469 (and (= (time-to-state (+ time 1)) _399) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4479 (= ?x481 _399)))
 (=> $x4479 (and (= (time-to-state (+ time 1)) _400) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4489 (= ?x481 _400)))
 (=> $x4489 (and (= (time-to-state (+ time 1)) _401) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4499 (= ?x481 _401)))
 (=> $x4499 (and (= (time-to-state (+ time 1)) _402) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4509 (= ?x481 _402)))
 (=> $x4509 (and (= (time-to-state (+ time 1)) _403) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4519 (= ?x481 _403)))
 (=> $x4519 (and (= (time-to-state (+ time 1)) _404) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4529 (= ?x481 _404)))
 (=> $x4529 (and (= (time-to-state (+ time 1)) _405) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4539 (= ?x481 _405)))
 (=> $x4539 (and (= (time-to-state (+ time 1)) _406) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4549 (= ?x481 _406)))
 (=> $x4549 (and (= (time-to-state (+ time 1)) _407) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4559 (= ?x481 _407)))
 (=> $x4559 (and (= (time-to-state (+ time 1)) _408) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4569 (= ?x481 _408)))
 (=> $x4569 (and (= (time-to-state (+ time 1)) _409) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4579 (= ?x481 _409)))
 (=> $x4579 (and (= (time-to-state (+ time 1)) _410) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4589 (= ?x481 _410)))
 (=> $x4589 (and (= (time-to-state (+ time 1)) _411) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4599 (= ?x481 _411)))
 (=> $x4599 (and (= (time-to-state (+ time 1)) _412) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4609 (= ?x481 _412)))
 (=> $x4609 (and (= (time-to-state (+ time 1)) _413) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4619 (= ?x481 _413)))
 (=> $x4619 (and (= (time-to-state (+ time 1)) _414) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4629 (= ?x481 _414)))
 (=> $x4629 (and (= (time-to-state (+ time 1)) _415) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4639 (= ?x481 _415)))
 (=> $x4639 (and (= (time-to-state (+ time 1)) _416) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4649 (= ?x481 _416)))
 (=> $x4649 (and (= (time-to-state (+ time 1)) _417) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4659 (= ?x481 _417)))
 (=> $x4659 (and (= (time-to-state (+ time 1)) _418) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4669 (= ?x481 _418)))
 (=> $x4669 (and (= (time-to-state (+ time 1)) _419) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4679 (= ?x481 _419)))
 (=> $x4679 (and (= (time-to-state (+ time 1)) _420) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4689 (= ?x481 _420)))
 (=> $x4689 (and (= (time-to-state (+ time 1)) _421) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4699 (= ?x481 _421)))
 (=> $x4699 (and (= (time-to-state (+ time 1)) _422) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4709 (= ?x481 _422)))
 (=> $x4709 (and (= (time-to-state (+ time 1)) _423) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4719 (= ?x481 _423)))
 (=> $x4719 (and (= (time-to-state (+ time 1)) _424) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4729 (= ?x481 _424)))
 (=> $x4729 (and (= (time-to-state (+ time 1)) _425) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4739 (= ?x481 _425)))
 (=> $x4739 (and (= (time-to-state (+ time 1)) _426) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4749 (= ?x481 _426)))
 (=> $x4749 (and (= (time-to-state (+ time 1)) _427) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4759 (= ?x481 _427)))
 (=> $x4759 (and (= (time-to-state (+ time 1)) _428) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4769 (= ?x481 _428)))
 (=> $x4769 (and (= (time-to-state (+ time 1)) _429) $x477))))))
 )
(assert
 (forall ((time Int) )(let (($x477 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x481 (time-to-state time)))
 (let (($x4779 (= ?x481 _429)))
 (=> $x4779 (and (= (time-to-state (+ time 1)) _430) $x477))))))
 )
(assert
 (forall ((time Int) )(let ((?x481 (time-to-state time)))
 (let (($x4779 (= ?x481 _429)))
 (= $x4779 (and (distinct (var0_0 time) 429) true)))))
 )
(assert
 (and (distinct _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370 _371 _372 _373 _374 _375 _376 _377 _378 _379 _380 _381 _382 _383 _384 _385 _386 _387 _388 _389 _390 _391 _392 _393 _394 _395 _396 _397 _398 _399 _400 _401 _402 _403 _404 _405 _406 _407 _408 _409 _410 _411 _412 _413 _414 _415 _416 _417 _418 _419 _420 _421 _422 _423 _424 _425 _426 _427 _428 _429 _430) true))
(check-sat)
