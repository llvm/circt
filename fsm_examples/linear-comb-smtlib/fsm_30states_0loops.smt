; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun var0_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(assert
 (let ((?x38 (time-to-state 0)))
 (= ?x38 _0)))
(assert
 (let ((?x58 (var0_0 0)))
 (= ?x58 0)))
(assert
 (let ((?x58 (var0_0 0)))
 (= ?x58 0)))
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x82 (= ?x81 _0)))
 (=> $x82 (and (= (time-to-state (+ time 1)) _1) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x99 (= ?x81 _1)))
 (=> $x99 (and (= (time-to-state (+ time 1)) _2) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x109 (= ?x81 _2)))
 (=> $x109 (and (= (time-to-state (+ time 1)) _3) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x119 (= ?x81 _3)))
 (=> $x119 (and (= (time-to-state (+ time 1)) _4) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x129 (= ?x81 _4)))
 (=> $x129 (and (= (time-to-state (+ time 1)) _5) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x139 (= ?x81 _5)))
 (=> $x139 (and (= (time-to-state (+ time 1)) _6) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x149 (= ?x81 _6)))
 (=> $x149 (and (= (time-to-state (+ time 1)) _7) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x159 (= ?x81 _7)))
 (=> $x159 (and (= (time-to-state (+ time 1)) _8) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x169 (= ?x81 _8)))
 (=> $x169 (and (= (time-to-state (+ time 1)) _9) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x179 (= ?x81 _9)))
 (=> $x179 (and (= (time-to-state (+ time 1)) _10) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x189 (= ?x81 _10)))
 (=> $x189 (and (= (time-to-state (+ time 1)) _11) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x199 (= ?x81 _11)))
 (=> $x199 (and (= (time-to-state (+ time 1)) _12) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x209 (= ?x81 _12)))
 (=> $x209 (and (= (time-to-state (+ time 1)) _13) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x219 (= ?x81 _13)))
 (=> $x219 (and (= (time-to-state (+ time 1)) _14) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x229 (= ?x81 _14)))
 (=> $x229 (and (= (time-to-state (+ time 1)) _15) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x239 (= ?x81 _15)))
 (=> $x239 (and (= (time-to-state (+ time 1)) _16) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x249 (= ?x81 _16)))
 (=> $x249 (and (= (time-to-state (+ time 1)) _17) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x259 (= ?x81 _17)))
 (=> $x259 (and (= (time-to-state (+ time 1)) _18) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x269 (= ?x81 _18)))
 (=> $x269 (and (= (time-to-state (+ time 1)) _19) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x279 (= ?x81 _19)))
 (=> $x279 (and (= (time-to-state (+ time 1)) _20) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x289 (= ?x81 _20)))
 (=> $x289 (and (= (time-to-state (+ time 1)) _21) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x299 (= ?x81 _21)))
 (=> $x299 (and (= (time-to-state (+ time 1)) _22) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x309 (= ?x81 _22)))
 (=> $x309 (and (= (time-to-state (+ time 1)) _23) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x319 (= ?x81 _23)))
 (=> $x319 (and (= (time-to-state (+ time 1)) _24) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x329 (= ?x81 _24)))
 (=> $x329 (and (= (time-to-state (+ time 1)) _25) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x339 (= ?x81 _25)))
 (=> $x339 (and (= (time-to-state (+ time 1)) _26) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x349 (= ?x81 _26)))
 (=> $x349 (and (= (time-to-state (+ time 1)) _27) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x359 (= ?x81 _27)))
 (=> $x359 (and (= (time-to-state (+ time 1)) _28) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x369 (= ?x81 _28)))
 (=> $x369 (and (= (time-to-state (+ time 1)) _29) $x77))))))
 )
(assert
 (forall ((time Int) )(let (($x77 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x81 (time-to-state time)))
 (let (($x379 (= ?x81 _29)))
 (=> $x379 (and (= (time-to-state (+ time 1)) _30) $x77))))))
 )
(assert
 (forall ((time Int) )(let ((?x81 (time-to-state time)))
 (let (($x379 (= ?x81 _29)))
 (= $x379 (and (distinct (var0_0 time) 29) true)))))
 )
(assert
 (and (distinct _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30) true))
(check-sat)
