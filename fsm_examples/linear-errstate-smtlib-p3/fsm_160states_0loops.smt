; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(assert
 (let ((?x169 (time-to-state 0)))
 (= ?x169 _0)))
(assert
 (let ((?x189 (input-arg0 0)))
 (= ?x189 0)))
(assert
 (let ((?x191 (var1_0 0)))
 (= ?x191 0)))
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x220 (= ?x219 _0)))
 (let (($x236 (and $x220 $x235)))
 (=> $x236 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x250 (= ?x219 _1)))
 (let (($x255 (and $x250 $x235)))
 (=> $x255 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x268 (= ?x219 _2)))
 (let (($x273 (and $x268 $x235)))
 (=> $x273 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x286 (= ?x219 _3)))
 (let (($x291 (and $x286 $x235)))
 (=> $x291 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x304 (= ?x219 _4)))
 (let (($x309 (and $x304 $x235)))
 (=> $x309 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x322 (= ?x219 _5)))
 (let (($x327 (and $x322 $x235)))
 (=> $x327 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x340 (= ?x219 _6)))
 (let (($x345 (and $x340 $x235)))
 (=> $x345 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x358 (= ?x219 _7)))
 (let (($x363 (and $x358 $x235)))
 (=> $x363 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x376 (= ?x219 _8)))
 (let (($x381 (and $x376 $x235)))
 (=> $x381 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x394 (= ?x219 _9)))
 (let (($x399 (and $x394 $x235)))
 (=> $x399 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x412 (= ?x219 _10)))
 (let (($x417 (and $x412 $x235)))
 (=> $x417 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x430 (= ?x219 _11)))
 (let (($x435 (and $x430 $x235)))
 (=> $x435 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x448 (= ?x219 _12)))
 (let (($x453 (and $x448 $x235)))
 (=> $x453 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x466 (= ?x219 _13)))
 (let (($x471 (and $x466 $x235)))
 (=> $x471 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x484 (= ?x219 _14)))
 (let (($x489 (and $x484 $x235)))
 (=> $x489 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x502 (= ?x219 _15)))
 (let (($x507 (and $x502 $x235)))
 (=> $x507 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x520 (= ?x219 _16)))
 (let (($x525 (and $x520 $x235)))
 (=> $x525 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x538 (= ?x219 _17)))
 (let (($x543 (and $x538 $x235)))
 (=> $x543 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x556 (= ?x219 _18)))
 (let (($x561 (and $x556 $x235)))
 (=> $x561 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x574 (= ?x219 _19)))
 (let (($x579 (and $x574 $x235)))
 (=> $x579 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x592 (= ?x219 _20)))
 (let (($x597 (and $x592 $x235)))
 (=> $x597 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x610 (= ?x219 _21)))
 (let (($x615 (and $x610 $x235)))
 (=> $x615 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x628 (= ?x219 _22)))
 (let (($x633 (and $x628 $x235)))
 (=> $x633 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x646 (= ?x219 _23)))
 (let (($x651 (and $x646 $x235)))
 (=> $x651 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x664 (= ?x219 _24)))
 (let (($x669 (and $x664 $x235)))
 (=> $x669 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x682 (= ?x219 _25)))
 (let (($x687 (and $x682 $x235)))
 (=> $x687 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x700 (= ?x219 _26)))
 (let (($x705 (and $x700 $x235)))
 (=> $x705 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x718 (= ?x219 _27)))
 (let (($x723 (and $x718 $x235)))
 (=> $x723 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x736 (= ?x219 _28)))
 (let (($x741 (and $x736 $x235)))
 (=> $x741 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x754 (= ?x219 _29)))
 (let (($x759 (and $x754 $x235)))
 (=> $x759 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x772 (= ?x219 _30)))
 (let (($x777 (and $x772 $x235)))
 (=> $x777 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x790 (= ?x219 _31)))
 (let (($x795 (and $x790 $x235)))
 (=> $x795 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x808 (= ?x219 _32)))
 (let (($x813 (and $x808 $x235)))
 (=> $x813 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x826 (= ?x219 _33)))
 (let (($x831 (and $x826 $x235)))
 (=> $x831 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x844 (= ?x219 _34)))
 (let (($x849 (and $x844 $x235)))
 (=> $x849 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x862 (= ?x219 _35)))
 (let (($x867 (and $x862 $x235)))
 (=> $x867 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x880 (= ?x219 _36)))
 (let (($x885 (and $x880 $x235)))
 (=> $x885 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x898 (= ?x219 _37)))
 (let (($x903 (and $x898 $x235)))
 (=> $x903 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x916 (= ?x219 _38)))
 (let (($x921 (and $x916 $x235)))
 (=> $x921 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x934 (= ?x219 _39)))
 (let (($x939 (and $x934 $x235)))
 (=> $x939 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x952 (= ?x219 _40)))
 (let (($x957 (and $x952 $x235)))
 (=> $x957 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x970 (= ?x219 _41)))
 (let (($x975 (and $x970 $x235)))
 (=> $x975 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x988 (= ?x219 _42)))
 (let (($x993 (and $x988 $x235)))
 (=> $x993 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1006 (= ?x219 _43)))
 (let (($x1011 (and $x1006 $x235)))
 (=> $x1011 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1024 (= ?x219 _44)))
 (let (($x1029 (and $x1024 $x235)))
 (=> $x1029 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1042 (= ?x219 _45)))
 (let (($x1047 (and $x1042 $x235)))
 (=> $x1047 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1060 (= ?x219 _46)))
 (let (($x1065 (and $x1060 $x235)))
 (=> $x1065 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1078 (= ?x219 _47)))
 (let (($x1083 (and $x1078 $x235)))
 (=> $x1083 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1096 (= ?x219 _48)))
 (let (($x1101 (and $x1096 $x235)))
 (=> $x1101 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1114 (= ?x219 _49)))
 (let (($x1119 (and $x1114 $x235)))
 (=> $x1119 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1132 (= ?x219 _50)))
 (let (($x1137 (and $x1132 $x235)))
 (=> $x1137 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1150 (= ?x219 _51)))
 (let (($x1155 (and $x1150 $x235)))
 (=> $x1155 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1168 (= ?x219 _52)))
 (let (($x1173 (and $x1168 $x235)))
 (=> $x1173 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1186 (= ?x219 _53)))
 (let (($x1191 (and $x1186 $x235)))
 (=> $x1191 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1204 (= ?x219 _54)))
 (let (($x1209 (and $x1204 $x235)))
 (=> $x1209 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1222 (= ?x219 _55)))
 (let (($x1227 (and $x1222 $x235)))
 (=> $x1227 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1240 (= ?x219 _56)))
 (let (($x1245 (and $x1240 $x235)))
 (=> $x1245 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1258 (= ?x219 _57)))
 (let (($x1263 (and $x1258 $x235)))
 (=> $x1263 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1276 (= ?x219 _58)))
 (let (($x1281 (and $x1276 $x235)))
 (=> $x1281 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1294 (= ?x219 _59)))
 (let (($x1299 (and $x1294 $x235)))
 (=> $x1299 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1312 (= ?x219 _60)))
 (let (($x1317 (and $x1312 $x235)))
 (=> $x1317 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1330 (= ?x219 _61)))
 (let (($x1335 (and $x1330 $x235)))
 (=> $x1335 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1348 (= ?x219 _62)))
 (let (($x1353 (and $x1348 $x235)))
 (=> $x1353 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1366 (= ?x219 _63)))
 (let (($x1371 (and $x1366 $x235)))
 (=> $x1371 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1384 (= ?x219 _64)))
 (let (($x1389 (and $x1384 $x235)))
 (=> $x1389 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1402 (= ?x219 _65)))
 (let (($x1407 (and $x1402 $x235)))
 (=> $x1407 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1420 (= ?x219 _66)))
 (let (($x1425 (and $x1420 $x235)))
 (=> $x1425 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1438 (= ?x219 _67)))
 (let (($x1443 (and $x1438 $x235)))
 (=> $x1443 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1456 (= ?x219 _68)))
 (let (($x1461 (and $x1456 $x235)))
 (=> $x1461 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1474 (= ?x219 _69)))
 (let (($x1479 (and $x1474 $x235)))
 (=> $x1479 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1492 (= ?x219 _70)))
 (let (($x1497 (and $x1492 $x235)))
 (=> $x1497 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1510 (= ?x219 _71)))
 (let (($x1515 (and $x1510 $x235)))
 (=> $x1515 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1528 (= ?x219 _72)))
 (let (($x1533 (and $x1528 $x235)))
 (=> $x1533 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1546 (= ?x219 _73)))
 (let (($x1551 (and $x1546 $x235)))
 (=> $x1551 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1564 (= ?x219 _74)))
 (let (($x1569 (and $x1564 $x235)))
 (=> $x1569 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1582 (= ?x219 _75)))
 (let (($x1587 (and $x1582 $x235)))
 (=> $x1587 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1600 (= ?x219 _76)))
 (let (($x1605 (and $x1600 $x235)))
 (=> $x1605 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1618 (= ?x219 _77)))
 (let (($x1623 (and $x1618 $x235)))
 (=> $x1623 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1636 (= ?x219 _78)))
 (let (($x1641 (and $x1636 $x235)))
 (=> $x1641 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1654 (= ?x219 _79)))
 (let (($x1659 (and $x1654 $x235)))
 (=> $x1659 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1672 (= ?x219 _80)))
 (let (($x1677 (and $x1672 $x235)))
 (=> $x1677 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1690 (= ?x219 _81)))
 (let (($x1695 (and $x1690 $x235)))
 (=> $x1695 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1708 (= ?x219 _82)))
 (let (($x1713 (and $x1708 $x235)))
 (=> $x1713 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1726 (= ?x219 _83)))
 (let (($x1731 (and $x1726 $x235)))
 (=> $x1731 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1744 (= ?x219 _84)))
 (let (($x1749 (and $x1744 $x235)))
 (=> $x1749 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1762 (= ?x219 _85)))
 (let (($x1767 (and $x1762 $x235)))
 (=> $x1767 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1780 (= ?x219 _86)))
 (let (($x1785 (and $x1780 $x235)))
 (=> $x1785 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1798 (= ?x219 _87)))
 (let (($x1803 (and $x1798 $x235)))
 (=> $x1803 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1816 (= ?x219 _88)))
 (let (($x1821 (and $x1816 $x235)))
 (=> $x1821 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1834 (= ?x219 _89)))
 (let (($x1839 (and $x1834 $x235)))
 (=> $x1839 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1852 (= ?x219 _90)))
 (let (($x1857 (and $x1852 $x235)))
 (=> $x1857 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1870 (= ?x219 _91)))
 (let (($x1875 (and $x1870 $x235)))
 (=> $x1875 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1888 (= ?x219 _92)))
 (let (($x1893 (and $x1888 $x235)))
 (=> $x1893 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1906 (= ?x219 _93)))
 (let (($x1911 (and $x1906 $x235)))
 (=> $x1911 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1924 (= ?x219 _94)))
 (let (($x1929 (and $x1924 $x235)))
 (=> $x1929 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1942 (= ?x219 _95)))
 (let (($x1947 (and $x1942 $x235)))
 (=> $x1947 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1960 (= ?x219 _96)))
 (let (($x1965 (and $x1960 $x235)))
 (=> $x1965 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1978 (= ?x219 _97)))
 (let (($x1983 (and $x1978 $x235)))
 (=> $x1983 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x1996 (= ?x219 _98)))
 (let (($x2001 (and $x1996 $x235)))
 (=> $x2001 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x213))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2014 (= ?x219 _99)))
 (let (($x2019 (and $x2014 $x235)))
 (=> $x2019 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2032 (= ?x219 _100)))
 (=> (and $x2032 $x218) (and (= (time-to-state (+ time 1)) _101) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2032 (= ?x219 _100)))
 (let (($x2037 (and $x2032 $x235)))
 (=> $x2037 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2050 (= ?x219 _101)))
 (=> (and $x2050 $x218) (and (= (time-to-state (+ time 1)) _102) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2050 (= ?x219 _101)))
 (let (($x2055 (and $x2050 $x235)))
 (=> $x2055 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2068 (= ?x219 _102)))
 (=> (and $x2068 $x218) (and (= (time-to-state (+ time 1)) _103) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2068 (= ?x219 _102)))
 (let (($x2073 (and $x2068 $x235)))
 (=> $x2073 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2086 (= ?x219 _103)))
 (=> (and $x2086 $x218) (and (= (time-to-state (+ time 1)) _104) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2086 (= ?x219 _103)))
 (let (($x2091 (and $x2086 $x235)))
 (=> $x2091 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2104 (= ?x219 _104)))
 (=> (and $x2104 $x218) (and (= (time-to-state (+ time 1)) _105) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2104 (= ?x219 _104)))
 (let (($x2109 (and $x2104 $x235)))
 (=> $x2109 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2122 (= ?x219 _105)))
 (=> (and $x2122 $x218) (and (= (time-to-state (+ time 1)) _106) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2122 (= ?x219 _105)))
 (let (($x2127 (and $x2122 $x235)))
 (=> $x2127 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2140 (= ?x219 _106)))
 (=> (and $x2140 $x218) (and (= (time-to-state (+ time 1)) _107) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2140 (= ?x219 _106)))
 (let (($x2145 (and $x2140 $x235)))
 (=> $x2145 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2158 (= ?x219 _107)))
 (=> (and $x2158 $x218) (and (= (time-to-state (+ time 1)) _108) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2158 (= ?x219 _107)))
 (let (($x2163 (and $x2158 $x235)))
 (=> $x2163 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2176 (= ?x219 _108)))
 (=> (and $x2176 $x218) (and (= (time-to-state (+ time 1)) _109) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2176 (= ?x219 _108)))
 (let (($x2181 (and $x2176 $x235)))
 (=> $x2181 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2194 (= ?x219 _109)))
 (=> (and $x2194 $x218) (and (= (time-to-state (+ time 1)) _110) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2194 (= ?x219 _109)))
 (let (($x2199 (and $x2194 $x235)))
 (=> $x2199 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2212 (= ?x219 _110)))
 (=> (and $x2212 $x218) (and (= (time-to-state (+ time 1)) _111) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2212 (= ?x219 _110)))
 (let (($x2217 (and $x2212 $x235)))
 (=> $x2217 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2230 (= ?x219 _111)))
 (=> (and $x2230 $x218) (and (= (time-to-state (+ time 1)) _112) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2230 (= ?x219 _111)))
 (let (($x2235 (and $x2230 $x235)))
 (=> $x2235 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2248 (= ?x219 _112)))
 (=> (and $x2248 $x218) (and (= (time-to-state (+ time 1)) _113) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2248 (= ?x219 _112)))
 (let (($x2253 (and $x2248 $x235)))
 (=> $x2253 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2266 (= ?x219 _113)))
 (=> (and $x2266 $x218) (and (= (time-to-state (+ time 1)) _114) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2266 (= ?x219 _113)))
 (let (($x2271 (and $x2266 $x235)))
 (=> $x2271 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2284 (= ?x219 _114)))
 (=> (and $x2284 $x218) (and (= (time-to-state (+ time 1)) _115) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2284 (= ?x219 _114)))
 (let (($x2289 (and $x2284 $x235)))
 (=> $x2289 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2302 (= ?x219 _115)))
 (=> (and $x2302 $x218) (and (= (time-to-state (+ time 1)) _116) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2302 (= ?x219 _115)))
 (let (($x2307 (and $x2302 $x235)))
 (=> $x2307 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2320 (= ?x219 _116)))
 (=> (and $x2320 $x218) (and (= (time-to-state (+ time 1)) _117) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2320 (= ?x219 _116)))
 (let (($x2325 (and $x2320 $x235)))
 (=> $x2325 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2338 (= ?x219 _117)))
 (=> (and $x2338 $x218) (and (= (time-to-state (+ time 1)) _118) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2338 (= ?x219 _117)))
 (let (($x2343 (and $x2338 $x235)))
 (=> $x2343 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2356 (= ?x219 _118)))
 (=> (and $x2356 $x218) (and (= (time-to-state (+ time 1)) _119) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2356 (= ?x219 _118)))
 (let (($x2361 (and $x2356 $x235)))
 (=> $x2361 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2374 (= ?x219 _119)))
 (=> (and $x2374 $x218) (and (= (time-to-state (+ time 1)) _120) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2374 (= ?x219 _119)))
 (let (($x2379 (and $x2374 $x235)))
 (=> $x2379 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2392 (= ?x219 _120)))
 (=> (and $x2392 $x218) (and (= (time-to-state (+ time 1)) _121) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2392 (= ?x219 _120)))
 (let (($x2397 (and $x2392 $x235)))
 (=> $x2397 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2410 (= ?x219 _121)))
 (=> (and $x2410 $x218) (and (= (time-to-state (+ time 1)) _122) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2410 (= ?x219 _121)))
 (let (($x2415 (and $x2410 $x235)))
 (=> $x2415 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2428 (= ?x219 _122)))
 (=> (and $x2428 $x218) (and (= (time-to-state (+ time 1)) _123) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2428 (= ?x219 _122)))
 (let (($x2433 (and $x2428 $x235)))
 (=> $x2433 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2446 (= ?x219 _123)))
 (=> (and $x2446 $x218) (and (= (time-to-state (+ time 1)) _124) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2446 (= ?x219 _123)))
 (let (($x2451 (and $x2446 $x235)))
 (=> $x2451 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2464 (= ?x219 _124)))
 (=> (and $x2464 $x218) (and (= (time-to-state (+ time 1)) _125) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2464 (= ?x219 _124)))
 (let (($x2469 (and $x2464 $x235)))
 (=> $x2469 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2482 (= ?x219 _125)))
 (=> (and $x2482 $x218) (and (= (time-to-state (+ time 1)) _126) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2482 (= ?x219 _125)))
 (let (($x2487 (and $x2482 $x235)))
 (=> $x2487 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2500 (= ?x219 _126)))
 (=> (and $x2500 $x218) (and (= (time-to-state (+ time 1)) _127) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2500 (= ?x219 _126)))
 (let (($x2505 (and $x2500 $x235)))
 (=> $x2505 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2518 (= ?x219 _127)))
 (=> (and $x2518 $x218) (and (= (time-to-state (+ time 1)) _128) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2518 (= ?x219 _127)))
 (let (($x2523 (and $x2518 $x235)))
 (=> $x2523 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2536 (= ?x219 _128)))
 (=> (and $x2536 $x218) (and (= (time-to-state (+ time 1)) _129) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2536 (= ?x219 _128)))
 (let (($x2541 (and $x2536 $x235)))
 (=> $x2541 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2554 (= ?x219 _129)))
 (=> (and $x2554 $x218) (and (= (time-to-state (+ time 1)) _130) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2554 (= ?x219 _129)))
 (let (($x2559 (and $x2554 $x235)))
 (=> $x2559 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2572 (= ?x219 _130)))
 (=> (and $x2572 $x218) (and (= (time-to-state (+ time 1)) _131) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2572 (= ?x219 _130)))
 (let (($x2577 (and $x2572 $x235)))
 (=> $x2577 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2590 (= ?x219 _131)))
 (=> (and $x2590 $x218) (and (= (time-to-state (+ time 1)) _132) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2590 (= ?x219 _131)))
 (let (($x2595 (and $x2590 $x235)))
 (=> $x2595 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2608 (= ?x219 _132)))
 (=> (and $x2608 $x218) (and (= (time-to-state (+ time 1)) _133) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2608 (= ?x219 _132)))
 (let (($x2613 (and $x2608 $x235)))
 (=> $x2613 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2626 (= ?x219 _133)))
 (=> (and $x2626 $x218) (and (= (time-to-state (+ time 1)) _134) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2626 (= ?x219 _133)))
 (let (($x2631 (and $x2626 $x235)))
 (=> $x2631 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2644 (= ?x219 _134)))
 (=> (and $x2644 $x218) (and (= (time-to-state (+ time 1)) _135) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2644 (= ?x219 _134)))
 (let (($x2649 (and $x2644 $x235)))
 (=> $x2649 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2662 (= ?x219 _135)))
 (=> (and $x2662 $x218) (and (= (time-to-state (+ time 1)) _136) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2662 (= ?x219 _135)))
 (let (($x2667 (and $x2662 $x235)))
 (=> $x2667 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2680 (= ?x219 _136)))
 (=> (and $x2680 $x218) (and (= (time-to-state (+ time 1)) _137) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2680 (= ?x219 _136)))
 (let (($x2685 (and $x2680 $x235)))
 (=> $x2685 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2698 (= ?x219 _137)))
 (=> (and $x2698 $x218) (and (= (time-to-state (+ time 1)) _138) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2698 (= ?x219 _137)))
 (let (($x2703 (and $x2698 $x235)))
 (=> $x2703 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2716 (= ?x219 _138)))
 (=> (and $x2716 $x218) (and (= (time-to-state (+ time 1)) _139) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2716 (= ?x219 _138)))
 (let (($x2721 (and $x2716 $x235)))
 (=> $x2721 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2734 (= ?x219 _139)))
 (=> (and $x2734 $x218) (and (= (time-to-state (+ time 1)) _140) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2734 (= ?x219 _139)))
 (let (($x2739 (and $x2734 $x235)))
 (=> $x2739 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2752 (= ?x219 _140)))
 (=> (and $x2752 $x218) (and (= (time-to-state (+ time 1)) _141) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2752 (= ?x219 _140)))
 (let (($x2757 (and $x2752 $x235)))
 (=> $x2757 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2770 (= ?x219 _141)))
 (=> (and $x2770 $x218) (and (= (time-to-state (+ time 1)) _142) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2770 (= ?x219 _141)))
 (let (($x2775 (and $x2770 $x235)))
 (=> $x2775 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2788 (= ?x219 _142)))
 (=> (and $x2788 $x218) (and (= (time-to-state (+ time 1)) _143) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2788 (= ?x219 _142)))
 (let (($x2793 (and $x2788 $x235)))
 (=> $x2793 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2806 (= ?x219 _143)))
 (=> (and $x2806 $x218) (and (= (time-to-state (+ time 1)) _144) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2806 (= ?x219 _143)))
 (let (($x2811 (and $x2806 $x235)))
 (=> $x2811 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2824 (= ?x219 _144)))
 (=> (and $x2824 $x218) (and (= (time-to-state (+ time 1)) _145) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2824 (= ?x219 _144)))
 (let (($x2829 (and $x2824 $x235)))
 (=> $x2829 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2842 (= ?x219 _145)))
 (=> (and $x2842 $x218) (and (= (time-to-state (+ time 1)) _146) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2842 (= ?x219 _145)))
 (let (($x2847 (and $x2842 $x235)))
 (=> $x2847 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2860 (= ?x219 _146)))
 (=> (and $x2860 $x218) (and (= (time-to-state (+ time 1)) _147) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2860 (= ?x219 _146)))
 (let (($x2865 (and $x2860 $x235)))
 (=> $x2865 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2878 (= ?x219 _147)))
 (=> (and $x2878 $x218) (and (= (time-to-state (+ time 1)) _148) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2878 (= ?x219 _147)))
 (let (($x2883 (and $x2878 $x235)))
 (=> $x2883 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2896 (= ?x219 _148)))
 (=> (and $x2896 $x218) (and (= (time-to-state (+ time 1)) _149) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2896 (= ?x219 _148)))
 (let (($x2901 (and $x2896 $x235)))
 (=> $x2901 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2914 (= ?x219 _149)))
 (=> (and $x2914 $x218) (and (= (time-to-state (+ time 1)) _150) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2914 (= ?x219 _149)))
 (let (($x2919 (and $x2914 $x235)))
 (=> $x2919 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2932 (= ?x219 _150)))
 (=> (and $x2932 $x218) (and (= (time-to-state (+ time 1)) _151) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2932 (= ?x219 _150)))
 (let (($x2937 (and $x2932 $x235)))
 (=> $x2937 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2950 (= ?x219 _151)))
 (=> (and $x2950 $x218) (and (= (time-to-state (+ time 1)) _152) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2950 (= ?x219 _151)))
 (let (($x2955 (and $x2950 $x235)))
 (=> $x2955 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2968 (= ?x219 _152)))
 (=> (and $x2968 $x218) (and (= (time-to-state (+ time 1)) _153) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2968 (= ?x219 _152)))
 (let (($x2973 (and $x2968 $x235)))
 (=> $x2973 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x2986 (= ?x219 _153)))
 (=> (and $x2986 $x218) (and (= (time-to-state (+ time 1)) _154) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x2986 (= ?x219 _153)))
 (let (($x2991 (and $x2986 $x235)))
 (=> $x2991 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x3004 (= ?x219 _154)))
 (=> (and $x3004 $x218) (and (= (time-to-state (+ time 1)) _155) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x3004 (= ?x219 _154)))
 (let (($x3009 (and $x3004 $x235)))
 (=> $x3009 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x3022 (= ?x219 _155)))
 (=> (and $x3022 $x218) (and (= (time-to-state (+ time 1)) _156) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x3022 (= ?x219 _155)))
 (let (($x3027 (and $x3022 $x235)))
 (=> $x3027 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x3040 (= ?x219 _156)))
 (=> (and $x3040 $x218) (and (= (time-to-state (+ time 1)) _157) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x3040 (= ?x219 _156)))
 (let (($x3045 (and $x3040 $x235)))
 (=> $x3045 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x3058 (= ?x219 _157)))
 (=> (and $x3058 $x218) (and (= (time-to-state (+ time 1)) _158) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x3058 (= ?x219 _157)))
 (let (($x3063 (and $x3058 $x235)))
 (=> $x3063 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x3076 (= ?x219 _158)))
 (=> (and $x3076 $x218) (and (= (time-to-state (+ time 1)) _159) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x3076 (= ?x219 _158)))
 (let (($x3081 (and $x3076 $x235)))
 (=> $x3081 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let (($x213 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x217 (input-arg0 time)))
 (let (($x218 (and (distinct ?x217 0) true)))
 (let ((?x219 (time-to-state time)))
 (let (($x3094 (= ?x219 _159)))
 (=> (and $x3094 $x218) (and (= (time-to-state (+ time 1)) _160) $x213))))))))
 )
(assert
 (forall ((time Int) )(let ((?x211 (+ time 1)))
 (let ((?x214 (time-to-state ?x211)))
 (let (($x234 (= ?x214 ERR)))
 (let ((?x217 (input-arg0 time)))
 (let (($x235 (= ?x217 1)))
 (let ((?x219 (time-to-state time)))
 (let (($x3094 (= ?x219 _159)))
 (let (($x3099 (and $x3094 $x235)))
 (=> $x3099 $x234))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x219 (time-to-state time)))
 (let (($x3102 (= ?x219 ERR)))
 (and $x3102 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160) true))
(check-sat)
