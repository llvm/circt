; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(assert
 (let ((?x319 (time-to-state 0)))
 (= ?x319 _0)))
(assert
 (let ((?x339 (input-arg0 0)))
 (= ?x339 0)))
(assert
 (let ((?x341 (var1_0 0)))
 (= ?x341 0)))
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x370 (= ?x369 _0)))
 (let (($x386 (and $x370 $x385)))
 (=> $x386 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x400 (= ?x369 _1)))
 (let (($x405 (and $x400 $x385)))
 (=> $x405 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x418 (= ?x369 _2)))
 (let (($x423 (and $x418 $x385)))
 (=> $x423 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x436 (= ?x369 _3)))
 (let (($x441 (and $x436 $x385)))
 (=> $x441 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x454 (= ?x369 _4)))
 (let (($x459 (and $x454 $x385)))
 (=> $x459 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x472 (= ?x369 _5)))
 (let (($x477 (and $x472 $x385)))
 (=> $x477 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x490 (= ?x369 _6)))
 (let (($x495 (and $x490 $x385)))
 (=> $x495 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x508 (= ?x369 _7)))
 (let (($x513 (and $x508 $x385)))
 (=> $x513 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x526 (= ?x369 _8)))
 (let (($x531 (and $x526 $x385)))
 (=> $x531 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x544 (= ?x369 _9)))
 (let (($x549 (and $x544 $x385)))
 (=> $x549 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x562 (= ?x369 _10)))
 (let (($x567 (and $x562 $x385)))
 (=> $x567 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x580 (= ?x369 _11)))
 (let (($x585 (and $x580 $x385)))
 (=> $x585 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x598 (= ?x369 _12)))
 (let (($x603 (and $x598 $x385)))
 (=> $x603 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x616 (= ?x369 _13)))
 (let (($x621 (and $x616 $x385)))
 (=> $x621 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x634 (= ?x369 _14)))
 (let (($x639 (and $x634 $x385)))
 (=> $x639 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x652 (= ?x369 _15)))
 (let (($x657 (and $x652 $x385)))
 (=> $x657 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x670 (= ?x369 _16)))
 (let (($x675 (and $x670 $x385)))
 (=> $x675 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x688 (= ?x369 _17)))
 (let (($x693 (and $x688 $x385)))
 (=> $x693 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x706 (= ?x369 _18)))
 (let (($x711 (and $x706 $x385)))
 (=> $x711 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x724 (= ?x369 _19)))
 (let (($x729 (and $x724 $x385)))
 (=> $x729 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x742 (= ?x369 _20)))
 (let (($x747 (and $x742 $x385)))
 (=> $x747 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x760 (= ?x369 _21)))
 (let (($x765 (and $x760 $x385)))
 (=> $x765 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x778 (= ?x369 _22)))
 (let (($x783 (and $x778 $x385)))
 (=> $x783 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x796 (= ?x369 _23)))
 (let (($x801 (and $x796 $x385)))
 (=> $x801 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x814 (= ?x369 _24)))
 (let (($x819 (and $x814 $x385)))
 (=> $x819 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x832 (= ?x369 _25)))
 (let (($x837 (and $x832 $x385)))
 (=> $x837 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x850 (= ?x369 _26)))
 (let (($x855 (and $x850 $x385)))
 (=> $x855 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x868 (= ?x369 _27)))
 (let (($x873 (and $x868 $x385)))
 (=> $x873 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x886 (= ?x369 _28)))
 (let (($x891 (and $x886 $x385)))
 (=> $x891 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x904 (= ?x369 _29)))
 (let (($x909 (and $x904 $x385)))
 (=> $x909 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x922 (= ?x369 _30)))
 (let (($x927 (and $x922 $x385)))
 (=> $x927 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x940 (= ?x369 _31)))
 (let (($x945 (and $x940 $x385)))
 (=> $x945 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x958 (= ?x369 _32)))
 (let (($x963 (and $x958 $x385)))
 (=> $x963 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x976 (= ?x369 _33)))
 (let (($x981 (and $x976 $x385)))
 (=> $x981 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x994 (= ?x369 _34)))
 (let (($x999 (and $x994 $x385)))
 (=> $x999 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1012 (= ?x369 _35)))
 (let (($x1017 (and $x1012 $x385)))
 (=> $x1017 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1030 (= ?x369 _36)))
 (let (($x1035 (and $x1030 $x385)))
 (=> $x1035 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1048 (= ?x369 _37)))
 (let (($x1053 (and $x1048 $x385)))
 (=> $x1053 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1066 (= ?x369 _38)))
 (let (($x1071 (and $x1066 $x385)))
 (=> $x1071 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1084 (= ?x369 _39)))
 (let (($x1089 (and $x1084 $x385)))
 (=> $x1089 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1102 (= ?x369 _40)))
 (let (($x1107 (and $x1102 $x385)))
 (=> $x1107 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1120 (= ?x369 _41)))
 (let (($x1125 (and $x1120 $x385)))
 (=> $x1125 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1138 (= ?x369 _42)))
 (let (($x1143 (and $x1138 $x385)))
 (=> $x1143 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1156 (= ?x369 _43)))
 (let (($x1161 (and $x1156 $x385)))
 (=> $x1161 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1174 (= ?x369 _44)))
 (let (($x1179 (and $x1174 $x385)))
 (=> $x1179 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1192 (= ?x369 _45)))
 (let (($x1197 (and $x1192 $x385)))
 (=> $x1197 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1210 (= ?x369 _46)))
 (let (($x1215 (and $x1210 $x385)))
 (=> $x1215 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1228 (= ?x369 _47)))
 (let (($x1233 (and $x1228 $x385)))
 (=> $x1233 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1246 (= ?x369 _48)))
 (let (($x1251 (and $x1246 $x385)))
 (=> $x1251 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1264 (= ?x369 _49)))
 (let (($x1269 (and $x1264 $x385)))
 (=> $x1269 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1282 (= ?x369 _50)))
 (let (($x1287 (and $x1282 $x385)))
 (=> $x1287 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1300 (= ?x369 _51)))
 (let (($x1305 (and $x1300 $x385)))
 (=> $x1305 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1318 (= ?x369 _52)))
 (let (($x1323 (and $x1318 $x385)))
 (=> $x1323 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1336 (= ?x369 _53)))
 (let (($x1341 (and $x1336 $x385)))
 (=> $x1341 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1354 (= ?x369 _54)))
 (let (($x1359 (and $x1354 $x385)))
 (=> $x1359 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1372 (= ?x369 _55)))
 (let (($x1377 (and $x1372 $x385)))
 (=> $x1377 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1390 (= ?x369 _56)))
 (let (($x1395 (and $x1390 $x385)))
 (=> $x1395 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1408 (= ?x369 _57)))
 (let (($x1413 (and $x1408 $x385)))
 (=> $x1413 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1426 (= ?x369 _58)))
 (let (($x1431 (and $x1426 $x385)))
 (=> $x1431 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1444 (= ?x369 _59)))
 (let (($x1449 (and $x1444 $x385)))
 (=> $x1449 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1462 (= ?x369 _60)))
 (let (($x1467 (and $x1462 $x385)))
 (=> $x1467 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1480 (= ?x369 _61)))
 (let (($x1485 (and $x1480 $x385)))
 (=> $x1485 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1498 (= ?x369 _62)))
 (let (($x1503 (and $x1498 $x385)))
 (=> $x1503 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1516 (= ?x369 _63)))
 (let (($x1521 (and $x1516 $x385)))
 (=> $x1521 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1534 (= ?x369 _64)))
 (let (($x1539 (and $x1534 $x385)))
 (=> $x1539 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1552 (= ?x369 _65)))
 (let (($x1557 (and $x1552 $x385)))
 (=> $x1557 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1570 (= ?x369 _66)))
 (let (($x1575 (and $x1570 $x385)))
 (=> $x1575 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1588 (= ?x369 _67)))
 (let (($x1593 (and $x1588 $x385)))
 (=> $x1593 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1606 (= ?x369 _68)))
 (let (($x1611 (and $x1606 $x385)))
 (=> $x1611 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1624 (= ?x369 _69)))
 (let (($x1629 (and $x1624 $x385)))
 (=> $x1629 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1642 (= ?x369 _70)))
 (let (($x1647 (and $x1642 $x385)))
 (=> $x1647 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1660 (= ?x369 _71)))
 (let (($x1665 (and $x1660 $x385)))
 (=> $x1665 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1678 (= ?x369 _72)))
 (let (($x1683 (and $x1678 $x385)))
 (=> $x1683 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1696 (= ?x369 _73)))
 (let (($x1701 (and $x1696 $x385)))
 (=> $x1701 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1714 (= ?x369 _74)))
 (let (($x1719 (and $x1714 $x385)))
 (=> $x1719 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1732 (= ?x369 _75)))
 (let (($x1737 (and $x1732 $x385)))
 (=> $x1737 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1750 (= ?x369 _76)))
 (let (($x1755 (and $x1750 $x385)))
 (=> $x1755 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1768 (= ?x369 _77)))
 (let (($x1773 (and $x1768 $x385)))
 (=> $x1773 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1786 (= ?x369 _78)))
 (let (($x1791 (and $x1786 $x385)))
 (=> $x1791 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1804 (= ?x369 _79)))
 (let (($x1809 (and $x1804 $x385)))
 (=> $x1809 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1822 (= ?x369 _80)))
 (let (($x1827 (and $x1822 $x385)))
 (=> $x1827 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1840 (= ?x369 _81)))
 (let (($x1845 (and $x1840 $x385)))
 (=> $x1845 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1858 (= ?x369 _82)))
 (let (($x1863 (and $x1858 $x385)))
 (=> $x1863 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1876 (= ?x369 _83)))
 (let (($x1881 (and $x1876 $x385)))
 (=> $x1881 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1894 (= ?x369 _84)))
 (let (($x1899 (and $x1894 $x385)))
 (=> $x1899 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1912 (= ?x369 _85)))
 (let (($x1917 (and $x1912 $x385)))
 (=> $x1917 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1930 (= ?x369 _86)))
 (let (($x1935 (and $x1930 $x385)))
 (=> $x1935 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1948 (= ?x369 _87)))
 (let (($x1953 (and $x1948 $x385)))
 (=> $x1953 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1966 (= ?x369 _88)))
 (let (($x1971 (and $x1966 $x385)))
 (=> $x1971 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x1984 (= ?x369 _89)))
 (let (($x1989 (and $x1984 $x385)))
 (=> $x1989 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2002 (= ?x369 _90)))
 (let (($x2007 (and $x2002 $x385)))
 (=> $x2007 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2020 (= ?x369 _91)))
 (let (($x2025 (and $x2020 $x385)))
 (=> $x2025 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2038 (= ?x369 _92)))
 (let (($x2043 (and $x2038 $x385)))
 (=> $x2043 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2056 (= ?x369 _93)))
 (let (($x2061 (and $x2056 $x385)))
 (=> $x2061 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2074 (= ?x369 _94)))
 (let (($x2079 (and $x2074 $x385)))
 (=> $x2079 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2092 (= ?x369 _95)))
 (let (($x2097 (and $x2092 $x385)))
 (=> $x2097 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2110 (= ?x369 _96)))
 (let (($x2115 (and $x2110 $x385)))
 (=> $x2115 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2128 (= ?x369 _97)))
 (let (($x2133 (and $x2128 $x385)))
 (=> $x2133 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2146 (= ?x369 _98)))
 (let (($x2151 (and $x2146 $x385)))
 (=> $x2151 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x363))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2164 (= ?x369 _99)))
 (let (($x2169 (and $x2164 $x385)))
 (=> $x2169 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2182 (= ?x369 _100)))
 (=> (and $x2182 $x368) (and (= (time-to-state (+ time 1)) _101) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2182 (= ?x369 _100)))
 (let (($x2187 (and $x2182 $x385)))
 (=> $x2187 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2200 (= ?x369 _101)))
 (=> (and $x2200 $x368) (and (= (time-to-state (+ time 1)) _102) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2200 (= ?x369 _101)))
 (let (($x2205 (and $x2200 $x385)))
 (=> $x2205 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2218 (= ?x369 _102)))
 (=> (and $x2218 $x368) (and (= (time-to-state (+ time 1)) _103) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2218 (= ?x369 _102)))
 (let (($x2223 (and $x2218 $x385)))
 (=> $x2223 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2236 (= ?x369 _103)))
 (=> (and $x2236 $x368) (and (= (time-to-state (+ time 1)) _104) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2236 (= ?x369 _103)))
 (let (($x2241 (and $x2236 $x385)))
 (=> $x2241 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2254 (= ?x369 _104)))
 (=> (and $x2254 $x368) (and (= (time-to-state (+ time 1)) _105) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2254 (= ?x369 _104)))
 (let (($x2259 (and $x2254 $x385)))
 (=> $x2259 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2272 (= ?x369 _105)))
 (=> (and $x2272 $x368) (and (= (time-to-state (+ time 1)) _106) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2272 (= ?x369 _105)))
 (let (($x2277 (and $x2272 $x385)))
 (=> $x2277 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2290 (= ?x369 _106)))
 (=> (and $x2290 $x368) (and (= (time-to-state (+ time 1)) _107) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2290 (= ?x369 _106)))
 (let (($x2295 (and $x2290 $x385)))
 (=> $x2295 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2308 (= ?x369 _107)))
 (=> (and $x2308 $x368) (and (= (time-to-state (+ time 1)) _108) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2308 (= ?x369 _107)))
 (let (($x2313 (and $x2308 $x385)))
 (=> $x2313 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2326 (= ?x369 _108)))
 (=> (and $x2326 $x368) (and (= (time-to-state (+ time 1)) _109) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2326 (= ?x369 _108)))
 (let (($x2331 (and $x2326 $x385)))
 (=> $x2331 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2344 (= ?x369 _109)))
 (=> (and $x2344 $x368) (and (= (time-to-state (+ time 1)) _110) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2344 (= ?x369 _109)))
 (let (($x2349 (and $x2344 $x385)))
 (=> $x2349 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2362 (= ?x369 _110)))
 (=> (and $x2362 $x368) (and (= (time-to-state (+ time 1)) _111) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2362 (= ?x369 _110)))
 (let (($x2367 (and $x2362 $x385)))
 (=> $x2367 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2380 (= ?x369 _111)))
 (=> (and $x2380 $x368) (and (= (time-to-state (+ time 1)) _112) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2380 (= ?x369 _111)))
 (let (($x2385 (and $x2380 $x385)))
 (=> $x2385 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2398 (= ?x369 _112)))
 (=> (and $x2398 $x368) (and (= (time-to-state (+ time 1)) _113) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2398 (= ?x369 _112)))
 (let (($x2403 (and $x2398 $x385)))
 (=> $x2403 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2416 (= ?x369 _113)))
 (=> (and $x2416 $x368) (and (= (time-to-state (+ time 1)) _114) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2416 (= ?x369 _113)))
 (let (($x2421 (and $x2416 $x385)))
 (=> $x2421 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2434 (= ?x369 _114)))
 (=> (and $x2434 $x368) (and (= (time-to-state (+ time 1)) _115) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2434 (= ?x369 _114)))
 (let (($x2439 (and $x2434 $x385)))
 (=> $x2439 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2452 (= ?x369 _115)))
 (=> (and $x2452 $x368) (and (= (time-to-state (+ time 1)) _116) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2452 (= ?x369 _115)))
 (let (($x2457 (and $x2452 $x385)))
 (=> $x2457 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2470 (= ?x369 _116)))
 (=> (and $x2470 $x368) (and (= (time-to-state (+ time 1)) _117) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2470 (= ?x369 _116)))
 (let (($x2475 (and $x2470 $x385)))
 (=> $x2475 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2488 (= ?x369 _117)))
 (=> (and $x2488 $x368) (and (= (time-to-state (+ time 1)) _118) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2488 (= ?x369 _117)))
 (let (($x2493 (and $x2488 $x385)))
 (=> $x2493 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2506 (= ?x369 _118)))
 (=> (and $x2506 $x368) (and (= (time-to-state (+ time 1)) _119) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2506 (= ?x369 _118)))
 (let (($x2511 (and $x2506 $x385)))
 (=> $x2511 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2524 (= ?x369 _119)))
 (=> (and $x2524 $x368) (and (= (time-to-state (+ time 1)) _120) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2524 (= ?x369 _119)))
 (let (($x2529 (and $x2524 $x385)))
 (=> $x2529 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2542 (= ?x369 _120)))
 (=> (and $x2542 $x368) (and (= (time-to-state (+ time 1)) _121) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2542 (= ?x369 _120)))
 (let (($x2547 (and $x2542 $x385)))
 (=> $x2547 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2560 (= ?x369 _121)))
 (=> (and $x2560 $x368) (and (= (time-to-state (+ time 1)) _122) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2560 (= ?x369 _121)))
 (let (($x2565 (and $x2560 $x385)))
 (=> $x2565 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2578 (= ?x369 _122)))
 (=> (and $x2578 $x368) (and (= (time-to-state (+ time 1)) _123) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2578 (= ?x369 _122)))
 (let (($x2583 (and $x2578 $x385)))
 (=> $x2583 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2596 (= ?x369 _123)))
 (=> (and $x2596 $x368) (and (= (time-to-state (+ time 1)) _124) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2596 (= ?x369 _123)))
 (let (($x2601 (and $x2596 $x385)))
 (=> $x2601 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2614 (= ?x369 _124)))
 (=> (and $x2614 $x368) (and (= (time-to-state (+ time 1)) _125) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2614 (= ?x369 _124)))
 (let (($x2619 (and $x2614 $x385)))
 (=> $x2619 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2632 (= ?x369 _125)))
 (=> (and $x2632 $x368) (and (= (time-to-state (+ time 1)) _126) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2632 (= ?x369 _125)))
 (let (($x2637 (and $x2632 $x385)))
 (=> $x2637 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2650 (= ?x369 _126)))
 (=> (and $x2650 $x368) (and (= (time-to-state (+ time 1)) _127) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2650 (= ?x369 _126)))
 (let (($x2655 (and $x2650 $x385)))
 (=> $x2655 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2668 (= ?x369 _127)))
 (=> (and $x2668 $x368) (and (= (time-to-state (+ time 1)) _128) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2668 (= ?x369 _127)))
 (let (($x2673 (and $x2668 $x385)))
 (=> $x2673 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2686 (= ?x369 _128)))
 (=> (and $x2686 $x368) (and (= (time-to-state (+ time 1)) _129) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2686 (= ?x369 _128)))
 (let (($x2691 (and $x2686 $x385)))
 (=> $x2691 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2704 (= ?x369 _129)))
 (=> (and $x2704 $x368) (and (= (time-to-state (+ time 1)) _130) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2704 (= ?x369 _129)))
 (let (($x2709 (and $x2704 $x385)))
 (=> $x2709 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2722 (= ?x369 _130)))
 (=> (and $x2722 $x368) (and (= (time-to-state (+ time 1)) _131) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2722 (= ?x369 _130)))
 (let (($x2727 (and $x2722 $x385)))
 (=> $x2727 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2740 (= ?x369 _131)))
 (=> (and $x2740 $x368) (and (= (time-to-state (+ time 1)) _132) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2740 (= ?x369 _131)))
 (let (($x2745 (and $x2740 $x385)))
 (=> $x2745 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2758 (= ?x369 _132)))
 (=> (and $x2758 $x368) (and (= (time-to-state (+ time 1)) _133) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2758 (= ?x369 _132)))
 (let (($x2763 (and $x2758 $x385)))
 (=> $x2763 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2776 (= ?x369 _133)))
 (=> (and $x2776 $x368) (and (= (time-to-state (+ time 1)) _134) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2776 (= ?x369 _133)))
 (let (($x2781 (and $x2776 $x385)))
 (=> $x2781 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2794 (= ?x369 _134)))
 (=> (and $x2794 $x368) (and (= (time-to-state (+ time 1)) _135) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2794 (= ?x369 _134)))
 (let (($x2799 (and $x2794 $x385)))
 (=> $x2799 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2812 (= ?x369 _135)))
 (=> (and $x2812 $x368) (and (= (time-to-state (+ time 1)) _136) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2812 (= ?x369 _135)))
 (let (($x2817 (and $x2812 $x385)))
 (=> $x2817 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2830 (= ?x369 _136)))
 (=> (and $x2830 $x368) (and (= (time-to-state (+ time 1)) _137) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2830 (= ?x369 _136)))
 (let (($x2835 (and $x2830 $x385)))
 (=> $x2835 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2848 (= ?x369 _137)))
 (=> (and $x2848 $x368) (and (= (time-to-state (+ time 1)) _138) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2848 (= ?x369 _137)))
 (let (($x2853 (and $x2848 $x385)))
 (=> $x2853 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2866 (= ?x369 _138)))
 (=> (and $x2866 $x368) (and (= (time-to-state (+ time 1)) _139) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2866 (= ?x369 _138)))
 (let (($x2871 (and $x2866 $x385)))
 (=> $x2871 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2884 (= ?x369 _139)))
 (=> (and $x2884 $x368) (and (= (time-to-state (+ time 1)) _140) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2884 (= ?x369 _139)))
 (let (($x2889 (and $x2884 $x385)))
 (=> $x2889 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2902 (= ?x369 _140)))
 (=> (and $x2902 $x368) (and (= (time-to-state (+ time 1)) _141) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2902 (= ?x369 _140)))
 (let (($x2907 (and $x2902 $x385)))
 (=> $x2907 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2920 (= ?x369 _141)))
 (=> (and $x2920 $x368) (and (= (time-to-state (+ time 1)) _142) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2920 (= ?x369 _141)))
 (let (($x2925 (and $x2920 $x385)))
 (=> $x2925 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2938 (= ?x369 _142)))
 (=> (and $x2938 $x368) (and (= (time-to-state (+ time 1)) _143) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2938 (= ?x369 _142)))
 (let (($x2943 (and $x2938 $x385)))
 (=> $x2943 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2956 (= ?x369 _143)))
 (=> (and $x2956 $x368) (and (= (time-to-state (+ time 1)) _144) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2956 (= ?x369 _143)))
 (let (($x2961 (and $x2956 $x385)))
 (=> $x2961 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2974 (= ?x369 _144)))
 (=> (and $x2974 $x368) (and (= (time-to-state (+ time 1)) _145) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2974 (= ?x369 _144)))
 (let (($x2979 (and $x2974 $x385)))
 (=> $x2979 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x2992 (= ?x369 _145)))
 (=> (and $x2992 $x368) (and (= (time-to-state (+ time 1)) _146) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x2992 (= ?x369 _145)))
 (let (($x2997 (and $x2992 $x385)))
 (=> $x2997 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3010 (= ?x369 _146)))
 (=> (and $x3010 $x368) (and (= (time-to-state (+ time 1)) _147) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3010 (= ?x369 _146)))
 (let (($x3015 (and $x3010 $x385)))
 (=> $x3015 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3028 (= ?x369 _147)))
 (=> (and $x3028 $x368) (and (= (time-to-state (+ time 1)) _148) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3028 (= ?x369 _147)))
 (let (($x3033 (and $x3028 $x385)))
 (=> $x3033 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3046 (= ?x369 _148)))
 (=> (and $x3046 $x368) (and (= (time-to-state (+ time 1)) _149) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3046 (= ?x369 _148)))
 (let (($x3051 (and $x3046 $x385)))
 (=> $x3051 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3064 (= ?x369 _149)))
 (=> (and $x3064 $x368) (and (= (time-to-state (+ time 1)) _150) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3064 (= ?x369 _149)))
 (let (($x3069 (and $x3064 $x385)))
 (=> $x3069 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3082 (= ?x369 _150)))
 (=> (and $x3082 $x368) (and (= (time-to-state (+ time 1)) _151) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3082 (= ?x369 _150)))
 (let (($x3087 (and $x3082 $x385)))
 (=> $x3087 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3100 (= ?x369 _151)))
 (=> (and $x3100 $x368) (and (= (time-to-state (+ time 1)) _152) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3100 (= ?x369 _151)))
 (let (($x3105 (and $x3100 $x385)))
 (=> $x3105 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3118 (= ?x369 _152)))
 (=> (and $x3118 $x368) (and (= (time-to-state (+ time 1)) _153) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3118 (= ?x369 _152)))
 (let (($x3123 (and $x3118 $x385)))
 (=> $x3123 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3136 (= ?x369 _153)))
 (=> (and $x3136 $x368) (and (= (time-to-state (+ time 1)) _154) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3136 (= ?x369 _153)))
 (let (($x3141 (and $x3136 $x385)))
 (=> $x3141 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3154 (= ?x369 _154)))
 (=> (and $x3154 $x368) (and (= (time-to-state (+ time 1)) _155) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3154 (= ?x369 _154)))
 (let (($x3159 (and $x3154 $x385)))
 (=> $x3159 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3172 (= ?x369 _155)))
 (=> (and $x3172 $x368) (and (= (time-to-state (+ time 1)) _156) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3172 (= ?x369 _155)))
 (let (($x3177 (and $x3172 $x385)))
 (=> $x3177 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3190 (= ?x369 _156)))
 (=> (and $x3190 $x368) (and (= (time-to-state (+ time 1)) _157) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3190 (= ?x369 _156)))
 (let (($x3195 (and $x3190 $x385)))
 (=> $x3195 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3208 (= ?x369 _157)))
 (=> (and $x3208 $x368) (and (= (time-to-state (+ time 1)) _158) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3208 (= ?x369 _157)))
 (let (($x3213 (and $x3208 $x385)))
 (=> $x3213 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3226 (= ?x369 _158)))
 (=> (and $x3226 $x368) (and (= (time-to-state (+ time 1)) _159) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3226 (= ?x369 _158)))
 (let (($x3231 (and $x3226 $x385)))
 (=> $x3231 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3244 (= ?x369 _159)))
 (=> (and $x3244 $x368) (and (= (time-to-state (+ time 1)) _160) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3244 (= ?x369 _159)))
 (let (($x3249 (and $x3244 $x385)))
 (=> $x3249 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3262 (= ?x369 _160)))
 (=> (and $x3262 $x368) (and (= (time-to-state (+ time 1)) _161) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3262 (= ?x369 _160)))
 (let (($x3267 (and $x3262 $x385)))
 (=> $x3267 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3280 (= ?x369 _161)))
 (=> (and $x3280 $x368) (and (= (time-to-state (+ time 1)) _162) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3280 (= ?x369 _161)))
 (let (($x3285 (and $x3280 $x385)))
 (=> $x3285 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3298 (= ?x369 _162)))
 (=> (and $x3298 $x368) (and (= (time-to-state (+ time 1)) _163) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3298 (= ?x369 _162)))
 (let (($x3303 (and $x3298 $x385)))
 (=> $x3303 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3316 (= ?x369 _163)))
 (=> (and $x3316 $x368) (and (= (time-to-state (+ time 1)) _164) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3316 (= ?x369 _163)))
 (let (($x3321 (and $x3316 $x385)))
 (=> $x3321 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3334 (= ?x369 _164)))
 (=> (and $x3334 $x368) (and (= (time-to-state (+ time 1)) _165) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3334 (= ?x369 _164)))
 (let (($x3339 (and $x3334 $x385)))
 (=> $x3339 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3352 (= ?x369 _165)))
 (=> (and $x3352 $x368) (and (= (time-to-state (+ time 1)) _166) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3352 (= ?x369 _165)))
 (let (($x3357 (and $x3352 $x385)))
 (=> $x3357 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3370 (= ?x369 _166)))
 (=> (and $x3370 $x368) (and (= (time-to-state (+ time 1)) _167) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3370 (= ?x369 _166)))
 (let (($x3375 (and $x3370 $x385)))
 (=> $x3375 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3388 (= ?x369 _167)))
 (=> (and $x3388 $x368) (and (= (time-to-state (+ time 1)) _168) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3388 (= ?x369 _167)))
 (let (($x3393 (and $x3388 $x385)))
 (=> $x3393 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3406 (= ?x369 _168)))
 (=> (and $x3406 $x368) (and (= (time-to-state (+ time 1)) _169) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3406 (= ?x369 _168)))
 (let (($x3411 (and $x3406 $x385)))
 (=> $x3411 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3424 (= ?x369 _169)))
 (=> (and $x3424 $x368) (and (= (time-to-state (+ time 1)) _170) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3424 (= ?x369 _169)))
 (let (($x3429 (and $x3424 $x385)))
 (=> $x3429 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3442 (= ?x369 _170)))
 (=> (and $x3442 $x368) (and (= (time-to-state (+ time 1)) _171) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3442 (= ?x369 _170)))
 (let (($x3447 (and $x3442 $x385)))
 (=> $x3447 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3460 (= ?x369 _171)))
 (=> (and $x3460 $x368) (and (= (time-to-state (+ time 1)) _172) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3460 (= ?x369 _171)))
 (let (($x3465 (and $x3460 $x385)))
 (=> $x3465 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3478 (= ?x369 _172)))
 (=> (and $x3478 $x368) (and (= (time-to-state (+ time 1)) _173) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3478 (= ?x369 _172)))
 (let (($x3483 (and $x3478 $x385)))
 (=> $x3483 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3496 (= ?x369 _173)))
 (=> (and $x3496 $x368) (and (= (time-to-state (+ time 1)) _174) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3496 (= ?x369 _173)))
 (let (($x3501 (and $x3496 $x385)))
 (=> $x3501 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3514 (= ?x369 _174)))
 (=> (and $x3514 $x368) (and (= (time-to-state (+ time 1)) _175) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3514 (= ?x369 _174)))
 (let (($x3519 (and $x3514 $x385)))
 (=> $x3519 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3532 (= ?x369 _175)))
 (=> (and $x3532 $x368) (and (= (time-to-state (+ time 1)) _176) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3532 (= ?x369 _175)))
 (let (($x3537 (and $x3532 $x385)))
 (=> $x3537 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3550 (= ?x369 _176)))
 (=> (and $x3550 $x368) (and (= (time-to-state (+ time 1)) _177) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3550 (= ?x369 _176)))
 (let (($x3555 (and $x3550 $x385)))
 (=> $x3555 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3568 (= ?x369 _177)))
 (=> (and $x3568 $x368) (and (= (time-to-state (+ time 1)) _178) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3568 (= ?x369 _177)))
 (let (($x3573 (and $x3568 $x385)))
 (=> $x3573 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3586 (= ?x369 _178)))
 (=> (and $x3586 $x368) (and (= (time-to-state (+ time 1)) _179) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3586 (= ?x369 _178)))
 (let (($x3591 (and $x3586 $x385)))
 (=> $x3591 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3604 (= ?x369 _179)))
 (=> (and $x3604 $x368) (and (= (time-to-state (+ time 1)) _180) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3604 (= ?x369 _179)))
 (let (($x3609 (and $x3604 $x385)))
 (=> $x3609 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3622 (= ?x369 _180)))
 (=> (and $x3622 $x368) (and (= (time-to-state (+ time 1)) _181) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3622 (= ?x369 _180)))
 (let (($x3627 (and $x3622 $x385)))
 (=> $x3627 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3640 (= ?x369 _181)))
 (=> (and $x3640 $x368) (and (= (time-to-state (+ time 1)) _182) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3640 (= ?x369 _181)))
 (let (($x3645 (and $x3640 $x385)))
 (=> $x3645 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3658 (= ?x369 _182)))
 (=> (and $x3658 $x368) (and (= (time-to-state (+ time 1)) _183) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3658 (= ?x369 _182)))
 (let (($x3663 (and $x3658 $x385)))
 (=> $x3663 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3676 (= ?x369 _183)))
 (=> (and $x3676 $x368) (and (= (time-to-state (+ time 1)) _184) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3676 (= ?x369 _183)))
 (let (($x3681 (and $x3676 $x385)))
 (=> $x3681 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3694 (= ?x369 _184)))
 (=> (and $x3694 $x368) (and (= (time-to-state (+ time 1)) _185) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3694 (= ?x369 _184)))
 (let (($x3699 (and $x3694 $x385)))
 (=> $x3699 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3712 (= ?x369 _185)))
 (=> (and $x3712 $x368) (and (= (time-to-state (+ time 1)) _186) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3712 (= ?x369 _185)))
 (let (($x3717 (and $x3712 $x385)))
 (=> $x3717 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3730 (= ?x369 _186)))
 (=> (and $x3730 $x368) (and (= (time-to-state (+ time 1)) _187) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3730 (= ?x369 _186)))
 (let (($x3735 (and $x3730 $x385)))
 (=> $x3735 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3748 (= ?x369 _187)))
 (=> (and $x3748 $x368) (and (= (time-to-state (+ time 1)) _188) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3748 (= ?x369 _187)))
 (let (($x3753 (and $x3748 $x385)))
 (=> $x3753 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3766 (= ?x369 _188)))
 (=> (and $x3766 $x368) (and (= (time-to-state (+ time 1)) _189) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3766 (= ?x369 _188)))
 (let (($x3771 (and $x3766 $x385)))
 (=> $x3771 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3784 (= ?x369 _189)))
 (=> (and $x3784 $x368) (and (= (time-to-state (+ time 1)) _190) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3784 (= ?x369 _189)))
 (let (($x3789 (and $x3784 $x385)))
 (=> $x3789 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3802 (= ?x369 _190)))
 (=> (and $x3802 $x368) (and (= (time-to-state (+ time 1)) _191) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3802 (= ?x369 _190)))
 (let (($x3807 (and $x3802 $x385)))
 (=> $x3807 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3820 (= ?x369 _191)))
 (=> (and $x3820 $x368) (and (= (time-to-state (+ time 1)) _192) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3820 (= ?x369 _191)))
 (let (($x3825 (and $x3820 $x385)))
 (=> $x3825 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3838 (= ?x369 _192)))
 (=> (and $x3838 $x368) (and (= (time-to-state (+ time 1)) _193) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3838 (= ?x369 _192)))
 (let (($x3843 (and $x3838 $x385)))
 (=> $x3843 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3856 (= ?x369 _193)))
 (=> (and $x3856 $x368) (and (= (time-to-state (+ time 1)) _194) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3856 (= ?x369 _193)))
 (let (($x3861 (and $x3856 $x385)))
 (=> $x3861 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3874 (= ?x369 _194)))
 (=> (and $x3874 $x368) (and (= (time-to-state (+ time 1)) _195) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3874 (= ?x369 _194)))
 (let (($x3879 (and $x3874 $x385)))
 (=> $x3879 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3892 (= ?x369 _195)))
 (=> (and $x3892 $x368) (and (= (time-to-state (+ time 1)) _196) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3892 (= ?x369 _195)))
 (let (($x3897 (and $x3892 $x385)))
 (=> $x3897 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3910 (= ?x369 _196)))
 (=> (and $x3910 $x368) (and (= (time-to-state (+ time 1)) _197) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3910 (= ?x369 _196)))
 (let (($x3915 (and $x3910 $x385)))
 (=> $x3915 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3928 (= ?x369 _197)))
 (=> (and $x3928 $x368) (and (= (time-to-state (+ time 1)) _198) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3928 (= ?x369 _197)))
 (let (($x3933 (and $x3928 $x385)))
 (=> $x3933 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3946 (= ?x369 _198)))
 (=> (and $x3946 $x368) (and (= (time-to-state (+ time 1)) _199) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3946 (= ?x369 _198)))
 (let (($x3951 (and $x3946 $x385)))
 (=> $x3951 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3964 (= ?x369 _199)))
 (=> (and $x3964 $x368) (and (= (time-to-state (+ time 1)) _200) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3964 (= ?x369 _199)))
 (let (($x3969 (and $x3964 $x385)))
 (=> $x3969 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x3982 (= ?x369 _200)))
 (=> (and $x3982 $x368) (and (= (time-to-state (+ time 1)) _201) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x3982 (= ?x369 _200)))
 (let (($x3987 (and $x3982 $x385)))
 (=> $x3987 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4000 (= ?x369 _201)))
 (=> (and $x4000 $x368) (and (= (time-to-state (+ time 1)) _202) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4000 (= ?x369 _201)))
 (let (($x4005 (and $x4000 $x385)))
 (=> $x4005 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4018 (= ?x369 _202)))
 (=> (and $x4018 $x368) (and (= (time-to-state (+ time 1)) _203) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4018 (= ?x369 _202)))
 (let (($x4023 (and $x4018 $x385)))
 (=> $x4023 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4036 (= ?x369 _203)))
 (=> (and $x4036 $x368) (and (= (time-to-state (+ time 1)) _204) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4036 (= ?x369 _203)))
 (let (($x4041 (and $x4036 $x385)))
 (=> $x4041 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4054 (= ?x369 _204)))
 (=> (and $x4054 $x368) (and (= (time-to-state (+ time 1)) _205) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4054 (= ?x369 _204)))
 (let (($x4059 (and $x4054 $x385)))
 (=> $x4059 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4072 (= ?x369 _205)))
 (=> (and $x4072 $x368) (and (= (time-to-state (+ time 1)) _206) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4072 (= ?x369 _205)))
 (let (($x4077 (and $x4072 $x385)))
 (=> $x4077 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4090 (= ?x369 _206)))
 (=> (and $x4090 $x368) (and (= (time-to-state (+ time 1)) _207) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4090 (= ?x369 _206)))
 (let (($x4095 (and $x4090 $x385)))
 (=> $x4095 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4108 (= ?x369 _207)))
 (=> (and $x4108 $x368) (and (= (time-to-state (+ time 1)) _208) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4108 (= ?x369 _207)))
 (let (($x4113 (and $x4108 $x385)))
 (=> $x4113 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4126 (= ?x369 _208)))
 (=> (and $x4126 $x368) (and (= (time-to-state (+ time 1)) _209) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4126 (= ?x369 _208)))
 (let (($x4131 (and $x4126 $x385)))
 (=> $x4131 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4144 (= ?x369 _209)))
 (=> (and $x4144 $x368) (and (= (time-to-state (+ time 1)) _210) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4144 (= ?x369 _209)))
 (let (($x4149 (and $x4144 $x385)))
 (=> $x4149 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4162 (= ?x369 _210)))
 (=> (and $x4162 $x368) (and (= (time-to-state (+ time 1)) _211) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4162 (= ?x369 _210)))
 (let (($x4167 (and $x4162 $x385)))
 (=> $x4167 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4180 (= ?x369 _211)))
 (=> (and $x4180 $x368) (and (= (time-to-state (+ time 1)) _212) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4180 (= ?x369 _211)))
 (let (($x4185 (and $x4180 $x385)))
 (=> $x4185 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4198 (= ?x369 _212)))
 (=> (and $x4198 $x368) (and (= (time-to-state (+ time 1)) _213) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4198 (= ?x369 _212)))
 (let (($x4203 (and $x4198 $x385)))
 (=> $x4203 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4216 (= ?x369 _213)))
 (=> (and $x4216 $x368) (and (= (time-to-state (+ time 1)) _214) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4216 (= ?x369 _213)))
 (let (($x4221 (and $x4216 $x385)))
 (=> $x4221 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4234 (= ?x369 _214)))
 (=> (and $x4234 $x368) (and (= (time-to-state (+ time 1)) _215) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4234 (= ?x369 _214)))
 (let (($x4239 (and $x4234 $x385)))
 (=> $x4239 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4252 (= ?x369 _215)))
 (=> (and $x4252 $x368) (and (= (time-to-state (+ time 1)) _216) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4252 (= ?x369 _215)))
 (let (($x4257 (and $x4252 $x385)))
 (=> $x4257 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4270 (= ?x369 _216)))
 (=> (and $x4270 $x368) (and (= (time-to-state (+ time 1)) _217) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4270 (= ?x369 _216)))
 (let (($x4275 (and $x4270 $x385)))
 (=> $x4275 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4288 (= ?x369 _217)))
 (=> (and $x4288 $x368) (and (= (time-to-state (+ time 1)) _218) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4288 (= ?x369 _217)))
 (let (($x4293 (and $x4288 $x385)))
 (=> $x4293 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4306 (= ?x369 _218)))
 (=> (and $x4306 $x368) (and (= (time-to-state (+ time 1)) _219) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4306 (= ?x369 _218)))
 (let (($x4311 (and $x4306 $x385)))
 (=> $x4311 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4324 (= ?x369 _219)))
 (=> (and $x4324 $x368) (and (= (time-to-state (+ time 1)) _220) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4324 (= ?x369 _219)))
 (let (($x4329 (and $x4324 $x385)))
 (=> $x4329 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4342 (= ?x369 _220)))
 (=> (and $x4342 $x368) (and (= (time-to-state (+ time 1)) _221) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4342 (= ?x369 _220)))
 (let (($x4347 (and $x4342 $x385)))
 (=> $x4347 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4360 (= ?x369 _221)))
 (=> (and $x4360 $x368) (and (= (time-to-state (+ time 1)) _222) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4360 (= ?x369 _221)))
 (let (($x4365 (and $x4360 $x385)))
 (=> $x4365 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4378 (= ?x369 _222)))
 (=> (and $x4378 $x368) (and (= (time-to-state (+ time 1)) _223) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4378 (= ?x369 _222)))
 (let (($x4383 (and $x4378 $x385)))
 (=> $x4383 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4396 (= ?x369 _223)))
 (=> (and $x4396 $x368) (and (= (time-to-state (+ time 1)) _224) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4396 (= ?x369 _223)))
 (let (($x4401 (and $x4396 $x385)))
 (=> $x4401 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4414 (= ?x369 _224)))
 (=> (and $x4414 $x368) (and (= (time-to-state (+ time 1)) _225) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4414 (= ?x369 _224)))
 (let (($x4419 (and $x4414 $x385)))
 (=> $x4419 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4432 (= ?x369 _225)))
 (=> (and $x4432 $x368) (and (= (time-to-state (+ time 1)) _226) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4432 (= ?x369 _225)))
 (let (($x4437 (and $x4432 $x385)))
 (=> $x4437 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4450 (= ?x369 _226)))
 (=> (and $x4450 $x368) (and (= (time-to-state (+ time 1)) _227) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4450 (= ?x369 _226)))
 (let (($x4455 (and $x4450 $x385)))
 (=> $x4455 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4468 (= ?x369 _227)))
 (=> (and $x4468 $x368) (and (= (time-to-state (+ time 1)) _228) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4468 (= ?x369 _227)))
 (let (($x4473 (and $x4468 $x385)))
 (=> $x4473 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4486 (= ?x369 _228)))
 (=> (and $x4486 $x368) (and (= (time-to-state (+ time 1)) _229) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4486 (= ?x369 _228)))
 (let (($x4491 (and $x4486 $x385)))
 (=> $x4491 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4504 (= ?x369 _229)))
 (=> (and $x4504 $x368) (and (= (time-to-state (+ time 1)) _230) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4504 (= ?x369 _229)))
 (let (($x4509 (and $x4504 $x385)))
 (=> $x4509 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4522 (= ?x369 _230)))
 (=> (and $x4522 $x368) (and (= (time-to-state (+ time 1)) _231) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4522 (= ?x369 _230)))
 (let (($x4527 (and $x4522 $x385)))
 (=> $x4527 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4540 (= ?x369 _231)))
 (=> (and $x4540 $x368) (and (= (time-to-state (+ time 1)) _232) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4540 (= ?x369 _231)))
 (let (($x4545 (and $x4540 $x385)))
 (=> $x4545 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4558 (= ?x369 _232)))
 (=> (and $x4558 $x368) (and (= (time-to-state (+ time 1)) _233) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4558 (= ?x369 _232)))
 (let (($x4563 (and $x4558 $x385)))
 (=> $x4563 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4576 (= ?x369 _233)))
 (=> (and $x4576 $x368) (and (= (time-to-state (+ time 1)) _234) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4576 (= ?x369 _233)))
 (let (($x4581 (and $x4576 $x385)))
 (=> $x4581 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4594 (= ?x369 _234)))
 (=> (and $x4594 $x368) (and (= (time-to-state (+ time 1)) _235) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4594 (= ?x369 _234)))
 (let (($x4599 (and $x4594 $x385)))
 (=> $x4599 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4612 (= ?x369 _235)))
 (=> (and $x4612 $x368) (and (= (time-to-state (+ time 1)) _236) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4612 (= ?x369 _235)))
 (let (($x4617 (and $x4612 $x385)))
 (=> $x4617 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4630 (= ?x369 _236)))
 (=> (and $x4630 $x368) (and (= (time-to-state (+ time 1)) _237) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4630 (= ?x369 _236)))
 (let (($x4635 (and $x4630 $x385)))
 (=> $x4635 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4648 (= ?x369 _237)))
 (=> (and $x4648 $x368) (and (= (time-to-state (+ time 1)) _238) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4648 (= ?x369 _237)))
 (let (($x4653 (and $x4648 $x385)))
 (=> $x4653 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4666 (= ?x369 _238)))
 (=> (and $x4666 $x368) (and (= (time-to-state (+ time 1)) _239) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4666 (= ?x369 _238)))
 (let (($x4671 (and $x4666 $x385)))
 (=> $x4671 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4684 (= ?x369 _239)))
 (=> (and $x4684 $x368) (and (= (time-to-state (+ time 1)) _240) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4684 (= ?x369 _239)))
 (let (($x4689 (and $x4684 $x385)))
 (=> $x4689 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4702 (= ?x369 _240)))
 (=> (and $x4702 $x368) (and (= (time-to-state (+ time 1)) _241) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4702 (= ?x369 _240)))
 (let (($x4707 (and $x4702 $x385)))
 (=> $x4707 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4720 (= ?x369 _241)))
 (=> (and $x4720 $x368) (and (= (time-to-state (+ time 1)) _242) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4720 (= ?x369 _241)))
 (let (($x4725 (and $x4720 $x385)))
 (=> $x4725 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4738 (= ?x369 _242)))
 (=> (and $x4738 $x368) (and (= (time-to-state (+ time 1)) _243) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4738 (= ?x369 _242)))
 (let (($x4743 (and $x4738 $x385)))
 (=> $x4743 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4756 (= ?x369 _243)))
 (=> (and $x4756 $x368) (and (= (time-to-state (+ time 1)) _244) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4756 (= ?x369 _243)))
 (let (($x4761 (and $x4756 $x385)))
 (=> $x4761 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4774 (= ?x369 _244)))
 (=> (and $x4774 $x368) (and (= (time-to-state (+ time 1)) _245) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4774 (= ?x369 _244)))
 (let (($x4779 (and $x4774 $x385)))
 (=> $x4779 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4792 (= ?x369 _245)))
 (=> (and $x4792 $x368) (and (= (time-to-state (+ time 1)) _246) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4792 (= ?x369 _245)))
 (let (($x4797 (and $x4792 $x385)))
 (=> $x4797 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4810 (= ?x369 _246)))
 (=> (and $x4810 $x368) (and (= (time-to-state (+ time 1)) _247) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4810 (= ?x369 _246)))
 (let (($x4815 (and $x4810 $x385)))
 (=> $x4815 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4828 (= ?x369 _247)))
 (=> (and $x4828 $x368) (and (= (time-to-state (+ time 1)) _248) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4828 (= ?x369 _247)))
 (let (($x4833 (and $x4828 $x385)))
 (=> $x4833 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4846 (= ?x369 _248)))
 (=> (and $x4846 $x368) (and (= (time-to-state (+ time 1)) _249) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4846 (= ?x369 _248)))
 (let (($x4851 (and $x4846 $x385)))
 (=> $x4851 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4864 (= ?x369 _249)))
 (=> (and $x4864 $x368) (and (= (time-to-state (+ time 1)) _250) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4864 (= ?x369 _249)))
 (let (($x4869 (and $x4864 $x385)))
 (=> $x4869 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4882 (= ?x369 _250)))
 (=> (and $x4882 $x368) (and (= (time-to-state (+ time 1)) _251) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4882 (= ?x369 _250)))
 (let (($x4887 (and $x4882 $x385)))
 (=> $x4887 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4900 (= ?x369 _251)))
 (=> (and $x4900 $x368) (and (= (time-to-state (+ time 1)) _252) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4900 (= ?x369 _251)))
 (let (($x4905 (and $x4900 $x385)))
 (=> $x4905 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4918 (= ?x369 _252)))
 (=> (and $x4918 $x368) (and (= (time-to-state (+ time 1)) _253) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4918 (= ?x369 _252)))
 (let (($x4923 (and $x4918 $x385)))
 (=> $x4923 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4936 (= ?x369 _253)))
 (=> (and $x4936 $x368) (and (= (time-to-state (+ time 1)) _254) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4936 (= ?x369 _253)))
 (let (($x4941 (and $x4936 $x385)))
 (=> $x4941 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4954 (= ?x369 _254)))
 (=> (and $x4954 $x368) (and (= (time-to-state (+ time 1)) _255) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4954 (= ?x369 _254)))
 (let (($x4959 (and $x4954 $x385)))
 (=> $x4959 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4972 (= ?x369 _255)))
 (=> (and $x4972 $x368) (and (= (time-to-state (+ time 1)) _256) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4972 (= ?x369 _255)))
 (let (($x4977 (and $x4972 $x385)))
 (=> $x4977 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x4990 (= ?x369 _256)))
 (=> (and $x4990 $x368) (and (= (time-to-state (+ time 1)) _257) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x4990 (= ?x369 _256)))
 (let (($x4995 (and $x4990 $x385)))
 (=> $x4995 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5008 (= ?x369 _257)))
 (=> (and $x5008 $x368) (and (= (time-to-state (+ time 1)) _258) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5008 (= ?x369 _257)))
 (let (($x5013 (and $x5008 $x385)))
 (=> $x5013 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5026 (= ?x369 _258)))
 (=> (and $x5026 $x368) (and (= (time-to-state (+ time 1)) _259) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5026 (= ?x369 _258)))
 (let (($x5031 (and $x5026 $x385)))
 (=> $x5031 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5044 (= ?x369 _259)))
 (=> (and $x5044 $x368) (and (= (time-to-state (+ time 1)) _260) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5044 (= ?x369 _259)))
 (let (($x5049 (and $x5044 $x385)))
 (=> $x5049 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5062 (= ?x369 _260)))
 (=> (and $x5062 $x368) (and (= (time-to-state (+ time 1)) _261) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5062 (= ?x369 _260)))
 (let (($x5067 (and $x5062 $x385)))
 (=> $x5067 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5080 (= ?x369 _261)))
 (=> (and $x5080 $x368) (and (= (time-to-state (+ time 1)) _262) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5080 (= ?x369 _261)))
 (let (($x5085 (and $x5080 $x385)))
 (=> $x5085 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5098 (= ?x369 _262)))
 (=> (and $x5098 $x368) (and (= (time-to-state (+ time 1)) _263) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5098 (= ?x369 _262)))
 (let (($x5103 (and $x5098 $x385)))
 (=> $x5103 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5116 (= ?x369 _263)))
 (=> (and $x5116 $x368) (and (= (time-to-state (+ time 1)) _264) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5116 (= ?x369 _263)))
 (let (($x5121 (and $x5116 $x385)))
 (=> $x5121 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5134 (= ?x369 _264)))
 (=> (and $x5134 $x368) (and (= (time-to-state (+ time 1)) _265) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5134 (= ?x369 _264)))
 (let (($x5139 (and $x5134 $x385)))
 (=> $x5139 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5152 (= ?x369 _265)))
 (=> (and $x5152 $x368) (and (= (time-to-state (+ time 1)) _266) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5152 (= ?x369 _265)))
 (let (($x5157 (and $x5152 $x385)))
 (=> $x5157 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5170 (= ?x369 _266)))
 (=> (and $x5170 $x368) (and (= (time-to-state (+ time 1)) _267) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5170 (= ?x369 _266)))
 (let (($x5175 (and $x5170 $x385)))
 (=> $x5175 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5188 (= ?x369 _267)))
 (=> (and $x5188 $x368) (and (= (time-to-state (+ time 1)) _268) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5188 (= ?x369 _267)))
 (let (($x5193 (and $x5188 $x385)))
 (=> $x5193 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5206 (= ?x369 _268)))
 (=> (and $x5206 $x368) (and (= (time-to-state (+ time 1)) _269) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5206 (= ?x369 _268)))
 (let (($x5211 (and $x5206 $x385)))
 (=> $x5211 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5224 (= ?x369 _269)))
 (=> (and $x5224 $x368) (and (= (time-to-state (+ time 1)) _270) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5224 (= ?x369 _269)))
 (let (($x5229 (and $x5224 $x385)))
 (=> $x5229 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5242 (= ?x369 _270)))
 (=> (and $x5242 $x368) (and (= (time-to-state (+ time 1)) _271) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5242 (= ?x369 _270)))
 (let (($x5247 (and $x5242 $x385)))
 (=> $x5247 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5260 (= ?x369 _271)))
 (=> (and $x5260 $x368) (and (= (time-to-state (+ time 1)) _272) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5260 (= ?x369 _271)))
 (let (($x5265 (and $x5260 $x385)))
 (=> $x5265 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5278 (= ?x369 _272)))
 (=> (and $x5278 $x368) (and (= (time-to-state (+ time 1)) _273) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5278 (= ?x369 _272)))
 (let (($x5283 (and $x5278 $x385)))
 (=> $x5283 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5296 (= ?x369 _273)))
 (=> (and $x5296 $x368) (and (= (time-to-state (+ time 1)) _274) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5296 (= ?x369 _273)))
 (let (($x5301 (and $x5296 $x385)))
 (=> $x5301 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5314 (= ?x369 _274)))
 (=> (and $x5314 $x368) (and (= (time-to-state (+ time 1)) _275) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5314 (= ?x369 _274)))
 (let (($x5319 (and $x5314 $x385)))
 (=> $x5319 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5332 (= ?x369 _275)))
 (=> (and $x5332 $x368) (and (= (time-to-state (+ time 1)) _276) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5332 (= ?x369 _275)))
 (let (($x5337 (and $x5332 $x385)))
 (=> $x5337 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5350 (= ?x369 _276)))
 (=> (and $x5350 $x368) (and (= (time-to-state (+ time 1)) _277) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5350 (= ?x369 _276)))
 (let (($x5355 (and $x5350 $x385)))
 (=> $x5355 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5368 (= ?x369 _277)))
 (=> (and $x5368 $x368) (and (= (time-to-state (+ time 1)) _278) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5368 (= ?x369 _277)))
 (let (($x5373 (and $x5368 $x385)))
 (=> $x5373 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5386 (= ?x369 _278)))
 (=> (and $x5386 $x368) (and (= (time-to-state (+ time 1)) _279) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5386 (= ?x369 _278)))
 (let (($x5391 (and $x5386 $x385)))
 (=> $x5391 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5404 (= ?x369 _279)))
 (=> (and $x5404 $x368) (and (= (time-to-state (+ time 1)) _280) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5404 (= ?x369 _279)))
 (let (($x5409 (and $x5404 $x385)))
 (=> $x5409 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5422 (= ?x369 _280)))
 (=> (and $x5422 $x368) (and (= (time-to-state (+ time 1)) _281) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5422 (= ?x369 _280)))
 (let (($x5427 (and $x5422 $x385)))
 (=> $x5427 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5440 (= ?x369 _281)))
 (=> (and $x5440 $x368) (and (= (time-to-state (+ time 1)) _282) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5440 (= ?x369 _281)))
 (let (($x5445 (and $x5440 $x385)))
 (=> $x5445 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5458 (= ?x369 _282)))
 (=> (and $x5458 $x368) (and (= (time-to-state (+ time 1)) _283) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5458 (= ?x369 _282)))
 (let (($x5463 (and $x5458 $x385)))
 (=> $x5463 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5476 (= ?x369 _283)))
 (=> (and $x5476 $x368) (and (= (time-to-state (+ time 1)) _284) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5476 (= ?x369 _283)))
 (let (($x5481 (and $x5476 $x385)))
 (=> $x5481 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5494 (= ?x369 _284)))
 (=> (and $x5494 $x368) (and (= (time-to-state (+ time 1)) _285) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5494 (= ?x369 _284)))
 (let (($x5499 (and $x5494 $x385)))
 (=> $x5499 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5512 (= ?x369 _285)))
 (=> (and $x5512 $x368) (and (= (time-to-state (+ time 1)) _286) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5512 (= ?x369 _285)))
 (let (($x5517 (and $x5512 $x385)))
 (=> $x5517 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5530 (= ?x369 _286)))
 (=> (and $x5530 $x368) (and (= (time-to-state (+ time 1)) _287) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5530 (= ?x369 _286)))
 (let (($x5535 (and $x5530 $x385)))
 (=> $x5535 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5548 (= ?x369 _287)))
 (=> (and $x5548 $x368) (and (= (time-to-state (+ time 1)) _288) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5548 (= ?x369 _287)))
 (let (($x5553 (and $x5548 $x385)))
 (=> $x5553 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5566 (= ?x369 _288)))
 (=> (and $x5566 $x368) (and (= (time-to-state (+ time 1)) _289) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5566 (= ?x369 _288)))
 (let (($x5571 (and $x5566 $x385)))
 (=> $x5571 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5584 (= ?x369 _289)))
 (=> (and $x5584 $x368) (and (= (time-to-state (+ time 1)) _290) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5584 (= ?x369 _289)))
 (let (($x5589 (and $x5584 $x385)))
 (=> $x5589 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5602 (= ?x369 _290)))
 (=> (and $x5602 $x368) (and (= (time-to-state (+ time 1)) _291) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5602 (= ?x369 _290)))
 (let (($x5607 (and $x5602 $x385)))
 (=> $x5607 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5620 (= ?x369 _291)))
 (=> (and $x5620 $x368) (and (= (time-to-state (+ time 1)) _292) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5620 (= ?x369 _291)))
 (let (($x5625 (and $x5620 $x385)))
 (=> $x5625 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5638 (= ?x369 _292)))
 (=> (and $x5638 $x368) (and (= (time-to-state (+ time 1)) _293) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5638 (= ?x369 _292)))
 (let (($x5643 (and $x5638 $x385)))
 (=> $x5643 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5656 (= ?x369 _293)))
 (=> (and $x5656 $x368) (and (= (time-to-state (+ time 1)) _294) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5656 (= ?x369 _293)))
 (let (($x5661 (and $x5656 $x385)))
 (=> $x5661 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5674 (= ?x369 _294)))
 (=> (and $x5674 $x368) (and (= (time-to-state (+ time 1)) _295) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5674 (= ?x369 _294)))
 (let (($x5679 (and $x5674 $x385)))
 (=> $x5679 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5692 (= ?x369 _295)))
 (=> (and $x5692 $x368) (and (= (time-to-state (+ time 1)) _296) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5692 (= ?x369 _295)))
 (let (($x5697 (and $x5692 $x385)))
 (=> $x5697 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5710 (= ?x369 _296)))
 (=> (and $x5710 $x368) (and (= (time-to-state (+ time 1)) _297) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5710 (= ?x369 _296)))
 (let (($x5715 (and $x5710 $x385)))
 (=> $x5715 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5728 (= ?x369 _297)))
 (=> (and $x5728 $x368) (and (= (time-to-state (+ time 1)) _298) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5728 (= ?x369 _297)))
 (let (($x5733 (and $x5728 $x385)))
 (=> $x5733 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5746 (= ?x369 _298)))
 (=> (and $x5746 $x368) (and (= (time-to-state (+ time 1)) _299) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5746 (= ?x369 _298)))
 (let (($x5751 (and $x5746 $x385)))
 (=> $x5751 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5764 (= ?x369 _299)))
 (=> (and $x5764 $x368) (and (= (time-to-state (+ time 1)) _300) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5764 (= ?x369 _299)))
 (let (($x5769 (and $x5764 $x385)))
 (=> $x5769 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5782 (= ?x369 _300)))
 (=> (and $x5782 $x368) (and (= (time-to-state (+ time 1)) _301) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5782 (= ?x369 _300)))
 (let (($x5787 (and $x5782 $x385)))
 (=> $x5787 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5800 (= ?x369 _301)))
 (=> (and $x5800 $x368) (and (= (time-to-state (+ time 1)) _302) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5800 (= ?x369 _301)))
 (let (($x5805 (and $x5800 $x385)))
 (=> $x5805 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5818 (= ?x369 _302)))
 (=> (and $x5818 $x368) (and (= (time-to-state (+ time 1)) _303) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5818 (= ?x369 _302)))
 (let (($x5823 (and $x5818 $x385)))
 (=> $x5823 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5836 (= ?x369 _303)))
 (=> (and $x5836 $x368) (and (= (time-to-state (+ time 1)) _304) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5836 (= ?x369 _303)))
 (let (($x5841 (and $x5836 $x385)))
 (=> $x5841 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5854 (= ?x369 _304)))
 (=> (and $x5854 $x368) (and (= (time-to-state (+ time 1)) _305) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5854 (= ?x369 _304)))
 (let (($x5859 (and $x5854 $x385)))
 (=> $x5859 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5872 (= ?x369 _305)))
 (=> (and $x5872 $x368) (and (= (time-to-state (+ time 1)) _306) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5872 (= ?x369 _305)))
 (let (($x5877 (and $x5872 $x385)))
 (=> $x5877 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5890 (= ?x369 _306)))
 (=> (and $x5890 $x368) (and (= (time-to-state (+ time 1)) _307) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5890 (= ?x369 _306)))
 (let (($x5895 (and $x5890 $x385)))
 (=> $x5895 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5908 (= ?x369 _307)))
 (=> (and $x5908 $x368) (and (= (time-to-state (+ time 1)) _308) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5908 (= ?x369 _307)))
 (let (($x5913 (and $x5908 $x385)))
 (=> $x5913 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5926 (= ?x369 _308)))
 (=> (and $x5926 $x368) (and (= (time-to-state (+ time 1)) _309) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5926 (= ?x369 _308)))
 (let (($x5931 (and $x5926 $x385)))
 (=> $x5931 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let (($x363 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x367 (input-arg0 time)))
 (let (($x368 (and (distinct ?x367 0) true)))
 (let ((?x369 (time-to-state time)))
 (let (($x5944 (= ?x369 _309)))
 (=> (and $x5944 $x368) (and (= (time-to-state (+ time 1)) _310) $x363))))))))
 )
(assert
 (forall ((time Int) )(let ((?x361 (+ time 1)))
 (let ((?x364 (time-to-state ?x361)))
 (let (($x384 (= ?x364 ERR)))
 (let ((?x367 (input-arg0 time)))
 (let (($x385 (= ?x367 1)))
 (let ((?x369 (time-to-state time)))
 (let (($x5944 (= ?x369 _309)))
 (let (($x5949 (and $x5944 $x385)))
 (=> $x5949 $x384))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x369 (time-to-state time)))
 (let (($x5952 (= ?x369 ERR)))
 (and $x5952 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310) true))
(check-sat)
