; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(assert
 (let ((?x49 (time-to-state 0)))
 (= ?x49 _0)))
(assert
 (let ((?x69 (input-arg0 0)))
 (= ?x69 0)))
(assert
 (let ((?x71 (var1_0 0)))
 (= ?x71 0)))
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x100 (= ?x99 _0)))
 (let (($x116 (and $x100 $x115)))
 (=> $x116 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x130 (= ?x99 _1)))
 (let (($x135 (and $x130 $x115)))
 (=> $x135 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x148 (= ?x99 _2)))
 (let (($x153 (and $x148 $x115)))
 (=> $x153 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x166 (= ?x99 _3)))
 (let (($x171 (and $x166 $x115)))
 (=> $x171 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x184 (= ?x99 _4)))
 (let (($x189 (and $x184 $x115)))
 (=> $x189 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x202 (= ?x99 _5)))
 (let (($x207 (and $x202 $x115)))
 (=> $x207 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x220 (= ?x99 _6)))
 (let (($x225 (and $x220 $x115)))
 (=> $x225 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x238 (= ?x99 _7)))
 (let (($x243 (and $x238 $x115)))
 (=> $x243 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x256 (= ?x99 _8)))
 (let (($x261 (and $x256 $x115)))
 (=> $x261 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x274 (= ?x99 _9)))
 (let (($x279 (and $x274 $x115)))
 (=> $x279 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x292 (= ?x99 _10)))
 (let (($x297 (and $x292 $x115)))
 (=> $x297 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x310 (= ?x99 _11)))
 (let (($x315 (and $x310 $x115)))
 (=> $x315 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x328 (= ?x99 _12)))
 (let (($x333 (and $x328 $x115)))
 (=> $x333 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x346 (= ?x99 _13)))
 (let (($x351 (and $x346 $x115)))
 (=> $x351 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x364 (= ?x99 _14)))
 (let (($x369 (and $x364 $x115)))
 (=> $x369 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x382 (= ?x99 _15)))
 (let (($x387 (and $x382 $x115)))
 (=> $x387 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x400 (= ?x99 _16)))
 (let (($x405 (and $x400 $x115)))
 (=> $x405 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x418 (= ?x99 _17)))
 (let (($x423 (and $x418 $x115)))
 (=> $x423 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x436 (= ?x99 _18)))
 (let (($x441 (and $x436 $x115)))
 (=> $x441 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x454 (= ?x99 _19)))
 (let (($x459 (and $x454 $x115)))
 (=> $x459 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x472 (= ?x99 _20)))
 (let (($x477 (and $x472 $x115)))
 (=> $x477 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x490 (= ?x99 _21)))
 (let (($x495 (and $x490 $x115)))
 (=> $x495 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x508 (= ?x99 _22)))
 (let (($x513 (and $x508 $x115)))
 (=> $x513 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x526 (= ?x99 _23)))
 (let (($x531 (and $x526 $x115)))
 (=> $x531 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x544 (= ?x99 _24)))
 (let (($x549 (and $x544 $x115)))
 (=> $x549 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x562 (= ?x99 _25)))
 (let (($x567 (and $x562 $x115)))
 (=> $x567 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x580 (= ?x99 _26)))
 (let (($x585 (and $x580 $x115)))
 (=> $x585 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x598 (= ?x99 _27)))
 (let (($x603 (and $x598 $x115)))
 (=> $x603 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x616 (= ?x99 _28)))
 (let (($x621 (and $x616 $x115)))
 (=> $x621 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x634 (= ?x99 _29)))
 (let (($x639 (and $x634 $x115)))
 (=> $x639 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x652 (= ?x99 _30)))
 (let (($x657 (and $x652 $x115)))
 (=> $x657 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x670 (= ?x99 _31)))
 (let (($x675 (and $x670 $x115)))
 (=> $x675 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x688 (= ?x99 _32)))
 (let (($x693 (and $x688 $x115)))
 (=> $x693 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x706 (= ?x99 _33)))
 (let (($x711 (and $x706 $x115)))
 (=> $x711 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x724 (= ?x99 _34)))
 (let (($x729 (and $x724 $x115)))
 (=> $x729 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x742 (= ?x99 _35)))
 (let (($x747 (and $x742 $x115)))
 (=> $x747 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x760 (= ?x99 _36)))
 (let (($x765 (and $x760 $x115)))
 (=> $x765 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x778 (= ?x99 _37)))
 (let (($x783 (and $x778 $x115)))
 (=> $x783 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x796 (= ?x99 _38)))
 (let (($x801 (and $x796 $x115)))
 (=> $x801 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let (($x93 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x93))))
 )
(assert
 (forall ((time Int) )(let ((?x91 (+ time 1)))
 (let ((?x94 (time-to-state ?x91)))
 (let (($x114 (= ?x94 ERR)))
 (let ((?x97 (input-arg0 time)))
 (let (($x115 (= ?x97 1)))
 (let ((?x99 (time-to-state time)))
 (let (($x814 (= ?x99 _39)))
 (let (($x819 (and $x814 $x115)))
 (=> $x819 $x114))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x99 (time-to-state time)))
 (let (($x822 (= ?x99 ERR)))
 (and $x822 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40) true))
(check-sat)
