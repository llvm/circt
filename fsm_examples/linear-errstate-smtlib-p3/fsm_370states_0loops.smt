; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(assert
 (let ((?x379 (time-to-state 0)))
 (= ?x379 _0)))
(assert
 (let ((?x399 (input-arg0 0)))
 (= ?x399 0)))
(assert
 (let ((?x401 (var1_0 0)))
 (= ?x401 0)))
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x430 (= ?x429 _0)))
 (let (($x446 (and $x430 $x445)))
 (=> $x446 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x460 (= ?x429 _1)))
 (let (($x465 (and $x460 $x445)))
 (=> $x465 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x478 (= ?x429 _2)))
 (let (($x483 (and $x478 $x445)))
 (=> $x483 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x496 (= ?x429 _3)))
 (let (($x501 (and $x496 $x445)))
 (=> $x501 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x514 (= ?x429 _4)))
 (let (($x519 (and $x514 $x445)))
 (=> $x519 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x532 (= ?x429 _5)))
 (let (($x537 (and $x532 $x445)))
 (=> $x537 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x550 (= ?x429 _6)))
 (let (($x555 (and $x550 $x445)))
 (=> $x555 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x568 (= ?x429 _7)))
 (let (($x573 (and $x568 $x445)))
 (=> $x573 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x586 (= ?x429 _8)))
 (let (($x591 (and $x586 $x445)))
 (=> $x591 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x604 (= ?x429 _9)))
 (let (($x609 (and $x604 $x445)))
 (=> $x609 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x622 (= ?x429 _10)))
 (let (($x627 (and $x622 $x445)))
 (=> $x627 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x640 (= ?x429 _11)))
 (let (($x645 (and $x640 $x445)))
 (=> $x645 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x658 (= ?x429 _12)))
 (let (($x663 (and $x658 $x445)))
 (=> $x663 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x676 (= ?x429 _13)))
 (let (($x681 (and $x676 $x445)))
 (=> $x681 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x694 (= ?x429 _14)))
 (let (($x699 (and $x694 $x445)))
 (=> $x699 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x712 (= ?x429 _15)))
 (let (($x717 (and $x712 $x445)))
 (=> $x717 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x730 (= ?x429 _16)))
 (let (($x735 (and $x730 $x445)))
 (=> $x735 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x748 (= ?x429 _17)))
 (let (($x753 (and $x748 $x445)))
 (=> $x753 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x766 (= ?x429 _18)))
 (let (($x771 (and $x766 $x445)))
 (=> $x771 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x784 (= ?x429 _19)))
 (let (($x789 (and $x784 $x445)))
 (=> $x789 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x802 (= ?x429 _20)))
 (let (($x807 (and $x802 $x445)))
 (=> $x807 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x820 (= ?x429 _21)))
 (let (($x825 (and $x820 $x445)))
 (=> $x825 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x838 (= ?x429 _22)))
 (let (($x843 (and $x838 $x445)))
 (=> $x843 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x856 (= ?x429 _23)))
 (let (($x861 (and $x856 $x445)))
 (=> $x861 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x874 (= ?x429 _24)))
 (let (($x879 (and $x874 $x445)))
 (=> $x879 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x892 (= ?x429 _25)))
 (let (($x897 (and $x892 $x445)))
 (=> $x897 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x910 (= ?x429 _26)))
 (let (($x915 (and $x910 $x445)))
 (=> $x915 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x928 (= ?x429 _27)))
 (let (($x933 (and $x928 $x445)))
 (=> $x933 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x946 (= ?x429 _28)))
 (let (($x951 (and $x946 $x445)))
 (=> $x951 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x964 (= ?x429 _29)))
 (let (($x969 (and $x964 $x445)))
 (=> $x969 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x982 (= ?x429 _30)))
 (let (($x987 (and $x982 $x445)))
 (=> $x987 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1000 (= ?x429 _31)))
 (let (($x1005 (and $x1000 $x445)))
 (=> $x1005 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1018 (= ?x429 _32)))
 (let (($x1023 (and $x1018 $x445)))
 (=> $x1023 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1036 (= ?x429 _33)))
 (let (($x1041 (and $x1036 $x445)))
 (=> $x1041 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1054 (= ?x429 _34)))
 (let (($x1059 (and $x1054 $x445)))
 (=> $x1059 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1072 (= ?x429 _35)))
 (let (($x1077 (and $x1072 $x445)))
 (=> $x1077 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1090 (= ?x429 _36)))
 (let (($x1095 (and $x1090 $x445)))
 (=> $x1095 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1108 (= ?x429 _37)))
 (let (($x1113 (and $x1108 $x445)))
 (=> $x1113 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1126 (= ?x429 _38)))
 (let (($x1131 (and $x1126 $x445)))
 (=> $x1131 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1144 (= ?x429 _39)))
 (let (($x1149 (and $x1144 $x445)))
 (=> $x1149 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1162 (= ?x429 _40)))
 (let (($x1167 (and $x1162 $x445)))
 (=> $x1167 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1180 (= ?x429 _41)))
 (let (($x1185 (and $x1180 $x445)))
 (=> $x1185 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1198 (= ?x429 _42)))
 (let (($x1203 (and $x1198 $x445)))
 (=> $x1203 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1216 (= ?x429 _43)))
 (let (($x1221 (and $x1216 $x445)))
 (=> $x1221 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1234 (= ?x429 _44)))
 (let (($x1239 (and $x1234 $x445)))
 (=> $x1239 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1252 (= ?x429 _45)))
 (let (($x1257 (and $x1252 $x445)))
 (=> $x1257 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1270 (= ?x429 _46)))
 (let (($x1275 (and $x1270 $x445)))
 (=> $x1275 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1288 (= ?x429 _47)))
 (let (($x1293 (and $x1288 $x445)))
 (=> $x1293 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1306 (= ?x429 _48)))
 (let (($x1311 (and $x1306 $x445)))
 (=> $x1311 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1324 (= ?x429 _49)))
 (let (($x1329 (and $x1324 $x445)))
 (=> $x1329 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1342 (= ?x429 _50)))
 (let (($x1347 (and $x1342 $x445)))
 (=> $x1347 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1360 (= ?x429 _51)))
 (let (($x1365 (and $x1360 $x445)))
 (=> $x1365 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1378 (= ?x429 _52)))
 (let (($x1383 (and $x1378 $x445)))
 (=> $x1383 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1396 (= ?x429 _53)))
 (let (($x1401 (and $x1396 $x445)))
 (=> $x1401 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1414 (= ?x429 _54)))
 (let (($x1419 (and $x1414 $x445)))
 (=> $x1419 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1432 (= ?x429 _55)))
 (let (($x1437 (and $x1432 $x445)))
 (=> $x1437 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1450 (= ?x429 _56)))
 (let (($x1455 (and $x1450 $x445)))
 (=> $x1455 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1468 (= ?x429 _57)))
 (let (($x1473 (and $x1468 $x445)))
 (=> $x1473 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1486 (= ?x429 _58)))
 (let (($x1491 (and $x1486 $x445)))
 (=> $x1491 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1504 (= ?x429 _59)))
 (let (($x1509 (and $x1504 $x445)))
 (=> $x1509 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1522 (= ?x429 _60)))
 (let (($x1527 (and $x1522 $x445)))
 (=> $x1527 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1540 (= ?x429 _61)))
 (let (($x1545 (and $x1540 $x445)))
 (=> $x1545 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1558 (= ?x429 _62)))
 (let (($x1563 (and $x1558 $x445)))
 (=> $x1563 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1576 (= ?x429 _63)))
 (let (($x1581 (and $x1576 $x445)))
 (=> $x1581 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1594 (= ?x429 _64)))
 (let (($x1599 (and $x1594 $x445)))
 (=> $x1599 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1612 (= ?x429 _65)))
 (let (($x1617 (and $x1612 $x445)))
 (=> $x1617 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1630 (= ?x429 _66)))
 (let (($x1635 (and $x1630 $x445)))
 (=> $x1635 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1648 (= ?x429 _67)))
 (let (($x1653 (and $x1648 $x445)))
 (=> $x1653 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1666 (= ?x429 _68)))
 (let (($x1671 (and $x1666 $x445)))
 (=> $x1671 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1684 (= ?x429 _69)))
 (let (($x1689 (and $x1684 $x445)))
 (=> $x1689 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1702 (= ?x429 _70)))
 (let (($x1707 (and $x1702 $x445)))
 (=> $x1707 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1720 (= ?x429 _71)))
 (let (($x1725 (and $x1720 $x445)))
 (=> $x1725 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1738 (= ?x429 _72)))
 (let (($x1743 (and $x1738 $x445)))
 (=> $x1743 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1756 (= ?x429 _73)))
 (let (($x1761 (and $x1756 $x445)))
 (=> $x1761 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1774 (= ?x429 _74)))
 (let (($x1779 (and $x1774 $x445)))
 (=> $x1779 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1792 (= ?x429 _75)))
 (let (($x1797 (and $x1792 $x445)))
 (=> $x1797 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1810 (= ?x429 _76)))
 (let (($x1815 (and $x1810 $x445)))
 (=> $x1815 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1828 (= ?x429 _77)))
 (let (($x1833 (and $x1828 $x445)))
 (=> $x1833 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1846 (= ?x429 _78)))
 (let (($x1851 (and $x1846 $x445)))
 (=> $x1851 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1864 (= ?x429 _79)))
 (let (($x1869 (and $x1864 $x445)))
 (=> $x1869 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1882 (= ?x429 _80)))
 (let (($x1887 (and $x1882 $x445)))
 (=> $x1887 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1900 (= ?x429 _81)))
 (let (($x1905 (and $x1900 $x445)))
 (=> $x1905 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1918 (= ?x429 _82)))
 (let (($x1923 (and $x1918 $x445)))
 (=> $x1923 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1936 (= ?x429 _83)))
 (let (($x1941 (and $x1936 $x445)))
 (=> $x1941 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1954 (= ?x429 _84)))
 (let (($x1959 (and $x1954 $x445)))
 (=> $x1959 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1972 (= ?x429 _85)))
 (let (($x1977 (and $x1972 $x445)))
 (=> $x1977 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x1990 (= ?x429 _86)))
 (let (($x1995 (and $x1990 $x445)))
 (=> $x1995 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2008 (= ?x429 _87)))
 (let (($x2013 (and $x2008 $x445)))
 (=> $x2013 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2026 (= ?x429 _88)))
 (let (($x2031 (and $x2026 $x445)))
 (=> $x2031 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2044 (= ?x429 _89)))
 (let (($x2049 (and $x2044 $x445)))
 (=> $x2049 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2062 (= ?x429 _90)))
 (let (($x2067 (and $x2062 $x445)))
 (=> $x2067 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2080 (= ?x429 _91)))
 (let (($x2085 (and $x2080 $x445)))
 (=> $x2085 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2098 (= ?x429 _92)))
 (let (($x2103 (and $x2098 $x445)))
 (=> $x2103 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2116 (= ?x429 _93)))
 (let (($x2121 (and $x2116 $x445)))
 (=> $x2121 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2134 (= ?x429 _94)))
 (let (($x2139 (and $x2134 $x445)))
 (=> $x2139 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2152 (= ?x429 _95)))
 (let (($x2157 (and $x2152 $x445)))
 (=> $x2157 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2170 (= ?x429 _96)))
 (let (($x2175 (and $x2170 $x445)))
 (=> $x2175 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2188 (= ?x429 _97)))
 (let (($x2193 (and $x2188 $x445)))
 (=> $x2193 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2206 (= ?x429 _98)))
 (let (($x2211 (and $x2206 $x445)))
 (=> $x2211 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x423))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2224 (= ?x429 _99)))
 (let (($x2229 (and $x2224 $x445)))
 (=> $x2229 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2242 (= ?x429 _100)))
 (=> (and $x2242 $x428) (and (= (time-to-state (+ time 1)) _101) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2242 (= ?x429 _100)))
 (let (($x2247 (and $x2242 $x445)))
 (=> $x2247 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2260 (= ?x429 _101)))
 (=> (and $x2260 $x428) (and (= (time-to-state (+ time 1)) _102) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2260 (= ?x429 _101)))
 (let (($x2265 (and $x2260 $x445)))
 (=> $x2265 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2278 (= ?x429 _102)))
 (=> (and $x2278 $x428) (and (= (time-to-state (+ time 1)) _103) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2278 (= ?x429 _102)))
 (let (($x2283 (and $x2278 $x445)))
 (=> $x2283 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2296 (= ?x429 _103)))
 (=> (and $x2296 $x428) (and (= (time-to-state (+ time 1)) _104) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2296 (= ?x429 _103)))
 (let (($x2301 (and $x2296 $x445)))
 (=> $x2301 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2314 (= ?x429 _104)))
 (=> (and $x2314 $x428) (and (= (time-to-state (+ time 1)) _105) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2314 (= ?x429 _104)))
 (let (($x2319 (and $x2314 $x445)))
 (=> $x2319 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2332 (= ?x429 _105)))
 (=> (and $x2332 $x428) (and (= (time-to-state (+ time 1)) _106) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2332 (= ?x429 _105)))
 (let (($x2337 (and $x2332 $x445)))
 (=> $x2337 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2350 (= ?x429 _106)))
 (=> (and $x2350 $x428) (and (= (time-to-state (+ time 1)) _107) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2350 (= ?x429 _106)))
 (let (($x2355 (and $x2350 $x445)))
 (=> $x2355 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2368 (= ?x429 _107)))
 (=> (and $x2368 $x428) (and (= (time-to-state (+ time 1)) _108) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2368 (= ?x429 _107)))
 (let (($x2373 (and $x2368 $x445)))
 (=> $x2373 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2386 (= ?x429 _108)))
 (=> (and $x2386 $x428) (and (= (time-to-state (+ time 1)) _109) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2386 (= ?x429 _108)))
 (let (($x2391 (and $x2386 $x445)))
 (=> $x2391 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2404 (= ?x429 _109)))
 (=> (and $x2404 $x428) (and (= (time-to-state (+ time 1)) _110) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2404 (= ?x429 _109)))
 (let (($x2409 (and $x2404 $x445)))
 (=> $x2409 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2422 (= ?x429 _110)))
 (=> (and $x2422 $x428) (and (= (time-to-state (+ time 1)) _111) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2422 (= ?x429 _110)))
 (let (($x2427 (and $x2422 $x445)))
 (=> $x2427 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2440 (= ?x429 _111)))
 (=> (and $x2440 $x428) (and (= (time-to-state (+ time 1)) _112) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2440 (= ?x429 _111)))
 (let (($x2445 (and $x2440 $x445)))
 (=> $x2445 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2458 (= ?x429 _112)))
 (=> (and $x2458 $x428) (and (= (time-to-state (+ time 1)) _113) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2458 (= ?x429 _112)))
 (let (($x2463 (and $x2458 $x445)))
 (=> $x2463 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2476 (= ?x429 _113)))
 (=> (and $x2476 $x428) (and (= (time-to-state (+ time 1)) _114) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2476 (= ?x429 _113)))
 (let (($x2481 (and $x2476 $x445)))
 (=> $x2481 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2494 (= ?x429 _114)))
 (=> (and $x2494 $x428) (and (= (time-to-state (+ time 1)) _115) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2494 (= ?x429 _114)))
 (let (($x2499 (and $x2494 $x445)))
 (=> $x2499 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2512 (= ?x429 _115)))
 (=> (and $x2512 $x428) (and (= (time-to-state (+ time 1)) _116) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2512 (= ?x429 _115)))
 (let (($x2517 (and $x2512 $x445)))
 (=> $x2517 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2530 (= ?x429 _116)))
 (=> (and $x2530 $x428) (and (= (time-to-state (+ time 1)) _117) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2530 (= ?x429 _116)))
 (let (($x2535 (and $x2530 $x445)))
 (=> $x2535 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2548 (= ?x429 _117)))
 (=> (and $x2548 $x428) (and (= (time-to-state (+ time 1)) _118) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2548 (= ?x429 _117)))
 (let (($x2553 (and $x2548 $x445)))
 (=> $x2553 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2566 (= ?x429 _118)))
 (=> (and $x2566 $x428) (and (= (time-to-state (+ time 1)) _119) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2566 (= ?x429 _118)))
 (let (($x2571 (and $x2566 $x445)))
 (=> $x2571 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2584 (= ?x429 _119)))
 (=> (and $x2584 $x428) (and (= (time-to-state (+ time 1)) _120) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2584 (= ?x429 _119)))
 (let (($x2589 (and $x2584 $x445)))
 (=> $x2589 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2602 (= ?x429 _120)))
 (=> (and $x2602 $x428) (and (= (time-to-state (+ time 1)) _121) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2602 (= ?x429 _120)))
 (let (($x2607 (and $x2602 $x445)))
 (=> $x2607 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2620 (= ?x429 _121)))
 (=> (and $x2620 $x428) (and (= (time-to-state (+ time 1)) _122) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2620 (= ?x429 _121)))
 (let (($x2625 (and $x2620 $x445)))
 (=> $x2625 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2638 (= ?x429 _122)))
 (=> (and $x2638 $x428) (and (= (time-to-state (+ time 1)) _123) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2638 (= ?x429 _122)))
 (let (($x2643 (and $x2638 $x445)))
 (=> $x2643 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2656 (= ?x429 _123)))
 (=> (and $x2656 $x428) (and (= (time-to-state (+ time 1)) _124) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2656 (= ?x429 _123)))
 (let (($x2661 (and $x2656 $x445)))
 (=> $x2661 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2674 (= ?x429 _124)))
 (=> (and $x2674 $x428) (and (= (time-to-state (+ time 1)) _125) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2674 (= ?x429 _124)))
 (let (($x2679 (and $x2674 $x445)))
 (=> $x2679 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2692 (= ?x429 _125)))
 (=> (and $x2692 $x428) (and (= (time-to-state (+ time 1)) _126) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2692 (= ?x429 _125)))
 (let (($x2697 (and $x2692 $x445)))
 (=> $x2697 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2710 (= ?x429 _126)))
 (=> (and $x2710 $x428) (and (= (time-to-state (+ time 1)) _127) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2710 (= ?x429 _126)))
 (let (($x2715 (and $x2710 $x445)))
 (=> $x2715 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2728 (= ?x429 _127)))
 (=> (and $x2728 $x428) (and (= (time-to-state (+ time 1)) _128) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2728 (= ?x429 _127)))
 (let (($x2733 (and $x2728 $x445)))
 (=> $x2733 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2746 (= ?x429 _128)))
 (=> (and $x2746 $x428) (and (= (time-to-state (+ time 1)) _129) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2746 (= ?x429 _128)))
 (let (($x2751 (and $x2746 $x445)))
 (=> $x2751 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2764 (= ?x429 _129)))
 (=> (and $x2764 $x428) (and (= (time-to-state (+ time 1)) _130) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2764 (= ?x429 _129)))
 (let (($x2769 (and $x2764 $x445)))
 (=> $x2769 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2782 (= ?x429 _130)))
 (=> (and $x2782 $x428) (and (= (time-to-state (+ time 1)) _131) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2782 (= ?x429 _130)))
 (let (($x2787 (and $x2782 $x445)))
 (=> $x2787 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2800 (= ?x429 _131)))
 (=> (and $x2800 $x428) (and (= (time-to-state (+ time 1)) _132) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2800 (= ?x429 _131)))
 (let (($x2805 (and $x2800 $x445)))
 (=> $x2805 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2818 (= ?x429 _132)))
 (=> (and $x2818 $x428) (and (= (time-to-state (+ time 1)) _133) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2818 (= ?x429 _132)))
 (let (($x2823 (and $x2818 $x445)))
 (=> $x2823 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2836 (= ?x429 _133)))
 (=> (and $x2836 $x428) (and (= (time-to-state (+ time 1)) _134) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2836 (= ?x429 _133)))
 (let (($x2841 (and $x2836 $x445)))
 (=> $x2841 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2854 (= ?x429 _134)))
 (=> (and $x2854 $x428) (and (= (time-to-state (+ time 1)) _135) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2854 (= ?x429 _134)))
 (let (($x2859 (and $x2854 $x445)))
 (=> $x2859 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2872 (= ?x429 _135)))
 (=> (and $x2872 $x428) (and (= (time-to-state (+ time 1)) _136) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2872 (= ?x429 _135)))
 (let (($x2877 (and $x2872 $x445)))
 (=> $x2877 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2890 (= ?x429 _136)))
 (=> (and $x2890 $x428) (and (= (time-to-state (+ time 1)) _137) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2890 (= ?x429 _136)))
 (let (($x2895 (and $x2890 $x445)))
 (=> $x2895 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2908 (= ?x429 _137)))
 (=> (and $x2908 $x428) (and (= (time-to-state (+ time 1)) _138) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2908 (= ?x429 _137)))
 (let (($x2913 (and $x2908 $x445)))
 (=> $x2913 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2926 (= ?x429 _138)))
 (=> (and $x2926 $x428) (and (= (time-to-state (+ time 1)) _139) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2926 (= ?x429 _138)))
 (let (($x2931 (and $x2926 $x445)))
 (=> $x2931 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2944 (= ?x429 _139)))
 (=> (and $x2944 $x428) (and (= (time-to-state (+ time 1)) _140) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2944 (= ?x429 _139)))
 (let (($x2949 (and $x2944 $x445)))
 (=> $x2949 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2962 (= ?x429 _140)))
 (=> (and $x2962 $x428) (and (= (time-to-state (+ time 1)) _141) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2962 (= ?x429 _140)))
 (let (($x2967 (and $x2962 $x445)))
 (=> $x2967 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2980 (= ?x429 _141)))
 (=> (and $x2980 $x428) (and (= (time-to-state (+ time 1)) _142) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2980 (= ?x429 _141)))
 (let (($x2985 (and $x2980 $x445)))
 (=> $x2985 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x2998 (= ?x429 _142)))
 (=> (and $x2998 $x428) (and (= (time-to-state (+ time 1)) _143) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x2998 (= ?x429 _142)))
 (let (($x3003 (and $x2998 $x445)))
 (=> $x3003 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3016 (= ?x429 _143)))
 (=> (and $x3016 $x428) (and (= (time-to-state (+ time 1)) _144) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3016 (= ?x429 _143)))
 (let (($x3021 (and $x3016 $x445)))
 (=> $x3021 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3034 (= ?x429 _144)))
 (=> (and $x3034 $x428) (and (= (time-to-state (+ time 1)) _145) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3034 (= ?x429 _144)))
 (let (($x3039 (and $x3034 $x445)))
 (=> $x3039 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3052 (= ?x429 _145)))
 (=> (and $x3052 $x428) (and (= (time-to-state (+ time 1)) _146) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3052 (= ?x429 _145)))
 (let (($x3057 (and $x3052 $x445)))
 (=> $x3057 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3070 (= ?x429 _146)))
 (=> (and $x3070 $x428) (and (= (time-to-state (+ time 1)) _147) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3070 (= ?x429 _146)))
 (let (($x3075 (and $x3070 $x445)))
 (=> $x3075 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3088 (= ?x429 _147)))
 (=> (and $x3088 $x428) (and (= (time-to-state (+ time 1)) _148) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3088 (= ?x429 _147)))
 (let (($x3093 (and $x3088 $x445)))
 (=> $x3093 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3106 (= ?x429 _148)))
 (=> (and $x3106 $x428) (and (= (time-to-state (+ time 1)) _149) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3106 (= ?x429 _148)))
 (let (($x3111 (and $x3106 $x445)))
 (=> $x3111 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3124 (= ?x429 _149)))
 (=> (and $x3124 $x428) (and (= (time-to-state (+ time 1)) _150) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3124 (= ?x429 _149)))
 (let (($x3129 (and $x3124 $x445)))
 (=> $x3129 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3142 (= ?x429 _150)))
 (=> (and $x3142 $x428) (and (= (time-to-state (+ time 1)) _151) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3142 (= ?x429 _150)))
 (let (($x3147 (and $x3142 $x445)))
 (=> $x3147 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3160 (= ?x429 _151)))
 (=> (and $x3160 $x428) (and (= (time-to-state (+ time 1)) _152) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3160 (= ?x429 _151)))
 (let (($x3165 (and $x3160 $x445)))
 (=> $x3165 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3178 (= ?x429 _152)))
 (=> (and $x3178 $x428) (and (= (time-to-state (+ time 1)) _153) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3178 (= ?x429 _152)))
 (let (($x3183 (and $x3178 $x445)))
 (=> $x3183 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3196 (= ?x429 _153)))
 (=> (and $x3196 $x428) (and (= (time-to-state (+ time 1)) _154) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3196 (= ?x429 _153)))
 (let (($x3201 (and $x3196 $x445)))
 (=> $x3201 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3214 (= ?x429 _154)))
 (=> (and $x3214 $x428) (and (= (time-to-state (+ time 1)) _155) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3214 (= ?x429 _154)))
 (let (($x3219 (and $x3214 $x445)))
 (=> $x3219 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3232 (= ?x429 _155)))
 (=> (and $x3232 $x428) (and (= (time-to-state (+ time 1)) _156) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3232 (= ?x429 _155)))
 (let (($x3237 (and $x3232 $x445)))
 (=> $x3237 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3250 (= ?x429 _156)))
 (=> (and $x3250 $x428) (and (= (time-to-state (+ time 1)) _157) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3250 (= ?x429 _156)))
 (let (($x3255 (and $x3250 $x445)))
 (=> $x3255 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3268 (= ?x429 _157)))
 (=> (and $x3268 $x428) (and (= (time-to-state (+ time 1)) _158) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3268 (= ?x429 _157)))
 (let (($x3273 (and $x3268 $x445)))
 (=> $x3273 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3286 (= ?x429 _158)))
 (=> (and $x3286 $x428) (and (= (time-to-state (+ time 1)) _159) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3286 (= ?x429 _158)))
 (let (($x3291 (and $x3286 $x445)))
 (=> $x3291 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3304 (= ?x429 _159)))
 (=> (and $x3304 $x428) (and (= (time-to-state (+ time 1)) _160) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3304 (= ?x429 _159)))
 (let (($x3309 (and $x3304 $x445)))
 (=> $x3309 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3322 (= ?x429 _160)))
 (=> (and $x3322 $x428) (and (= (time-to-state (+ time 1)) _161) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3322 (= ?x429 _160)))
 (let (($x3327 (and $x3322 $x445)))
 (=> $x3327 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3340 (= ?x429 _161)))
 (=> (and $x3340 $x428) (and (= (time-to-state (+ time 1)) _162) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3340 (= ?x429 _161)))
 (let (($x3345 (and $x3340 $x445)))
 (=> $x3345 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3358 (= ?x429 _162)))
 (=> (and $x3358 $x428) (and (= (time-to-state (+ time 1)) _163) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3358 (= ?x429 _162)))
 (let (($x3363 (and $x3358 $x445)))
 (=> $x3363 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3376 (= ?x429 _163)))
 (=> (and $x3376 $x428) (and (= (time-to-state (+ time 1)) _164) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3376 (= ?x429 _163)))
 (let (($x3381 (and $x3376 $x445)))
 (=> $x3381 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3394 (= ?x429 _164)))
 (=> (and $x3394 $x428) (and (= (time-to-state (+ time 1)) _165) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3394 (= ?x429 _164)))
 (let (($x3399 (and $x3394 $x445)))
 (=> $x3399 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3412 (= ?x429 _165)))
 (=> (and $x3412 $x428) (and (= (time-to-state (+ time 1)) _166) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3412 (= ?x429 _165)))
 (let (($x3417 (and $x3412 $x445)))
 (=> $x3417 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3430 (= ?x429 _166)))
 (=> (and $x3430 $x428) (and (= (time-to-state (+ time 1)) _167) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3430 (= ?x429 _166)))
 (let (($x3435 (and $x3430 $x445)))
 (=> $x3435 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3448 (= ?x429 _167)))
 (=> (and $x3448 $x428) (and (= (time-to-state (+ time 1)) _168) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3448 (= ?x429 _167)))
 (let (($x3453 (and $x3448 $x445)))
 (=> $x3453 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3466 (= ?x429 _168)))
 (=> (and $x3466 $x428) (and (= (time-to-state (+ time 1)) _169) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3466 (= ?x429 _168)))
 (let (($x3471 (and $x3466 $x445)))
 (=> $x3471 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3484 (= ?x429 _169)))
 (=> (and $x3484 $x428) (and (= (time-to-state (+ time 1)) _170) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3484 (= ?x429 _169)))
 (let (($x3489 (and $x3484 $x445)))
 (=> $x3489 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3502 (= ?x429 _170)))
 (=> (and $x3502 $x428) (and (= (time-to-state (+ time 1)) _171) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3502 (= ?x429 _170)))
 (let (($x3507 (and $x3502 $x445)))
 (=> $x3507 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3520 (= ?x429 _171)))
 (=> (and $x3520 $x428) (and (= (time-to-state (+ time 1)) _172) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3520 (= ?x429 _171)))
 (let (($x3525 (and $x3520 $x445)))
 (=> $x3525 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3538 (= ?x429 _172)))
 (=> (and $x3538 $x428) (and (= (time-to-state (+ time 1)) _173) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3538 (= ?x429 _172)))
 (let (($x3543 (and $x3538 $x445)))
 (=> $x3543 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3556 (= ?x429 _173)))
 (=> (and $x3556 $x428) (and (= (time-to-state (+ time 1)) _174) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3556 (= ?x429 _173)))
 (let (($x3561 (and $x3556 $x445)))
 (=> $x3561 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3574 (= ?x429 _174)))
 (=> (and $x3574 $x428) (and (= (time-to-state (+ time 1)) _175) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3574 (= ?x429 _174)))
 (let (($x3579 (and $x3574 $x445)))
 (=> $x3579 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3592 (= ?x429 _175)))
 (=> (and $x3592 $x428) (and (= (time-to-state (+ time 1)) _176) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3592 (= ?x429 _175)))
 (let (($x3597 (and $x3592 $x445)))
 (=> $x3597 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3610 (= ?x429 _176)))
 (=> (and $x3610 $x428) (and (= (time-to-state (+ time 1)) _177) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3610 (= ?x429 _176)))
 (let (($x3615 (and $x3610 $x445)))
 (=> $x3615 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3628 (= ?x429 _177)))
 (=> (and $x3628 $x428) (and (= (time-to-state (+ time 1)) _178) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3628 (= ?x429 _177)))
 (let (($x3633 (and $x3628 $x445)))
 (=> $x3633 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3646 (= ?x429 _178)))
 (=> (and $x3646 $x428) (and (= (time-to-state (+ time 1)) _179) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3646 (= ?x429 _178)))
 (let (($x3651 (and $x3646 $x445)))
 (=> $x3651 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3664 (= ?x429 _179)))
 (=> (and $x3664 $x428) (and (= (time-to-state (+ time 1)) _180) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3664 (= ?x429 _179)))
 (let (($x3669 (and $x3664 $x445)))
 (=> $x3669 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3682 (= ?x429 _180)))
 (=> (and $x3682 $x428) (and (= (time-to-state (+ time 1)) _181) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3682 (= ?x429 _180)))
 (let (($x3687 (and $x3682 $x445)))
 (=> $x3687 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3700 (= ?x429 _181)))
 (=> (and $x3700 $x428) (and (= (time-to-state (+ time 1)) _182) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3700 (= ?x429 _181)))
 (let (($x3705 (and $x3700 $x445)))
 (=> $x3705 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3718 (= ?x429 _182)))
 (=> (and $x3718 $x428) (and (= (time-to-state (+ time 1)) _183) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3718 (= ?x429 _182)))
 (let (($x3723 (and $x3718 $x445)))
 (=> $x3723 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3736 (= ?x429 _183)))
 (=> (and $x3736 $x428) (and (= (time-to-state (+ time 1)) _184) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3736 (= ?x429 _183)))
 (let (($x3741 (and $x3736 $x445)))
 (=> $x3741 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3754 (= ?x429 _184)))
 (=> (and $x3754 $x428) (and (= (time-to-state (+ time 1)) _185) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3754 (= ?x429 _184)))
 (let (($x3759 (and $x3754 $x445)))
 (=> $x3759 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3772 (= ?x429 _185)))
 (=> (and $x3772 $x428) (and (= (time-to-state (+ time 1)) _186) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3772 (= ?x429 _185)))
 (let (($x3777 (and $x3772 $x445)))
 (=> $x3777 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3790 (= ?x429 _186)))
 (=> (and $x3790 $x428) (and (= (time-to-state (+ time 1)) _187) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3790 (= ?x429 _186)))
 (let (($x3795 (and $x3790 $x445)))
 (=> $x3795 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3808 (= ?x429 _187)))
 (=> (and $x3808 $x428) (and (= (time-to-state (+ time 1)) _188) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3808 (= ?x429 _187)))
 (let (($x3813 (and $x3808 $x445)))
 (=> $x3813 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3826 (= ?x429 _188)))
 (=> (and $x3826 $x428) (and (= (time-to-state (+ time 1)) _189) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3826 (= ?x429 _188)))
 (let (($x3831 (and $x3826 $x445)))
 (=> $x3831 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3844 (= ?x429 _189)))
 (=> (and $x3844 $x428) (and (= (time-to-state (+ time 1)) _190) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3844 (= ?x429 _189)))
 (let (($x3849 (and $x3844 $x445)))
 (=> $x3849 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3862 (= ?x429 _190)))
 (=> (and $x3862 $x428) (and (= (time-to-state (+ time 1)) _191) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3862 (= ?x429 _190)))
 (let (($x3867 (and $x3862 $x445)))
 (=> $x3867 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3880 (= ?x429 _191)))
 (=> (and $x3880 $x428) (and (= (time-to-state (+ time 1)) _192) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3880 (= ?x429 _191)))
 (let (($x3885 (and $x3880 $x445)))
 (=> $x3885 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3898 (= ?x429 _192)))
 (=> (and $x3898 $x428) (and (= (time-to-state (+ time 1)) _193) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3898 (= ?x429 _192)))
 (let (($x3903 (and $x3898 $x445)))
 (=> $x3903 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3916 (= ?x429 _193)))
 (=> (and $x3916 $x428) (and (= (time-to-state (+ time 1)) _194) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3916 (= ?x429 _193)))
 (let (($x3921 (and $x3916 $x445)))
 (=> $x3921 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3934 (= ?x429 _194)))
 (=> (and $x3934 $x428) (and (= (time-to-state (+ time 1)) _195) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3934 (= ?x429 _194)))
 (let (($x3939 (and $x3934 $x445)))
 (=> $x3939 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3952 (= ?x429 _195)))
 (=> (and $x3952 $x428) (and (= (time-to-state (+ time 1)) _196) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3952 (= ?x429 _195)))
 (let (($x3957 (and $x3952 $x445)))
 (=> $x3957 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3970 (= ?x429 _196)))
 (=> (and $x3970 $x428) (and (= (time-to-state (+ time 1)) _197) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3970 (= ?x429 _196)))
 (let (($x3975 (and $x3970 $x445)))
 (=> $x3975 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x3988 (= ?x429 _197)))
 (=> (and $x3988 $x428) (and (= (time-to-state (+ time 1)) _198) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x3988 (= ?x429 _197)))
 (let (($x3993 (and $x3988 $x445)))
 (=> $x3993 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4006 (= ?x429 _198)))
 (=> (and $x4006 $x428) (and (= (time-to-state (+ time 1)) _199) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4006 (= ?x429 _198)))
 (let (($x4011 (and $x4006 $x445)))
 (=> $x4011 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4024 (= ?x429 _199)))
 (=> (and $x4024 $x428) (and (= (time-to-state (+ time 1)) _200) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4024 (= ?x429 _199)))
 (let (($x4029 (and $x4024 $x445)))
 (=> $x4029 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4042 (= ?x429 _200)))
 (=> (and $x4042 $x428) (and (= (time-to-state (+ time 1)) _201) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4042 (= ?x429 _200)))
 (let (($x4047 (and $x4042 $x445)))
 (=> $x4047 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4060 (= ?x429 _201)))
 (=> (and $x4060 $x428) (and (= (time-to-state (+ time 1)) _202) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4060 (= ?x429 _201)))
 (let (($x4065 (and $x4060 $x445)))
 (=> $x4065 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4078 (= ?x429 _202)))
 (=> (and $x4078 $x428) (and (= (time-to-state (+ time 1)) _203) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4078 (= ?x429 _202)))
 (let (($x4083 (and $x4078 $x445)))
 (=> $x4083 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4096 (= ?x429 _203)))
 (=> (and $x4096 $x428) (and (= (time-to-state (+ time 1)) _204) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4096 (= ?x429 _203)))
 (let (($x4101 (and $x4096 $x445)))
 (=> $x4101 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4114 (= ?x429 _204)))
 (=> (and $x4114 $x428) (and (= (time-to-state (+ time 1)) _205) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4114 (= ?x429 _204)))
 (let (($x4119 (and $x4114 $x445)))
 (=> $x4119 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4132 (= ?x429 _205)))
 (=> (and $x4132 $x428) (and (= (time-to-state (+ time 1)) _206) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4132 (= ?x429 _205)))
 (let (($x4137 (and $x4132 $x445)))
 (=> $x4137 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4150 (= ?x429 _206)))
 (=> (and $x4150 $x428) (and (= (time-to-state (+ time 1)) _207) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4150 (= ?x429 _206)))
 (let (($x4155 (and $x4150 $x445)))
 (=> $x4155 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4168 (= ?x429 _207)))
 (=> (and $x4168 $x428) (and (= (time-to-state (+ time 1)) _208) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4168 (= ?x429 _207)))
 (let (($x4173 (and $x4168 $x445)))
 (=> $x4173 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4186 (= ?x429 _208)))
 (=> (and $x4186 $x428) (and (= (time-to-state (+ time 1)) _209) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4186 (= ?x429 _208)))
 (let (($x4191 (and $x4186 $x445)))
 (=> $x4191 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4204 (= ?x429 _209)))
 (=> (and $x4204 $x428) (and (= (time-to-state (+ time 1)) _210) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4204 (= ?x429 _209)))
 (let (($x4209 (and $x4204 $x445)))
 (=> $x4209 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4222 (= ?x429 _210)))
 (=> (and $x4222 $x428) (and (= (time-to-state (+ time 1)) _211) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4222 (= ?x429 _210)))
 (let (($x4227 (and $x4222 $x445)))
 (=> $x4227 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4240 (= ?x429 _211)))
 (=> (and $x4240 $x428) (and (= (time-to-state (+ time 1)) _212) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4240 (= ?x429 _211)))
 (let (($x4245 (and $x4240 $x445)))
 (=> $x4245 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4258 (= ?x429 _212)))
 (=> (and $x4258 $x428) (and (= (time-to-state (+ time 1)) _213) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4258 (= ?x429 _212)))
 (let (($x4263 (and $x4258 $x445)))
 (=> $x4263 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4276 (= ?x429 _213)))
 (=> (and $x4276 $x428) (and (= (time-to-state (+ time 1)) _214) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4276 (= ?x429 _213)))
 (let (($x4281 (and $x4276 $x445)))
 (=> $x4281 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4294 (= ?x429 _214)))
 (=> (and $x4294 $x428) (and (= (time-to-state (+ time 1)) _215) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4294 (= ?x429 _214)))
 (let (($x4299 (and $x4294 $x445)))
 (=> $x4299 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4312 (= ?x429 _215)))
 (=> (and $x4312 $x428) (and (= (time-to-state (+ time 1)) _216) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4312 (= ?x429 _215)))
 (let (($x4317 (and $x4312 $x445)))
 (=> $x4317 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4330 (= ?x429 _216)))
 (=> (and $x4330 $x428) (and (= (time-to-state (+ time 1)) _217) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4330 (= ?x429 _216)))
 (let (($x4335 (and $x4330 $x445)))
 (=> $x4335 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4348 (= ?x429 _217)))
 (=> (and $x4348 $x428) (and (= (time-to-state (+ time 1)) _218) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4348 (= ?x429 _217)))
 (let (($x4353 (and $x4348 $x445)))
 (=> $x4353 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4366 (= ?x429 _218)))
 (=> (and $x4366 $x428) (and (= (time-to-state (+ time 1)) _219) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4366 (= ?x429 _218)))
 (let (($x4371 (and $x4366 $x445)))
 (=> $x4371 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4384 (= ?x429 _219)))
 (=> (and $x4384 $x428) (and (= (time-to-state (+ time 1)) _220) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4384 (= ?x429 _219)))
 (let (($x4389 (and $x4384 $x445)))
 (=> $x4389 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4402 (= ?x429 _220)))
 (=> (and $x4402 $x428) (and (= (time-to-state (+ time 1)) _221) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4402 (= ?x429 _220)))
 (let (($x4407 (and $x4402 $x445)))
 (=> $x4407 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4420 (= ?x429 _221)))
 (=> (and $x4420 $x428) (and (= (time-to-state (+ time 1)) _222) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4420 (= ?x429 _221)))
 (let (($x4425 (and $x4420 $x445)))
 (=> $x4425 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4438 (= ?x429 _222)))
 (=> (and $x4438 $x428) (and (= (time-to-state (+ time 1)) _223) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4438 (= ?x429 _222)))
 (let (($x4443 (and $x4438 $x445)))
 (=> $x4443 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4456 (= ?x429 _223)))
 (=> (and $x4456 $x428) (and (= (time-to-state (+ time 1)) _224) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4456 (= ?x429 _223)))
 (let (($x4461 (and $x4456 $x445)))
 (=> $x4461 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4474 (= ?x429 _224)))
 (=> (and $x4474 $x428) (and (= (time-to-state (+ time 1)) _225) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4474 (= ?x429 _224)))
 (let (($x4479 (and $x4474 $x445)))
 (=> $x4479 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4492 (= ?x429 _225)))
 (=> (and $x4492 $x428) (and (= (time-to-state (+ time 1)) _226) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4492 (= ?x429 _225)))
 (let (($x4497 (and $x4492 $x445)))
 (=> $x4497 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4510 (= ?x429 _226)))
 (=> (and $x4510 $x428) (and (= (time-to-state (+ time 1)) _227) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4510 (= ?x429 _226)))
 (let (($x4515 (and $x4510 $x445)))
 (=> $x4515 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4528 (= ?x429 _227)))
 (=> (and $x4528 $x428) (and (= (time-to-state (+ time 1)) _228) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4528 (= ?x429 _227)))
 (let (($x4533 (and $x4528 $x445)))
 (=> $x4533 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4546 (= ?x429 _228)))
 (=> (and $x4546 $x428) (and (= (time-to-state (+ time 1)) _229) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4546 (= ?x429 _228)))
 (let (($x4551 (and $x4546 $x445)))
 (=> $x4551 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4564 (= ?x429 _229)))
 (=> (and $x4564 $x428) (and (= (time-to-state (+ time 1)) _230) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4564 (= ?x429 _229)))
 (let (($x4569 (and $x4564 $x445)))
 (=> $x4569 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4582 (= ?x429 _230)))
 (=> (and $x4582 $x428) (and (= (time-to-state (+ time 1)) _231) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4582 (= ?x429 _230)))
 (let (($x4587 (and $x4582 $x445)))
 (=> $x4587 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4600 (= ?x429 _231)))
 (=> (and $x4600 $x428) (and (= (time-to-state (+ time 1)) _232) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4600 (= ?x429 _231)))
 (let (($x4605 (and $x4600 $x445)))
 (=> $x4605 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4618 (= ?x429 _232)))
 (=> (and $x4618 $x428) (and (= (time-to-state (+ time 1)) _233) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4618 (= ?x429 _232)))
 (let (($x4623 (and $x4618 $x445)))
 (=> $x4623 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4636 (= ?x429 _233)))
 (=> (and $x4636 $x428) (and (= (time-to-state (+ time 1)) _234) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4636 (= ?x429 _233)))
 (let (($x4641 (and $x4636 $x445)))
 (=> $x4641 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4654 (= ?x429 _234)))
 (=> (and $x4654 $x428) (and (= (time-to-state (+ time 1)) _235) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4654 (= ?x429 _234)))
 (let (($x4659 (and $x4654 $x445)))
 (=> $x4659 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4672 (= ?x429 _235)))
 (=> (and $x4672 $x428) (and (= (time-to-state (+ time 1)) _236) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4672 (= ?x429 _235)))
 (let (($x4677 (and $x4672 $x445)))
 (=> $x4677 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4690 (= ?x429 _236)))
 (=> (and $x4690 $x428) (and (= (time-to-state (+ time 1)) _237) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4690 (= ?x429 _236)))
 (let (($x4695 (and $x4690 $x445)))
 (=> $x4695 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4708 (= ?x429 _237)))
 (=> (and $x4708 $x428) (and (= (time-to-state (+ time 1)) _238) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4708 (= ?x429 _237)))
 (let (($x4713 (and $x4708 $x445)))
 (=> $x4713 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4726 (= ?x429 _238)))
 (=> (and $x4726 $x428) (and (= (time-to-state (+ time 1)) _239) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4726 (= ?x429 _238)))
 (let (($x4731 (and $x4726 $x445)))
 (=> $x4731 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4744 (= ?x429 _239)))
 (=> (and $x4744 $x428) (and (= (time-to-state (+ time 1)) _240) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4744 (= ?x429 _239)))
 (let (($x4749 (and $x4744 $x445)))
 (=> $x4749 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4762 (= ?x429 _240)))
 (=> (and $x4762 $x428) (and (= (time-to-state (+ time 1)) _241) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4762 (= ?x429 _240)))
 (let (($x4767 (and $x4762 $x445)))
 (=> $x4767 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4780 (= ?x429 _241)))
 (=> (and $x4780 $x428) (and (= (time-to-state (+ time 1)) _242) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4780 (= ?x429 _241)))
 (let (($x4785 (and $x4780 $x445)))
 (=> $x4785 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4798 (= ?x429 _242)))
 (=> (and $x4798 $x428) (and (= (time-to-state (+ time 1)) _243) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4798 (= ?x429 _242)))
 (let (($x4803 (and $x4798 $x445)))
 (=> $x4803 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4816 (= ?x429 _243)))
 (=> (and $x4816 $x428) (and (= (time-to-state (+ time 1)) _244) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4816 (= ?x429 _243)))
 (let (($x4821 (and $x4816 $x445)))
 (=> $x4821 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4834 (= ?x429 _244)))
 (=> (and $x4834 $x428) (and (= (time-to-state (+ time 1)) _245) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4834 (= ?x429 _244)))
 (let (($x4839 (and $x4834 $x445)))
 (=> $x4839 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4852 (= ?x429 _245)))
 (=> (and $x4852 $x428) (and (= (time-to-state (+ time 1)) _246) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4852 (= ?x429 _245)))
 (let (($x4857 (and $x4852 $x445)))
 (=> $x4857 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4870 (= ?x429 _246)))
 (=> (and $x4870 $x428) (and (= (time-to-state (+ time 1)) _247) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4870 (= ?x429 _246)))
 (let (($x4875 (and $x4870 $x445)))
 (=> $x4875 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4888 (= ?x429 _247)))
 (=> (and $x4888 $x428) (and (= (time-to-state (+ time 1)) _248) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4888 (= ?x429 _247)))
 (let (($x4893 (and $x4888 $x445)))
 (=> $x4893 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4906 (= ?x429 _248)))
 (=> (and $x4906 $x428) (and (= (time-to-state (+ time 1)) _249) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4906 (= ?x429 _248)))
 (let (($x4911 (and $x4906 $x445)))
 (=> $x4911 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4924 (= ?x429 _249)))
 (=> (and $x4924 $x428) (and (= (time-to-state (+ time 1)) _250) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4924 (= ?x429 _249)))
 (let (($x4929 (and $x4924 $x445)))
 (=> $x4929 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4942 (= ?x429 _250)))
 (=> (and $x4942 $x428) (and (= (time-to-state (+ time 1)) _251) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4942 (= ?x429 _250)))
 (let (($x4947 (and $x4942 $x445)))
 (=> $x4947 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4960 (= ?x429 _251)))
 (=> (and $x4960 $x428) (and (= (time-to-state (+ time 1)) _252) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4960 (= ?x429 _251)))
 (let (($x4965 (and $x4960 $x445)))
 (=> $x4965 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4978 (= ?x429 _252)))
 (=> (and $x4978 $x428) (and (= (time-to-state (+ time 1)) _253) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4978 (= ?x429 _252)))
 (let (($x4983 (and $x4978 $x445)))
 (=> $x4983 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x4996 (= ?x429 _253)))
 (=> (and $x4996 $x428) (and (= (time-to-state (+ time 1)) _254) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x4996 (= ?x429 _253)))
 (let (($x5001 (and $x4996 $x445)))
 (=> $x5001 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5014 (= ?x429 _254)))
 (=> (and $x5014 $x428) (and (= (time-to-state (+ time 1)) _255) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5014 (= ?x429 _254)))
 (let (($x5019 (and $x5014 $x445)))
 (=> $x5019 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5032 (= ?x429 _255)))
 (=> (and $x5032 $x428) (and (= (time-to-state (+ time 1)) _256) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5032 (= ?x429 _255)))
 (let (($x5037 (and $x5032 $x445)))
 (=> $x5037 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5050 (= ?x429 _256)))
 (=> (and $x5050 $x428) (and (= (time-to-state (+ time 1)) _257) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5050 (= ?x429 _256)))
 (let (($x5055 (and $x5050 $x445)))
 (=> $x5055 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5068 (= ?x429 _257)))
 (=> (and $x5068 $x428) (and (= (time-to-state (+ time 1)) _258) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5068 (= ?x429 _257)))
 (let (($x5073 (and $x5068 $x445)))
 (=> $x5073 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5086 (= ?x429 _258)))
 (=> (and $x5086 $x428) (and (= (time-to-state (+ time 1)) _259) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5086 (= ?x429 _258)))
 (let (($x5091 (and $x5086 $x445)))
 (=> $x5091 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5104 (= ?x429 _259)))
 (=> (and $x5104 $x428) (and (= (time-to-state (+ time 1)) _260) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5104 (= ?x429 _259)))
 (let (($x5109 (and $x5104 $x445)))
 (=> $x5109 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5122 (= ?x429 _260)))
 (=> (and $x5122 $x428) (and (= (time-to-state (+ time 1)) _261) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5122 (= ?x429 _260)))
 (let (($x5127 (and $x5122 $x445)))
 (=> $x5127 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5140 (= ?x429 _261)))
 (=> (and $x5140 $x428) (and (= (time-to-state (+ time 1)) _262) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5140 (= ?x429 _261)))
 (let (($x5145 (and $x5140 $x445)))
 (=> $x5145 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5158 (= ?x429 _262)))
 (=> (and $x5158 $x428) (and (= (time-to-state (+ time 1)) _263) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5158 (= ?x429 _262)))
 (let (($x5163 (and $x5158 $x445)))
 (=> $x5163 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5176 (= ?x429 _263)))
 (=> (and $x5176 $x428) (and (= (time-to-state (+ time 1)) _264) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5176 (= ?x429 _263)))
 (let (($x5181 (and $x5176 $x445)))
 (=> $x5181 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5194 (= ?x429 _264)))
 (=> (and $x5194 $x428) (and (= (time-to-state (+ time 1)) _265) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5194 (= ?x429 _264)))
 (let (($x5199 (and $x5194 $x445)))
 (=> $x5199 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5212 (= ?x429 _265)))
 (=> (and $x5212 $x428) (and (= (time-to-state (+ time 1)) _266) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5212 (= ?x429 _265)))
 (let (($x5217 (and $x5212 $x445)))
 (=> $x5217 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5230 (= ?x429 _266)))
 (=> (and $x5230 $x428) (and (= (time-to-state (+ time 1)) _267) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5230 (= ?x429 _266)))
 (let (($x5235 (and $x5230 $x445)))
 (=> $x5235 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5248 (= ?x429 _267)))
 (=> (and $x5248 $x428) (and (= (time-to-state (+ time 1)) _268) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5248 (= ?x429 _267)))
 (let (($x5253 (and $x5248 $x445)))
 (=> $x5253 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5266 (= ?x429 _268)))
 (=> (and $x5266 $x428) (and (= (time-to-state (+ time 1)) _269) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5266 (= ?x429 _268)))
 (let (($x5271 (and $x5266 $x445)))
 (=> $x5271 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5284 (= ?x429 _269)))
 (=> (and $x5284 $x428) (and (= (time-to-state (+ time 1)) _270) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5284 (= ?x429 _269)))
 (let (($x5289 (and $x5284 $x445)))
 (=> $x5289 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5302 (= ?x429 _270)))
 (=> (and $x5302 $x428) (and (= (time-to-state (+ time 1)) _271) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5302 (= ?x429 _270)))
 (let (($x5307 (and $x5302 $x445)))
 (=> $x5307 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5320 (= ?x429 _271)))
 (=> (and $x5320 $x428) (and (= (time-to-state (+ time 1)) _272) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5320 (= ?x429 _271)))
 (let (($x5325 (and $x5320 $x445)))
 (=> $x5325 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5338 (= ?x429 _272)))
 (=> (and $x5338 $x428) (and (= (time-to-state (+ time 1)) _273) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5338 (= ?x429 _272)))
 (let (($x5343 (and $x5338 $x445)))
 (=> $x5343 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5356 (= ?x429 _273)))
 (=> (and $x5356 $x428) (and (= (time-to-state (+ time 1)) _274) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5356 (= ?x429 _273)))
 (let (($x5361 (and $x5356 $x445)))
 (=> $x5361 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5374 (= ?x429 _274)))
 (=> (and $x5374 $x428) (and (= (time-to-state (+ time 1)) _275) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5374 (= ?x429 _274)))
 (let (($x5379 (and $x5374 $x445)))
 (=> $x5379 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5392 (= ?x429 _275)))
 (=> (and $x5392 $x428) (and (= (time-to-state (+ time 1)) _276) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5392 (= ?x429 _275)))
 (let (($x5397 (and $x5392 $x445)))
 (=> $x5397 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5410 (= ?x429 _276)))
 (=> (and $x5410 $x428) (and (= (time-to-state (+ time 1)) _277) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5410 (= ?x429 _276)))
 (let (($x5415 (and $x5410 $x445)))
 (=> $x5415 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5428 (= ?x429 _277)))
 (=> (and $x5428 $x428) (and (= (time-to-state (+ time 1)) _278) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5428 (= ?x429 _277)))
 (let (($x5433 (and $x5428 $x445)))
 (=> $x5433 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5446 (= ?x429 _278)))
 (=> (and $x5446 $x428) (and (= (time-to-state (+ time 1)) _279) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5446 (= ?x429 _278)))
 (let (($x5451 (and $x5446 $x445)))
 (=> $x5451 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5464 (= ?x429 _279)))
 (=> (and $x5464 $x428) (and (= (time-to-state (+ time 1)) _280) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5464 (= ?x429 _279)))
 (let (($x5469 (and $x5464 $x445)))
 (=> $x5469 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5482 (= ?x429 _280)))
 (=> (and $x5482 $x428) (and (= (time-to-state (+ time 1)) _281) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5482 (= ?x429 _280)))
 (let (($x5487 (and $x5482 $x445)))
 (=> $x5487 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5500 (= ?x429 _281)))
 (=> (and $x5500 $x428) (and (= (time-to-state (+ time 1)) _282) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5500 (= ?x429 _281)))
 (let (($x5505 (and $x5500 $x445)))
 (=> $x5505 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5518 (= ?x429 _282)))
 (=> (and $x5518 $x428) (and (= (time-to-state (+ time 1)) _283) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5518 (= ?x429 _282)))
 (let (($x5523 (and $x5518 $x445)))
 (=> $x5523 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5536 (= ?x429 _283)))
 (=> (and $x5536 $x428) (and (= (time-to-state (+ time 1)) _284) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5536 (= ?x429 _283)))
 (let (($x5541 (and $x5536 $x445)))
 (=> $x5541 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5554 (= ?x429 _284)))
 (=> (and $x5554 $x428) (and (= (time-to-state (+ time 1)) _285) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5554 (= ?x429 _284)))
 (let (($x5559 (and $x5554 $x445)))
 (=> $x5559 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5572 (= ?x429 _285)))
 (=> (and $x5572 $x428) (and (= (time-to-state (+ time 1)) _286) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5572 (= ?x429 _285)))
 (let (($x5577 (and $x5572 $x445)))
 (=> $x5577 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5590 (= ?x429 _286)))
 (=> (and $x5590 $x428) (and (= (time-to-state (+ time 1)) _287) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5590 (= ?x429 _286)))
 (let (($x5595 (and $x5590 $x445)))
 (=> $x5595 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5608 (= ?x429 _287)))
 (=> (and $x5608 $x428) (and (= (time-to-state (+ time 1)) _288) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5608 (= ?x429 _287)))
 (let (($x5613 (and $x5608 $x445)))
 (=> $x5613 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5626 (= ?x429 _288)))
 (=> (and $x5626 $x428) (and (= (time-to-state (+ time 1)) _289) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5626 (= ?x429 _288)))
 (let (($x5631 (and $x5626 $x445)))
 (=> $x5631 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5644 (= ?x429 _289)))
 (=> (and $x5644 $x428) (and (= (time-to-state (+ time 1)) _290) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5644 (= ?x429 _289)))
 (let (($x5649 (and $x5644 $x445)))
 (=> $x5649 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5662 (= ?x429 _290)))
 (=> (and $x5662 $x428) (and (= (time-to-state (+ time 1)) _291) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5662 (= ?x429 _290)))
 (let (($x5667 (and $x5662 $x445)))
 (=> $x5667 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5680 (= ?x429 _291)))
 (=> (and $x5680 $x428) (and (= (time-to-state (+ time 1)) _292) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5680 (= ?x429 _291)))
 (let (($x5685 (and $x5680 $x445)))
 (=> $x5685 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5698 (= ?x429 _292)))
 (=> (and $x5698 $x428) (and (= (time-to-state (+ time 1)) _293) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5698 (= ?x429 _292)))
 (let (($x5703 (and $x5698 $x445)))
 (=> $x5703 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5716 (= ?x429 _293)))
 (=> (and $x5716 $x428) (and (= (time-to-state (+ time 1)) _294) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5716 (= ?x429 _293)))
 (let (($x5721 (and $x5716 $x445)))
 (=> $x5721 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5734 (= ?x429 _294)))
 (=> (and $x5734 $x428) (and (= (time-to-state (+ time 1)) _295) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5734 (= ?x429 _294)))
 (let (($x5739 (and $x5734 $x445)))
 (=> $x5739 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5752 (= ?x429 _295)))
 (=> (and $x5752 $x428) (and (= (time-to-state (+ time 1)) _296) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5752 (= ?x429 _295)))
 (let (($x5757 (and $x5752 $x445)))
 (=> $x5757 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5770 (= ?x429 _296)))
 (=> (and $x5770 $x428) (and (= (time-to-state (+ time 1)) _297) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5770 (= ?x429 _296)))
 (let (($x5775 (and $x5770 $x445)))
 (=> $x5775 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5788 (= ?x429 _297)))
 (=> (and $x5788 $x428) (and (= (time-to-state (+ time 1)) _298) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5788 (= ?x429 _297)))
 (let (($x5793 (and $x5788 $x445)))
 (=> $x5793 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5806 (= ?x429 _298)))
 (=> (and $x5806 $x428) (and (= (time-to-state (+ time 1)) _299) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5806 (= ?x429 _298)))
 (let (($x5811 (and $x5806 $x445)))
 (=> $x5811 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5824 (= ?x429 _299)))
 (=> (and $x5824 $x428) (and (= (time-to-state (+ time 1)) _300) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5824 (= ?x429 _299)))
 (let (($x5829 (and $x5824 $x445)))
 (=> $x5829 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5842 (= ?x429 _300)))
 (=> (and $x5842 $x428) (and (= (time-to-state (+ time 1)) _301) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5842 (= ?x429 _300)))
 (let (($x5847 (and $x5842 $x445)))
 (=> $x5847 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5860 (= ?x429 _301)))
 (=> (and $x5860 $x428) (and (= (time-to-state (+ time 1)) _302) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5860 (= ?x429 _301)))
 (let (($x5865 (and $x5860 $x445)))
 (=> $x5865 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5878 (= ?x429 _302)))
 (=> (and $x5878 $x428) (and (= (time-to-state (+ time 1)) _303) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5878 (= ?x429 _302)))
 (let (($x5883 (and $x5878 $x445)))
 (=> $x5883 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5896 (= ?x429 _303)))
 (=> (and $x5896 $x428) (and (= (time-to-state (+ time 1)) _304) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5896 (= ?x429 _303)))
 (let (($x5901 (and $x5896 $x445)))
 (=> $x5901 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5914 (= ?x429 _304)))
 (=> (and $x5914 $x428) (and (= (time-to-state (+ time 1)) _305) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5914 (= ?x429 _304)))
 (let (($x5919 (and $x5914 $x445)))
 (=> $x5919 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5932 (= ?x429 _305)))
 (=> (and $x5932 $x428) (and (= (time-to-state (+ time 1)) _306) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5932 (= ?x429 _305)))
 (let (($x5937 (and $x5932 $x445)))
 (=> $x5937 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5950 (= ?x429 _306)))
 (=> (and $x5950 $x428) (and (= (time-to-state (+ time 1)) _307) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5950 (= ?x429 _306)))
 (let (($x5955 (and $x5950 $x445)))
 (=> $x5955 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5968 (= ?x429 _307)))
 (=> (and $x5968 $x428) (and (= (time-to-state (+ time 1)) _308) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5968 (= ?x429 _307)))
 (let (($x5973 (and $x5968 $x445)))
 (=> $x5973 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x5986 (= ?x429 _308)))
 (=> (and $x5986 $x428) (and (= (time-to-state (+ time 1)) _309) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x5986 (= ?x429 _308)))
 (let (($x5991 (and $x5986 $x445)))
 (=> $x5991 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6004 (= ?x429 _309)))
 (=> (and $x6004 $x428) (and (= (time-to-state (+ time 1)) _310) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6004 (= ?x429 _309)))
 (let (($x6009 (and $x6004 $x445)))
 (=> $x6009 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6022 (= ?x429 _310)))
 (=> (and $x6022 $x428) (and (= (time-to-state (+ time 1)) _311) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6022 (= ?x429 _310)))
 (let (($x6027 (and $x6022 $x445)))
 (=> $x6027 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6040 (= ?x429 _311)))
 (=> (and $x6040 $x428) (and (= (time-to-state (+ time 1)) _312) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6040 (= ?x429 _311)))
 (let (($x6045 (and $x6040 $x445)))
 (=> $x6045 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6058 (= ?x429 _312)))
 (=> (and $x6058 $x428) (and (= (time-to-state (+ time 1)) _313) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6058 (= ?x429 _312)))
 (let (($x6063 (and $x6058 $x445)))
 (=> $x6063 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6076 (= ?x429 _313)))
 (=> (and $x6076 $x428) (and (= (time-to-state (+ time 1)) _314) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6076 (= ?x429 _313)))
 (let (($x6081 (and $x6076 $x445)))
 (=> $x6081 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6094 (= ?x429 _314)))
 (=> (and $x6094 $x428) (and (= (time-to-state (+ time 1)) _315) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6094 (= ?x429 _314)))
 (let (($x6099 (and $x6094 $x445)))
 (=> $x6099 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6112 (= ?x429 _315)))
 (=> (and $x6112 $x428) (and (= (time-to-state (+ time 1)) _316) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6112 (= ?x429 _315)))
 (let (($x6117 (and $x6112 $x445)))
 (=> $x6117 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6130 (= ?x429 _316)))
 (=> (and $x6130 $x428) (and (= (time-to-state (+ time 1)) _317) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6130 (= ?x429 _316)))
 (let (($x6135 (and $x6130 $x445)))
 (=> $x6135 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6148 (= ?x429 _317)))
 (=> (and $x6148 $x428) (and (= (time-to-state (+ time 1)) _318) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6148 (= ?x429 _317)))
 (let (($x6153 (and $x6148 $x445)))
 (=> $x6153 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6166 (= ?x429 _318)))
 (=> (and $x6166 $x428) (and (= (time-to-state (+ time 1)) _319) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6166 (= ?x429 _318)))
 (let (($x6171 (and $x6166 $x445)))
 (=> $x6171 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6184 (= ?x429 _319)))
 (=> (and $x6184 $x428) (and (= (time-to-state (+ time 1)) _320) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6184 (= ?x429 _319)))
 (let (($x6189 (and $x6184 $x445)))
 (=> $x6189 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6202 (= ?x429 _320)))
 (=> (and $x6202 $x428) (and (= (time-to-state (+ time 1)) _321) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6202 (= ?x429 _320)))
 (let (($x6207 (and $x6202 $x445)))
 (=> $x6207 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6220 (= ?x429 _321)))
 (=> (and $x6220 $x428) (and (= (time-to-state (+ time 1)) _322) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6220 (= ?x429 _321)))
 (let (($x6225 (and $x6220 $x445)))
 (=> $x6225 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6238 (= ?x429 _322)))
 (=> (and $x6238 $x428) (and (= (time-to-state (+ time 1)) _323) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6238 (= ?x429 _322)))
 (let (($x6243 (and $x6238 $x445)))
 (=> $x6243 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6256 (= ?x429 _323)))
 (=> (and $x6256 $x428) (and (= (time-to-state (+ time 1)) _324) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6256 (= ?x429 _323)))
 (let (($x6261 (and $x6256 $x445)))
 (=> $x6261 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6274 (= ?x429 _324)))
 (=> (and $x6274 $x428) (and (= (time-to-state (+ time 1)) _325) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6274 (= ?x429 _324)))
 (let (($x6279 (and $x6274 $x445)))
 (=> $x6279 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6292 (= ?x429 _325)))
 (=> (and $x6292 $x428) (and (= (time-to-state (+ time 1)) _326) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6292 (= ?x429 _325)))
 (let (($x6297 (and $x6292 $x445)))
 (=> $x6297 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6310 (= ?x429 _326)))
 (=> (and $x6310 $x428) (and (= (time-to-state (+ time 1)) _327) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6310 (= ?x429 _326)))
 (let (($x6315 (and $x6310 $x445)))
 (=> $x6315 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6328 (= ?x429 _327)))
 (=> (and $x6328 $x428) (and (= (time-to-state (+ time 1)) _328) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6328 (= ?x429 _327)))
 (let (($x6333 (and $x6328 $x445)))
 (=> $x6333 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6346 (= ?x429 _328)))
 (=> (and $x6346 $x428) (and (= (time-to-state (+ time 1)) _329) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6346 (= ?x429 _328)))
 (let (($x6351 (and $x6346 $x445)))
 (=> $x6351 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6364 (= ?x429 _329)))
 (=> (and $x6364 $x428) (and (= (time-to-state (+ time 1)) _330) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6364 (= ?x429 _329)))
 (let (($x6369 (and $x6364 $x445)))
 (=> $x6369 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6382 (= ?x429 _330)))
 (=> (and $x6382 $x428) (and (= (time-to-state (+ time 1)) _331) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6382 (= ?x429 _330)))
 (let (($x6387 (and $x6382 $x445)))
 (=> $x6387 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6400 (= ?x429 _331)))
 (=> (and $x6400 $x428) (and (= (time-to-state (+ time 1)) _332) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6400 (= ?x429 _331)))
 (let (($x6405 (and $x6400 $x445)))
 (=> $x6405 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6418 (= ?x429 _332)))
 (=> (and $x6418 $x428) (and (= (time-to-state (+ time 1)) _333) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6418 (= ?x429 _332)))
 (let (($x6423 (and $x6418 $x445)))
 (=> $x6423 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6436 (= ?x429 _333)))
 (=> (and $x6436 $x428) (and (= (time-to-state (+ time 1)) _334) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6436 (= ?x429 _333)))
 (let (($x6441 (and $x6436 $x445)))
 (=> $x6441 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6454 (= ?x429 _334)))
 (=> (and $x6454 $x428) (and (= (time-to-state (+ time 1)) _335) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6454 (= ?x429 _334)))
 (let (($x6459 (and $x6454 $x445)))
 (=> $x6459 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6472 (= ?x429 _335)))
 (=> (and $x6472 $x428) (and (= (time-to-state (+ time 1)) _336) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6472 (= ?x429 _335)))
 (let (($x6477 (and $x6472 $x445)))
 (=> $x6477 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6490 (= ?x429 _336)))
 (=> (and $x6490 $x428) (and (= (time-to-state (+ time 1)) _337) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6490 (= ?x429 _336)))
 (let (($x6495 (and $x6490 $x445)))
 (=> $x6495 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6508 (= ?x429 _337)))
 (=> (and $x6508 $x428) (and (= (time-to-state (+ time 1)) _338) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6508 (= ?x429 _337)))
 (let (($x6513 (and $x6508 $x445)))
 (=> $x6513 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6526 (= ?x429 _338)))
 (=> (and $x6526 $x428) (and (= (time-to-state (+ time 1)) _339) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6526 (= ?x429 _338)))
 (let (($x6531 (and $x6526 $x445)))
 (=> $x6531 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6544 (= ?x429 _339)))
 (=> (and $x6544 $x428) (and (= (time-to-state (+ time 1)) _340) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6544 (= ?x429 _339)))
 (let (($x6549 (and $x6544 $x445)))
 (=> $x6549 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6562 (= ?x429 _340)))
 (=> (and $x6562 $x428) (and (= (time-to-state (+ time 1)) _341) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6562 (= ?x429 _340)))
 (let (($x6567 (and $x6562 $x445)))
 (=> $x6567 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6580 (= ?x429 _341)))
 (=> (and $x6580 $x428) (and (= (time-to-state (+ time 1)) _342) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6580 (= ?x429 _341)))
 (let (($x6585 (and $x6580 $x445)))
 (=> $x6585 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6598 (= ?x429 _342)))
 (=> (and $x6598 $x428) (and (= (time-to-state (+ time 1)) _343) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6598 (= ?x429 _342)))
 (let (($x6603 (and $x6598 $x445)))
 (=> $x6603 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6616 (= ?x429 _343)))
 (=> (and $x6616 $x428) (and (= (time-to-state (+ time 1)) _344) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6616 (= ?x429 _343)))
 (let (($x6621 (and $x6616 $x445)))
 (=> $x6621 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6634 (= ?x429 _344)))
 (=> (and $x6634 $x428) (and (= (time-to-state (+ time 1)) _345) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6634 (= ?x429 _344)))
 (let (($x6639 (and $x6634 $x445)))
 (=> $x6639 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6652 (= ?x429 _345)))
 (=> (and $x6652 $x428) (and (= (time-to-state (+ time 1)) _346) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6652 (= ?x429 _345)))
 (let (($x6657 (and $x6652 $x445)))
 (=> $x6657 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6670 (= ?x429 _346)))
 (=> (and $x6670 $x428) (and (= (time-to-state (+ time 1)) _347) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6670 (= ?x429 _346)))
 (let (($x6675 (and $x6670 $x445)))
 (=> $x6675 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6688 (= ?x429 _347)))
 (=> (and $x6688 $x428) (and (= (time-to-state (+ time 1)) _348) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6688 (= ?x429 _347)))
 (let (($x6693 (and $x6688 $x445)))
 (=> $x6693 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6706 (= ?x429 _348)))
 (=> (and $x6706 $x428) (and (= (time-to-state (+ time 1)) _349) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6706 (= ?x429 _348)))
 (let (($x6711 (and $x6706 $x445)))
 (=> $x6711 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6724 (= ?x429 _349)))
 (=> (and $x6724 $x428) (and (= (time-to-state (+ time 1)) _350) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6724 (= ?x429 _349)))
 (let (($x6729 (and $x6724 $x445)))
 (=> $x6729 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6742 (= ?x429 _350)))
 (=> (and $x6742 $x428) (and (= (time-to-state (+ time 1)) _351) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6742 (= ?x429 _350)))
 (let (($x6747 (and $x6742 $x445)))
 (=> $x6747 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6760 (= ?x429 _351)))
 (=> (and $x6760 $x428) (and (= (time-to-state (+ time 1)) _352) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6760 (= ?x429 _351)))
 (let (($x6765 (and $x6760 $x445)))
 (=> $x6765 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6778 (= ?x429 _352)))
 (=> (and $x6778 $x428) (and (= (time-to-state (+ time 1)) _353) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6778 (= ?x429 _352)))
 (let (($x6783 (and $x6778 $x445)))
 (=> $x6783 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6796 (= ?x429 _353)))
 (=> (and $x6796 $x428) (and (= (time-to-state (+ time 1)) _354) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6796 (= ?x429 _353)))
 (let (($x6801 (and $x6796 $x445)))
 (=> $x6801 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6814 (= ?x429 _354)))
 (=> (and $x6814 $x428) (and (= (time-to-state (+ time 1)) _355) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6814 (= ?x429 _354)))
 (let (($x6819 (and $x6814 $x445)))
 (=> $x6819 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6832 (= ?x429 _355)))
 (=> (and $x6832 $x428) (and (= (time-to-state (+ time 1)) _356) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6832 (= ?x429 _355)))
 (let (($x6837 (and $x6832 $x445)))
 (=> $x6837 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6850 (= ?x429 _356)))
 (=> (and $x6850 $x428) (and (= (time-to-state (+ time 1)) _357) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6850 (= ?x429 _356)))
 (let (($x6855 (and $x6850 $x445)))
 (=> $x6855 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6868 (= ?x429 _357)))
 (=> (and $x6868 $x428) (and (= (time-to-state (+ time 1)) _358) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6868 (= ?x429 _357)))
 (let (($x6873 (and $x6868 $x445)))
 (=> $x6873 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6886 (= ?x429 _358)))
 (=> (and $x6886 $x428) (and (= (time-to-state (+ time 1)) _359) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6886 (= ?x429 _358)))
 (let (($x6891 (and $x6886 $x445)))
 (=> $x6891 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6904 (= ?x429 _359)))
 (=> (and $x6904 $x428) (and (= (time-to-state (+ time 1)) _360) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6904 (= ?x429 _359)))
 (let (($x6909 (and $x6904 $x445)))
 (=> $x6909 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6922 (= ?x429 _360)))
 (=> (and $x6922 $x428) (and (= (time-to-state (+ time 1)) _361) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6922 (= ?x429 _360)))
 (let (($x6927 (and $x6922 $x445)))
 (=> $x6927 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6940 (= ?x429 _361)))
 (=> (and $x6940 $x428) (and (= (time-to-state (+ time 1)) _362) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6940 (= ?x429 _361)))
 (let (($x6945 (and $x6940 $x445)))
 (=> $x6945 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6958 (= ?x429 _362)))
 (=> (and $x6958 $x428) (and (= (time-to-state (+ time 1)) _363) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6958 (= ?x429 _362)))
 (let (($x6963 (and $x6958 $x445)))
 (=> $x6963 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6976 (= ?x429 _363)))
 (=> (and $x6976 $x428) (and (= (time-to-state (+ time 1)) _364) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6976 (= ?x429 _363)))
 (let (($x6981 (and $x6976 $x445)))
 (=> $x6981 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x6994 (= ?x429 _364)))
 (=> (and $x6994 $x428) (and (= (time-to-state (+ time 1)) _365) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x6994 (= ?x429 _364)))
 (let (($x6999 (and $x6994 $x445)))
 (=> $x6999 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x7012 (= ?x429 _365)))
 (=> (and $x7012 $x428) (and (= (time-to-state (+ time 1)) _366) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x7012 (= ?x429 _365)))
 (let (($x7017 (and $x7012 $x445)))
 (=> $x7017 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x7030 (= ?x429 _366)))
 (=> (and $x7030 $x428) (and (= (time-to-state (+ time 1)) _367) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x7030 (= ?x429 _366)))
 (let (($x7035 (and $x7030 $x445)))
 (=> $x7035 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x7048 (= ?x429 _367)))
 (=> (and $x7048 $x428) (and (= (time-to-state (+ time 1)) _368) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x7048 (= ?x429 _367)))
 (let (($x7053 (and $x7048 $x445)))
 (=> $x7053 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x7066 (= ?x429 _368)))
 (=> (and $x7066 $x428) (and (= (time-to-state (+ time 1)) _369) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x7066 (= ?x429 _368)))
 (let (($x7071 (and $x7066 $x445)))
 (=> $x7071 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let (($x423 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x427 (input-arg0 time)))
 (let (($x428 (and (distinct ?x427 0) true)))
 (let ((?x429 (time-to-state time)))
 (let (($x7084 (= ?x429 _369)))
 (=> (and $x7084 $x428) (and (= (time-to-state (+ time 1)) _370) $x423))))))))
 )
(assert
 (forall ((time Int) )(let ((?x421 (+ time 1)))
 (let ((?x424 (time-to-state ?x421)))
 (let (($x444 (= ?x424 ERR)))
 (let ((?x427 (input-arg0 time)))
 (let (($x445 (= ?x427 1)))
 (let ((?x429 (time-to-state time)))
 (let (($x7084 (= ?x429 _369)))
 (let (($x7089 (and $x7084 $x445)))
 (=> $x7089 $x444))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x429 (time-to-state time)))
 (let (($x7092 (= ?x429 ERR)))
 (and $x7092 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370) true))
(check-sat)
