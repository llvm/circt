; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(assert
 (let ((?x89 (time-to-state 0)))
 (= ?x89 _0)))
(assert
 (let ((?x109 (input-arg0 0)))
 (= ?x109 0)))
(assert
 (let ((?x111 (var1_0 0)))
 (= ?x111 0)))
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x140 (= ?x139 _0)))
 (let (($x156 (and $x140 $x155)))
 (=> $x156 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x170 (= ?x139 _1)))
 (let (($x175 (and $x170 $x155)))
 (=> $x175 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x188 (= ?x139 _2)))
 (let (($x193 (and $x188 $x155)))
 (=> $x193 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x206 (= ?x139 _3)))
 (let (($x211 (and $x206 $x155)))
 (=> $x211 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x224 (= ?x139 _4)))
 (let (($x229 (and $x224 $x155)))
 (=> $x229 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x242 (= ?x139 _5)))
 (let (($x247 (and $x242 $x155)))
 (=> $x247 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x260 (= ?x139 _6)))
 (let (($x265 (and $x260 $x155)))
 (=> $x265 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x278 (= ?x139 _7)))
 (let (($x283 (and $x278 $x155)))
 (=> $x283 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x296 (= ?x139 _8)))
 (let (($x301 (and $x296 $x155)))
 (=> $x301 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x314 (= ?x139 _9)))
 (let (($x319 (and $x314 $x155)))
 (=> $x319 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x332 (= ?x139 _10)))
 (let (($x337 (and $x332 $x155)))
 (=> $x337 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x350 (= ?x139 _11)))
 (let (($x355 (and $x350 $x155)))
 (=> $x355 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x368 (= ?x139 _12)))
 (let (($x373 (and $x368 $x155)))
 (=> $x373 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x386 (= ?x139 _13)))
 (let (($x391 (and $x386 $x155)))
 (=> $x391 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x404 (= ?x139 _14)))
 (let (($x409 (and $x404 $x155)))
 (=> $x409 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x422 (= ?x139 _15)))
 (let (($x427 (and $x422 $x155)))
 (=> $x427 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x440 (= ?x139 _16)))
 (let (($x445 (and $x440 $x155)))
 (=> $x445 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x458 (= ?x139 _17)))
 (let (($x463 (and $x458 $x155)))
 (=> $x463 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x476 (= ?x139 _18)))
 (let (($x481 (and $x476 $x155)))
 (=> $x481 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x494 (= ?x139 _19)))
 (let (($x499 (and $x494 $x155)))
 (=> $x499 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x512 (= ?x139 _20)))
 (let (($x517 (and $x512 $x155)))
 (=> $x517 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x530 (= ?x139 _21)))
 (let (($x535 (and $x530 $x155)))
 (=> $x535 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x548 (= ?x139 _22)))
 (let (($x553 (and $x548 $x155)))
 (=> $x553 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x566 (= ?x139 _23)))
 (let (($x571 (and $x566 $x155)))
 (=> $x571 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x584 (= ?x139 _24)))
 (let (($x589 (and $x584 $x155)))
 (=> $x589 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x602 (= ?x139 _25)))
 (let (($x607 (and $x602 $x155)))
 (=> $x607 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x620 (= ?x139 _26)))
 (let (($x625 (and $x620 $x155)))
 (=> $x625 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x638 (= ?x139 _27)))
 (let (($x643 (and $x638 $x155)))
 (=> $x643 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x656 (= ?x139 _28)))
 (let (($x661 (and $x656 $x155)))
 (=> $x661 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x674 (= ?x139 _29)))
 (let (($x679 (and $x674 $x155)))
 (=> $x679 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x692 (= ?x139 _30)))
 (let (($x697 (and $x692 $x155)))
 (=> $x697 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x710 (= ?x139 _31)))
 (let (($x715 (and $x710 $x155)))
 (=> $x715 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x728 (= ?x139 _32)))
 (let (($x733 (and $x728 $x155)))
 (=> $x733 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x746 (= ?x139 _33)))
 (let (($x751 (and $x746 $x155)))
 (=> $x751 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x764 (= ?x139 _34)))
 (let (($x769 (and $x764 $x155)))
 (=> $x769 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x782 (= ?x139 _35)))
 (let (($x787 (and $x782 $x155)))
 (=> $x787 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x800 (= ?x139 _36)))
 (let (($x805 (and $x800 $x155)))
 (=> $x805 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x818 (= ?x139 _37)))
 (let (($x823 (and $x818 $x155)))
 (=> $x823 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x836 (= ?x139 _38)))
 (let (($x841 (and $x836 $x155)))
 (=> $x841 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x854 (= ?x139 _39)))
 (let (($x859 (and $x854 $x155)))
 (=> $x859 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x872 (= ?x139 _40)))
 (let (($x877 (and $x872 $x155)))
 (=> $x877 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x890 (= ?x139 _41)))
 (let (($x895 (and $x890 $x155)))
 (=> $x895 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x908 (= ?x139 _42)))
 (let (($x913 (and $x908 $x155)))
 (=> $x913 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x926 (= ?x139 _43)))
 (let (($x931 (and $x926 $x155)))
 (=> $x931 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x944 (= ?x139 _44)))
 (let (($x949 (and $x944 $x155)))
 (=> $x949 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x962 (= ?x139 _45)))
 (let (($x967 (and $x962 $x155)))
 (=> $x967 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x980 (= ?x139 _46)))
 (let (($x985 (and $x980 $x155)))
 (=> $x985 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x998 (= ?x139 _47)))
 (let (($x1003 (and $x998 $x155)))
 (=> $x1003 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1016 (= ?x139 _48)))
 (let (($x1021 (and $x1016 $x155)))
 (=> $x1021 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1034 (= ?x139 _49)))
 (let (($x1039 (and $x1034 $x155)))
 (=> $x1039 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1052 (= ?x139 _50)))
 (let (($x1057 (and $x1052 $x155)))
 (=> $x1057 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1070 (= ?x139 _51)))
 (let (($x1075 (and $x1070 $x155)))
 (=> $x1075 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1088 (= ?x139 _52)))
 (let (($x1093 (and $x1088 $x155)))
 (=> $x1093 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1106 (= ?x139 _53)))
 (let (($x1111 (and $x1106 $x155)))
 (=> $x1111 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1124 (= ?x139 _54)))
 (let (($x1129 (and $x1124 $x155)))
 (=> $x1129 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1142 (= ?x139 _55)))
 (let (($x1147 (and $x1142 $x155)))
 (=> $x1147 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1160 (= ?x139 _56)))
 (let (($x1165 (and $x1160 $x155)))
 (=> $x1165 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1178 (= ?x139 _57)))
 (let (($x1183 (and $x1178 $x155)))
 (=> $x1183 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1196 (= ?x139 _58)))
 (let (($x1201 (and $x1196 $x155)))
 (=> $x1201 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1214 (= ?x139 _59)))
 (let (($x1219 (and $x1214 $x155)))
 (=> $x1219 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1232 (= ?x139 _60)))
 (let (($x1237 (and $x1232 $x155)))
 (=> $x1237 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1250 (= ?x139 _61)))
 (let (($x1255 (and $x1250 $x155)))
 (=> $x1255 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1268 (= ?x139 _62)))
 (let (($x1273 (and $x1268 $x155)))
 (=> $x1273 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1286 (= ?x139 _63)))
 (let (($x1291 (and $x1286 $x155)))
 (=> $x1291 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1304 (= ?x139 _64)))
 (let (($x1309 (and $x1304 $x155)))
 (=> $x1309 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1322 (= ?x139 _65)))
 (let (($x1327 (and $x1322 $x155)))
 (=> $x1327 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1340 (= ?x139 _66)))
 (let (($x1345 (and $x1340 $x155)))
 (=> $x1345 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1358 (= ?x139 _67)))
 (let (($x1363 (and $x1358 $x155)))
 (=> $x1363 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1376 (= ?x139 _68)))
 (let (($x1381 (and $x1376 $x155)))
 (=> $x1381 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1394 (= ?x139 _69)))
 (let (($x1399 (and $x1394 $x155)))
 (=> $x1399 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1412 (= ?x139 _70)))
 (let (($x1417 (and $x1412 $x155)))
 (=> $x1417 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1430 (= ?x139 _71)))
 (let (($x1435 (and $x1430 $x155)))
 (=> $x1435 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1448 (= ?x139 _72)))
 (let (($x1453 (and $x1448 $x155)))
 (=> $x1453 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1466 (= ?x139 _73)))
 (let (($x1471 (and $x1466 $x155)))
 (=> $x1471 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1484 (= ?x139 _74)))
 (let (($x1489 (and $x1484 $x155)))
 (=> $x1489 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1502 (= ?x139 _75)))
 (let (($x1507 (and $x1502 $x155)))
 (=> $x1507 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1520 (= ?x139 _76)))
 (let (($x1525 (and $x1520 $x155)))
 (=> $x1525 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1538 (= ?x139 _77)))
 (let (($x1543 (and $x1538 $x155)))
 (=> $x1543 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1556 (= ?x139 _78)))
 (let (($x1561 (and $x1556 $x155)))
 (=> $x1561 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let (($x133 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x133))))
 )
(assert
 (forall ((time Int) )(let ((?x131 (+ time 1)))
 (let ((?x134 (time-to-state ?x131)))
 (let (($x154 (= ?x134 ERR)))
 (let ((?x137 (input-arg0 time)))
 (let (($x155 (= ?x137 1)))
 (let ((?x139 (time-to-state time)))
 (let (($x1574 (= ?x139 _79)))
 (let (($x1579 (and $x1574 $x155)))
 (=> $x1579 $x154))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x139 (time-to-state time)))
 (let (($x1582 (= ?x139 ERR)))
 (and $x1582 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80) true))
(check-sat)
