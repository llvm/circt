; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(assert
 (let ((?x79 (time-to-state 0)))
 (= ?x79 _0)))
(assert
 (let ((?x99 (input-arg0 0)))
 (= ?x99 0)))
(assert
 (let ((?x101 (var1_0 0)))
 (= ?x101 0)))
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x130 (= ?x129 _0)))
 (let (($x146 (and $x130 $x145)))
 (=> $x146 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x160 (= ?x129 _1)))
 (let (($x165 (and $x160 $x145)))
 (=> $x165 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x178 (= ?x129 _2)))
 (let (($x183 (and $x178 $x145)))
 (=> $x183 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x196 (= ?x129 _3)))
 (let (($x201 (and $x196 $x145)))
 (=> $x201 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x214 (= ?x129 _4)))
 (let (($x219 (and $x214 $x145)))
 (=> $x219 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x232 (= ?x129 _5)))
 (let (($x237 (and $x232 $x145)))
 (=> $x237 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x250 (= ?x129 _6)))
 (let (($x255 (and $x250 $x145)))
 (=> $x255 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x268 (= ?x129 _7)))
 (let (($x273 (and $x268 $x145)))
 (=> $x273 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x286 (= ?x129 _8)))
 (let (($x291 (and $x286 $x145)))
 (=> $x291 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x304 (= ?x129 _9)))
 (let (($x309 (and $x304 $x145)))
 (=> $x309 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x322 (= ?x129 _10)))
 (let (($x327 (and $x322 $x145)))
 (=> $x327 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x340 (= ?x129 _11)))
 (let (($x345 (and $x340 $x145)))
 (=> $x345 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x358 (= ?x129 _12)))
 (let (($x363 (and $x358 $x145)))
 (=> $x363 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x376 (= ?x129 _13)))
 (let (($x381 (and $x376 $x145)))
 (=> $x381 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x394 (= ?x129 _14)))
 (let (($x399 (and $x394 $x145)))
 (=> $x399 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x412 (= ?x129 _15)))
 (let (($x417 (and $x412 $x145)))
 (=> $x417 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x430 (= ?x129 _16)))
 (let (($x435 (and $x430 $x145)))
 (=> $x435 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x448 (= ?x129 _17)))
 (let (($x453 (and $x448 $x145)))
 (=> $x453 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x466 (= ?x129 _18)))
 (let (($x471 (and $x466 $x145)))
 (=> $x471 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x484 (= ?x129 _19)))
 (let (($x489 (and $x484 $x145)))
 (=> $x489 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x502 (= ?x129 _20)))
 (let (($x507 (and $x502 $x145)))
 (=> $x507 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x520 (= ?x129 _21)))
 (let (($x525 (and $x520 $x145)))
 (=> $x525 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x538 (= ?x129 _22)))
 (let (($x543 (and $x538 $x145)))
 (=> $x543 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x556 (= ?x129 _23)))
 (let (($x561 (and $x556 $x145)))
 (=> $x561 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x574 (= ?x129 _24)))
 (let (($x579 (and $x574 $x145)))
 (=> $x579 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x592 (= ?x129 _25)))
 (let (($x597 (and $x592 $x145)))
 (=> $x597 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x610 (= ?x129 _26)))
 (let (($x615 (and $x610 $x145)))
 (=> $x615 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x628 (= ?x129 _27)))
 (let (($x633 (and $x628 $x145)))
 (=> $x633 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x646 (= ?x129 _28)))
 (let (($x651 (and $x646 $x145)))
 (=> $x651 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x664 (= ?x129 _29)))
 (let (($x669 (and $x664 $x145)))
 (=> $x669 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x682 (= ?x129 _30)))
 (let (($x687 (and $x682 $x145)))
 (=> $x687 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x700 (= ?x129 _31)))
 (let (($x705 (and $x700 $x145)))
 (=> $x705 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x718 (= ?x129 _32)))
 (let (($x723 (and $x718 $x145)))
 (=> $x723 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x736 (= ?x129 _33)))
 (let (($x741 (and $x736 $x145)))
 (=> $x741 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x754 (= ?x129 _34)))
 (let (($x759 (and $x754 $x145)))
 (=> $x759 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x772 (= ?x129 _35)))
 (let (($x777 (and $x772 $x145)))
 (=> $x777 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x790 (= ?x129 _36)))
 (let (($x795 (and $x790 $x145)))
 (=> $x795 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x808 (= ?x129 _37)))
 (let (($x813 (and $x808 $x145)))
 (=> $x813 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x826 (= ?x129 _38)))
 (let (($x831 (and $x826 $x145)))
 (=> $x831 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x844 (= ?x129 _39)))
 (let (($x849 (and $x844 $x145)))
 (=> $x849 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x862 (= ?x129 _40)))
 (let (($x867 (and $x862 $x145)))
 (=> $x867 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x880 (= ?x129 _41)))
 (let (($x885 (and $x880 $x145)))
 (=> $x885 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x898 (= ?x129 _42)))
 (let (($x903 (and $x898 $x145)))
 (=> $x903 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x916 (= ?x129 _43)))
 (let (($x921 (and $x916 $x145)))
 (=> $x921 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x934 (= ?x129 _44)))
 (let (($x939 (and $x934 $x145)))
 (=> $x939 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x952 (= ?x129 _45)))
 (let (($x957 (and $x952 $x145)))
 (=> $x957 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x970 (= ?x129 _46)))
 (let (($x975 (and $x970 $x145)))
 (=> $x975 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x988 (= ?x129 _47)))
 (let (($x993 (and $x988 $x145)))
 (=> $x993 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1006 (= ?x129 _48)))
 (let (($x1011 (and $x1006 $x145)))
 (=> $x1011 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1024 (= ?x129 _49)))
 (let (($x1029 (and $x1024 $x145)))
 (=> $x1029 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1042 (= ?x129 _50)))
 (let (($x1047 (and $x1042 $x145)))
 (=> $x1047 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1060 (= ?x129 _51)))
 (let (($x1065 (and $x1060 $x145)))
 (=> $x1065 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1078 (= ?x129 _52)))
 (let (($x1083 (and $x1078 $x145)))
 (=> $x1083 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1096 (= ?x129 _53)))
 (let (($x1101 (and $x1096 $x145)))
 (=> $x1101 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1114 (= ?x129 _54)))
 (let (($x1119 (and $x1114 $x145)))
 (=> $x1119 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1132 (= ?x129 _55)))
 (let (($x1137 (and $x1132 $x145)))
 (=> $x1137 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1150 (= ?x129 _56)))
 (let (($x1155 (and $x1150 $x145)))
 (=> $x1155 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1168 (= ?x129 _57)))
 (let (($x1173 (and $x1168 $x145)))
 (=> $x1173 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1186 (= ?x129 _58)))
 (let (($x1191 (and $x1186 $x145)))
 (=> $x1191 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1204 (= ?x129 _59)))
 (let (($x1209 (and $x1204 $x145)))
 (=> $x1209 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1222 (= ?x129 _60)))
 (let (($x1227 (and $x1222 $x145)))
 (=> $x1227 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1240 (= ?x129 _61)))
 (let (($x1245 (and $x1240 $x145)))
 (=> $x1245 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1258 (= ?x129 _62)))
 (let (($x1263 (and $x1258 $x145)))
 (=> $x1263 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1276 (= ?x129 _63)))
 (let (($x1281 (and $x1276 $x145)))
 (=> $x1281 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1294 (= ?x129 _64)))
 (let (($x1299 (and $x1294 $x145)))
 (=> $x1299 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1312 (= ?x129 _65)))
 (let (($x1317 (and $x1312 $x145)))
 (=> $x1317 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1330 (= ?x129 _66)))
 (let (($x1335 (and $x1330 $x145)))
 (=> $x1335 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1348 (= ?x129 _67)))
 (let (($x1353 (and $x1348 $x145)))
 (=> $x1353 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1366 (= ?x129 _68)))
 (let (($x1371 (and $x1366 $x145)))
 (=> $x1371 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let (($x123 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x123))))
 )
(assert
 (forall ((time Int) )(let ((?x121 (+ time 1)))
 (let ((?x124 (time-to-state ?x121)))
 (let (($x144 (= ?x124 ERR)))
 (let ((?x127 (input-arg0 time)))
 (let (($x145 (= ?x127 1)))
 (let ((?x129 (time-to-state time)))
 (let (($x1384 (= ?x129 _69)))
 (let (($x1389 (and $x1384 $x145)))
 (=> $x1389 $x144))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x129 (time-to-state time)))
 (let (($x1392 (= ?x129 ERR)))
 (and $x1392 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70) true))
(check-sat)
