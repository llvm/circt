; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(assert
 (let ((?x29 (time-to-state 0)))
 (= ?x29 _0)))
(assert
 (let ((?x49 (input-arg0 0)))
 (= ?x49 0)))
(assert
 (let ((?x51 (var1_0 0)))
 (= ?x51 0)))
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x80 (= ?x79 _0)))
 (let (($x96 (and $x80 $x95)))
 (=> $x96 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x110 (= ?x79 _1)))
 (let (($x115 (and $x110 $x95)))
 (=> $x115 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x128 (= ?x79 _2)))
 (let (($x133 (and $x128 $x95)))
 (=> $x133 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x146 (= ?x79 _3)))
 (let (($x151 (and $x146 $x95)))
 (=> $x151 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x164 (= ?x79 _4)))
 (let (($x169 (and $x164 $x95)))
 (=> $x169 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x182 (= ?x79 _5)))
 (let (($x187 (and $x182 $x95)))
 (=> $x187 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x200 (= ?x79 _6)))
 (let (($x205 (and $x200 $x95)))
 (=> $x205 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x218 (= ?x79 _7)))
 (let (($x223 (and $x218 $x95)))
 (=> $x223 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x236 (= ?x79 _8)))
 (let (($x241 (and $x236 $x95)))
 (=> $x241 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x254 (= ?x79 _9)))
 (let (($x259 (and $x254 $x95)))
 (=> $x259 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x272 (= ?x79 _10)))
 (let (($x277 (and $x272 $x95)))
 (=> $x277 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x290 (= ?x79 _11)))
 (let (($x295 (and $x290 $x95)))
 (=> $x295 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x308 (= ?x79 _12)))
 (let (($x313 (and $x308 $x95)))
 (=> $x313 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x326 (= ?x79 _13)))
 (let (($x331 (and $x326 $x95)))
 (=> $x331 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x344 (= ?x79 _14)))
 (let (($x349 (and $x344 $x95)))
 (=> $x349 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x362 (= ?x79 _15)))
 (let (($x367 (and $x362 $x95)))
 (=> $x367 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x380 (= ?x79 _16)))
 (let (($x385 (and $x380 $x95)))
 (=> $x385 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x398 (= ?x79 _17)))
 (let (($x403 (and $x398 $x95)))
 (=> $x403 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x416 (= ?x79 _18)))
 (let (($x421 (and $x416 $x95)))
 (=> $x421 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let (($x73 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x73))))
 )
(assert
 (forall ((time Int) )(let ((?x71 (+ time 1)))
 (let ((?x74 (time-to-state ?x71)))
 (let (($x94 (= ?x74 ERR)))
 (let ((?x77 (input-arg0 time)))
 (let (($x95 (= ?x77 1)))
 (let ((?x79 (time-to-state time)))
 (let (($x434 (= ?x79 _19)))
 (let (($x439 (and $x434 $x95)))
 (=> $x439 $x94))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x79 (time-to-state time)))
 (let (($x442 (= ?x79 ERR)))
 (and $x442 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20) true))
(check-sat)
