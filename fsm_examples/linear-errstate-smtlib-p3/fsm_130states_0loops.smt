; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(assert
 (let ((?x139 (time-to-state 0)))
 (= ?x139 _0)))
(assert
 (let ((?x159 (input-arg0 0)))
 (= ?x159 0)))
(assert
 (let ((?x161 (var1_0 0)))
 (= ?x161 0)))
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x190 (= ?x189 _0)))
 (let (($x206 (and $x190 $x205)))
 (=> $x206 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x220 (= ?x189 _1)))
 (let (($x225 (and $x220 $x205)))
 (=> $x225 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x238 (= ?x189 _2)))
 (let (($x243 (and $x238 $x205)))
 (=> $x243 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x256 (= ?x189 _3)))
 (let (($x261 (and $x256 $x205)))
 (=> $x261 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x274 (= ?x189 _4)))
 (let (($x279 (and $x274 $x205)))
 (=> $x279 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x292 (= ?x189 _5)))
 (let (($x297 (and $x292 $x205)))
 (=> $x297 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x310 (= ?x189 _6)))
 (let (($x315 (and $x310 $x205)))
 (=> $x315 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x328 (= ?x189 _7)))
 (let (($x333 (and $x328 $x205)))
 (=> $x333 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x346 (= ?x189 _8)))
 (let (($x351 (and $x346 $x205)))
 (=> $x351 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x364 (= ?x189 _9)))
 (let (($x369 (and $x364 $x205)))
 (=> $x369 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x382 (= ?x189 _10)))
 (let (($x387 (and $x382 $x205)))
 (=> $x387 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x400 (= ?x189 _11)))
 (let (($x405 (and $x400 $x205)))
 (=> $x405 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x418 (= ?x189 _12)))
 (let (($x423 (and $x418 $x205)))
 (=> $x423 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x436 (= ?x189 _13)))
 (let (($x441 (and $x436 $x205)))
 (=> $x441 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x454 (= ?x189 _14)))
 (let (($x459 (and $x454 $x205)))
 (=> $x459 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x472 (= ?x189 _15)))
 (let (($x477 (and $x472 $x205)))
 (=> $x477 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x490 (= ?x189 _16)))
 (let (($x495 (and $x490 $x205)))
 (=> $x495 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x508 (= ?x189 _17)))
 (let (($x513 (and $x508 $x205)))
 (=> $x513 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x526 (= ?x189 _18)))
 (let (($x531 (and $x526 $x205)))
 (=> $x531 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x544 (= ?x189 _19)))
 (let (($x549 (and $x544 $x205)))
 (=> $x549 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x562 (= ?x189 _20)))
 (let (($x567 (and $x562 $x205)))
 (=> $x567 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x580 (= ?x189 _21)))
 (let (($x585 (and $x580 $x205)))
 (=> $x585 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x598 (= ?x189 _22)))
 (let (($x603 (and $x598 $x205)))
 (=> $x603 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x616 (= ?x189 _23)))
 (let (($x621 (and $x616 $x205)))
 (=> $x621 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x634 (= ?x189 _24)))
 (let (($x639 (and $x634 $x205)))
 (=> $x639 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x652 (= ?x189 _25)))
 (let (($x657 (and $x652 $x205)))
 (=> $x657 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x670 (= ?x189 _26)))
 (let (($x675 (and $x670 $x205)))
 (=> $x675 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x688 (= ?x189 _27)))
 (let (($x693 (and $x688 $x205)))
 (=> $x693 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x706 (= ?x189 _28)))
 (let (($x711 (and $x706 $x205)))
 (=> $x711 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x724 (= ?x189 _29)))
 (let (($x729 (and $x724 $x205)))
 (=> $x729 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x742 (= ?x189 _30)))
 (let (($x747 (and $x742 $x205)))
 (=> $x747 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x760 (= ?x189 _31)))
 (let (($x765 (and $x760 $x205)))
 (=> $x765 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x778 (= ?x189 _32)))
 (let (($x783 (and $x778 $x205)))
 (=> $x783 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x796 (= ?x189 _33)))
 (let (($x801 (and $x796 $x205)))
 (=> $x801 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x814 (= ?x189 _34)))
 (let (($x819 (and $x814 $x205)))
 (=> $x819 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x832 (= ?x189 _35)))
 (let (($x837 (and $x832 $x205)))
 (=> $x837 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x850 (= ?x189 _36)))
 (let (($x855 (and $x850 $x205)))
 (=> $x855 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x868 (= ?x189 _37)))
 (let (($x873 (and $x868 $x205)))
 (=> $x873 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x886 (= ?x189 _38)))
 (let (($x891 (and $x886 $x205)))
 (=> $x891 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x904 (= ?x189 _39)))
 (let (($x909 (and $x904 $x205)))
 (=> $x909 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x922 (= ?x189 _40)))
 (let (($x927 (and $x922 $x205)))
 (=> $x927 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x940 (= ?x189 _41)))
 (let (($x945 (and $x940 $x205)))
 (=> $x945 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x958 (= ?x189 _42)))
 (let (($x963 (and $x958 $x205)))
 (=> $x963 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x976 (= ?x189 _43)))
 (let (($x981 (and $x976 $x205)))
 (=> $x981 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x994 (= ?x189 _44)))
 (let (($x999 (and $x994 $x205)))
 (=> $x999 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1012 (= ?x189 _45)))
 (let (($x1017 (and $x1012 $x205)))
 (=> $x1017 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1030 (= ?x189 _46)))
 (let (($x1035 (and $x1030 $x205)))
 (=> $x1035 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1048 (= ?x189 _47)))
 (let (($x1053 (and $x1048 $x205)))
 (=> $x1053 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1066 (= ?x189 _48)))
 (let (($x1071 (and $x1066 $x205)))
 (=> $x1071 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1084 (= ?x189 _49)))
 (let (($x1089 (and $x1084 $x205)))
 (=> $x1089 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1102 (= ?x189 _50)))
 (let (($x1107 (and $x1102 $x205)))
 (=> $x1107 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1120 (= ?x189 _51)))
 (let (($x1125 (and $x1120 $x205)))
 (=> $x1125 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1138 (= ?x189 _52)))
 (let (($x1143 (and $x1138 $x205)))
 (=> $x1143 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1156 (= ?x189 _53)))
 (let (($x1161 (and $x1156 $x205)))
 (=> $x1161 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1174 (= ?x189 _54)))
 (let (($x1179 (and $x1174 $x205)))
 (=> $x1179 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1192 (= ?x189 _55)))
 (let (($x1197 (and $x1192 $x205)))
 (=> $x1197 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1210 (= ?x189 _56)))
 (let (($x1215 (and $x1210 $x205)))
 (=> $x1215 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1228 (= ?x189 _57)))
 (let (($x1233 (and $x1228 $x205)))
 (=> $x1233 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1246 (= ?x189 _58)))
 (let (($x1251 (and $x1246 $x205)))
 (=> $x1251 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1264 (= ?x189 _59)))
 (let (($x1269 (and $x1264 $x205)))
 (=> $x1269 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1282 (= ?x189 _60)))
 (let (($x1287 (and $x1282 $x205)))
 (=> $x1287 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1300 (= ?x189 _61)))
 (let (($x1305 (and $x1300 $x205)))
 (=> $x1305 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1318 (= ?x189 _62)))
 (let (($x1323 (and $x1318 $x205)))
 (=> $x1323 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1336 (= ?x189 _63)))
 (let (($x1341 (and $x1336 $x205)))
 (=> $x1341 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1354 (= ?x189 _64)))
 (let (($x1359 (and $x1354 $x205)))
 (=> $x1359 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1372 (= ?x189 _65)))
 (let (($x1377 (and $x1372 $x205)))
 (=> $x1377 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1390 (= ?x189 _66)))
 (let (($x1395 (and $x1390 $x205)))
 (=> $x1395 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1408 (= ?x189 _67)))
 (let (($x1413 (and $x1408 $x205)))
 (=> $x1413 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1426 (= ?x189 _68)))
 (let (($x1431 (and $x1426 $x205)))
 (=> $x1431 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1444 (= ?x189 _69)))
 (let (($x1449 (and $x1444 $x205)))
 (=> $x1449 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1462 (= ?x189 _70)))
 (let (($x1467 (and $x1462 $x205)))
 (=> $x1467 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1480 (= ?x189 _71)))
 (let (($x1485 (and $x1480 $x205)))
 (=> $x1485 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1498 (= ?x189 _72)))
 (let (($x1503 (and $x1498 $x205)))
 (=> $x1503 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1516 (= ?x189 _73)))
 (let (($x1521 (and $x1516 $x205)))
 (=> $x1521 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1534 (= ?x189 _74)))
 (let (($x1539 (and $x1534 $x205)))
 (=> $x1539 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1552 (= ?x189 _75)))
 (let (($x1557 (and $x1552 $x205)))
 (=> $x1557 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1570 (= ?x189 _76)))
 (let (($x1575 (and $x1570 $x205)))
 (=> $x1575 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1588 (= ?x189 _77)))
 (let (($x1593 (and $x1588 $x205)))
 (=> $x1593 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1606 (= ?x189 _78)))
 (let (($x1611 (and $x1606 $x205)))
 (=> $x1611 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1624 (= ?x189 _79)))
 (let (($x1629 (and $x1624 $x205)))
 (=> $x1629 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1642 (= ?x189 _80)))
 (let (($x1647 (and $x1642 $x205)))
 (=> $x1647 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1660 (= ?x189 _81)))
 (let (($x1665 (and $x1660 $x205)))
 (=> $x1665 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1678 (= ?x189 _82)))
 (let (($x1683 (and $x1678 $x205)))
 (=> $x1683 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1696 (= ?x189 _83)))
 (let (($x1701 (and $x1696 $x205)))
 (=> $x1701 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1714 (= ?x189 _84)))
 (let (($x1719 (and $x1714 $x205)))
 (=> $x1719 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1732 (= ?x189 _85)))
 (let (($x1737 (and $x1732 $x205)))
 (=> $x1737 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1750 (= ?x189 _86)))
 (let (($x1755 (and $x1750 $x205)))
 (=> $x1755 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1768 (= ?x189 _87)))
 (let (($x1773 (and $x1768 $x205)))
 (=> $x1773 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1786 (= ?x189 _88)))
 (let (($x1791 (and $x1786 $x205)))
 (=> $x1791 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1804 (= ?x189 _89)))
 (let (($x1809 (and $x1804 $x205)))
 (=> $x1809 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1822 (= ?x189 _90)))
 (let (($x1827 (and $x1822 $x205)))
 (=> $x1827 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1840 (= ?x189 _91)))
 (let (($x1845 (and $x1840 $x205)))
 (=> $x1845 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1858 (= ?x189 _92)))
 (let (($x1863 (and $x1858 $x205)))
 (=> $x1863 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1876 (= ?x189 _93)))
 (let (($x1881 (and $x1876 $x205)))
 (=> $x1881 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1894 (= ?x189 _94)))
 (let (($x1899 (and $x1894 $x205)))
 (=> $x1899 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1912 (= ?x189 _95)))
 (let (($x1917 (and $x1912 $x205)))
 (=> $x1917 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1930 (= ?x189 _96)))
 (let (($x1935 (and $x1930 $x205)))
 (=> $x1935 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1948 (= ?x189 _97)))
 (let (($x1953 (and $x1948 $x205)))
 (=> $x1953 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1966 (= ?x189 _98)))
 (let (($x1971 (and $x1966 $x205)))
 (=> $x1971 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x183))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x1984 (= ?x189 _99)))
 (let (($x1989 (and $x1984 $x205)))
 (=> $x1989 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2002 (= ?x189 _100)))
 (=> (and $x2002 $x188) (and (= (time-to-state (+ time 1)) _101) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2002 (= ?x189 _100)))
 (let (($x2007 (and $x2002 $x205)))
 (=> $x2007 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2020 (= ?x189 _101)))
 (=> (and $x2020 $x188) (and (= (time-to-state (+ time 1)) _102) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2020 (= ?x189 _101)))
 (let (($x2025 (and $x2020 $x205)))
 (=> $x2025 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2038 (= ?x189 _102)))
 (=> (and $x2038 $x188) (and (= (time-to-state (+ time 1)) _103) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2038 (= ?x189 _102)))
 (let (($x2043 (and $x2038 $x205)))
 (=> $x2043 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2056 (= ?x189 _103)))
 (=> (and $x2056 $x188) (and (= (time-to-state (+ time 1)) _104) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2056 (= ?x189 _103)))
 (let (($x2061 (and $x2056 $x205)))
 (=> $x2061 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2074 (= ?x189 _104)))
 (=> (and $x2074 $x188) (and (= (time-to-state (+ time 1)) _105) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2074 (= ?x189 _104)))
 (let (($x2079 (and $x2074 $x205)))
 (=> $x2079 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2092 (= ?x189 _105)))
 (=> (and $x2092 $x188) (and (= (time-to-state (+ time 1)) _106) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2092 (= ?x189 _105)))
 (let (($x2097 (and $x2092 $x205)))
 (=> $x2097 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2110 (= ?x189 _106)))
 (=> (and $x2110 $x188) (and (= (time-to-state (+ time 1)) _107) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2110 (= ?x189 _106)))
 (let (($x2115 (and $x2110 $x205)))
 (=> $x2115 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2128 (= ?x189 _107)))
 (=> (and $x2128 $x188) (and (= (time-to-state (+ time 1)) _108) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2128 (= ?x189 _107)))
 (let (($x2133 (and $x2128 $x205)))
 (=> $x2133 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2146 (= ?x189 _108)))
 (=> (and $x2146 $x188) (and (= (time-to-state (+ time 1)) _109) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2146 (= ?x189 _108)))
 (let (($x2151 (and $x2146 $x205)))
 (=> $x2151 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2164 (= ?x189 _109)))
 (=> (and $x2164 $x188) (and (= (time-to-state (+ time 1)) _110) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2164 (= ?x189 _109)))
 (let (($x2169 (and $x2164 $x205)))
 (=> $x2169 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2182 (= ?x189 _110)))
 (=> (and $x2182 $x188) (and (= (time-to-state (+ time 1)) _111) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2182 (= ?x189 _110)))
 (let (($x2187 (and $x2182 $x205)))
 (=> $x2187 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2200 (= ?x189 _111)))
 (=> (and $x2200 $x188) (and (= (time-to-state (+ time 1)) _112) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2200 (= ?x189 _111)))
 (let (($x2205 (and $x2200 $x205)))
 (=> $x2205 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2218 (= ?x189 _112)))
 (=> (and $x2218 $x188) (and (= (time-to-state (+ time 1)) _113) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2218 (= ?x189 _112)))
 (let (($x2223 (and $x2218 $x205)))
 (=> $x2223 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2236 (= ?x189 _113)))
 (=> (and $x2236 $x188) (and (= (time-to-state (+ time 1)) _114) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2236 (= ?x189 _113)))
 (let (($x2241 (and $x2236 $x205)))
 (=> $x2241 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2254 (= ?x189 _114)))
 (=> (and $x2254 $x188) (and (= (time-to-state (+ time 1)) _115) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2254 (= ?x189 _114)))
 (let (($x2259 (and $x2254 $x205)))
 (=> $x2259 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2272 (= ?x189 _115)))
 (=> (and $x2272 $x188) (and (= (time-to-state (+ time 1)) _116) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2272 (= ?x189 _115)))
 (let (($x2277 (and $x2272 $x205)))
 (=> $x2277 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2290 (= ?x189 _116)))
 (=> (and $x2290 $x188) (and (= (time-to-state (+ time 1)) _117) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2290 (= ?x189 _116)))
 (let (($x2295 (and $x2290 $x205)))
 (=> $x2295 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2308 (= ?x189 _117)))
 (=> (and $x2308 $x188) (and (= (time-to-state (+ time 1)) _118) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2308 (= ?x189 _117)))
 (let (($x2313 (and $x2308 $x205)))
 (=> $x2313 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2326 (= ?x189 _118)))
 (=> (and $x2326 $x188) (and (= (time-to-state (+ time 1)) _119) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2326 (= ?x189 _118)))
 (let (($x2331 (and $x2326 $x205)))
 (=> $x2331 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2344 (= ?x189 _119)))
 (=> (and $x2344 $x188) (and (= (time-to-state (+ time 1)) _120) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2344 (= ?x189 _119)))
 (let (($x2349 (and $x2344 $x205)))
 (=> $x2349 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2362 (= ?x189 _120)))
 (=> (and $x2362 $x188) (and (= (time-to-state (+ time 1)) _121) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2362 (= ?x189 _120)))
 (let (($x2367 (and $x2362 $x205)))
 (=> $x2367 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2380 (= ?x189 _121)))
 (=> (and $x2380 $x188) (and (= (time-to-state (+ time 1)) _122) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2380 (= ?x189 _121)))
 (let (($x2385 (and $x2380 $x205)))
 (=> $x2385 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2398 (= ?x189 _122)))
 (=> (and $x2398 $x188) (and (= (time-to-state (+ time 1)) _123) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2398 (= ?x189 _122)))
 (let (($x2403 (and $x2398 $x205)))
 (=> $x2403 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2416 (= ?x189 _123)))
 (=> (and $x2416 $x188) (and (= (time-to-state (+ time 1)) _124) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2416 (= ?x189 _123)))
 (let (($x2421 (and $x2416 $x205)))
 (=> $x2421 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2434 (= ?x189 _124)))
 (=> (and $x2434 $x188) (and (= (time-to-state (+ time 1)) _125) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2434 (= ?x189 _124)))
 (let (($x2439 (and $x2434 $x205)))
 (=> $x2439 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2452 (= ?x189 _125)))
 (=> (and $x2452 $x188) (and (= (time-to-state (+ time 1)) _126) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2452 (= ?x189 _125)))
 (let (($x2457 (and $x2452 $x205)))
 (=> $x2457 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2470 (= ?x189 _126)))
 (=> (and $x2470 $x188) (and (= (time-to-state (+ time 1)) _127) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2470 (= ?x189 _126)))
 (let (($x2475 (and $x2470 $x205)))
 (=> $x2475 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2488 (= ?x189 _127)))
 (=> (and $x2488 $x188) (and (= (time-to-state (+ time 1)) _128) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2488 (= ?x189 _127)))
 (let (($x2493 (and $x2488 $x205)))
 (=> $x2493 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2506 (= ?x189 _128)))
 (=> (and $x2506 $x188) (and (= (time-to-state (+ time 1)) _129) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2506 (= ?x189 _128)))
 (let (($x2511 (and $x2506 $x205)))
 (=> $x2511 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let (($x183 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x187 (input-arg0 time)))
 (let (($x188 (and (distinct ?x187 0) true)))
 (let ((?x189 (time-to-state time)))
 (let (($x2524 (= ?x189 _129)))
 (=> (and $x2524 $x188) (and (= (time-to-state (+ time 1)) _130) $x183))))))))
 )
(assert
 (forall ((time Int) )(let ((?x181 (+ time 1)))
 (let ((?x184 (time-to-state ?x181)))
 (let (($x204 (= ?x184 ERR)))
 (let ((?x187 (input-arg0 time)))
 (let (($x205 (= ?x187 1)))
 (let ((?x189 (time-to-state time)))
 (let (($x2524 (= ?x189 _129)))
 (let (($x2529 (and $x2524 $x205)))
 (=> $x2529 $x204))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x189 (time-to-state time)))
 (let (($x2532 (= ?x189 ERR)))
 (and $x2532 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130) true))
(check-sat)
