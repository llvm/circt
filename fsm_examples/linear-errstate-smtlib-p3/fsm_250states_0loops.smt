; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(assert
 (let ((?x259 (time-to-state 0)))
 (= ?x259 _0)))
(assert
 (let ((?x279 (input-arg0 0)))
 (= ?x279 0)))
(assert
 (let ((?x281 (var1_0 0)))
 (= ?x281 0)))
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x310 (= ?x309 _0)))
 (let (($x326 (and $x310 $x325)))
 (=> $x326 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x340 (= ?x309 _1)))
 (let (($x345 (and $x340 $x325)))
 (=> $x345 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x358 (= ?x309 _2)))
 (let (($x363 (and $x358 $x325)))
 (=> $x363 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x376 (= ?x309 _3)))
 (let (($x381 (and $x376 $x325)))
 (=> $x381 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x394 (= ?x309 _4)))
 (let (($x399 (and $x394 $x325)))
 (=> $x399 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x412 (= ?x309 _5)))
 (let (($x417 (and $x412 $x325)))
 (=> $x417 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x430 (= ?x309 _6)))
 (let (($x435 (and $x430 $x325)))
 (=> $x435 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x448 (= ?x309 _7)))
 (let (($x453 (and $x448 $x325)))
 (=> $x453 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x466 (= ?x309 _8)))
 (let (($x471 (and $x466 $x325)))
 (=> $x471 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x484 (= ?x309 _9)))
 (let (($x489 (and $x484 $x325)))
 (=> $x489 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x502 (= ?x309 _10)))
 (let (($x507 (and $x502 $x325)))
 (=> $x507 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x520 (= ?x309 _11)))
 (let (($x525 (and $x520 $x325)))
 (=> $x525 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x538 (= ?x309 _12)))
 (let (($x543 (and $x538 $x325)))
 (=> $x543 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x556 (= ?x309 _13)))
 (let (($x561 (and $x556 $x325)))
 (=> $x561 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x574 (= ?x309 _14)))
 (let (($x579 (and $x574 $x325)))
 (=> $x579 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x592 (= ?x309 _15)))
 (let (($x597 (and $x592 $x325)))
 (=> $x597 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x610 (= ?x309 _16)))
 (let (($x615 (and $x610 $x325)))
 (=> $x615 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x628 (= ?x309 _17)))
 (let (($x633 (and $x628 $x325)))
 (=> $x633 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x646 (= ?x309 _18)))
 (let (($x651 (and $x646 $x325)))
 (=> $x651 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x664 (= ?x309 _19)))
 (let (($x669 (and $x664 $x325)))
 (=> $x669 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x682 (= ?x309 _20)))
 (let (($x687 (and $x682 $x325)))
 (=> $x687 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x700 (= ?x309 _21)))
 (let (($x705 (and $x700 $x325)))
 (=> $x705 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x718 (= ?x309 _22)))
 (let (($x723 (and $x718 $x325)))
 (=> $x723 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x736 (= ?x309 _23)))
 (let (($x741 (and $x736 $x325)))
 (=> $x741 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x754 (= ?x309 _24)))
 (let (($x759 (and $x754 $x325)))
 (=> $x759 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x772 (= ?x309 _25)))
 (let (($x777 (and $x772 $x325)))
 (=> $x777 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x790 (= ?x309 _26)))
 (let (($x795 (and $x790 $x325)))
 (=> $x795 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x808 (= ?x309 _27)))
 (let (($x813 (and $x808 $x325)))
 (=> $x813 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x826 (= ?x309 _28)))
 (let (($x831 (and $x826 $x325)))
 (=> $x831 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x844 (= ?x309 _29)))
 (let (($x849 (and $x844 $x325)))
 (=> $x849 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x862 (= ?x309 _30)))
 (let (($x867 (and $x862 $x325)))
 (=> $x867 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x880 (= ?x309 _31)))
 (let (($x885 (and $x880 $x325)))
 (=> $x885 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x898 (= ?x309 _32)))
 (let (($x903 (and $x898 $x325)))
 (=> $x903 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x916 (= ?x309 _33)))
 (let (($x921 (and $x916 $x325)))
 (=> $x921 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x934 (= ?x309 _34)))
 (let (($x939 (and $x934 $x325)))
 (=> $x939 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x952 (= ?x309 _35)))
 (let (($x957 (and $x952 $x325)))
 (=> $x957 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x970 (= ?x309 _36)))
 (let (($x975 (and $x970 $x325)))
 (=> $x975 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x988 (= ?x309 _37)))
 (let (($x993 (and $x988 $x325)))
 (=> $x993 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1006 (= ?x309 _38)))
 (let (($x1011 (and $x1006 $x325)))
 (=> $x1011 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1024 (= ?x309 _39)))
 (let (($x1029 (and $x1024 $x325)))
 (=> $x1029 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1042 (= ?x309 _40)))
 (let (($x1047 (and $x1042 $x325)))
 (=> $x1047 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1060 (= ?x309 _41)))
 (let (($x1065 (and $x1060 $x325)))
 (=> $x1065 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1078 (= ?x309 _42)))
 (let (($x1083 (and $x1078 $x325)))
 (=> $x1083 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1096 (= ?x309 _43)))
 (let (($x1101 (and $x1096 $x325)))
 (=> $x1101 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1114 (= ?x309 _44)))
 (let (($x1119 (and $x1114 $x325)))
 (=> $x1119 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1132 (= ?x309 _45)))
 (let (($x1137 (and $x1132 $x325)))
 (=> $x1137 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1150 (= ?x309 _46)))
 (let (($x1155 (and $x1150 $x325)))
 (=> $x1155 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1168 (= ?x309 _47)))
 (let (($x1173 (and $x1168 $x325)))
 (=> $x1173 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1186 (= ?x309 _48)))
 (let (($x1191 (and $x1186 $x325)))
 (=> $x1191 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1204 (= ?x309 _49)))
 (let (($x1209 (and $x1204 $x325)))
 (=> $x1209 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1222 (= ?x309 _50)))
 (let (($x1227 (and $x1222 $x325)))
 (=> $x1227 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1240 (= ?x309 _51)))
 (let (($x1245 (and $x1240 $x325)))
 (=> $x1245 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1258 (= ?x309 _52)))
 (let (($x1263 (and $x1258 $x325)))
 (=> $x1263 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1276 (= ?x309 _53)))
 (let (($x1281 (and $x1276 $x325)))
 (=> $x1281 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1294 (= ?x309 _54)))
 (let (($x1299 (and $x1294 $x325)))
 (=> $x1299 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1312 (= ?x309 _55)))
 (let (($x1317 (and $x1312 $x325)))
 (=> $x1317 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1330 (= ?x309 _56)))
 (let (($x1335 (and $x1330 $x325)))
 (=> $x1335 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1348 (= ?x309 _57)))
 (let (($x1353 (and $x1348 $x325)))
 (=> $x1353 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1366 (= ?x309 _58)))
 (let (($x1371 (and $x1366 $x325)))
 (=> $x1371 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1384 (= ?x309 _59)))
 (let (($x1389 (and $x1384 $x325)))
 (=> $x1389 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1402 (= ?x309 _60)))
 (let (($x1407 (and $x1402 $x325)))
 (=> $x1407 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1420 (= ?x309 _61)))
 (let (($x1425 (and $x1420 $x325)))
 (=> $x1425 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1438 (= ?x309 _62)))
 (let (($x1443 (and $x1438 $x325)))
 (=> $x1443 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1456 (= ?x309 _63)))
 (let (($x1461 (and $x1456 $x325)))
 (=> $x1461 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1474 (= ?x309 _64)))
 (let (($x1479 (and $x1474 $x325)))
 (=> $x1479 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1492 (= ?x309 _65)))
 (let (($x1497 (and $x1492 $x325)))
 (=> $x1497 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1510 (= ?x309 _66)))
 (let (($x1515 (and $x1510 $x325)))
 (=> $x1515 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1528 (= ?x309 _67)))
 (let (($x1533 (and $x1528 $x325)))
 (=> $x1533 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1546 (= ?x309 _68)))
 (let (($x1551 (and $x1546 $x325)))
 (=> $x1551 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1564 (= ?x309 _69)))
 (let (($x1569 (and $x1564 $x325)))
 (=> $x1569 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1582 (= ?x309 _70)))
 (let (($x1587 (and $x1582 $x325)))
 (=> $x1587 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1600 (= ?x309 _71)))
 (let (($x1605 (and $x1600 $x325)))
 (=> $x1605 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1618 (= ?x309 _72)))
 (let (($x1623 (and $x1618 $x325)))
 (=> $x1623 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1636 (= ?x309 _73)))
 (let (($x1641 (and $x1636 $x325)))
 (=> $x1641 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1654 (= ?x309 _74)))
 (let (($x1659 (and $x1654 $x325)))
 (=> $x1659 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1672 (= ?x309 _75)))
 (let (($x1677 (and $x1672 $x325)))
 (=> $x1677 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1690 (= ?x309 _76)))
 (let (($x1695 (and $x1690 $x325)))
 (=> $x1695 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1708 (= ?x309 _77)))
 (let (($x1713 (and $x1708 $x325)))
 (=> $x1713 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1726 (= ?x309 _78)))
 (let (($x1731 (and $x1726 $x325)))
 (=> $x1731 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1744 (= ?x309 _79)))
 (let (($x1749 (and $x1744 $x325)))
 (=> $x1749 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1762 (= ?x309 _80)))
 (let (($x1767 (and $x1762 $x325)))
 (=> $x1767 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1780 (= ?x309 _81)))
 (let (($x1785 (and $x1780 $x325)))
 (=> $x1785 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1798 (= ?x309 _82)))
 (let (($x1803 (and $x1798 $x325)))
 (=> $x1803 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1816 (= ?x309 _83)))
 (let (($x1821 (and $x1816 $x325)))
 (=> $x1821 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1834 (= ?x309 _84)))
 (let (($x1839 (and $x1834 $x325)))
 (=> $x1839 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1852 (= ?x309 _85)))
 (let (($x1857 (and $x1852 $x325)))
 (=> $x1857 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1870 (= ?x309 _86)))
 (let (($x1875 (and $x1870 $x325)))
 (=> $x1875 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1888 (= ?x309 _87)))
 (let (($x1893 (and $x1888 $x325)))
 (=> $x1893 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1906 (= ?x309 _88)))
 (let (($x1911 (and $x1906 $x325)))
 (=> $x1911 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1924 (= ?x309 _89)))
 (let (($x1929 (and $x1924 $x325)))
 (=> $x1929 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1942 (= ?x309 _90)))
 (let (($x1947 (and $x1942 $x325)))
 (=> $x1947 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1960 (= ?x309 _91)))
 (let (($x1965 (and $x1960 $x325)))
 (=> $x1965 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1978 (= ?x309 _92)))
 (let (($x1983 (and $x1978 $x325)))
 (=> $x1983 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x1996 (= ?x309 _93)))
 (let (($x2001 (and $x1996 $x325)))
 (=> $x2001 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2014 (= ?x309 _94)))
 (let (($x2019 (and $x2014 $x325)))
 (=> $x2019 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2032 (= ?x309 _95)))
 (let (($x2037 (and $x2032 $x325)))
 (=> $x2037 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2050 (= ?x309 _96)))
 (let (($x2055 (and $x2050 $x325)))
 (=> $x2055 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2068 (= ?x309 _97)))
 (let (($x2073 (and $x2068 $x325)))
 (=> $x2073 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2086 (= ?x309 _98)))
 (let (($x2091 (and $x2086 $x325)))
 (=> $x2091 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x303))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2104 (= ?x309 _99)))
 (let (($x2109 (and $x2104 $x325)))
 (=> $x2109 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2122 (= ?x309 _100)))
 (=> (and $x2122 $x308) (and (= (time-to-state (+ time 1)) _101) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2122 (= ?x309 _100)))
 (let (($x2127 (and $x2122 $x325)))
 (=> $x2127 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2140 (= ?x309 _101)))
 (=> (and $x2140 $x308) (and (= (time-to-state (+ time 1)) _102) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2140 (= ?x309 _101)))
 (let (($x2145 (and $x2140 $x325)))
 (=> $x2145 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2158 (= ?x309 _102)))
 (=> (and $x2158 $x308) (and (= (time-to-state (+ time 1)) _103) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2158 (= ?x309 _102)))
 (let (($x2163 (and $x2158 $x325)))
 (=> $x2163 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2176 (= ?x309 _103)))
 (=> (and $x2176 $x308) (and (= (time-to-state (+ time 1)) _104) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2176 (= ?x309 _103)))
 (let (($x2181 (and $x2176 $x325)))
 (=> $x2181 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2194 (= ?x309 _104)))
 (=> (and $x2194 $x308) (and (= (time-to-state (+ time 1)) _105) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2194 (= ?x309 _104)))
 (let (($x2199 (and $x2194 $x325)))
 (=> $x2199 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2212 (= ?x309 _105)))
 (=> (and $x2212 $x308) (and (= (time-to-state (+ time 1)) _106) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2212 (= ?x309 _105)))
 (let (($x2217 (and $x2212 $x325)))
 (=> $x2217 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2230 (= ?x309 _106)))
 (=> (and $x2230 $x308) (and (= (time-to-state (+ time 1)) _107) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2230 (= ?x309 _106)))
 (let (($x2235 (and $x2230 $x325)))
 (=> $x2235 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2248 (= ?x309 _107)))
 (=> (and $x2248 $x308) (and (= (time-to-state (+ time 1)) _108) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2248 (= ?x309 _107)))
 (let (($x2253 (and $x2248 $x325)))
 (=> $x2253 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2266 (= ?x309 _108)))
 (=> (and $x2266 $x308) (and (= (time-to-state (+ time 1)) _109) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2266 (= ?x309 _108)))
 (let (($x2271 (and $x2266 $x325)))
 (=> $x2271 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2284 (= ?x309 _109)))
 (=> (and $x2284 $x308) (and (= (time-to-state (+ time 1)) _110) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2284 (= ?x309 _109)))
 (let (($x2289 (and $x2284 $x325)))
 (=> $x2289 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2302 (= ?x309 _110)))
 (=> (and $x2302 $x308) (and (= (time-to-state (+ time 1)) _111) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2302 (= ?x309 _110)))
 (let (($x2307 (and $x2302 $x325)))
 (=> $x2307 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2320 (= ?x309 _111)))
 (=> (and $x2320 $x308) (and (= (time-to-state (+ time 1)) _112) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2320 (= ?x309 _111)))
 (let (($x2325 (and $x2320 $x325)))
 (=> $x2325 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2338 (= ?x309 _112)))
 (=> (and $x2338 $x308) (and (= (time-to-state (+ time 1)) _113) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2338 (= ?x309 _112)))
 (let (($x2343 (and $x2338 $x325)))
 (=> $x2343 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2356 (= ?x309 _113)))
 (=> (and $x2356 $x308) (and (= (time-to-state (+ time 1)) _114) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2356 (= ?x309 _113)))
 (let (($x2361 (and $x2356 $x325)))
 (=> $x2361 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2374 (= ?x309 _114)))
 (=> (and $x2374 $x308) (and (= (time-to-state (+ time 1)) _115) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2374 (= ?x309 _114)))
 (let (($x2379 (and $x2374 $x325)))
 (=> $x2379 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2392 (= ?x309 _115)))
 (=> (and $x2392 $x308) (and (= (time-to-state (+ time 1)) _116) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2392 (= ?x309 _115)))
 (let (($x2397 (and $x2392 $x325)))
 (=> $x2397 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2410 (= ?x309 _116)))
 (=> (and $x2410 $x308) (and (= (time-to-state (+ time 1)) _117) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2410 (= ?x309 _116)))
 (let (($x2415 (and $x2410 $x325)))
 (=> $x2415 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2428 (= ?x309 _117)))
 (=> (and $x2428 $x308) (and (= (time-to-state (+ time 1)) _118) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2428 (= ?x309 _117)))
 (let (($x2433 (and $x2428 $x325)))
 (=> $x2433 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2446 (= ?x309 _118)))
 (=> (and $x2446 $x308) (and (= (time-to-state (+ time 1)) _119) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2446 (= ?x309 _118)))
 (let (($x2451 (and $x2446 $x325)))
 (=> $x2451 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2464 (= ?x309 _119)))
 (=> (and $x2464 $x308) (and (= (time-to-state (+ time 1)) _120) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2464 (= ?x309 _119)))
 (let (($x2469 (and $x2464 $x325)))
 (=> $x2469 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2482 (= ?x309 _120)))
 (=> (and $x2482 $x308) (and (= (time-to-state (+ time 1)) _121) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2482 (= ?x309 _120)))
 (let (($x2487 (and $x2482 $x325)))
 (=> $x2487 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2500 (= ?x309 _121)))
 (=> (and $x2500 $x308) (and (= (time-to-state (+ time 1)) _122) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2500 (= ?x309 _121)))
 (let (($x2505 (and $x2500 $x325)))
 (=> $x2505 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2518 (= ?x309 _122)))
 (=> (and $x2518 $x308) (and (= (time-to-state (+ time 1)) _123) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2518 (= ?x309 _122)))
 (let (($x2523 (and $x2518 $x325)))
 (=> $x2523 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2536 (= ?x309 _123)))
 (=> (and $x2536 $x308) (and (= (time-to-state (+ time 1)) _124) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2536 (= ?x309 _123)))
 (let (($x2541 (and $x2536 $x325)))
 (=> $x2541 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2554 (= ?x309 _124)))
 (=> (and $x2554 $x308) (and (= (time-to-state (+ time 1)) _125) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2554 (= ?x309 _124)))
 (let (($x2559 (and $x2554 $x325)))
 (=> $x2559 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2572 (= ?x309 _125)))
 (=> (and $x2572 $x308) (and (= (time-to-state (+ time 1)) _126) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2572 (= ?x309 _125)))
 (let (($x2577 (and $x2572 $x325)))
 (=> $x2577 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2590 (= ?x309 _126)))
 (=> (and $x2590 $x308) (and (= (time-to-state (+ time 1)) _127) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2590 (= ?x309 _126)))
 (let (($x2595 (and $x2590 $x325)))
 (=> $x2595 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2608 (= ?x309 _127)))
 (=> (and $x2608 $x308) (and (= (time-to-state (+ time 1)) _128) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2608 (= ?x309 _127)))
 (let (($x2613 (and $x2608 $x325)))
 (=> $x2613 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2626 (= ?x309 _128)))
 (=> (and $x2626 $x308) (and (= (time-to-state (+ time 1)) _129) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2626 (= ?x309 _128)))
 (let (($x2631 (and $x2626 $x325)))
 (=> $x2631 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2644 (= ?x309 _129)))
 (=> (and $x2644 $x308) (and (= (time-to-state (+ time 1)) _130) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2644 (= ?x309 _129)))
 (let (($x2649 (and $x2644 $x325)))
 (=> $x2649 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2662 (= ?x309 _130)))
 (=> (and $x2662 $x308) (and (= (time-to-state (+ time 1)) _131) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2662 (= ?x309 _130)))
 (let (($x2667 (and $x2662 $x325)))
 (=> $x2667 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2680 (= ?x309 _131)))
 (=> (and $x2680 $x308) (and (= (time-to-state (+ time 1)) _132) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2680 (= ?x309 _131)))
 (let (($x2685 (and $x2680 $x325)))
 (=> $x2685 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2698 (= ?x309 _132)))
 (=> (and $x2698 $x308) (and (= (time-to-state (+ time 1)) _133) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2698 (= ?x309 _132)))
 (let (($x2703 (and $x2698 $x325)))
 (=> $x2703 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2716 (= ?x309 _133)))
 (=> (and $x2716 $x308) (and (= (time-to-state (+ time 1)) _134) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2716 (= ?x309 _133)))
 (let (($x2721 (and $x2716 $x325)))
 (=> $x2721 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2734 (= ?x309 _134)))
 (=> (and $x2734 $x308) (and (= (time-to-state (+ time 1)) _135) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2734 (= ?x309 _134)))
 (let (($x2739 (and $x2734 $x325)))
 (=> $x2739 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2752 (= ?x309 _135)))
 (=> (and $x2752 $x308) (and (= (time-to-state (+ time 1)) _136) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2752 (= ?x309 _135)))
 (let (($x2757 (and $x2752 $x325)))
 (=> $x2757 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2770 (= ?x309 _136)))
 (=> (and $x2770 $x308) (and (= (time-to-state (+ time 1)) _137) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2770 (= ?x309 _136)))
 (let (($x2775 (and $x2770 $x325)))
 (=> $x2775 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2788 (= ?x309 _137)))
 (=> (and $x2788 $x308) (and (= (time-to-state (+ time 1)) _138) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2788 (= ?x309 _137)))
 (let (($x2793 (and $x2788 $x325)))
 (=> $x2793 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2806 (= ?x309 _138)))
 (=> (and $x2806 $x308) (and (= (time-to-state (+ time 1)) _139) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2806 (= ?x309 _138)))
 (let (($x2811 (and $x2806 $x325)))
 (=> $x2811 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2824 (= ?x309 _139)))
 (=> (and $x2824 $x308) (and (= (time-to-state (+ time 1)) _140) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2824 (= ?x309 _139)))
 (let (($x2829 (and $x2824 $x325)))
 (=> $x2829 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2842 (= ?x309 _140)))
 (=> (and $x2842 $x308) (and (= (time-to-state (+ time 1)) _141) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2842 (= ?x309 _140)))
 (let (($x2847 (and $x2842 $x325)))
 (=> $x2847 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2860 (= ?x309 _141)))
 (=> (and $x2860 $x308) (and (= (time-to-state (+ time 1)) _142) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2860 (= ?x309 _141)))
 (let (($x2865 (and $x2860 $x325)))
 (=> $x2865 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2878 (= ?x309 _142)))
 (=> (and $x2878 $x308) (and (= (time-to-state (+ time 1)) _143) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2878 (= ?x309 _142)))
 (let (($x2883 (and $x2878 $x325)))
 (=> $x2883 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2896 (= ?x309 _143)))
 (=> (and $x2896 $x308) (and (= (time-to-state (+ time 1)) _144) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2896 (= ?x309 _143)))
 (let (($x2901 (and $x2896 $x325)))
 (=> $x2901 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2914 (= ?x309 _144)))
 (=> (and $x2914 $x308) (and (= (time-to-state (+ time 1)) _145) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2914 (= ?x309 _144)))
 (let (($x2919 (and $x2914 $x325)))
 (=> $x2919 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2932 (= ?x309 _145)))
 (=> (and $x2932 $x308) (and (= (time-to-state (+ time 1)) _146) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2932 (= ?x309 _145)))
 (let (($x2937 (and $x2932 $x325)))
 (=> $x2937 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2950 (= ?x309 _146)))
 (=> (and $x2950 $x308) (and (= (time-to-state (+ time 1)) _147) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2950 (= ?x309 _146)))
 (let (($x2955 (and $x2950 $x325)))
 (=> $x2955 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2968 (= ?x309 _147)))
 (=> (and $x2968 $x308) (and (= (time-to-state (+ time 1)) _148) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2968 (= ?x309 _147)))
 (let (($x2973 (and $x2968 $x325)))
 (=> $x2973 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x2986 (= ?x309 _148)))
 (=> (and $x2986 $x308) (and (= (time-to-state (+ time 1)) _149) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x2986 (= ?x309 _148)))
 (let (($x2991 (and $x2986 $x325)))
 (=> $x2991 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3004 (= ?x309 _149)))
 (=> (and $x3004 $x308) (and (= (time-to-state (+ time 1)) _150) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3004 (= ?x309 _149)))
 (let (($x3009 (and $x3004 $x325)))
 (=> $x3009 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3022 (= ?x309 _150)))
 (=> (and $x3022 $x308) (and (= (time-to-state (+ time 1)) _151) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3022 (= ?x309 _150)))
 (let (($x3027 (and $x3022 $x325)))
 (=> $x3027 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3040 (= ?x309 _151)))
 (=> (and $x3040 $x308) (and (= (time-to-state (+ time 1)) _152) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3040 (= ?x309 _151)))
 (let (($x3045 (and $x3040 $x325)))
 (=> $x3045 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3058 (= ?x309 _152)))
 (=> (and $x3058 $x308) (and (= (time-to-state (+ time 1)) _153) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3058 (= ?x309 _152)))
 (let (($x3063 (and $x3058 $x325)))
 (=> $x3063 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3076 (= ?x309 _153)))
 (=> (and $x3076 $x308) (and (= (time-to-state (+ time 1)) _154) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3076 (= ?x309 _153)))
 (let (($x3081 (and $x3076 $x325)))
 (=> $x3081 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3094 (= ?x309 _154)))
 (=> (and $x3094 $x308) (and (= (time-to-state (+ time 1)) _155) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3094 (= ?x309 _154)))
 (let (($x3099 (and $x3094 $x325)))
 (=> $x3099 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3112 (= ?x309 _155)))
 (=> (and $x3112 $x308) (and (= (time-to-state (+ time 1)) _156) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3112 (= ?x309 _155)))
 (let (($x3117 (and $x3112 $x325)))
 (=> $x3117 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3130 (= ?x309 _156)))
 (=> (and $x3130 $x308) (and (= (time-to-state (+ time 1)) _157) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3130 (= ?x309 _156)))
 (let (($x3135 (and $x3130 $x325)))
 (=> $x3135 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3148 (= ?x309 _157)))
 (=> (and $x3148 $x308) (and (= (time-to-state (+ time 1)) _158) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3148 (= ?x309 _157)))
 (let (($x3153 (and $x3148 $x325)))
 (=> $x3153 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3166 (= ?x309 _158)))
 (=> (and $x3166 $x308) (and (= (time-to-state (+ time 1)) _159) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3166 (= ?x309 _158)))
 (let (($x3171 (and $x3166 $x325)))
 (=> $x3171 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3184 (= ?x309 _159)))
 (=> (and $x3184 $x308) (and (= (time-to-state (+ time 1)) _160) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3184 (= ?x309 _159)))
 (let (($x3189 (and $x3184 $x325)))
 (=> $x3189 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3202 (= ?x309 _160)))
 (=> (and $x3202 $x308) (and (= (time-to-state (+ time 1)) _161) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3202 (= ?x309 _160)))
 (let (($x3207 (and $x3202 $x325)))
 (=> $x3207 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3220 (= ?x309 _161)))
 (=> (and $x3220 $x308) (and (= (time-to-state (+ time 1)) _162) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3220 (= ?x309 _161)))
 (let (($x3225 (and $x3220 $x325)))
 (=> $x3225 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3238 (= ?x309 _162)))
 (=> (and $x3238 $x308) (and (= (time-to-state (+ time 1)) _163) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3238 (= ?x309 _162)))
 (let (($x3243 (and $x3238 $x325)))
 (=> $x3243 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3256 (= ?x309 _163)))
 (=> (and $x3256 $x308) (and (= (time-to-state (+ time 1)) _164) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3256 (= ?x309 _163)))
 (let (($x3261 (and $x3256 $x325)))
 (=> $x3261 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3274 (= ?x309 _164)))
 (=> (and $x3274 $x308) (and (= (time-to-state (+ time 1)) _165) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3274 (= ?x309 _164)))
 (let (($x3279 (and $x3274 $x325)))
 (=> $x3279 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3292 (= ?x309 _165)))
 (=> (and $x3292 $x308) (and (= (time-to-state (+ time 1)) _166) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3292 (= ?x309 _165)))
 (let (($x3297 (and $x3292 $x325)))
 (=> $x3297 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3310 (= ?x309 _166)))
 (=> (and $x3310 $x308) (and (= (time-to-state (+ time 1)) _167) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3310 (= ?x309 _166)))
 (let (($x3315 (and $x3310 $x325)))
 (=> $x3315 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3328 (= ?x309 _167)))
 (=> (and $x3328 $x308) (and (= (time-to-state (+ time 1)) _168) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3328 (= ?x309 _167)))
 (let (($x3333 (and $x3328 $x325)))
 (=> $x3333 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3346 (= ?x309 _168)))
 (=> (and $x3346 $x308) (and (= (time-to-state (+ time 1)) _169) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3346 (= ?x309 _168)))
 (let (($x3351 (and $x3346 $x325)))
 (=> $x3351 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3364 (= ?x309 _169)))
 (=> (and $x3364 $x308) (and (= (time-to-state (+ time 1)) _170) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3364 (= ?x309 _169)))
 (let (($x3369 (and $x3364 $x325)))
 (=> $x3369 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3382 (= ?x309 _170)))
 (=> (and $x3382 $x308) (and (= (time-to-state (+ time 1)) _171) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3382 (= ?x309 _170)))
 (let (($x3387 (and $x3382 $x325)))
 (=> $x3387 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3400 (= ?x309 _171)))
 (=> (and $x3400 $x308) (and (= (time-to-state (+ time 1)) _172) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3400 (= ?x309 _171)))
 (let (($x3405 (and $x3400 $x325)))
 (=> $x3405 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3418 (= ?x309 _172)))
 (=> (and $x3418 $x308) (and (= (time-to-state (+ time 1)) _173) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3418 (= ?x309 _172)))
 (let (($x3423 (and $x3418 $x325)))
 (=> $x3423 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3436 (= ?x309 _173)))
 (=> (and $x3436 $x308) (and (= (time-to-state (+ time 1)) _174) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3436 (= ?x309 _173)))
 (let (($x3441 (and $x3436 $x325)))
 (=> $x3441 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3454 (= ?x309 _174)))
 (=> (and $x3454 $x308) (and (= (time-to-state (+ time 1)) _175) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3454 (= ?x309 _174)))
 (let (($x3459 (and $x3454 $x325)))
 (=> $x3459 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3472 (= ?x309 _175)))
 (=> (and $x3472 $x308) (and (= (time-to-state (+ time 1)) _176) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3472 (= ?x309 _175)))
 (let (($x3477 (and $x3472 $x325)))
 (=> $x3477 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3490 (= ?x309 _176)))
 (=> (and $x3490 $x308) (and (= (time-to-state (+ time 1)) _177) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3490 (= ?x309 _176)))
 (let (($x3495 (and $x3490 $x325)))
 (=> $x3495 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3508 (= ?x309 _177)))
 (=> (and $x3508 $x308) (and (= (time-to-state (+ time 1)) _178) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3508 (= ?x309 _177)))
 (let (($x3513 (and $x3508 $x325)))
 (=> $x3513 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3526 (= ?x309 _178)))
 (=> (and $x3526 $x308) (and (= (time-to-state (+ time 1)) _179) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3526 (= ?x309 _178)))
 (let (($x3531 (and $x3526 $x325)))
 (=> $x3531 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3544 (= ?x309 _179)))
 (=> (and $x3544 $x308) (and (= (time-to-state (+ time 1)) _180) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3544 (= ?x309 _179)))
 (let (($x3549 (and $x3544 $x325)))
 (=> $x3549 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3562 (= ?x309 _180)))
 (=> (and $x3562 $x308) (and (= (time-to-state (+ time 1)) _181) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3562 (= ?x309 _180)))
 (let (($x3567 (and $x3562 $x325)))
 (=> $x3567 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3580 (= ?x309 _181)))
 (=> (and $x3580 $x308) (and (= (time-to-state (+ time 1)) _182) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3580 (= ?x309 _181)))
 (let (($x3585 (and $x3580 $x325)))
 (=> $x3585 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3598 (= ?x309 _182)))
 (=> (and $x3598 $x308) (and (= (time-to-state (+ time 1)) _183) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3598 (= ?x309 _182)))
 (let (($x3603 (and $x3598 $x325)))
 (=> $x3603 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3616 (= ?x309 _183)))
 (=> (and $x3616 $x308) (and (= (time-to-state (+ time 1)) _184) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3616 (= ?x309 _183)))
 (let (($x3621 (and $x3616 $x325)))
 (=> $x3621 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3634 (= ?x309 _184)))
 (=> (and $x3634 $x308) (and (= (time-to-state (+ time 1)) _185) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3634 (= ?x309 _184)))
 (let (($x3639 (and $x3634 $x325)))
 (=> $x3639 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3652 (= ?x309 _185)))
 (=> (and $x3652 $x308) (and (= (time-to-state (+ time 1)) _186) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3652 (= ?x309 _185)))
 (let (($x3657 (and $x3652 $x325)))
 (=> $x3657 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3670 (= ?x309 _186)))
 (=> (and $x3670 $x308) (and (= (time-to-state (+ time 1)) _187) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3670 (= ?x309 _186)))
 (let (($x3675 (and $x3670 $x325)))
 (=> $x3675 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3688 (= ?x309 _187)))
 (=> (and $x3688 $x308) (and (= (time-to-state (+ time 1)) _188) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3688 (= ?x309 _187)))
 (let (($x3693 (and $x3688 $x325)))
 (=> $x3693 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3706 (= ?x309 _188)))
 (=> (and $x3706 $x308) (and (= (time-to-state (+ time 1)) _189) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3706 (= ?x309 _188)))
 (let (($x3711 (and $x3706 $x325)))
 (=> $x3711 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3724 (= ?x309 _189)))
 (=> (and $x3724 $x308) (and (= (time-to-state (+ time 1)) _190) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3724 (= ?x309 _189)))
 (let (($x3729 (and $x3724 $x325)))
 (=> $x3729 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3742 (= ?x309 _190)))
 (=> (and $x3742 $x308) (and (= (time-to-state (+ time 1)) _191) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3742 (= ?x309 _190)))
 (let (($x3747 (and $x3742 $x325)))
 (=> $x3747 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3760 (= ?x309 _191)))
 (=> (and $x3760 $x308) (and (= (time-to-state (+ time 1)) _192) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3760 (= ?x309 _191)))
 (let (($x3765 (and $x3760 $x325)))
 (=> $x3765 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3778 (= ?x309 _192)))
 (=> (and $x3778 $x308) (and (= (time-to-state (+ time 1)) _193) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3778 (= ?x309 _192)))
 (let (($x3783 (and $x3778 $x325)))
 (=> $x3783 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3796 (= ?x309 _193)))
 (=> (and $x3796 $x308) (and (= (time-to-state (+ time 1)) _194) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3796 (= ?x309 _193)))
 (let (($x3801 (and $x3796 $x325)))
 (=> $x3801 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3814 (= ?x309 _194)))
 (=> (and $x3814 $x308) (and (= (time-to-state (+ time 1)) _195) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3814 (= ?x309 _194)))
 (let (($x3819 (and $x3814 $x325)))
 (=> $x3819 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3832 (= ?x309 _195)))
 (=> (and $x3832 $x308) (and (= (time-to-state (+ time 1)) _196) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3832 (= ?x309 _195)))
 (let (($x3837 (and $x3832 $x325)))
 (=> $x3837 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3850 (= ?x309 _196)))
 (=> (and $x3850 $x308) (and (= (time-to-state (+ time 1)) _197) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3850 (= ?x309 _196)))
 (let (($x3855 (and $x3850 $x325)))
 (=> $x3855 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3868 (= ?x309 _197)))
 (=> (and $x3868 $x308) (and (= (time-to-state (+ time 1)) _198) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3868 (= ?x309 _197)))
 (let (($x3873 (and $x3868 $x325)))
 (=> $x3873 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3886 (= ?x309 _198)))
 (=> (and $x3886 $x308) (and (= (time-to-state (+ time 1)) _199) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3886 (= ?x309 _198)))
 (let (($x3891 (and $x3886 $x325)))
 (=> $x3891 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3904 (= ?x309 _199)))
 (=> (and $x3904 $x308) (and (= (time-to-state (+ time 1)) _200) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3904 (= ?x309 _199)))
 (let (($x3909 (and $x3904 $x325)))
 (=> $x3909 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3922 (= ?x309 _200)))
 (=> (and $x3922 $x308) (and (= (time-to-state (+ time 1)) _201) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3922 (= ?x309 _200)))
 (let (($x3927 (and $x3922 $x325)))
 (=> $x3927 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3940 (= ?x309 _201)))
 (=> (and $x3940 $x308) (and (= (time-to-state (+ time 1)) _202) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3940 (= ?x309 _201)))
 (let (($x3945 (and $x3940 $x325)))
 (=> $x3945 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3958 (= ?x309 _202)))
 (=> (and $x3958 $x308) (and (= (time-to-state (+ time 1)) _203) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3958 (= ?x309 _202)))
 (let (($x3963 (and $x3958 $x325)))
 (=> $x3963 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3976 (= ?x309 _203)))
 (=> (and $x3976 $x308) (and (= (time-to-state (+ time 1)) _204) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3976 (= ?x309 _203)))
 (let (($x3981 (and $x3976 $x325)))
 (=> $x3981 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x3994 (= ?x309 _204)))
 (=> (and $x3994 $x308) (and (= (time-to-state (+ time 1)) _205) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x3994 (= ?x309 _204)))
 (let (($x3999 (and $x3994 $x325)))
 (=> $x3999 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4012 (= ?x309 _205)))
 (=> (and $x4012 $x308) (and (= (time-to-state (+ time 1)) _206) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4012 (= ?x309 _205)))
 (let (($x4017 (and $x4012 $x325)))
 (=> $x4017 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4030 (= ?x309 _206)))
 (=> (and $x4030 $x308) (and (= (time-to-state (+ time 1)) _207) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4030 (= ?x309 _206)))
 (let (($x4035 (and $x4030 $x325)))
 (=> $x4035 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4048 (= ?x309 _207)))
 (=> (and $x4048 $x308) (and (= (time-to-state (+ time 1)) _208) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4048 (= ?x309 _207)))
 (let (($x4053 (and $x4048 $x325)))
 (=> $x4053 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4066 (= ?x309 _208)))
 (=> (and $x4066 $x308) (and (= (time-to-state (+ time 1)) _209) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4066 (= ?x309 _208)))
 (let (($x4071 (and $x4066 $x325)))
 (=> $x4071 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4084 (= ?x309 _209)))
 (=> (and $x4084 $x308) (and (= (time-to-state (+ time 1)) _210) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4084 (= ?x309 _209)))
 (let (($x4089 (and $x4084 $x325)))
 (=> $x4089 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4102 (= ?x309 _210)))
 (=> (and $x4102 $x308) (and (= (time-to-state (+ time 1)) _211) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4102 (= ?x309 _210)))
 (let (($x4107 (and $x4102 $x325)))
 (=> $x4107 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4120 (= ?x309 _211)))
 (=> (and $x4120 $x308) (and (= (time-to-state (+ time 1)) _212) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4120 (= ?x309 _211)))
 (let (($x4125 (and $x4120 $x325)))
 (=> $x4125 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4138 (= ?x309 _212)))
 (=> (and $x4138 $x308) (and (= (time-to-state (+ time 1)) _213) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4138 (= ?x309 _212)))
 (let (($x4143 (and $x4138 $x325)))
 (=> $x4143 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4156 (= ?x309 _213)))
 (=> (and $x4156 $x308) (and (= (time-to-state (+ time 1)) _214) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4156 (= ?x309 _213)))
 (let (($x4161 (and $x4156 $x325)))
 (=> $x4161 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4174 (= ?x309 _214)))
 (=> (and $x4174 $x308) (and (= (time-to-state (+ time 1)) _215) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4174 (= ?x309 _214)))
 (let (($x4179 (and $x4174 $x325)))
 (=> $x4179 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4192 (= ?x309 _215)))
 (=> (and $x4192 $x308) (and (= (time-to-state (+ time 1)) _216) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4192 (= ?x309 _215)))
 (let (($x4197 (and $x4192 $x325)))
 (=> $x4197 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4210 (= ?x309 _216)))
 (=> (and $x4210 $x308) (and (= (time-to-state (+ time 1)) _217) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4210 (= ?x309 _216)))
 (let (($x4215 (and $x4210 $x325)))
 (=> $x4215 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4228 (= ?x309 _217)))
 (=> (and $x4228 $x308) (and (= (time-to-state (+ time 1)) _218) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4228 (= ?x309 _217)))
 (let (($x4233 (and $x4228 $x325)))
 (=> $x4233 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4246 (= ?x309 _218)))
 (=> (and $x4246 $x308) (and (= (time-to-state (+ time 1)) _219) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4246 (= ?x309 _218)))
 (let (($x4251 (and $x4246 $x325)))
 (=> $x4251 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4264 (= ?x309 _219)))
 (=> (and $x4264 $x308) (and (= (time-to-state (+ time 1)) _220) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4264 (= ?x309 _219)))
 (let (($x4269 (and $x4264 $x325)))
 (=> $x4269 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4282 (= ?x309 _220)))
 (=> (and $x4282 $x308) (and (= (time-to-state (+ time 1)) _221) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4282 (= ?x309 _220)))
 (let (($x4287 (and $x4282 $x325)))
 (=> $x4287 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4300 (= ?x309 _221)))
 (=> (and $x4300 $x308) (and (= (time-to-state (+ time 1)) _222) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4300 (= ?x309 _221)))
 (let (($x4305 (and $x4300 $x325)))
 (=> $x4305 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4318 (= ?x309 _222)))
 (=> (and $x4318 $x308) (and (= (time-to-state (+ time 1)) _223) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4318 (= ?x309 _222)))
 (let (($x4323 (and $x4318 $x325)))
 (=> $x4323 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4336 (= ?x309 _223)))
 (=> (and $x4336 $x308) (and (= (time-to-state (+ time 1)) _224) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4336 (= ?x309 _223)))
 (let (($x4341 (and $x4336 $x325)))
 (=> $x4341 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4354 (= ?x309 _224)))
 (=> (and $x4354 $x308) (and (= (time-to-state (+ time 1)) _225) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4354 (= ?x309 _224)))
 (let (($x4359 (and $x4354 $x325)))
 (=> $x4359 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4372 (= ?x309 _225)))
 (=> (and $x4372 $x308) (and (= (time-to-state (+ time 1)) _226) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4372 (= ?x309 _225)))
 (let (($x4377 (and $x4372 $x325)))
 (=> $x4377 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4390 (= ?x309 _226)))
 (=> (and $x4390 $x308) (and (= (time-to-state (+ time 1)) _227) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4390 (= ?x309 _226)))
 (let (($x4395 (and $x4390 $x325)))
 (=> $x4395 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4408 (= ?x309 _227)))
 (=> (and $x4408 $x308) (and (= (time-to-state (+ time 1)) _228) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4408 (= ?x309 _227)))
 (let (($x4413 (and $x4408 $x325)))
 (=> $x4413 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4426 (= ?x309 _228)))
 (=> (and $x4426 $x308) (and (= (time-to-state (+ time 1)) _229) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4426 (= ?x309 _228)))
 (let (($x4431 (and $x4426 $x325)))
 (=> $x4431 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4444 (= ?x309 _229)))
 (=> (and $x4444 $x308) (and (= (time-to-state (+ time 1)) _230) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4444 (= ?x309 _229)))
 (let (($x4449 (and $x4444 $x325)))
 (=> $x4449 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4462 (= ?x309 _230)))
 (=> (and $x4462 $x308) (and (= (time-to-state (+ time 1)) _231) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4462 (= ?x309 _230)))
 (let (($x4467 (and $x4462 $x325)))
 (=> $x4467 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4480 (= ?x309 _231)))
 (=> (and $x4480 $x308) (and (= (time-to-state (+ time 1)) _232) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4480 (= ?x309 _231)))
 (let (($x4485 (and $x4480 $x325)))
 (=> $x4485 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4498 (= ?x309 _232)))
 (=> (and $x4498 $x308) (and (= (time-to-state (+ time 1)) _233) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4498 (= ?x309 _232)))
 (let (($x4503 (and $x4498 $x325)))
 (=> $x4503 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4516 (= ?x309 _233)))
 (=> (and $x4516 $x308) (and (= (time-to-state (+ time 1)) _234) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4516 (= ?x309 _233)))
 (let (($x4521 (and $x4516 $x325)))
 (=> $x4521 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4534 (= ?x309 _234)))
 (=> (and $x4534 $x308) (and (= (time-to-state (+ time 1)) _235) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4534 (= ?x309 _234)))
 (let (($x4539 (and $x4534 $x325)))
 (=> $x4539 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4552 (= ?x309 _235)))
 (=> (and $x4552 $x308) (and (= (time-to-state (+ time 1)) _236) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4552 (= ?x309 _235)))
 (let (($x4557 (and $x4552 $x325)))
 (=> $x4557 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4570 (= ?x309 _236)))
 (=> (and $x4570 $x308) (and (= (time-to-state (+ time 1)) _237) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4570 (= ?x309 _236)))
 (let (($x4575 (and $x4570 $x325)))
 (=> $x4575 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4588 (= ?x309 _237)))
 (=> (and $x4588 $x308) (and (= (time-to-state (+ time 1)) _238) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4588 (= ?x309 _237)))
 (let (($x4593 (and $x4588 $x325)))
 (=> $x4593 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4606 (= ?x309 _238)))
 (=> (and $x4606 $x308) (and (= (time-to-state (+ time 1)) _239) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4606 (= ?x309 _238)))
 (let (($x4611 (and $x4606 $x325)))
 (=> $x4611 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4624 (= ?x309 _239)))
 (=> (and $x4624 $x308) (and (= (time-to-state (+ time 1)) _240) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4624 (= ?x309 _239)))
 (let (($x4629 (and $x4624 $x325)))
 (=> $x4629 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4642 (= ?x309 _240)))
 (=> (and $x4642 $x308) (and (= (time-to-state (+ time 1)) _241) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4642 (= ?x309 _240)))
 (let (($x4647 (and $x4642 $x325)))
 (=> $x4647 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4660 (= ?x309 _241)))
 (=> (and $x4660 $x308) (and (= (time-to-state (+ time 1)) _242) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4660 (= ?x309 _241)))
 (let (($x4665 (and $x4660 $x325)))
 (=> $x4665 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4678 (= ?x309 _242)))
 (=> (and $x4678 $x308) (and (= (time-to-state (+ time 1)) _243) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4678 (= ?x309 _242)))
 (let (($x4683 (and $x4678 $x325)))
 (=> $x4683 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4696 (= ?x309 _243)))
 (=> (and $x4696 $x308) (and (= (time-to-state (+ time 1)) _244) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4696 (= ?x309 _243)))
 (let (($x4701 (and $x4696 $x325)))
 (=> $x4701 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4714 (= ?x309 _244)))
 (=> (and $x4714 $x308) (and (= (time-to-state (+ time 1)) _245) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4714 (= ?x309 _244)))
 (let (($x4719 (and $x4714 $x325)))
 (=> $x4719 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4732 (= ?x309 _245)))
 (=> (and $x4732 $x308) (and (= (time-to-state (+ time 1)) _246) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4732 (= ?x309 _245)))
 (let (($x4737 (and $x4732 $x325)))
 (=> $x4737 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4750 (= ?x309 _246)))
 (=> (and $x4750 $x308) (and (= (time-to-state (+ time 1)) _247) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4750 (= ?x309 _246)))
 (let (($x4755 (and $x4750 $x325)))
 (=> $x4755 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4768 (= ?x309 _247)))
 (=> (and $x4768 $x308) (and (= (time-to-state (+ time 1)) _248) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4768 (= ?x309 _247)))
 (let (($x4773 (and $x4768 $x325)))
 (=> $x4773 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4786 (= ?x309 _248)))
 (=> (and $x4786 $x308) (and (= (time-to-state (+ time 1)) _249) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4786 (= ?x309 _248)))
 (let (($x4791 (and $x4786 $x325)))
 (=> $x4791 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let (($x303 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x307 (input-arg0 time)))
 (let (($x308 (and (distinct ?x307 0) true)))
 (let ((?x309 (time-to-state time)))
 (let (($x4804 (= ?x309 _249)))
 (=> (and $x4804 $x308) (and (= (time-to-state (+ time 1)) _250) $x303))))))))
 )
(assert
 (forall ((time Int) )(let ((?x301 (+ time 1)))
 (let ((?x304 (time-to-state ?x301)))
 (let (($x324 (= ?x304 ERR)))
 (let ((?x307 (input-arg0 time)))
 (let (($x325 (= ?x307 1)))
 (let ((?x309 (time-to-state time)))
 (let (($x4804 (= ?x309 _249)))
 (let (($x4809 (and $x4804 $x325)))
 (=> $x4809 $x324))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x309 (time-to-state time)))
 (let (($x4812 (= ?x309 ERR)))
 (and $x4812 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250) true))
(check-sat)
