; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(declare-fun _371 () STATE)
(declare-fun _372 () STATE)
(declare-fun _373 () STATE)
(declare-fun _374 () STATE)
(declare-fun _375 () STATE)
(declare-fun _376 () STATE)
(declare-fun _377 () STATE)
(declare-fun _378 () STATE)
(declare-fun _379 () STATE)
(declare-fun _380 () STATE)
(declare-fun _381 () STATE)
(declare-fun _382 () STATE)
(declare-fun _383 () STATE)
(declare-fun _384 () STATE)
(declare-fun _385 () STATE)
(declare-fun _386 () STATE)
(declare-fun _387 () STATE)
(declare-fun _388 () STATE)
(declare-fun _389 () STATE)
(declare-fun _390 () STATE)
(declare-fun _391 () STATE)
(declare-fun _392 () STATE)
(declare-fun _393 () STATE)
(declare-fun _394 () STATE)
(declare-fun _395 () STATE)
(declare-fun _396 () STATE)
(declare-fun _397 () STATE)
(declare-fun _398 () STATE)
(declare-fun _399 () STATE)
(declare-fun _400 () STATE)
(declare-fun _401 () STATE)
(declare-fun _402 () STATE)
(declare-fun _403 () STATE)
(declare-fun _404 () STATE)
(declare-fun _405 () STATE)
(declare-fun _406 () STATE)
(declare-fun _407 () STATE)
(declare-fun _408 () STATE)
(declare-fun _409 () STATE)
(declare-fun _410 () STATE)
(assert
 (let ((?x419 (time-to-state 0)))
 (= ?x419 _0)))
(assert
 (let ((?x439 (input-arg0 0)))
 (= ?x439 0)))
(assert
 (let ((?x441 (var1_0 0)))
 (= ?x441 0)))
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x470 (= ?x469 _0)))
 (let (($x486 (and $x470 $x485)))
 (=> $x486 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x500 (= ?x469 _1)))
 (let (($x505 (and $x500 $x485)))
 (=> $x505 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x518 (= ?x469 _2)))
 (let (($x523 (and $x518 $x485)))
 (=> $x523 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x536 (= ?x469 _3)))
 (let (($x541 (and $x536 $x485)))
 (=> $x541 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x554 (= ?x469 _4)))
 (let (($x559 (and $x554 $x485)))
 (=> $x559 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x572 (= ?x469 _5)))
 (let (($x577 (and $x572 $x485)))
 (=> $x577 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x590 (= ?x469 _6)))
 (let (($x595 (and $x590 $x485)))
 (=> $x595 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x608 (= ?x469 _7)))
 (let (($x613 (and $x608 $x485)))
 (=> $x613 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x626 (= ?x469 _8)))
 (let (($x631 (and $x626 $x485)))
 (=> $x631 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x644 (= ?x469 _9)))
 (let (($x649 (and $x644 $x485)))
 (=> $x649 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x662 (= ?x469 _10)))
 (let (($x667 (and $x662 $x485)))
 (=> $x667 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x680 (= ?x469 _11)))
 (let (($x685 (and $x680 $x485)))
 (=> $x685 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x698 (= ?x469 _12)))
 (let (($x703 (and $x698 $x485)))
 (=> $x703 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x716 (= ?x469 _13)))
 (let (($x721 (and $x716 $x485)))
 (=> $x721 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x734 (= ?x469 _14)))
 (let (($x739 (and $x734 $x485)))
 (=> $x739 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x752 (= ?x469 _15)))
 (let (($x757 (and $x752 $x485)))
 (=> $x757 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x770 (= ?x469 _16)))
 (let (($x775 (and $x770 $x485)))
 (=> $x775 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x788 (= ?x469 _17)))
 (let (($x793 (and $x788 $x485)))
 (=> $x793 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x806 (= ?x469 _18)))
 (let (($x811 (and $x806 $x485)))
 (=> $x811 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x824 (= ?x469 _19)))
 (let (($x829 (and $x824 $x485)))
 (=> $x829 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x842 (= ?x469 _20)))
 (let (($x847 (and $x842 $x485)))
 (=> $x847 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x860 (= ?x469 _21)))
 (let (($x865 (and $x860 $x485)))
 (=> $x865 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x878 (= ?x469 _22)))
 (let (($x883 (and $x878 $x485)))
 (=> $x883 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x896 (= ?x469 _23)))
 (let (($x901 (and $x896 $x485)))
 (=> $x901 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x914 (= ?x469 _24)))
 (let (($x919 (and $x914 $x485)))
 (=> $x919 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x932 (= ?x469 _25)))
 (let (($x937 (and $x932 $x485)))
 (=> $x937 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x950 (= ?x469 _26)))
 (let (($x955 (and $x950 $x485)))
 (=> $x955 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x968 (= ?x469 _27)))
 (let (($x973 (and $x968 $x485)))
 (=> $x973 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x986 (= ?x469 _28)))
 (let (($x991 (and $x986 $x485)))
 (=> $x991 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1004 (= ?x469 _29)))
 (let (($x1009 (and $x1004 $x485)))
 (=> $x1009 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1022 (= ?x469 _30)))
 (let (($x1027 (and $x1022 $x485)))
 (=> $x1027 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1040 (= ?x469 _31)))
 (let (($x1045 (and $x1040 $x485)))
 (=> $x1045 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1058 (= ?x469 _32)))
 (let (($x1063 (and $x1058 $x485)))
 (=> $x1063 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1076 (= ?x469 _33)))
 (let (($x1081 (and $x1076 $x485)))
 (=> $x1081 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1094 (= ?x469 _34)))
 (let (($x1099 (and $x1094 $x485)))
 (=> $x1099 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1112 (= ?x469 _35)))
 (let (($x1117 (and $x1112 $x485)))
 (=> $x1117 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1130 (= ?x469 _36)))
 (let (($x1135 (and $x1130 $x485)))
 (=> $x1135 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1148 (= ?x469 _37)))
 (let (($x1153 (and $x1148 $x485)))
 (=> $x1153 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1166 (= ?x469 _38)))
 (let (($x1171 (and $x1166 $x485)))
 (=> $x1171 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1184 (= ?x469 _39)))
 (let (($x1189 (and $x1184 $x485)))
 (=> $x1189 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1202 (= ?x469 _40)))
 (let (($x1207 (and $x1202 $x485)))
 (=> $x1207 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1220 (= ?x469 _41)))
 (let (($x1225 (and $x1220 $x485)))
 (=> $x1225 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1238 (= ?x469 _42)))
 (let (($x1243 (and $x1238 $x485)))
 (=> $x1243 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1256 (= ?x469 _43)))
 (let (($x1261 (and $x1256 $x485)))
 (=> $x1261 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1274 (= ?x469 _44)))
 (let (($x1279 (and $x1274 $x485)))
 (=> $x1279 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1292 (= ?x469 _45)))
 (let (($x1297 (and $x1292 $x485)))
 (=> $x1297 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1310 (= ?x469 _46)))
 (let (($x1315 (and $x1310 $x485)))
 (=> $x1315 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1328 (= ?x469 _47)))
 (let (($x1333 (and $x1328 $x485)))
 (=> $x1333 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1346 (= ?x469 _48)))
 (let (($x1351 (and $x1346 $x485)))
 (=> $x1351 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1364 (= ?x469 _49)))
 (let (($x1369 (and $x1364 $x485)))
 (=> $x1369 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1382 (= ?x469 _50)))
 (let (($x1387 (and $x1382 $x485)))
 (=> $x1387 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1400 (= ?x469 _51)))
 (let (($x1405 (and $x1400 $x485)))
 (=> $x1405 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1418 (= ?x469 _52)))
 (let (($x1423 (and $x1418 $x485)))
 (=> $x1423 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1436 (= ?x469 _53)))
 (let (($x1441 (and $x1436 $x485)))
 (=> $x1441 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1454 (= ?x469 _54)))
 (let (($x1459 (and $x1454 $x485)))
 (=> $x1459 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1472 (= ?x469 _55)))
 (let (($x1477 (and $x1472 $x485)))
 (=> $x1477 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1490 (= ?x469 _56)))
 (let (($x1495 (and $x1490 $x485)))
 (=> $x1495 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1508 (= ?x469 _57)))
 (let (($x1513 (and $x1508 $x485)))
 (=> $x1513 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1526 (= ?x469 _58)))
 (let (($x1531 (and $x1526 $x485)))
 (=> $x1531 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1544 (= ?x469 _59)))
 (let (($x1549 (and $x1544 $x485)))
 (=> $x1549 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1562 (= ?x469 _60)))
 (let (($x1567 (and $x1562 $x485)))
 (=> $x1567 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1580 (= ?x469 _61)))
 (let (($x1585 (and $x1580 $x485)))
 (=> $x1585 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1598 (= ?x469 _62)))
 (let (($x1603 (and $x1598 $x485)))
 (=> $x1603 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1616 (= ?x469 _63)))
 (let (($x1621 (and $x1616 $x485)))
 (=> $x1621 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1634 (= ?x469 _64)))
 (let (($x1639 (and $x1634 $x485)))
 (=> $x1639 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1652 (= ?x469 _65)))
 (let (($x1657 (and $x1652 $x485)))
 (=> $x1657 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1670 (= ?x469 _66)))
 (let (($x1675 (and $x1670 $x485)))
 (=> $x1675 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1688 (= ?x469 _67)))
 (let (($x1693 (and $x1688 $x485)))
 (=> $x1693 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1706 (= ?x469 _68)))
 (let (($x1711 (and $x1706 $x485)))
 (=> $x1711 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1724 (= ?x469 _69)))
 (let (($x1729 (and $x1724 $x485)))
 (=> $x1729 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1742 (= ?x469 _70)))
 (let (($x1747 (and $x1742 $x485)))
 (=> $x1747 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1760 (= ?x469 _71)))
 (let (($x1765 (and $x1760 $x485)))
 (=> $x1765 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1778 (= ?x469 _72)))
 (let (($x1783 (and $x1778 $x485)))
 (=> $x1783 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1796 (= ?x469 _73)))
 (let (($x1801 (and $x1796 $x485)))
 (=> $x1801 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1814 (= ?x469 _74)))
 (let (($x1819 (and $x1814 $x485)))
 (=> $x1819 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1832 (= ?x469 _75)))
 (let (($x1837 (and $x1832 $x485)))
 (=> $x1837 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1850 (= ?x469 _76)))
 (let (($x1855 (and $x1850 $x485)))
 (=> $x1855 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1868 (= ?x469 _77)))
 (let (($x1873 (and $x1868 $x485)))
 (=> $x1873 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1886 (= ?x469 _78)))
 (let (($x1891 (and $x1886 $x485)))
 (=> $x1891 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1904 (= ?x469 _79)))
 (let (($x1909 (and $x1904 $x485)))
 (=> $x1909 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1922 (= ?x469 _80)))
 (let (($x1927 (and $x1922 $x485)))
 (=> $x1927 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1940 (= ?x469 _81)))
 (let (($x1945 (and $x1940 $x485)))
 (=> $x1945 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1958 (= ?x469 _82)))
 (let (($x1963 (and $x1958 $x485)))
 (=> $x1963 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1976 (= ?x469 _83)))
 (let (($x1981 (and $x1976 $x485)))
 (=> $x1981 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x1994 (= ?x469 _84)))
 (let (($x1999 (and $x1994 $x485)))
 (=> $x1999 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2012 (= ?x469 _85)))
 (let (($x2017 (and $x2012 $x485)))
 (=> $x2017 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2030 (= ?x469 _86)))
 (let (($x2035 (and $x2030 $x485)))
 (=> $x2035 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2048 (= ?x469 _87)))
 (let (($x2053 (and $x2048 $x485)))
 (=> $x2053 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2066 (= ?x469 _88)))
 (let (($x2071 (and $x2066 $x485)))
 (=> $x2071 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2084 (= ?x469 _89)))
 (let (($x2089 (and $x2084 $x485)))
 (=> $x2089 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2102 (= ?x469 _90)))
 (let (($x2107 (and $x2102 $x485)))
 (=> $x2107 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2120 (= ?x469 _91)))
 (let (($x2125 (and $x2120 $x485)))
 (=> $x2125 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2138 (= ?x469 _92)))
 (let (($x2143 (and $x2138 $x485)))
 (=> $x2143 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2156 (= ?x469 _93)))
 (let (($x2161 (and $x2156 $x485)))
 (=> $x2161 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2174 (= ?x469 _94)))
 (let (($x2179 (and $x2174 $x485)))
 (=> $x2179 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2192 (= ?x469 _95)))
 (let (($x2197 (and $x2192 $x485)))
 (=> $x2197 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2210 (= ?x469 _96)))
 (let (($x2215 (and $x2210 $x485)))
 (=> $x2215 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2228 (= ?x469 _97)))
 (let (($x2233 (and $x2228 $x485)))
 (=> $x2233 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2246 (= ?x469 _98)))
 (let (($x2251 (and $x2246 $x485)))
 (=> $x2251 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x463))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2264 (= ?x469 _99)))
 (let (($x2269 (and $x2264 $x485)))
 (=> $x2269 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2282 (= ?x469 _100)))
 (=> (and $x2282 $x468) (and (= (time-to-state (+ time 1)) _101) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2282 (= ?x469 _100)))
 (let (($x2287 (and $x2282 $x485)))
 (=> $x2287 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2300 (= ?x469 _101)))
 (=> (and $x2300 $x468) (and (= (time-to-state (+ time 1)) _102) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2300 (= ?x469 _101)))
 (let (($x2305 (and $x2300 $x485)))
 (=> $x2305 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2318 (= ?x469 _102)))
 (=> (and $x2318 $x468) (and (= (time-to-state (+ time 1)) _103) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2318 (= ?x469 _102)))
 (let (($x2323 (and $x2318 $x485)))
 (=> $x2323 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2336 (= ?x469 _103)))
 (=> (and $x2336 $x468) (and (= (time-to-state (+ time 1)) _104) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2336 (= ?x469 _103)))
 (let (($x2341 (and $x2336 $x485)))
 (=> $x2341 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2354 (= ?x469 _104)))
 (=> (and $x2354 $x468) (and (= (time-to-state (+ time 1)) _105) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2354 (= ?x469 _104)))
 (let (($x2359 (and $x2354 $x485)))
 (=> $x2359 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2372 (= ?x469 _105)))
 (=> (and $x2372 $x468) (and (= (time-to-state (+ time 1)) _106) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2372 (= ?x469 _105)))
 (let (($x2377 (and $x2372 $x485)))
 (=> $x2377 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2390 (= ?x469 _106)))
 (=> (and $x2390 $x468) (and (= (time-to-state (+ time 1)) _107) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2390 (= ?x469 _106)))
 (let (($x2395 (and $x2390 $x485)))
 (=> $x2395 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2408 (= ?x469 _107)))
 (=> (and $x2408 $x468) (and (= (time-to-state (+ time 1)) _108) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2408 (= ?x469 _107)))
 (let (($x2413 (and $x2408 $x485)))
 (=> $x2413 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2426 (= ?x469 _108)))
 (=> (and $x2426 $x468) (and (= (time-to-state (+ time 1)) _109) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2426 (= ?x469 _108)))
 (let (($x2431 (and $x2426 $x485)))
 (=> $x2431 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2444 (= ?x469 _109)))
 (=> (and $x2444 $x468) (and (= (time-to-state (+ time 1)) _110) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2444 (= ?x469 _109)))
 (let (($x2449 (and $x2444 $x485)))
 (=> $x2449 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2462 (= ?x469 _110)))
 (=> (and $x2462 $x468) (and (= (time-to-state (+ time 1)) _111) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2462 (= ?x469 _110)))
 (let (($x2467 (and $x2462 $x485)))
 (=> $x2467 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2480 (= ?x469 _111)))
 (=> (and $x2480 $x468) (and (= (time-to-state (+ time 1)) _112) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2480 (= ?x469 _111)))
 (let (($x2485 (and $x2480 $x485)))
 (=> $x2485 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2498 (= ?x469 _112)))
 (=> (and $x2498 $x468) (and (= (time-to-state (+ time 1)) _113) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2498 (= ?x469 _112)))
 (let (($x2503 (and $x2498 $x485)))
 (=> $x2503 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2516 (= ?x469 _113)))
 (=> (and $x2516 $x468) (and (= (time-to-state (+ time 1)) _114) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2516 (= ?x469 _113)))
 (let (($x2521 (and $x2516 $x485)))
 (=> $x2521 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2534 (= ?x469 _114)))
 (=> (and $x2534 $x468) (and (= (time-to-state (+ time 1)) _115) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2534 (= ?x469 _114)))
 (let (($x2539 (and $x2534 $x485)))
 (=> $x2539 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2552 (= ?x469 _115)))
 (=> (and $x2552 $x468) (and (= (time-to-state (+ time 1)) _116) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2552 (= ?x469 _115)))
 (let (($x2557 (and $x2552 $x485)))
 (=> $x2557 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2570 (= ?x469 _116)))
 (=> (and $x2570 $x468) (and (= (time-to-state (+ time 1)) _117) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2570 (= ?x469 _116)))
 (let (($x2575 (and $x2570 $x485)))
 (=> $x2575 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2588 (= ?x469 _117)))
 (=> (and $x2588 $x468) (and (= (time-to-state (+ time 1)) _118) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2588 (= ?x469 _117)))
 (let (($x2593 (and $x2588 $x485)))
 (=> $x2593 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2606 (= ?x469 _118)))
 (=> (and $x2606 $x468) (and (= (time-to-state (+ time 1)) _119) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2606 (= ?x469 _118)))
 (let (($x2611 (and $x2606 $x485)))
 (=> $x2611 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2624 (= ?x469 _119)))
 (=> (and $x2624 $x468) (and (= (time-to-state (+ time 1)) _120) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2624 (= ?x469 _119)))
 (let (($x2629 (and $x2624 $x485)))
 (=> $x2629 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2642 (= ?x469 _120)))
 (=> (and $x2642 $x468) (and (= (time-to-state (+ time 1)) _121) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2642 (= ?x469 _120)))
 (let (($x2647 (and $x2642 $x485)))
 (=> $x2647 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2660 (= ?x469 _121)))
 (=> (and $x2660 $x468) (and (= (time-to-state (+ time 1)) _122) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2660 (= ?x469 _121)))
 (let (($x2665 (and $x2660 $x485)))
 (=> $x2665 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2678 (= ?x469 _122)))
 (=> (and $x2678 $x468) (and (= (time-to-state (+ time 1)) _123) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2678 (= ?x469 _122)))
 (let (($x2683 (and $x2678 $x485)))
 (=> $x2683 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2696 (= ?x469 _123)))
 (=> (and $x2696 $x468) (and (= (time-to-state (+ time 1)) _124) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2696 (= ?x469 _123)))
 (let (($x2701 (and $x2696 $x485)))
 (=> $x2701 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2714 (= ?x469 _124)))
 (=> (and $x2714 $x468) (and (= (time-to-state (+ time 1)) _125) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2714 (= ?x469 _124)))
 (let (($x2719 (and $x2714 $x485)))
 (=> $x2719 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2732 (= ?x469 _125)))
 (=> (and $x2732 $x468) (and (= (time-to-state (+ time 1)) _126) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2732 (= ?x469 _125)))
 (let (($x2737 (and $x2732 $x485)))
 (=> $x2737 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2750 (= ?x469 _126)))
 (=> (and $x2750 $x468) (and (= (time-to-state (+ time 1)) _127) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2750 (= ?x469 _126)))
 (let (($x2755 (and $x2750 $x485)))
 (=> $x2755 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2768 (= ?x469 _127)))
 (=> (and $x2768 $x468) (and (= (time-to-state (+ time 1)) _128) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2768 (= ?x469 _127)))
 (let (($x2773 (and $x2768 $x485)))
 (=> $x2773 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2786 (= ?x469 _128)))
 (=> (and $x2786 $x468) (and (= (time-to-state (+ time 1)) _129) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2786 (= ?x469 _128)))
 (let (($x2791 (and $x2786 $x485)))
 (=> $x2791 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2804 (= ?x469 _129)))
 (=> (and $x2804 $x468) (and (= (time-to-state (+ time 1)) _130) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2804 (= ?x469 _129)))
 (let (($x2809 (and $x2804 $x485)))
 (=> $x2809 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2822 (= ?x469 _130)))
 (=> (and $x2822 $x468) (and (= (time-to-state (+ time 1)) _131) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2822 (= ?x469 _130)))
 (let (($x2827 (and $x2822 $x485)))
 (=> $x2827 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2840 (= ?x469 _131)))
 (=> (and $x2840 $x468) (and (= (time-to-state (+ time 1)) _132) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2840 (= ?x469 _131)))
 (let (($x2845 (and $x2840 $x485)))
 (=> $x2845 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2858 (= ?x469 _132)))
 (=> (and $x2858 $x468) (and (= (time-to-state (+ time 1)) _133) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2858 (= ?x469 _132)))
 (let (($x2863 (and $x2858 $x485)))
 (=> $x2863 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2876 (= ?x469 _133)))
 (=> (and $x2876 $x468) (and (= (time-to-state (+ time 1)) _134) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2876 (= ?x469 _133)))
 (let (($x2881 (and $x2876 $x485)))
 (=> $x2881 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2894 (= ?x469 _134)))
 (=> (and $x2894 $x468) (and (= (time-to-state (+ time 1)) _135) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2894 (= ?x469 _134)))
 (let (($x2899 (and $x2894 $x485)))
 (=> $x2899 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2912 (= ?x469 _135)))
 (=> (and $x2912 $x468) (and (= (time-to-state (+ time 1)) _136) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2912 (= ?x469 _135)))
 (let (($x2917 (and $x2912 $x485)))
 (=> $x2917 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2930 (= ?x469 _136)))
 (=> (and $x2930 $x468) (and (= (time-to-state (+ time 1)) _137) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2930 (= ?x469 _136)))
 (let (($x2935 (and $x2930 $x485)))
 (=> $x2935 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2948 (= ?x469 _137)))
 (=> (and $x2948 $x468) (and (= (time-to-state (+ time 1)) _138) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2948 (= ?x469 _137)))
 (let (($x2953 (and $x2948 $x485)))
 (=> $x2953 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2966 (= ?x469 _138)))
 (=> (and $x2966 $x468) (and (= (time-to-state (+ time 1)) _139) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2966 (= ?x469 _138)))
 (let (($x2971 (and $x2966 $x485)))
 (=> $x2971 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x2984 (= ?x469 _139)))
 (=> (and $x2984 $x468) (and (= (time-to-state (+ time 1)) _140) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x2984 (= ?x469 _139)))
 (let (($x2989 (and $x2984 $x485)))
 (=> $x2989 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3002 (= ?x469 _140)))
 (=> (and $x3002 $x468) (and (= (time-to-state (+ time 1)) _141) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3002 (= ?x469 _140)))
 (let (($x3007 (and $x3002 $x485)))
 (=> $x3007 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3020 (= ?x469 _141)))
 (=> (and $x3020 $x468) (and (= (time-to-state (+ time 1)) _142) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3020 (= ?x469 _141)))
 (let (($x3025 (and $x3020 $x485)))
 (=> $x3025 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3038 (= ?x469 _142)))
 (=> (and $x3038 $x468) (and (= (time-to-state (+ time 1)) _143) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3038 (= ?x469 _142)))
 (let (($x3043 (and $x3038 $x485)))
 (=> $x3043 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3056 (= ?x469 _143)))
 (=> (and $x3056 $x468) (and (= (time-to-state (+ time 1)) _144) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3056 (= ?x469 _143)))
 (let (($x3061 (and $x3056 $x485)))
 (=> $x3061 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3074 (= ?x469 _144)))
 (=> (and $x3074 $x468) (and (= (time-to-state (+ time 1)) _145) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3074 (= ?x469 _144)))
 (let (($x3079 (and $x3074 $x485)))
 (=> $x3079 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3092 (= ?x469 _145)))
 (=> (and $x3092 $x468) (and (= (time-to-state (+ time 1)) _146) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3092 (= ?x469 _145)))
 (let (($x3097 (and $x3092 $x485)))
 (=> $x3097 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3110 (= ?x469 _146)))
 (=> (and $x3110 $x468) (and (= (time-to-state (+ time 1)) _147) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3110 (= ?x469 _146)))
 (let (($x3115 (and $x3110 $x485)))
 (=> $x3115 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3128 (= ?x469 _147)))
 (=> (and $x3128 $x468) (and (= (time-to-state (+ time 1)) _148) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3128 (= ?x469 _147)))
 (let (($x3133 (and $x3128 $x485)))
 (=> $x3133 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3146 (= ?x469 _148)))
 (=> (and $x3146 $x468) (and (= (time-to-state (+ time 1)) _149) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3146 (= ?x469 _148)))
 (let (($x3151 (and $x3146 $x485)))
 (=> $x3151 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3164 (= ?x469 _149)))
 (=> (and $x3164 $x468) (and (= (time-to-state (+ time 1)) _150) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3164 (= ?x469 _149)))
 (let (($x3169 (and $x3164 $x485)))
 (=> $x3169 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3182 (= ?x469 _150)))
 (=> (and $x3182 $x468) (and (= (time-to-state (+ time 1)) _151) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3182 (= ?x469 _150)))
 (let (($x3187 (and $x3182 $x485)))
 (=> $x3187 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3200 (= ?x469 _151)))
 (=> (and $x3200 $x468) (and (= (time-to-state (+ time 1)) _152) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3200 (= ?x469 _151)))
 (let (($x3205 (and $x3200 $x485)))
 (=> $x3205 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3218 (= ?x469 _152)))
 (=> (and $x3218 $x468) (and (= (time-to-state (+ time 1)) _153) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3218 (= ?x469 _152)))
 (let (($x3223 (and $x3218 $x485)))
 (=> $x3223 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3236 (= ?x469 _153)))
 (=> (and $x3236 $x468) (and (= (time-to-state (+ time 1)) _154) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3236 (= ?x469 _153)))
 (let (($x3241 (and $x3236 $x485)))
 (=> $x3241 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3254 (= ?x469 _154)))
 (=> (and $x3254 $x468) (and (= (time-to-state (+ time 1)) _155) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3254 (= ?x469 _154)))
 (let (($x3259 (and $x3254 $x485)))
 (=> $x3259 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3272 (= ?x469 _155)))
 (=> (and $x3272 $x468) (and (= (time-to-state (+ time 1)) _156) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3272 (= ?x469 _155)))
 (let (($x3277 (and $x3272 $x485)))
 (=> $x3277 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3290 (= ?x469 _156)))
 (=> (and $x3290 $x468) (and (= (time-to-state (+ time 1)) _157) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3290 (= ?x469 _156)))
 (let (($x3295 (and $x3290 $x485)))
 (=> $x3295 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3308 (= ?x469 _157)))
 (=> (and $x3308 $x468) (and (= (time-to-state (+ time 1)) _158) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3308 (= ?x469 _157)))
 (let (($x3313 (and $x3308 $x485)))
 (=> $x3313 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3326 (= ?x469 _158)))
 (=> (and $x3326 $x468) (and (= (time-to-state (+ time 1)) _159) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3326 (= ?x469 _158)))
 (let (($x3331 (and $x3326 $x485)))
 (=> $x3331 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3344 (= ?x469 _159)))
 (=> (and $x3344 $x468) (and (= (time-to-state (+ time 1)) _160) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3344 (= ?x469 _159)))
 (let (($x3349 (and $x3344 $x485)))
 (=> $x3349 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3362 (= ?x469 _160)))
 (=> (and $x3362 $x468) (and (= (time-to-state (+ time 1)) _161) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3362 (= ?x469 _160)))
 (let (($x3367 (and $x3362 $x485)))
 (=> $x3367 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3380 (= ?x469 _161)))
 (=> (and $x3380 $x468) (and (= (time-to-state (+ time 1)) _162) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3380 (= ?x469 _161)))
 (let (($x3385 (and $x3380 $x485)))
 (=> $x3385 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3398 (= ?x469 _162)))
 (=> (and $x3398 $x468) (and (= (time-to-state (+ time 1)) _163) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3398 (= ?x469 _162)))
 (let (($x3403 (and $x3398 $x485)))
 (=> $x3403 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3416 (= ?x469 _163)))
 (=> (and $x3416 $x468) (and (= (time-to-state (+ time 1)) _164) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3416 (= ?x469 _163)))
 (let (($x3421 (and $x3416 $x485)))
 (=> $x3421 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3434 (= ?x469 _164)))
 (=> (and $x3434 $x468) (and (= (time-to-state (+ time 1)) _165) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3434 (= ?x469 _164)))
 (let (($x3439 (and $x3434 $x485)))
 (=> $x3439 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3452 (= ?x469 _165)))
 (=> (and $x3452 $x468) (and (= (time-to-state (+ time 1)) _166) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3452 (= ?x469 _165)))
 (let (($x3457 (and $x3452 $x485)))
 (=> $x3457 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3470 (= ?x469 _166)))
 (=> (and $x3470 $x468) (and (= (time-to-state (+ time 1)) _167) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3470 (= ?x469 _166)))
 (let (($x3475 (and $x3470 $x485)))
 (=> $x3475 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3488 (= ?x469 _167)))
 (=> (and $x3488 $x468) (and (= (time-to-state (+ time 1)) _168) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3488 (= ?x469 _167)))
 (let (($x3493 (and $x3488 $x485)))
 (=> $x3493 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3506 (= ?x469 _168)))
 (=> (and $x3506 $x468) (and (= (time-to-state (+ time 1)) _169) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3506 (= ?x469 _168)))
 (let (($x3511 (and $x3506 $x485)))
 (=> $x3511 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3524 (= ?x469 _169)))
 (=> (and $x3524 $x468) (and (= (time-to-state (+ time 1)) _170) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3524 (= ?x469 _169)))
 (let (($x3529 (and $x3524 $x485)))
 (=> $x3529 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3542 (= ?x469 _170)))
 (=> (and $x3542 $x468) (and (= (time-to-state (+ time 1)) _171) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3542 (= ?x469 _170)))
 (let (($x3547 (and $x3542 $x485)))
 (=> $x3547 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3560 (= ?x469 _171)))
 (=> (and $x3560 $x468) (and (= (time-to-state (+ time 1)) _172) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3560 (= ?x469 _171)))
 (let (($x3565 (and $x3560 $x485)))
 (=> $x3565 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3578 (= ?x469 _172)))
 (=> (and $x3578 $x468) (and (= (time-to-state (+ time 1)) _173) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3578 (= ?x469 _172)))
 (let (($x3583 (and $x3578 $x485)))
 (=> $x3583 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3596 (= ?x469 _173)))
 (=> (and $x3596 $x468) (and (= (time-to-state (+ time 1)) _174) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3596 (= ?x469 _173)))
 (let (($x3601 (and $x3596 $x485)))
 (=> $x3601 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3614 (= ?x469 _174)))
 (=> (and $x3614 $x468) (and (= (time-to-state (+ time 1)) _175) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3614 (= ?x469 _174)))
 (let (($x3619 (and $x3614 $x485)))
 (=> $x3619 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3632 (= ?x469 _175)))
 (=> (and $x3632 $x468) (and (= (time-to-state (+ time 1)) _176) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3632 (= ?x469 _175)))
 (let (($x3637 (and $x3632 $x485)))
 (=> $x3637 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3650 (= ?x469 _176)))
 (=> (and $x3650 $x468) (and (= (time-to-state (+ time 1)) _177) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3650 (= ?x469 _176)))
 (let (($x3655 (and $x3650 $x485)))
 (=> $x3655 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3668 (= ?x469 _177)))
 (=> (and $x3668 $x468) (and (= (time-to-state (+ time 1)) _178) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3668 (= ?x469 _177)))
 (let (($x3673 (and $x3668 $x485)))
 (=> $x3673 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3686 (= ?x469 _178)))
 (=> (and $x3686 $x468) (and (= (time-to-state (+ time 1)) _179) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3686 (= ?x469 _178)))
 (let (($x3691 (and $x3686 $x485)))
 (=> $x3691 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3704 (= ?x469 _179)))
 (=> (and $x3704 $x468) (and (= (time-to-state (+ time 1)) _180) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3704 (= ?x469 _179)))
 (let (($x3709 (and $x3704 $x485)))
 (=> $x3709 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3722 (= ?x469 _180)))
 (=> (and $x3722 $x468) (and (= (time-to-state (+ time 1)) _181) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3722 (= ?x469 _180)))
 (let (($x3727 (and $x3722 $x485)))
 (=> $x3727 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3740 (= ?x469 _181)))
 (=> (and $x3740 $x468) (and (= (time-to-state (+ time 1)) _182) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3740 (= ?x469 _181)))
 (let (($x3745 (and $x3740 $x485)))
 (=> $x3745 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3758 (= ?x469 _182)))
 (=> (and $x3758 $x468) (and (= (time-to-state (+ time 1)) _183) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3758 (= ?x469 _182)))
 (let (($x3763 (and $x3758 $x485)))
 (=> $x3763 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3776 (= ?x469 _183)))
 (=> (and $x3776 $x468) (and (= (time-to-state (+ time 1)) _184) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3776 (= ?x469 _183)))
 (let (($x3781 (and $x3776 $x485)))
 (=> $x3781 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3794 (= ?x469 _184)))
 (=> (and $x3794 $x468) (and (= (time-to-state (+ time 1)) _185) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3794 (= ?x469 _184)))
 (let (($x3799 (and $x3794 $x485)))
 (=> $x3799 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3812 (= ?x469 _185)))
 (=> (and $x3812 $x468) (and (= (time-to-state (+ time 1)) _186) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3812 (= ?x469 _185)))
 (let (($x3817 (and $x3812 $x485)))
 (=> $x3817 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3830 (= ?x469 _186)))
 (=> (and $x3830 $x468) (and (= (time-to-state (+ time 1)) _187) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3830 (= ?x469 _186)))
 (let (($x3835 (and $x3830 $x485)))
 (=> $x3835 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3848 (= ?x469 _187)))
 (=> (and $x3848 $x468) (and (= (time-to-state (+ time 1)) _188) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3848 (= ?x469 _187)))
 (let (($x3853 (and $x3848 $x485)))
 (=> $x3853 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3866 (= ?x469 _188)))
 (=> (and $x3866 $x468) (and (= (time-to-state (+ time 1)) _189) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3866 (= ?x469 _188)))
 (let (($x3871 (and $x3866 $x485)))
 (=> $x3871 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3884 (= ?x469 _189)))
 (=> (and $x3884 $x468) (and (= (time-to-state (+ time 1)) _190) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3884 (= ?x469 _189)))
 (let (($x3889 (and $x3884 $x485)))
 (=> $x3889 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3902 (= ?x469 _190)))
 (=> (and $x3902 $x468) (and (= (time-to-state (+ time 1)) _191) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3902 (= ?x469 _190)))
 (let (($x3907 (and $x3902 $x485)))
 (=> $x3907 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3920 (= ?x469 _191)))
 (=> (and $x3920 $x468) (and (= (time-to-state (+ time 1)) _192) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3920 (= ?x469 _191)))
 (let (($x3925 (and $x3920 $x485)))
 (=> $x3925 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3938 (= ?x469 _192)))
 (=> (and $x3938 $x468) (and (= (time-to-state (+ time 1)) _193) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3938 (= ?x469 _192)))
 (let (($x3943 (and $x3938 $x485)))
 (=> $x3943 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3956 (= ?x469 _193)))
 (=> (and $x3956 $x468) (and (= (time-to-state (+ time 1)) _194) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3956 (= ?x469 _193)))
 (let (($x3961 (and $x3956 $x485)))
 (=> $x3961 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3974 (= ?x469 _194)))
 (=> (and $x3974 $x468) (and (= (time-to-state (+ time 1)) _195) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3974 (= ?x469 _194)))
 (let (($x3979 (and $x3974 $x485)))
 (=> $x3979 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x3992 (= ?x469 _195)))
 (=> (and $x3992 $x468) (and (= (time-to-state (+ time 1)) _196) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x3992 (= ?x469 _195)))
 (let (($x3997 (and $x3992 $x485)))
 (=> $x3997 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4010 (= ?x469 _196)))
 (=> (and $x4010 $x468) (and (= (time-to-state (+ time 1)) _197) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4010 (= ?x469 _196)))
 (let (($x4015 (and $x4010 $x485)))
 (=> $x4015 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4028 (= ?x469 _197)))
 (=> (and $x4028 $x468) (and (= (time-to-state (+ time 1)) _198) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4028 (= ?x469 _197)))
 (let (($x4033 (and $x4028 $x485)))
 (=> $x4033 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4046 (= ?x469 _198)))
 (=> (and $x4046 $x468) (and (= (time-to-state (+ time 1)) _199) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4046 (= ?x469 _198)))
 (let (($x4051 (and $x4046 $x485)))
 (=> $x4051 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4064 (= ?x469 _199)))
 (=> (and $x4064 $x468) (and (= (time-to-state (+ time 1)) _200) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4064 (= ?x469 _199)))
 (let (($x4069 (and $x4064 $x485)))
 (=> $x4069 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4082 (= ?x469 _200)))
 (=> (and $x4082 $x468) (and (= (time-to-state (+ time 1)) _201) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4082 (= ?x469 _200)))
 (let (($x4087 (and $x4082 $x485)))
 (=> $x4087 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4100 (= ?x469 _201)))
 (=> (and $x4100 $x468) (and (= (time-to-state (+ time 1)) _202) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4100 (= ?x469 _201)))
 (let (($x4105 (and $x4100 $x485)))
 (=> $x4105 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4118 (= ?x469 _202)))
 (=> (and $x4118 $x468) (and (= (time-to-state (+ time 1)) _203) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4118 (= ?x469 _202)))
 (let (($x4123 (and $x4118 $x485)))
 (=> $x4123 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4136 (= ?x469 _203)))
 (=> (and $x4136 $x468) (and (= (time-to-state (+ time 1)) _204) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4136 (= ?x469 _203)))
 (let (($x4141 (and $x4136 $x485)))
 (=> $x4141 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4154 (= ?x469 _204)))
 (=> (and $x4154 $x468) (and (= (time-to-state (+ time 1)) _205) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4154 (= ?x469 _204)))
 (let (($x4159 (and $x4154 $x485)))
 (=> $x4159 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4172 (= ?x469 _205)))
 (=> (and $x4172 $x468) (and (= (time-to-state (+ time 1)) _206) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4172 (= ?x469 _205)))
 (let (($x4177 (and $x4172 $x485)))
 (=> $x4177 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4190 (= ?x469 _206)))
 (=> (and $x4190 $x468) (and (= (time-to-state (+ time 1)) _207) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4190 (= ?x469 _206)))
 (let (($x4195 (and $x4190 $x485)))
 (=> $x4195 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4208 (= ?x469 _207)))
 (=> (and $x4208 $x468) (and (= (time-to-state (+ time 1)) _208) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4208 (= ?x469 _207)))
 (let (($x4213 (and $x4208 $x485)))
 (=> $x4213 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4226 (= ?x469 _208)))
 (=> (and $x4226 $x468) (and (= (time-to-state (+ time 1)) _209) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4226 (= ?x469 _208)))
 (let (($x4231 (and $x4226 $x485)))
 (=> $x4231 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4244 (= ?x469 _209)))
 (=> (and $x4244 $x468) (and (= (time-to-state (+ time 1)) _210) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4244 (= ?x469 _209)))
 (let (($x4249 (and $x4244 $x485)))
 (=> $x4249 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4262 (= ?x469 _210)))
 (=> (and $x4262 $x468) (and (= (time-to-state (+ time 1)) _211) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4262 (= ?x469 _210)))
 (let (($x4267 (and $x4262 $x485)))
 (=> $x4267 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4280 (= ?x469 _211)))
 (=> (and $x4280 $x468) (and (= (time-to-state (+ time 1)) _212) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4280 (= ?x469 _211)))
 (let (($x4285 (and $x4280 $x485)))
 (=> $x4285 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4298 (= ?x469 _212)))
 (=> (and $x4298 $x468) (and (= (time-to-state (+ time 1)) _213) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4298 (= ?x469 _212)))
 (let (($x4303 (and $x4298 $x485)))
 (=> $x4303 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4316 (= ?x469 _213)))
 (=> (and $x4316 $x468) (and (= (time-to-state (+ time 1)) _214) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4316 (= ?x469 _213)))
 (let (($x4321 (and $x4316 $x485)))
 (=> $x4321 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4334 (= ?x469 _214)))
 (=> (and $x4334 $x468) (and (= (time-to-state (+ time 1)) _215) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4334 (= ?x469 _214)))
 (let (($x4339 (and $x4334 $x485)))
 (=> $x4339 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4352 (= ?x469 _215)))
 (=> (and $x4352 $x468) (and (= (time-to-state (+ time 1)) _216) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4352 (= ?x469 _215)))
 (let (($x4357 (and $x4352 $x485)))
 (=> $x4357 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4370 (= ?x469 _216)))
 (=> (and $x4370 $x468) (and (= (time-to-state (+ time 1)) _217) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4370 (= ?x469 _216)))
 (let (($x4375 (and $x4370 $x485)))
 (=> $x4375 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4388 (= ?x469 _217)))
 (=> (and $x4388 $x468) (and (= (time-to-state (+ time 1)) _218) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4388 (= ?x469 _217)))
 (let (($x4393 (and $x4388 $x485)))
 (=> $x4393 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4406 (= ?x469 _218)))
 (=> (and $x4406 $x468) (and (= (time-to-state (+ time 1)) _219) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4406 (= ?x469 _218)))
 (let (($x4411 (and $x4406 $x485)))
 (=> $x4411 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4424 (= ?x469 _219)))
 (=> (and $x4424 $x468) (and (= (time-to-state (+ time 1)) _220) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4424 (= ?x469 _219)))
 (let (($x4429 (and $x4424 $x485)))
 (=> $x4429 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4442 (= ?x469 _220)))
 (=> (and $x4442 $x468) (and (= (time-to-state (+ time 1)) _221) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4442 (= ?x469 _220)))
 (let (($x4447 (and $x4442 $x485)))
 (=> $x4447 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4460 (= ?x469 _221)))
 (=> (and $x4460 $x468) (and (= (time-to-state (+ time 1)) _222) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4460 (= ?x469 _221)))
 (let (($x4465 (and $x4460 $x485)))
 (=> $x4465 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4478 (= ?x469 _222)))
 (=> (and $x4478 $x468) (and (= (time-to-state (+ time 1)) _223) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4478 (= ?x469 _222)))
 (let (($x4483 (and $x4478 $x485)))
 (=> $x4483 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4496 (= ?x469 _223)))
 (=> (and $x4496 $x468) (and (= (time-to-state (+ time 1)) _224) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4496 (= ?x469 _223)))
 (let (($x4501 (and $x4496 $x485)))
 (=> $x4501 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4514 (= ?x469 _224)))
 (=> (and $x4514 $x468) (and (= (time-to-state (+ time 1)) _225) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4514 (= ?x469 _224)))
 (let (($x4519 (and $x4514 $x485)))
 (=> $x4519 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4532 (= ?x469 _225)))
 (=> (and $x4532 $x468) (and (= (time-to-state (+ time 1)) _226) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4532 (= ?x469 _225)))
 (let (($x4537 (and $x4532 $x485)))
 (=> $x4537 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4550 (= ?x469 _226)))
 (=> (and $x4550 $x468) (and (= (time-to-state (+ time 1)) _227) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4550 (= ?x469 _226)))
 (let (($x4555 (and $x4550 $x485)))
 (=> $x4555 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4568 (= ?x469 _227)))
 (=> (and $x4568 $x468) (and (= (time-to-state (+ time 1)) _228) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4568 (= ?x469 _227)))
 (let (($x4573 (and $x4568 $x485)))
 (=> $x4573 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4586 (= ?x469 _228)))
 (=> (and $x4586 $x468) (and (= (time-to-state (+ time 1)) _229) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4586 (= ?x469 _228)))
 (let (($x4591 (and $x4586 $x485)))
 (=> $x4591 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4604 (= ?x469 _229)))
 (=> (and $x4604 $x468) (and (= (time-to-state (+ time 1)) _230) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4604 (= ?x469 _229)))
 (let (($x4609 (and $x4604 $x485)))
 (=> $x4609 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4622 (= ?x469 _230)))
 (=> (and $x4622 $x468) (and (= (time-to-state (+ time 1)) _231) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4622 (= ?x469 _230)))
 (let (($x4627 (and $x4622 $x485)))
 (=> $x4627 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4640 (= ?x469 _231)))
 (=> (and $x4640 $x468) (and (= (time-to-state (+ time 1)) _232) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4640 (= ?x469 _231)))
 (let (($x4645 (and $x4640 $x485)))
 (=> $x4645 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4658 (= ?x469 _232)))
 (=> (and $x4658 $x468) (and (= (time-to-state (+ time 1)) _233) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4658 (= ?x469 _232)))
 (let (($x4663 (and $x4658 $x485)))
 (=> $x4663 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4676 (= ?x469 _233)))
 (=> (and $x4676 $x468) (and (= (time-to-state (+ time 1)) _234) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4676 (= ?x469 _233)))
 (let (($x4681 (and $x4676 $x485)))
 (=> $x4681 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4694 (= ?x469 _234)))
 (=> (and $x4694 $x468) (and (= (time-to-state (+ time 1)) _235) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4694 (= ?x469 _234)))
 (let (($x4699 (and $x4694 $x485)))
 (=> $x4699 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4712 (= ?x469 _235)))
 (=> (and $x4712 $x468) (and (= (time-to-state (+ time 1)) _236) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4712 (= ?x469 _235)))
 (let (($x4717 (and $x4712 $x485)))
 (=> $x4717 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4730 (= ?x469 _236)))
 (=> (and $x4730 $x468) (and (= (time-to-state (+ time 1)) _237) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4730 (= ?x469 _236)))
 (let (($x4735 (and $x4730 $x485)))
 (=> $x4735 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4748 (= ?x469 _237)))
 (=> (and $x4748 $x468) (and (= (time-to-state (+ time 1)) _238) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4748 (= ?x469 _237)))
 (let (($x4753 (and $x4748 $x485)))
 (=> $x4753 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4766 (= ?x469 _238)))
 (=> (and $x4766 $x468) (and (= (time-to-state (+ time 1)) _239) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4766 (= ?x469 _238)))
 (let (($x4771 (and $x4766 $x485)))
 (=> $x4771 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4784 (= ?x469 _239)))
 (=> (and $x4784 $x468) (and (= (time-to-state (+ time 1)) _240) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4784 (= ?x469 _239)))
 (let (($x4789 (and $x4784 $x485)))
 (=> $x4789 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4802 (= ?x469 _240)))
 (=> (and $x4802 $x468) (and (= (time-to-state (+ time 1)) _241) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4802 (= ?x469 _240)))
 (let (($x4807 (and $x4802 $x485)))
 (=> $x4807 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4820 (= ?x469 _241)))
 (=> (and $x4820 $x468) (and (= (time-to-state (+ time 1)) _242) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4820 (= ?x469 _241)))
 (let (($x4825 (and $x4820 $x485)))
 (=> $x4825 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4838 (= ?x469 _242)))
 (=> (and $x4838 $x468) (and (= (time-to-state (+ time 1)) _243) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4838 (= ?x469 _242)))
 (let (($x4843 (and $x4838 $x485)))
 (=> $x4843 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4856 (= ?x469 _243)))
 (=> (and $x4856 $x468) (and (= (time-to-state (+ time 1)) _244) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4856 (= ?x469 _243)))
 (let (($x4861 (and $x4856 $x485)))
 (=> $x4861 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4874 (= ?x469 _244)))
 (=> (and $x4874 $x468) (and (= (time-to-state (+ time 1)) _245) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4874 (= ?x469 _244)))
 (let (($x4879 (and $x4874 $x485)))
 (=> $x4879 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4892 (= ?x469 _245)))
 (=> (and $x4892 $x468) (and (= (time-to-state (+ time 1)) _246) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4892 (= ?x469 _245)))
 (let (($x4897 (and $x4892 $x485)))
 (=> $x4897 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4910 (= ?x469 _246)))
 (=> (and $x4910 $x468) (and (= (time-to-state (+ time 1)) _247) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4910 (= ?x469 _246)))
 (let (($x4915 (and $x4910 $x485)))
 (=> $x4915 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4928 (= ?x469 _247)))
 (=> (and $x4928 $x468) (and (= (time-to-state (+ time 1)) _248) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4928 (= ?x469 _247)))
 (let (($x4933 (and $x4928 $x485)))
 (=> $x4933 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4946 (= ?x469 _248)))
 (=> (and $x4946 $x468) (and (= (time-to-state (+ time 1)) _249) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4946 (= ?x469 _248)))
 (let (($x4951 (and $x4946 $x485)))
 (=> $x4951 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4964 (= ?x469 _249)))
 (=> (and $x4964 $x468) (and (= (time-to-state (+ time 1)) _250) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4964 (= ?x469 _249)))
 (let (($x4969 (and $x4964 $x485)))
 (=> $x4969 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x4982 (= ?x469 _250)))
 (=> (and $x4982 $x468) (and (= (time-to-state (+ time 1)) _251) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x4982 (= ?x469 _250)))
 (let (($x4987 (and $x4982 $x485)))
 (=> $x4987 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5000 (= ?x469 _251)))
 (=> (and $x5000 $x468) (and (= (time-to-state (+ time 1)) _252) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5000 (= ?x469 _251)))
 (let (($x5005 (and $x5000 $x485)))
 (=> $x5005 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5018 (= ?x469 _252)))
 (=> (and $x5018 $x468) (and (= (time-to-state (+ time 1)) _253) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5018 (= ?x469 _252)))
 (let (($x5023 (and $x5018 $x485)))
 (=> $x5023 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5036 (= ?x469 _253)))
 (=> (and $x5036 $x468) (and (= (time-to-state (+ time 1)) _254) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5036 (= ?x469 _253)))
 (let (($x5041 (and $x5036 $x485)))
 (=> $x5041 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5054 (= ?x469 _254)))
 (=> (and $x5054 $x468) (and (= (time-to-state (+ time 1)) _255) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5054 (= ?x469 _254)))
 (let (($x5059 (and $x5054 $x485)))
 (=> $x5059 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5072 (= ?x469 _255)))
 (=> (and $x5072 $x468) (and (= (time-to-state (+ time 1)) _256) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5072 (= ?x469 _255)))
 (let (($x5077 (and $x5072 $x485)))
 (=> $x5077 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5090 (= ?x469 _256)))
 (=> (and $x5090 $x468) (and (= (time-to-state (+ time 1)) _257) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5090 (= ?x469 _256)))
 (let (($x5095 (and $x5090 $x485)))
 (=> $x5095 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5108 (= ?x469 _257)))
 (=> (and $x5108 $x468) (and (= (time-to-state (+ time 1)) _258) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5108 (= ?x469 _257)))
 (let (($x5113 (and $x5108 $x485)))
 (=> $x5113 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5126 (= ?x469 _258)))
 (=> (and $x5126 $x468) (and (= (time-to-state (+ time 1)) _259) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5126 (= ?x469 _258)))
 (let (($x5131 (and $x5126 $x485)))
 (=> $x5131 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5144 (= ?x469 _259)))
 (=> (and $x5144 $x468) (and (= (time-to-state (+ time 1)) _260) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5144 (= ?x469 _259)))
 (let (($x5149 (and $x5144 $x485)))
 (=> $x5149 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5162 (= ?x469 _260)))
 (=> (and $x5162 $x468) (and (= (time-to-state (+ time 1)) _261) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5162 (= ?x469 _260)))
 (let (($x5167 (and $x5162 $x485)))
 (=> $x5167 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5180 (= ?x469 _261)))
 (=> (and $x5180 $x468) (and (= (time-to-state (+ time 1)) _262) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5180 (= ?x469 _261)))
 (let (($x5185 (and $x5180 $x485)))
 (=> $x5185 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5198 (= ?x469 _262)))
 (=> (and $x5198 $x468) (and (= (time-to-state (+ time 1)) _263) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5198 (= ?x469 _262)))
 (let (($x5203 (and $x5198 $x485)))
 (=> $x5203 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5216 (= ?x469 _263)))
 (=> (and $x5216 $x468) (and (= (time-to-state (+ time 1)) _264) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5216 (= ?x469 _263)))
 (let (($x5221 (and $x5216 $x485)))
 (=> $x5221 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5234 (= ?x469 _264)))
 (=> (and $x5234 $x468) (and (= (time-to-state (+ time 1)) _265) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5234 (= ?x469 _264)))
 (let (($x5239 (and $x5234 $x485)))
 (=> $x5239 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5252 (= ?x469 _265)))
 (=> (and $x5252 $x468) (and (= (time-to-state (+ time 1)) _266) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5252 (= ?x469 _265)))
 (let (($x5257 (and $x5252 $x485)))
 (=> $x5257 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5270 (= ?x469 _266)))
 (=> (and $x5270 $x468) (and (= (time-to-state (+ time 1)) _267) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5270 (= ?x469 _266)))
 (let (($x5275 (and $x5270 $x485)))
 (=> $x5275 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5288 (= ?x469 _267)))
 (=> (and $x5288 $x468) (and (= (time-to-state (+ time 1)) _268) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5288 (= ?x469 _267)))
 (let (($x5293 (and $x5288 $x485)))
 (=> $x5293 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5306 (= ?x469 _268)))
 (=> (and $x5306 $x468) (and (= (time-to-state (+ time 1)) _269) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5306 (= ?x469 _268)))
 (let (($x5311 (and $x5306 $x485)))
 (=> $x5311 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5324 (= ?x469 _269)))
 (=> (and $x5324 $x468) (and (= (time-to-state (+ time 1)) _270) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5324 (= ?x469 _269)))
 (let (($x5329 (and $x5324 $x485)))
 (=> $x5329 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5342 (= ?x469 _270)))
 (=> (and $x5342 $x468) (and (= (time-to-state (+ time 1)) _271) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5342 (= ?x469 _270)))
 (let (($x5347 (and $x5342 $x485)))
 (=> $x5347 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5360 (= ?x469 _271)))
 (=> (and $x5360 $x468) (and (= (time-to-state (+ time 1)) _272) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5360 (= ?x469 _271)))
 (let (($x5365 (and $x5360 $x485)))
 (=> $x5365 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5378 (= ?x469 _272)))
 (=> (and $x5378 $x468) (and (= (time-to-state (+ time 1)) _273) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5378 (= ?x469 _272)))
 (let (($x5383 (and $x5378 $x485)))
 (=> $x5383 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5396 (= ?x469 _273)))
 (=> (and $x5396 $x468) (and (= (time-to-state (+ time 1)) _274) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5396 (= ?x469 _273)))
 (let (($x5401 (and $x5396 $x485)))
 (=> $x5401 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5414 (= ?x469 _274)))
 (=> (and $x5414 $x468) (and (= (time-to-state (+ time 1)) _275) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5414 (= ?x469 _274)))
 (let (($x5419 (and $x5414 $x485)))
 (=> $x5419 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5432 (= ?x469 _275)))
 (=> (and $x5432 $x468) (and (= (time-to-state (+ time 1)) _276) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5432 (= ?x469 _275)))
 (let (($x5437 (and $x5432 $x485)))
 (=> $x5437 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5450 (= ?x469 _276)))
 (=> (and $x5450 $x468) (and (= (time-to-state (+ time 1)) _277) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5450 (= ?x469 _276)))
 (let (($x5455 (and $x5450 $x485)))
 (=> $x5455 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5468 (= ?x469 _277)))
 (=> (and $x5468 $x468) (and (= (time-to-state (+ time 1)) _278) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5468 (= ?x469 _277)))
 (let (($x5473 (and $x5468 $x485)))
 (=> $x5473 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5486 (= ?x469 _278)))
 (=> (and $x5486 $x468) (and (= (time-to-state (+ time 1)) _279) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5486 (= ?x469 _278)))
 (let (($x5491 (and $x5486 $x485)))
 (=> $x5491 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5504 (= ?x469 _279)))
 (=> (and $x5504 $x468) (and (= (time-to-state (+ time 1)) _280) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5504 (= ?x469 _279)))
 (let (($x5509 (and $x5504 $x485)))
 (=> $x5509 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5522 (= ?x469 _280)))
 (=> (and $x5522 $x468) (and (= (time-to-state (+ time 1)) _281) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5522 (= ?x469 _280)))
 (let (($x5527 (and $x5522 $x485)))
 (=> $x5527 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5540 (= ?x469 _281)))
 (=> (and $x5540 $x468) (and (= (time-to-state (+ time 1)) _282) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5540 (= ?x469 _281)))
 (let (($x5545 (and $x5540 $x485)))
 (=> $x5545 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5558 (= ?x469 _282)))
 (=> (and $x5558 $x468) (and (= (time-to-state (+ time 1)) _283) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5558 (= ?x469 _282)))
 (let (($x5563 (and $x5558 $x485)))
 (=> $x5563 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5576 (= ?x469 _283)))
 (=> (and $x5576 $x468) (and (= (time-to-state (+ time 1)) _284) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5576 (= ?x469 _283)))
 (let (($x5581 (and $x5576 $x485)))
 (=> $x5581 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5594 (= ?x469 _284)))
 (=> (and $x5594 $x468) (and (= (time-to-state (+ time 1)) _285) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5594 (= ?x469 _284)))
 (let (($x5599 (and $x5594 $x485)))
 (=> $x5599 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5612 (= ?x469 _285)))
 (=> (and $x5612 $x468) (and (= (time-to-state (+ time 1)) _286) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5612 (= ?x469 _285)))
 (let (($x5617 (and $x5612 $x485)))
 (=> $x5617 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5630 (= ?x469 _286)))
 (=> (and $x5630 $x468) (and (= (time-to-state (+ time 1)) _287) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5630 (= ?x469 _286)))
 (let (($x5635 (and $x5630 $x485)))
 (=> $x5635 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5648 (= ?x469 _287)))
 (=> (and $x5648 $x468) (and (= (time-to-state (+ time 1)) _288) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5648 (= ?x469 _287)))
 (let (($x5653 (and $x5648 $x485)))
 (=> $x5653 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5666 (= ?x469 _288)))
 (=> (and $x5666 $x468) (and (= (time-to-state (+ time 1)) _289) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5666 (= ?x469 _288)))
 (let (($x5671 (and $x5666 $x485)))
 (=> $x5671 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5684 (= ?x469 _289)))
 (=> (and $x5684 $x468) (and (= (time-to-state (+ time 1)) _290) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5684 (= ?x469 _289)))
 (let (($x5689 (and $x5684 $x485)))
 (=> $x5689 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5702 (= ?x469 _290)))
 (=> (and $x5702 $x468) (and (= (time-to-state (+ time 1)) _291) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5702 (= ?x469 _290)))
 (let (($x5707 (and $x5702 $x485)))
 (=> $x5707 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5720 (= ?x469 _291)))
 (=> (and $x5720 $x468) (and (= (time-to-state (+ time 1)) _292) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5720 (= ?x469 _291)))
 (let (($x5725 (and $x5720 $x485)))
 (=> $x5725 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5738 (= ?x469 _292)))
 (=> (and $x5738 $x468) (and (= (time-to-state (+ time 1)) _293) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5738 (= ?x469 _292)))
 (let (($x5743 (and $x5738 $x485)))
 (=> $x5743 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5756 (= ?x469 _293)))
 (=> (and $x5756 $x468) (and (= (time-to-state (+ time 1)) _294) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5756 (= ?x469 _293)))
 (let (($x5761 (and $x5756 $x485)))
 (=> $x5761 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5774 (= ?x469 _294)))
 (=> (and $x5774 $x468) (and (= (time-to-state (+ time 1)) _295) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5774 (= ?x469 _294)))
 (let (($x5779 (and $x5774 $x485)))
 (=> $x5779 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5792 (= ?x469 _295)))
 (=> (and $x5792 $x468) (and (= (time-to-state (+ time 1)) _296) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5792 (= ?x469 _295)))
 (let (($x5797 (and $x5792 $x485)))
 (=> $x5797 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5810 (= ?x469 _296)))
 (=> (and $x5810 $x468) (and (= (time-to-state (+ time 1)) _297) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5810 (= ?x469 _296)))
 (let (($x5815 (and $x5810 $x485)))
 (=> $x5815 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5828 (= ?x469 _297)))
 (=> (and $x5828 $x468) (and (= (time-to-state (+ time 1)) _298) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5828 (= ?x469 _297)))
 (let (($x5833 (and $x5828 $x485)))
 (=> $x5833 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5846 (= ?x469 _298)))
 (=> (and $x5846 $x468) (and (= (time-to-state (+ time 1)) _299) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5846 (= ?x469 _298)))
 (let (($x5851 (and $x5846 $x485)))
 (=> $x5851 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5864 (= ?x469 _299)))
 (=> (and $x5864 $x468) (and (= (time-to-state (+ time 1)) _300) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5864 (= ?x469 _299)))
 (let (($x5869 (and $x5864 $x485)))
 (=> $x5869 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5882 (= ?x469 _300)))
 (=> (and $x5882 $x468) (and (= (time-to-state (+ time 1)) _301) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5882 (= ?x469 _300)))
 (let (($x5887 (and $x5882 $x485)))
 (=> $x5887 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5900 (= ?x469 _301)))
 (=> (and $x5900 $x468) (and (= (time-to-state (+ time 1)) _302) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5900 (= ?x469 _301)))
 (let (($x5905 (and $x5900 $x485)))
 (=> $x5905 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5918 (= ?x469 _302)))
 (=> (and $x5918 $x468) (and (= (time-to-state (+ time 1)) _303) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5918 (= ?x469 _302)))
 (let (($x5923 (and $x5918 $x485)))
 (=> $x5923 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5936 (= ?x469 _303)))
 (=> (and $x5936 $x468) (and (= (time-to-state (+ time 1)) _304) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5936 (= ?x469 _303)))
 (let (($x5941 (and $x5936 $x485)))
 (=> $x5941 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5954 (= ?x469 _304)))
 (=> (and $x5954 $x468) (and (= (time-to-state (+ time 1)) _305) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5954 (= ?x469 _304)))
 (let (($x5959 (and $x5954 $x485)))
 (=> $x5959 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5972 (= ?x469 _305)))
 (=> (and $x5972 $x468) (and (= (time-to-state (+ time 1)) _306) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5972 (= ?x469 _305)))
 (let (($x5977 (and $x5972 $x485)))
 (=> $x5977 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x5990 (= ?x469 _306)))
 (=> (and $x5990 $x468) (and (= (time-to-state (+ time 1)) _307) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x5990 (= ?x469 _306)))
 (let (($x5995 (and $x5990 $x485)))
 (=> $x5995 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6008 (= ?x469 _307)))
 (=> (and $x6008 $x468) (and (= (time-to-state (+ time 1)) _308) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6008 (= ?x469 _307)))
 (let (($x6013 (and $x6008 $x485)))
 (=> $x6013 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6026 (= ?x469 _308)))
 (=> (and $x6026 $x468) (and (= (time-to-state (+ time 1)) _309) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6026 (= ?x469 _308)))
 (let (($x6031 (and $x6026 $x485)))
 (=> $x6031 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6044 (= ?x469 _309)))
 (=> (and $x6044 $x468) (and (= (time-to-state (+ time 1)) _310) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6044 (= ?x469 _309)))
 (let (($x6049 (and $x6044 $x485)))
 (=> $x6049 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6062 (= ?x469 _310)))
 (=> (and $x6062 $x468) (and (= (time-to-state (+ time 1)) _311) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6062 (= ?x469 _310)))
 (let (($x6067 (and $x6062 $x485)))
 (=> $x6067 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6080 (= ?x469 _311)))
 (=> (and $x6080 $x468) (and (= (time-to-state (+ time 1)) _312) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6080 (= ?x469 _311)))
 (let (($x6085 (and $x6080 $x485)))
 (=> $x6085 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6098 (= ?x469 _312)))
 (=> (and $x6098 $x468) (and (= (time-to-state (+ time 1)) _313) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6098 (= ?x469 _312)))
 (let (($x6103 (and $x6098 $x485)))
 (=> $x6103 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6116 (= ?x469 _313)))
 (=> (and $x6116 $x468) (and (= (time-to-state (+ time 1)) _314) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6116 (= ?x469 _313)))
 (let (($x6121 (and $x6116 $x485)))
 (=> $x6121 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6134 (= ?x469 _314)))
 (=> (and $x6134 $x468) (and (= (time-to-state (+ time 1)) _315) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6134 (= ?x469 _314)))
 (let (($x6139 (and $x6134 $x485)))
 (=> $x6139 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6152 (= ?x469 _315)))
 (=> (and $x6152 $x468) (and (= (time-to-state (+ time 1)) _316) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6152 (= ?x469 _315)))
 (let (($x6157 (and $x6152 $x485)))
 (=> $x6157 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6170 (= ?x469 _316)))
 (=> (and $x6170 $x468) (and (= (time-to-state (+ time 1)) _317) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6170 (= ?x469 _316)))
 (let (($x6175 (and $x6170 $x485)))
 (=> $x6175 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6188 (= ?x469 _317)))
 (=> (and $x6188 $x468) (and (= (time-to-state (+ time 1)) _318) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6188 (= ?x469 _317)))
 (let (($x6193 (and $x6188 $x485)))
 (=> $x6193 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6206 (= ?x469 _318)))
 (=> (and $x6206 $x468) (and (= (time-to-state (+ time 1)) _319) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6206 (= ?x469 _318)))
 (let (($x6211 (and $x6206 $x485)))
 (=> $x6211 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6224 (= ?x469 _319)))
 (=> (and $x6224 $x468) (and (= (time-to-state (+ time 1)) _320) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6224 (= ?x469 _319)))
 (let (($x6229 (and $x6224 $x485)))
 (=> $x6229 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6242 (= ?x469 _320)))
 (=> (and $x6242 $x468) (and (= (time-to-state (+ time 1)) _321) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6242 (= ?x469 _320)))
 (let (($x6247 (and $x6242 $x485)))
 (=> $x6247 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6260 (= ?x469 _321)))
 (=> (and $x6260 $x468) (and (= (time-to-state (+ time 1)) _322) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6260 (= ?x469 _321)))
 (let (($x6265 (and $x6260 $x485)))
 (=> $x6265 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6278 (= ?x469 _322)))
 (=> (and $x6278 $x468) (and (= (time-to-state (+ time 1)) _323) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6278 (= ?x469 _322)))
 (let (($x6283 (and $x6278 $x485)))
 (=> $x6283 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6296 (= ?x469 _323)))
 (=> (and $x6296 $x468) (and (= (time-to-state (+ time 1)) _324) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6296 (= ?x469 _323)))
 (let (($x6301 (and $x6296 $x485)))
 (=> $x6301 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6314 (= ?x469 _324)))
 (=> (and $x6314 $x468) (and (= (time-to-state (+ time 1)) _325) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6314 (= ?x469 _324)))
 (let (($x6319 (and $x6314 $x485)))
 (=> $x6319 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6332 (= ?x469 _325)))
 (=> (and $x6332 $x468) (and (= (time-to-state (+ time 1)) _326) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6332 (= ?x469 _325)))
 (let (($x6337 (and $x6332 $x485)))
 (=> $x6337 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6350 (= ?x469 _326)))
 (=> (and $x6350 $x468) (and (= (time-to-state (+ time 1)) _327) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6350 (= ?x469 _326)))
 (let (($x6355 (and $x6350 $x485)))
 (=> $x6355 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6368 (= ?x469 _327)))
 (=> (and $x6368 $x468) (and (= (time-to-state (+ time 1)) _328) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6368 (= ?x469 _327)))
 (let (($x6373 (and $x6368 $x485)))
 (=> $x6373 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6386 (= ?x469 _328)))
 (=> (and $x6386 $x468) (and (= (time-to-state (+ time 1)) _329) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6386 (= ?x469 _328)))
 (let (($x6391 (and $x6386 $x485)))
 (=> $x6391 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6404 (= ?x469 _329)))
 (=> (and $x6404 $x468) (and (= (time-to-state (+ time 1)) _330) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6404 (= ?x469 _329)))
 (let (($x6409 (and $x6404 $x485)))
 (=> $x6409 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6422 (= ?x469 _330)))
 (=> (and $x6422 $x468) (and (= (time-to-state (+ time 1)) _331) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6422 (= ?x469 _330)))
 (let (($x6427 (and $x6422 $x485)))
 (=> $x6427 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6440 (= ?x469 _331)))
 (=> (and $x6440 $x468) (and (= (time-to-state (+ time 1)) _332) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6440 (= ?x469 _331)))
 (let (($x6445 (and $x6440 $x485)))
 (=> $x6445 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6458 (= ?x469 _332)))
 (=> (and $x6458 $x468) (and (= (time-to-state (+ time 1)) _333) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6458 (= ?x469 _332)))
 (let (($x6463 (and $x6458 $x485)))
 (=> $x6463 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6476 (= ?x469 _333)))
 (=> (and $x6476 $x468) (and (= (time-to-state (+ time 1)) _334) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6476 (= ?x469 _333)))
 (let (($x6481 (and $x6476 $x485)))
 (=> $x6481 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6494 (= ?x469 _334)))
 (=> (and $x6494 $x468) (and (= (time-to-state (+ time 1)) _335) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6494 (= ?x469 _334)))
 (let (($x6499 (and $x6494 $x485)))
 (=> $x6499 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6512 (= ?x469 _335)))
 (=> (and $x6512 $x468) (and (= (time-to-state (+ time 1)) _336) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6512 (= ?x469 _335)))
 (let (($x6517 (and $x6512 $x485)))
 (=> $x6517 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6530 (= ?x469 _336)))
 (=> (and $x6530 $x468) (and (= (time-to-state (+ time 1)) _337) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6530 (= ?x469 _336)))
 (let (($x6535 (and $x6530 $x485)))
 (=> $x6535 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6548 (= ?x469 _337)))
 (=> (and $x6548 $x468) (and (= (time-to-state (+ time 1)) _338) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6548 (= ?x469 _337)))
 (let (($x6553 (and $x6548 $x485)))
 (=> $x6553 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6566 (= ?x469 _338)))
 (=> (and $x6566 $x468) (and (= (time-to-state (+ time 1)) _339) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6566 (= ?x469 _338)))
 (let (($x6571 (and $x6566 $x485)))
 (=> $x6571 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6584 (= ?x469 _339)))
 (=> (and $x6584 $x468) (and (= (time-to-state (+ time 1)) _340) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6584 (= ?x469 _339)))
 (let (($x6589 (and $x6584 $x485)))
 (=> $x6589 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6602 (= ?x469 _340)))
 (=> (and $x6602 $x468) (and (= (time-to-state (+ time 1)) _341) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6602 (= ?x469 _340)))
 (let (($x6607 (and $x6602 $x485)))
 (=> $x6607 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6620 (= ?x469 _341)))
 (=> (and $x6620 $x468) (and (= (time-to-state (+ time 1)) _342) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6620 (= ?x469 _341)))
 (let (($x6625 (and $x6620 $x485)))
 (=> $x6625 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6638 (= ?x469 _342)))
 (=> (and $x6638 $x468) (and (= (time-to-state (+ time 1)) _343) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6638 (= ?x469 _342)))
 (let (($x6643 (and $x6638 $x485)))
 (=> $x6643 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6656 (= ?x469 _343)))
 (=> (and $x6656 $x468) (and (= (time-to-state (+ time 1)) _344) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6656 (= ?x469 _343)))
 (let (($x6661 (and $x6656 $x485)))
 (=> $x6661 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6674 (= ?x469 _344)))
 (=> (and $x6674 $x468) (and (= (time-to-state (+ time 1)) _345) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6674 (= ?x469 _344)))
 (let (($x6679 (and $x6674 $x485)))
 (=> $x6679 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6692 (= ?x469 _345)))
 (=> (and $x6692 $x468) (and (= (time-to-state (+ time 1)) _346) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6692 (= ?x469 _345)))
 (let (($x6697 (and $x6692 $x485)))
 (=> $x6697 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6710 (= ?x469 _346)))
 (=> (and $x6710 $x468) (and (= (time-to-state (+ time 1)) _347) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6710 (= ?x469 _346)))
 (let (($x6715 (and $x6710 $x485)))
 (=> $x6715 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6728 (= ?x469 _347)))
 (=> (and $x6728 $x468) (and (= (time-to-state (+ time 1)) _348) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6728 (= ?x469 _347)))
 (let (($x6733 (and $x6728 $x485)))
 (=> $x6733 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6746 (= ?x469 _348)))
 (=> (and $x6746 $x468) (and (= (time-to-state (+ time 1)) _349) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6746 (= ?x469 _348)))
 (let (($x6751 (and $x6746 $x485)))
 (=> $x6751 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6764 (= ?x469 _349)))
 (=> (and $x6764 $x468) (and (= (time-to-state (+ time 1)) _350) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6764 (= ?x469 _349)))
 (let (($x6769 (and $x6764 $x485)))
 (=> $x6769 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6782 (= ?x469 _350)))
 (=> (and $x6782 $x468) (and (= (time-to-state (+ time 1)) _351) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6782 (= ?x469 _350)))
 (let (($x6787 (and $x6782 $x485)))
 (=> $x6787 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6800 (= ?x469 _351)))
 (=> (and $x6800 $x468) (and (= (time-to-state (+ time 1)) _352) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6800 (= ?x469 _351)))
 (let (($x6805 (and $x6800 $x485)))
 (=> $x6805 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6818 (= ?x469 _352)))
 (=> (and $x6818 $x468) (and (= (time-to-state (+ time 1)) _353) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6818 (= ?x469 _352)))
 (let (($x6823 (and $x6818 $x485)))
 (=> $x6823 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6836 (= ?x469 _353)))
 (=> (and $x6836 $x468) (and (= (time-to-state (+ time 1)) _354) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6836 (= ?x469 _353)))
 (let (($x6841 (and $x6836 $x485)))
 (=> $x6841 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6854 (= ?x469 _354)))
 (=> (and $x6854 $x468) (and (= (time-to-state (+ time 1)) _355) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6854 (= ?x469 _354)))
 (let (($x6859 (and $x6854 $x485)))
 (=> $x6859 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6872 (= ?x469 _355)))
 (=> (and $x6872 $x468) (and (= (time-to-state (+ time 1)) _356) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6872 (= ?x469 _355)))
 (let (($x6877 (and $x6872 $x485)))
 (=> $x6877 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6890 (= ?x469 _356)))
 (=> (and $x6890 $x468) (and (= (time-to-state (+ time 1)) _357) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6890 (= ?x469 _356)))
 (let (($x6895 (and $x6890 $x485)))
 (=> $x6895 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6908 (= ?x469 _357)))
 (=> (and $x6908 $x468) (and (= (time-to-state (+ time 1)) _358) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6908 (= ?x469 _357)))
 (let (($x6913 (and $x6908 $x485)))
 (=> $x6913 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6926 (= ?x469 _358)))
 (=> (and $x6926 $x468) (and (= (time-to-state (+ time 1)) _359) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6926 (= ?x469 _358)))
 (let (($x6931 (and $x6926 $x485)))
 (=> $x6931 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6944 (= ?x469 _359)))
 (=> (and $x6944 $x468) (and (= (time-to-state (+ time 1)) _360) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6944 (= ?x469 _359)))
 (let (($x6949 (and $x6944 $x485)))
 (=> $x6949 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6962 (= ?x469 _360)))
 (=> (and $x6962 $x468) (and (= (time-to-state (+ time 1)) _361) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6962 (= ?x469 _360)))
 (let (($x6967 (and $x6962 $x485)))
 (=> $x6967 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6980 (= ?x469 _361)))
 (=> (and $x6980 $x468) (and (= (time-to-state (+ time 1)) _362) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6980 (= ?x469 _361)))
 (let (($x6985 (and $x6980 $x485)))
 (=> $x6985 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x6998 (= ?x469 _362)))
 (=> (and $x6998 $x468) (and (= (time-to-state (+ time 1)) _363) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x6998 (= ?x469 _362)))
 (let (($x7003 (and $x6998 $x485)))
 (=> $x7003 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7016 (= ?x469 _363)))
 (=> (and $x7016 $x468) (and (= (time-to-state (+ time 1)) _364) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7016 (= ?x469 _363)))
 (let (($x7021 (and $x7016 $x485)))
 (=> $x7021 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7034 (= ?x469 _364)))
 (=> (and $x7034 $x468) (and (= (time-to-state (+ time 1)) _365) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7034 (= ?x469 _364)))
 (let (($x7039 (and $x7034 $x485)))
 (=> $x7039 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7052 (= ?x469 _365)))
 (=> (and $x7052 $x468) (and (= (time-to-state (+ time 1)) _366) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7052 (= ?x469 _365)))
 (let (($x7057 (and $x7052 $x485)))
 (=> $x7057 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7070 (= ?x469 _366)))
 (=> (and $x7070 $x468) (and (= (time-to-state (+ time 1)) _367) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7070 (= ?x469 _366)))
 (let (($x7075 (and $x7070 $x485)))
 (=> $x7075 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7088 (= ?x469 _367)))
 (=> (and $x7088 $x468) (and (= (time-to-state (+ time 1)) _368) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7088 (= ?x469 _367)))
 (let (($x7093 (and $x7088 $x485)))
 (=> $x7093 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7106 (= ?x469 _368)))
 (=> (and $x7106 $x468) (and (= (time-to-state (+ time 1)) _369) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7106 (= ?x469 _368)))
 (let (($x7111 (and $x7106 $x485)))
 (=> $x7111 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7124 (= ?x469 _369)))
 (=> (and $x7124 $x468) (and (= (time-to-state (+ time 1)) _370) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7124 (= ?x469 _369)))
 (let (($x7129 (and $x7124 $x485)))
 (=> $x7129 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7142 (= ?x469 _370)))
 (=> (and $x7142 $x468) (and (= (time-to-state (+ time 1)) _371) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7142 (= ?x469 _370)))
 (let (($x7147 (and $x7142 $x485)))
 (=> $x7147 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7160 (= ?x469 _371)))
 (=> (and $x7160 $x468) (and (= (time-to-state (+ time 1)) _372) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7160 (= ?x469 _371)))
 (let (($x7165 (and $x7160 $x485)))
 (=> $x7165 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7178 (= ?x469 _372)))
 (=> (and $x7178 $x468) (and (= (time-to-state (+ time 1)) _373) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7178 (= ?x469 _372)))
 (let (($x7183 (and $x7178 $x485)))
 (=> $x7183 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7196 (= ?x469 _373)))
 (=> (and $x7196 $x468) (and (= (time-to-state (+ time 1)) _374) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7196 (= ?x469 _373)))
 (let (($x7201 (and $x7196 $x485)))
 (=> $x7201 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7214 (= ?x469 _374)))
 (=> (and $x7214 $x468) (and (= (time-to-state (+ time 1)) _375) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7214 (= ?x469 _374)))
 (let (($x7219 (and $x7214 $x485)))
 (=> $x7219 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7232 (= ?x469 _375)))
 (=> (and $x7232 $x468) (and (= (time-to-state (+ time 1)) _376) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7232 (= ?x469 _375)))
 (let (($x7237 (and $x7232 $x485)))
 (=> $x7237 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7250 (= ?x469 _376)))
 (=> (and $x7250 $x468) (and (= (time-to-state (+ time 1)) _377) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7250 (= ?x469 _376)))
 (let (($x7255 (and $x7250 $x485)))
 (=> $x7255 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7268 (= ?x469 _377)))
 (=> (and $x7268 $x468) (and (= (time-to-state (+ time 1)) _378) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7268 (= ?x469 _377)))
 (let (($x7273 (and $x7268 $x485)))
 (=> $x7273 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7286 (= ?x469 _378)))
 (=> (and $x7286 $x468) (and (= (time-to-state (+ time 1)) _379) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7286 (= ?x469 _378)))
 (let (($x7291 (and $x7286 $x485)))
 (=> $x7291 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7304 (= ?x469 _379)))
 (=> (and $x7304 $x468) (and (= (time-to-state (+ time 1)) _380) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7304 (= ?x469 _379)))
 (let (($x7309 (and $x7304 $x485)))
 (=> $x7309 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7322 (= ?x469 _380)))
 (=> (and $x7322 $x468) (and (= (time-to-state (+ time 1)) _381) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7322 (= ?x469 _380)))
 (let (($x7327 (and $x7322 $x485)))
 (=> $x7327 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7340 (= ?x469 _381)))
 (=> (and $x7340 $x468) (and (= (time-to-state (+ time 1)) _382) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7340 (= ?x469 _381)))
 (let (($x7345 (and $x7340 $x485)))
 (=> $x7345 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7358 (= ?x469 _382)))
 (=> (and $x7358 $x468) (and (= (time-to-state (+ time 1)) _383) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7358 (= ?x469 _382)))
 (let (($x7363 (and $x7358 $x485)))
 (=> $x7363 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7376 (= ?x469 _383)))
 (=> (and $x7376 $x468) (and (= (time-to-state (+ time 1)) _384) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7376 (= ?x469 _383)))
 (let (($x7381 (and $x7376 $x485)))
 (=> $x7381 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7394 (= ?x469 _384)))
 (=> (and $x7394 $x468) (and (= (time-to-state (+ time 1)) _385) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7394 (= ?x469 _384)))
 (let (($x7399 (and $x7394 $x485)))
 (=> $x7399 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7412 (= ?x469 _385)))
 (=> (and $x7412 $x468) (and (= (time-to-state (+ time 1)) _386) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7412 (= ?x469 _385)))
 (let (($x7417 (and $x7412 $x485)))
 (=> $x7417 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7430 (= ?x469 _386)))
 (=> (and $x7430 $x468) (and (= (time-to-state (+ time 1)) _387) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7430 (= ?x469 _386)))
 (let (($x7435 (and $x7430 $x485)))
 (=> $x7435 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7448 (= ?x469 _387)))
 (=> (and $x7448 $x468) (and (= (time-to-state (+ time 1)) _388) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7448 (= ?x469 _387)))
 (let (($x7453 (and $x7448 $x485)))
 (=> $x7453 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7466 (= ?x469 _388)))
 (=> (and $x7466 $x468) (and (= (time-to-state (+ time 1)) _389) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7466 (= ?x469 _388)))
 (let (($x7471 (and $x7466 $x485)))
 (=> $x7471 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7484 (= ?x469 _389)))
 (=> (and $x7484 $x468) (and (= (time-to-state (+ time 1)) _390) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7484 (= ?x469 _389)))
 (let (($x7489 (and $x7484 $x485)))
 (=> $x7489 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7502 (= ?x469 _390)))
 (=> (and $x7502 $x468) (and (= (time-to-state (+ time 1)) _391) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7502 (= ?x469 _390)))
 (let (($x7507 (and $x7502 $x485)))
 (=> $x7507 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7520 (= ?x469 _391)))
 (=> (and $x7520 $x468) (and (= (time-to-state (+ time 1)) _392) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7520 (= ?x469 _391)))
 (let (($x7525 (and $x7520 $x485)))
 (=> $x7525 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7538 (= ?x469 _392)))
 (=> (and $x7538 $x468) (and (= (time-to-state (+ time 1)) _393) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7538 (= ?x469 _392)))
 (let (($x7543 (and $x7538 $x485)))
 (=> $x7543 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7556 (= ?x469 _393)))
 (=> (and $x7556 $x468) (and (= (time-to-state (+ time 1)) _394) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7556 (= ?x469 _393)))
 (let (($x7561 (and $x7556 $x485)))
 (=> $x7561 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7574 (= ?x469 _394)))
 (=> (and $x7574 $x468) (and (= (time-to-state (+ time 1)) _395) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7574 (= ?x469 _394)))
 (let (($x7579 (and $x7574 $x485)))
 (=> $x7579 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7592 (= ?x469 _395)))
 (=> (and $x7592 $x468) (and (= (time-to-state (+ time 1)) _396) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7592 (= ?x469 _395)))
 (let (($x7597 (and $x7592 $x485)))
 (=> $x7597 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7610 (= ?x469 _396)))
 (=> (and $x7610 $x468) (and (= (time-to-state (+ time 1)) _397) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7610 (= ?x469 _396)))
 (let (($x7615 (and $x7610 $x485)))
 (=> $x7615 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7628 (= ?x469 _397)))
 (=> (and $x7628 $x468) (and (= (time-to-state (+ time 1)) _398) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7628 (= ?x469 _397)))
 (let (($x7633 (and $x7628 $x485)))
 (=> $x7633 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7646 (= ?x469 _398)))
 (=> (and $x7646 $x468) (and (= (time-to-state (+ time 1)) _399) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7646 (= ?x469 _398)))
 (let (($x7651 (and $x7646 $x485)))
 (=> $x7651 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7664 (= ?x469 _399)))
 (=> (and $x7664 $x468) (and (= (time-to-state (+ time 1)) _400) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7664 (= ?x469 _399)))
 (let (($x7669 (and $x7664 $x485)))
 (=> $x7669 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7682 (= ?x469 _400)))
 (=> (and $x7682 $x468) (and (= (time-to-state (+ time 1)) _401) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7682 (= ?x469 _400)))
 (let (($x7687 (and $x7682 $x485)))
 (=> $x7687 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7700 (= ?x469 _401)))
 (=> (and $x7700 $x468) (and (= (time-to-state (+ time 1)) _402) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7700 (= ?x469 _401)))
 (let (($x7705 (and $x7700 $x485)))
 (=> $x7705 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7718 (= ?x469 _402)))
 (=> (and $x7718 $x468) (and (= (time-to-state (+ time 1)) _403) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7718 (= ?x469 _402)))
 (let (($x7723 (and $x7718 $x485)))
 (=> $x7723 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7736 (= ?x469 _403)))
 (=> (and $x7736 $x468) (and (= (time-to-state (+ time 1)) _404) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7736 (= ?x469 _403)))
 (let (($x7741 (and $x7736 $x485)))
 (=> $x7741 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7754 (= ?x469 _404)))
 (=> (and $x7754 $x468) (and (= (time-to-state (+ time 1)) _405) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7754 (= ?x469 _404)))
 (let (($x7759 (and $x7754 $x485)))
 (=> $x7759 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7772 (= ?x469 _405)))
 (=> (and $x7772 $x468) (and (= (time-to-state (+ time 1)) _406) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7772 (= ?x469 _405)))
 (let (($x7777 (and $x7772 $x485)))
 (=> $x7777 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7790 (= ?x469 _406)))
 (=> (and $x7790 $x468) (and (= (time-to-state (+ time 1)) _407) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7790 (= ?x469 _406)))
 (let (($x7795 (and $x7790 $x485)))
 (=> $x7795 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7808 (= ?x469 _407)))
 (=> (and $x7808 $x468) (and (= (time-to-state (+ time 1)) _408) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7808 (= ?x469 _407)))
 (let (($x7813 (and $x7808 $x485)))
 (=> $x7813 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7826 (= ?x469 _408)))
 (=> (and $x7826 $x468) (and (= (time-to-state (+ time 1)) _409) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7826 (= ?x469 _408)))
 (let (($x7831 (and $x7826 $x485)))
 (=> $x7831 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let (($x463 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x467 (input-arg0 time)))
 (let (($x468 (and (distinct ?x467 0) true)))
 (let ((?x469 (time-to-state time)))
 (let (($x7844 (= ?x469 _409)))
 (=> (and $x7844 $x468) (and (= (time-to-state (+ time 1)) _410) $x463))))))))
 )
(assert
 (forall ((time Int) )(let ((?x461 (+ time 1)))
 (let ((?x464 (time-to-state ?x461)))
 (let (($x484 (= ?x464 ERR)))
 (let ((?x467 (input-arg0 time)))
 (let (($x485 (= ?x467 1)))
 (let ((?x469 (time-to-state time)))
 (let (($x7844 (= ?x469 _409)))
 (let (($x7849 (and $x7844 $x485)))
 (=> $x7849 $x484))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x469 (time-to-state time)))
 (let (($x7852 (= ?x469 ERR)))
 (and $x7852 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370 _371 _372 _373 _374 _375 _376 _377 _378 _379 _380 _381 _382 _383 _384 _385 _386 _387 _388 _389 _390 _391 _392 _393 _394 _395 _396 _397 _398 _399 _400 _401 _402 _403 _404 _405 _406 _407 _408 _409 _410) true))
(check-sat)
