; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(assert
 (let ((?x219 (time-to-state 0)))
 (= ?x219 _0)))
(assert
 (let ((?x239 (input-arg0 0)))
 (= ?x239 0)))
(assert
 (let ((?x241 (var1_0 0)))
 (= ?x241 0)))
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x270 (= ?x269 _0)))
 (let (($x286 (and $x270 $x285)))
 (=> $x286 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x300 (= ?x269 _1)))
 (let (($x305 (and $x300 $x285)))
 (=> $x305 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x318 (= ?x269 _2)))
 (let (($x323 (and $x318 $x285)))
 (=> $x323 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x336 (= ?x269 _3)))
 (let (($x341 (and $x336 $x285)))
 (=> $x341 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x354 (= ?x269 _4)))
 (let (($x359 (and $x354 $x285)))
 (=> $x359 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x372 (= ?x269 _5)))
 (let (($x377 (and $x372 $x285)))
 (=> $x377 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x390 (= ?x269 _6)))
 (let (($x395 (and $x390 $x285)))
 (=> $x395 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x408 (= ?x269 _7)))
 (let (($x413 (and $x408 $x285)))
 (=> $x413 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x426 (= ?x269 _8)))
 (let (($x431 (and $x426 $x285)))
 (=> $x431 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x444 (= ?x269 _9)))
 (let (($x449 (and $x444 $x285)))
 (=> $x449 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x462 (= ?x269 _10)))
 (let (($x467 (and $x462 $x285)))
 (=> $x467 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x480 (= ?x269 _11)))
 (let (($x485 (and $x480 $x285)))
 (=> $x485 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x498 (= ?x269 _12)))
 (let (($x503 (and $x498 $x285)))
 (=> $x503 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x516 (= ?x269 _13)))
 (let (($x521 (and $x516 $x285)))
 (=> $x521 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x534 (= ?x269 _14)))
 (let (($x539 (and $x534 $x285)))
 (=> $x539 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x552 (= ?x269 _15)))
 (let (($x557 (and $x552 $x285)))
 (=> $x557 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x570 (= ?x269 _16)))
 (let (($x575 (and $x570 $x285)))
 (=> $x575 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x588 (= ?x269 _17)))
 (let (($x593 (and $x588 $x285)))
 (=> $x593 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x606 (= ?x269 _18)))
 (let (($x611 (and $x606 $x285)))
 (=> $x611 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x624 (= ?x269 _19)))
 (let (($x629 (and $x624 $x285)))
 (=> $x629 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x642 (= ?x269 _20)))
 (let (($x647 (and $x642 $x285)))
 (=> $x647 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x660 (= ?x269 _21)))
 (let (($x665 (and $x660 $x285)))
 (=> $x665 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x678 (= ?x269 _22)))
 (let (($x683 (and $x678 $x285)))
 (=> $x683 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x696 (= ?x269 _23)))
 (let (($x701 (and $x696 $x285)))
 (=> $x701 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x714 (= ?x269 _24)))
 (let (($x719 (and $x714 $x285)))
 (=> $x719 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x732 (= ?x269 _25)))
 (let (($x737 (and $x732 $x285)))
 (=> $x737 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x750 (= ?x269 _26)))
 (let (($x755 (and $x750 $x285)))
 (=> $x755 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x768 (= ?x269 _27)))
 (let (($x773 (and $x768 $x285)))
 (=> $x773 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x786 (= ?x269 _28)))
 (let (($x791 (and $x786 $x285)))
 (=> $x791 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x804 (= ?x269 _29)))
 (let (($x809 (and $x804 $x285)))
 (=> $x809 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x822 (= ?x269 _30)))
 (let (($x827 (and $x822 $x285)))
 (=> $x827 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x840 (= ?x269 _31)))
 (let (($x845 (and $x840 $x285)))
 (=> $x845 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x858 (= ?x269 _32)))
 (let (($x863 (and $x858 $x285)))
 (=> $x863 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x876 (= ?x269 _33)))
 (let (($x881 (and $x876 $x285)))
 (=> $x881 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x894 (= ?x269 _34)))
 (let (($x899 (and $x894 $x285)))
 (=> $x899 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x912 (= ?x269 _35)))
 (let (($x917 (and $x912 $x285)))
 (=> $x917 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x930 (= ?x269 _36)))
 (let (($x935 (and $x930 $x285)))
 (=> $x935 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x948 (= ?x269 _37)))
 (let (($x953 (and $x948 $x285)))
 (=> $x953 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x966 (= ?x269 _38)))
 (let (($x971 (and $x966 $x285)))
 (=> $x971 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x984 (= ?x269 _39)))
 (let (($x989 (and $x984 $x285)))
 (=> $x989 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1002 (= ?x269 _40)))
 (let (($x1007 (and $x1002 $x285)))
 (=> $x1007 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1020 (= ?x269 _41)))
 (let (($x1025 (and $x1020 $x285)))
 (=> $x1025 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1038 (= ?x269 _42)))
 (let (($x1043 (and $x1038 $x285)))
 (=> $x1043 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1056 (= ?x269 _43)))
 (let (($x1061 (and $x1056 $x285)))
 (=> $x1061 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1074 (= ?x269 _44)))
 (let (($x1079 (and $x1074 $x285)))
 (=> $x1079 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1092 (= ?x269 _45)))
 (let (($x1097 (and $x1092 $x285)))
 (=> $x1097 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1110 (= ?x269 _46)))
 (let (($x1115 (and $x1110 $x285)))
 (=> $x1115 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1128 (= ?x269 _47)))
 (let (($x1133 (and $x1128 $x285)))
 (=> $x1133 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1146 (= ?x269 _48)))
 (let (($x1151 (and $x1146 $x285)))
 (=> $x1151 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1164 (= ?x269 _49)))
 (let (($x1169 (and $x1164 $x285)))
 (=> $x1169 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1182 (= ?x269 _50)))
 (let (($x1187 (and $x1182 $x285)))
 (=> $x1187 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1200 (= ?x269 _51)))
 (let (($x1205 (and $x1200 $x285)))
 (=> $x1205 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1218 (= ?x269 _52)))
 (let (($x1223 (and $x1218 $x285)))
 (=> $x1223 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1236 (= ?x269 _53)))
 (let (($x1241 (and $x1236 $x285)))
 (=> $x1241 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1254 (= ?x269 _54)))
 (let (($x1259 (and $x1254 $x285)))
 (=> $x1259 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1272 (= ?x269 _55)))
 (let (($x1277 (and $x1272 $x285)))
 (=> $x1277 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1290 (= ?x269 _56)))
 (let (($x1295 (and $x1290 $x285)))
 (=> $x1295 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1308 (= ?x269 _57)))
 (let (($x1313 (and $x1308 $x285)))
 (=> $x1313 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1326 (= ?x269 _58)))
 (let (($x1331 (and $x1326 $x285)))
 (=> $x1331 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1344 (= ?x269 _59)))
 (let (($x1349 (and $x1344 $x285)))
 (=> $x1349 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1362 (= ?x269 _60)))
 (let (($x1367 (and $x1362 $x285)))
 (=> $x1367 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1380 (= ?x269 _61)))
 (let (($x1385 (and $x1380 $x285)))
 (=> $x1385 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1398 (= ?x269 _62)))
 (let (($x1403 (and $x1398 $x285)))
 (=> $x1403 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1416 (= ?x269 _63)))
 (let (($x1421 (and $x1416 $x285)))
 (=> $x1421 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1434 (= ?x269 _64)))
 (let (($x1439 (and $x1434 $x285)))
 (=> $x1439 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1452 (= ?x269 _65)))
 (let (($x1457 (and $x1452 $x285)))
 (=> $x1457 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1470 (= ?x269 _66)))
 (let (($x1475 (and $x1470 $x285)))
 (=> $x1475 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1488 (= ?x269 _67)))
 (let (($x1493 (and $x1488 $x285)))
 (=> $x1493 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1506 (= ?x269 _68)))
 (let (($x1511 (and $x1506 $x285)))
 (=> $x1511 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1524 (= ?x269 _69)))
 (let (($x1529 (and $x1524 $x285)))
 (=> $x1529 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1542 (= ?x269 _70)))
 (let (($x1547 (and $x1542 $x285)))
 (=> $x1547 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1560 (= ?x269 _71)))
 (let (($x1565 (and $x1560 $x285)))
 (=> $x1565 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1578 (= ?x269 _72)))
 (let (($x1583 (and $x1578 $x285)))
 (=> $x1583 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1596 (= ?x269 _73)))
 (let (($x1601 (and $x1596 $x285)))
 (=> $x1601 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1614 (= ?x269 _74)))
 (let (($x1619 (and $x1614 $x285)))
 (=> $x1619 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1632 (= ?x269 _75)))
 (let (($x1637 (and $x1632 $x285)))
 (=> $x1637 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1650 (= ?x269 _76)))
 (let (($x1655 (and $x1650 $x285)))
 (=> $x1655 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1668 (= ?x269 _77)))
 (let (($x1673 (and $x1668 $x285)))
 (=> $x1673 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1686 (= ?x269 _78)))
 (let (($x1691 (and $x1686 $x285)))
 (=> $x1691 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1704 (= ?x269 _79)))
 (let (($x1709 (and $x1704 $x285)))
 (=> $x1709 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1722 (= ?x269 _80)))
 (let (($x1727 (and $x1722 $x285)))
 (=> $x1727 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1740 (= ?x269 _81)))
 (let (($x1745 (and $x1740 $x285)))
 (=> $x1745 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1758 (= ?x269 _82)))
 (let (($x1763 (and $x1758 $x285)))
 (=> $x1763 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1776 (= ?x269 _83)))
 (let (($x1781 (and $x1776 $x285)))
 (=> $x1781 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1794 (= ?x269 _84)))
 (let (($x1799 (and $x1794 $x285)))
 (=> $x1799 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1812 (= ?x269 _85)))
 (let (($x1817 (and $x1812 $x285)))
 (=> $x1817 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1830 (= ?x269 _86)))
 (let (($x1835 (and $x1830 $x285)))
 (=> $x1835 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1848 (= ?x269 _87)))
 (let (($x1853 (and $x1848 $x285)))
 (=> $x1853 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1866 (= ?x269 _88)))
 (let (($x1871 (and $x1866 $x285)))
 (=> $x1871 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1884 (= ?x269 _89)))
 (let (($x1889 (and $x1884 $x285)))
 (=> $x1889 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1902 (= ?x269 _90)))
 (let (($x1907 (and $x1902 $x285)))
 (=> $x1907 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1920 (= ?x269 _91)))
 (let (($x1925 (and $x1920 $x285)))
 (=> $x1925 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1938 (= ?x269 _92)))
 (let (($x1943 (and $x1938 $x285)))
 (=> $x1943 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1956 (= ?x269 _93)))
 (let (($x1961 (and $x1956 $x285)))
 (=> $x1961 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1974 (= ?x269 _94)))
 (let (($x1979 (and $x1974 $x285)))
 (=> $x1979 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x1992 (= ?x269 _95)))
 (let (($x1997 (and $x1992 $x285)))
 (=> $x1997 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2010 (= ?x269 _96)))
 (let (($x2015 (and $x2010 $x285)))
 (=> $x2015 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2028 (= ?x269 _97)))
 (let (($x2033 (and $x2028 $x285)))
 (=> $x2033 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2046 (= ?x269 _98)))
 (let (($x2051 (and $x2046 $x285)))
 (=> $x2051 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x263))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2064 (= ?x269 _99)))
 (let (($x2069 (and $x2064 $x285)))
 (=> $x2069 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2082 (= ?x269 _100)))
 (=> (and $x2082 $x268) (and (= (time-to-state (+ time 1)) _101) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2082 (= ?x269 _100)))
 (let (($x2087 (and $x2082 $x285)))
 (=> $x2087 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2100 (= ?x269 _101)))
 (=> (and $x2100 $x268) (and (= (time-to-state (+ time 1)) _102) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2100 (= ?x269 _101)))
 (let (($x2105 (and $x2100 $x285)))
 (=> $x2105 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2118 (= ?x269 _102)))
 (=> (and $x2118 $x268) (and (= (time-to-state (+ time 1)) _103) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2118 (= ?x269 _102)))
 (let (($x2123 (and $x2118 $x285)))
 (=> $x2123 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2136 (= ?x269 _103)))
 (=> (and $x2136 $x268) (and (= (time-to-state (+ time 1)) _104) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2136 (= ?x269 _103)))
 (let (($x2141 (and $x2136 $x285)))
 (=> $x2141 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2154 (= ?x269 _104)))
 (=> (and $x2154 $x268) (and (= (time-to-state (+ time 1)) _105) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2154 (= ?x269 _104)))
 (let (($x2159 (and $x2154 $x285)))
 (=> $x2159 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2172 (= ?x269 _105)))
 (=> (and $x2172 $x268) (and (= (time-to-state (+ time 1)) _106) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2172 (= ?x269 _105)))
 (let (($x2177 (and $x2172 $x285)))
 (=> $x2177 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2190 (= ?x269 _106)))
 (=> (and $x2190 $x268) (and (= (time-to-state (+ time 1)) _107) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2190 (= ?x269 _106)))
 (let (($x2195 (and $x2190 $x285)))
 (=> $x2195 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2208 (= ?x269 _107)))
 (=> (and $x2208 $x268) (and (= (time-to-state (+ time 1)) _108) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2208 (= ?x269 _107)))
 (let (($x2213 (and $x2208 $x285)))
 (=> $x2213 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2226 (= ?x269 _108)))
 (=> (and $x2226 $x268) (and (= (time-to-state (+ time 1)) _109) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2226 (= ?x269 _108)))
 (let (($x2231 (and $x2226 $x285)))
 (=> $x2231 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2244 (= ?x269 _109)))
 (=> (and $x2244 $x268) (and (= (time-to-state (+ time 1)) _110) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2244 (= ?x269 _109)))
 (let (($x2249 (and $x2244 $x285)))
 (=> $x2249 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2262 (= ?x269 _110)))
 (=> (and $x2262 $x268) (and (= (time-to-state (+ time 1)) _111) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2262 (= ?x269 _110)))
 (let (($x2267 (and $x2262 $x285)))
 (=> $x2267 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2280 (= ?x269 _111)))
 (=> (and $x2280 $x268) (and (= (time-to-state (+ time 1)) _112) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2280 (= ?x269 _111)))
 (let (($x2285 (and $x2280 $x285)))
 (=> $x2285 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2298 (= ?x269 _112)))
 (=> (and $x2298 $x268) (and (= (time-to-state (+ time 1)) _113) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2298 (= ?x269 _112)))
 (let (($x2303 (and $x2298 $x285)))
 (=> $x2303 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2316 (= ?x269 _113)))
 (=> (and $x2316 $x268) (and (= (time-to-state (+ time 1)) _114) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2316 (= ?x269 _113)))
 (let (($x2321 (and $x2316 $x285)))
 (=> $x2321 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2334 (= ?x269 _114)))
 (=> (and $x2334 $x268) (and (= (time-to-state (+ time 1)) _115) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2334 (= ?x269 _114)))
 (let (($x2339 (and $x2334 $x285)))
 (=> $x2339 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2352 (= ?x269 _115)))
 (=> (and $x2352 $x268) (and (= (time-to-state (+ time 1)) _116) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2352 (= ?x269 _115)))
 (let (($x2357 (and $x2352 $x285)))
 (=> $x2357 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2370 (= ?x269 _116)))
 (=> (and $x2370 $x268) (and (= (time-to-state (+ time 1)) _117) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2370 (= ?x269 _116)))
 (let (($x2375 (and $x2370 $x285)))
 (=> $x2375 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2388 (= ?x269 _117)))
 (=> (and $x2388 $x268) (and (= (time-to-state (+ time 1)) _118) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2388 (= ?x269 _117)))
 (let (($x2393 (and $x2388 $x285)))
 (=> $x2393 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2406 (= ?x269 _118)))
 (=> (and $x2406 $x268) (and (= (time-to-state (+ time 1)) _119) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2406 (= ?x269 _118)))
 (let (($x2411 (and $x2406 $x285)))
 (=> $x2411 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2424 (= ?x269 _119)))
 (=> (and $x2424 $x268) (and (= (time-to-state (+ time 1)) _120) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2424 (= ?x269 _119)))
 (let (($x2429 (and $x2424 $x285)))
 (=> $x2429 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2442 (= ?x269 _120)))
 (=> (and $x2442 $x268) (and (= (time-to-state (+ time 1)) _121) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2442 (= ?x269 _120)))
 (let (($x2447 (and $x2442 $x285)))
 (=> $x2447 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2460 (= ?x269 _121)))
 (=> (and $x2460 $x268) (and (= (time-to-state (+ time 1)) _122) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2460 (= ?x269 _121)))
 (let (($x2465 (and $x2460 $x285)))
 (=> $x2465 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2478 (= ?x269 _122)))
 (=> (and $x2478 $x268) (and (= (time-to-state (+ time 1)) _123) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2478 (= ?x269 _122)))
 (let (($x2483 (and $x2478 $x285)))
 (=> $x2483 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2496 (= ?x269 _123)))
 (=> (and $x2496 $x268) (and (= (time-to-state (+ time 1)) _124) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2496 (= ?x269 _123)))
 (let (($x2501 (and $x2496 $x285)))
 (=> $x2501 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2514 (= ?x269 _124)))
 (=> (and $x2514 $x268) (and (= (time-to-state (+ time 1)) _125) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2514 (= ?x269 _124)))
 (let (($x2519 (and $x2514 $x285)))
 (=> $x2519 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2532 (= ?x269 _125)))
 (=> (and $x2532 $x268) (and (= (time-to-state (+ time 1)) _126) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2532 (= ?x269 _125)))
 (let (($x2537 (and $x2532 $x285)))
 (=> $x2537 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2550 (= ?x269 _126)))
 (=> (and $x2550 $x268) (and (= (time-to-state (+ time 1)) _127) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2550 (= ?x269 _126)))
 (let (($x2555 (and $x2550 $x285)))
 (=> $x2555 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2568 (= ?x269 _127)))
 (=> (and $x2568 $x268) (and (= (time-to-state (+ time 1)) _128) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2568 (= ?x269 _127)))
 (let (($x2573 (and $x2568 $x285)))
 (=> $x2573 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2586 (= ?x269 _128)))
 (=> (and $x2586 $x268) (and (= (time-to-state (+ time 1)) _129) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2586 (= ?x269 _128)))
 (let (($x2591 (and $x2586 $x285)))
 (=> $x2591 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2604 (= ?x269 _129)))
 (=> (and $x2604 $x268) (and (= (time-to-state (+ time 1)) _130) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2604 (= ?x269 _129)))
 (let (($x2609 (and $x2604 $x285)))
 (=> $x2609 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2622 (= ?x269 _130)))
 (=> (and $x2622 $x268) (and (= (time-to-state (+ time 1)) _131) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2622 (= ?x269 _130)))
 (let (($x2627 (and $x2622 $x285)))
 (=> $x2627 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2640 (= ?x269 _131)))
 (=> (and $x2640 $x268) (and (= (time-to-state (+ time 1)) _132) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2640 (= ?x269 _131)))
 (let (($x2645 (and $x2640 $x285)))
 (=> $x2645 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2658 (= ?x269 _132)))
 (=> (and $x2658 $x268) (and (= (time-to-state (+ time 1)) _133) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2658 (= ?x269 _132)))
 (let (($x2663 (and $x2658 $x285)))
 (=> $x2663 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2676 (= ?x269 _133)))
 (=> (and $x2676 $x268) (and (= (time-to-state (+ time 1)) _134) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2676 (= ?x269 _133)))
 (let (($x2681 (and $x2676 $x285)))
 (=> $x2681 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2694 (= ?x269 _134)))
 (=> (and $x2694 $x268) (and (= (time-to-state (+ time 1)) _135) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2694 (= ?x269 _134)))
 (let (($x2699 (and $x2694 $x285)))
 (=> $x2699 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2712 (= ?x269 _135)))
 (=> (and $x2712 $x268) (and (= (time-to-state (+ time 1)) _136) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2712 (= ?x269 _135)))
 (let (($x2717 (and $x2712 $x285)))
 (=> $x2717 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2730 (= ?x269 _136)))
 (=> (and $x2730 $x268) (and (= (time-to-state (+ time 1)) _137) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2730 (= ?x269 _136)))
 (let (($x2735 (and $x2730 $x285)))
 (=> $x2735 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2748 (= ?x269 _137)))
 (=> (and $x2748 $x268) (and (= (time-to-state (+ time 1)) _138) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2748 (= ?x269 _137)))
 (let (($x2753 (and $x2748 $x285)))
 (=> $x2753 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2766 (= ?x269 _138)))
 (=> (and $x2766 $x268) (and (= (time-to-state (+ time 1)) _139) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2766 (= ?x269 _138)))
 (let (($x2771 (and $x2766 $x285)))
 (=> $x2771 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2784 (= ?x269 _139)))
 (=> (and $x2784 $x268) (and (= (time-to-state (+ time 1)) _140) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2784 (= ?x269 _139)))
 (let (($x2789 (and $x2784 $x285)))
 (=> $x2789 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2802 (= ?x269 _140)))
 (=> (and $x2802 $x268) (and (= (time-to-state (+ time 1)) _141) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2802 (= ?x269 _140)))
 (let (($x2807 (and $x2802 $x285)))
 (=> $x2807 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2820 (= ?x269 _141)))
 (=> (and $x2820 $x268) (and (= (time-to-state (+ time 1)) _142) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2820 (= ?x269 _141)))
 (let (($x2825 (and $x2820 $x285)))
 (=> $x2825 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2838 (= ?x269 _142)))
 (=> (and $x2838 $x268) (and (= (time-to-state (+ time 1)) _143) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2838 (= ?x269 _142)))
 (let (($x2843 (and $x2838 $x285)))
 (=> $x2843 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2856 (= ?x269 _143)))
 (=> (and $x2856 $x268) (and (= (time-to-state (+ time 1)) _144) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2856 (= ?x269 _143)))
 (let (($x2861 (and $x2856 $x285)))
 (=> $x2861 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2874 (= ?x269 _144)))
 (=> (and $x2874 $x268) (and (= (time-to-state (+ time 1)) _145) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2874 (= ?x269 _144)))
 (let (($x2879 (and $x2874 $x285)))
 (=> $x2879 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2892 (= ?x269 _145)))
 (=> (and $x2892 $x268) (and (= (time-to-state (+ time 1)) _146) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2892 (= ?x269 _145)))
 (let (($x2897 (and $x2892 $x285)))
 (=> $x2897 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2910 (= ?x269 _146)))
 (=> (and $x2910 $x268) (and (= (time-to-state (+ time 1)) _147) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2910 (= ?x269 _146)))
 (let (($x2915 (and $x2910 $x285)))
 (=> $x2915 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2928 (= ?x269 _147)))
 (=> (and $x2928 $x268) (and (= (time-to-state (+ time 1)) _148) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2928 (= ?x269 _147)))
 (let (($x2933 (and $x2928 $x285)))
 (=> $x2933 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2946 (= ?x269 _148)))
 (=> (and $x2946 $x268) (and (= (time-to-state (+ time 1)) _149) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2946 (= ?x269 _148)))
 (let (($x2951 (and $x2946 $x285)))
 (=> $x2951 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2964 (= ?x269 _149)))
 (=> (and $x2964 $x268) (and (= (time-to-state (+ time 1)) _150) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2964 (= ?x269 _149)))
 (let (($x2969 (and $x2964 $x285)))
 (=> $x2969 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x2982 (= ?x269 _150)))
 (=> (and $x2982 $x268) (and (= (time-to-state (+ time 1)) _151) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x2982 (= ?x269 _150)))
 (let (($x2987 (and $x2982 $x285)))
 (=> $x2987 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3000 (= ?x269 _151)))
 (=> (and $x3000 $x268) (and (= (time-to-state (+ time 1)) _152) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3000 (= ?x269 _151)))
 (let (($x3005 (and $x3000 $x285)))
 (=> $x3005 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3018 (= ?x269 _152)))
 (=> (and $x3018 $x268) (and (= (time-to-state (+ time 1)) _153) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3018 (= ?x269 _152)))
 (let (($x3023 (and $x3018 $x285)))
 (=> $x3023 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3036 (= ?x269 _153)))
 (=> (and $x3036 $x268) (and (= (time-to-state (+ time 1)) _154) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3036 (= ?x269 _153)))
 (let (($x3041 (and $x3036 $x285)))
 (=> $x3041 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3054 (= ?x269 _154)))
 (=> (and $x3054 $x268) (and (= (time-to-state (+ time 1)) _155) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3054 (= ?x269 _154)))
 (let (($x3059 (and $x3054 $x285)))
 (=> $x3059 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3072 (= ?x269 _155)))
 (=> (and $x3072 $x268) (and (= (time-to-state (+ time 1)) _156) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3072 (= ?x269 _155)))
 (let (($x3077 (and $x3072 $x285)))
 (=> $x3077 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3090 (= ?x269 _156)))
 (=> (and $x3090 $x268) (and (= (time-to-state (+ time 1)) _157) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3090 (= ?x269 _156)))
 (let (($x3095 (and $x3090 $x285)))
 (=> $x3095 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3108 (= ?x269 _157)))
 (=> (and $x3108 $x268) (and (= (time-to-state (+ time 1)) _158) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3108 (= ?x269 _157)))
 (let (($x3113 (and $x3108 $x285)))
 (=> $x3113 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3126 (= ?x269 _158)))
 (=> (and $x3126 $x268) (and (= (time-to-state (+ time 1)) _159) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3126 (= ?x269 _158)))
 (let (($x3131 (and $x3126 $x285)))
 (=> $x3131 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3144 (= ?x269 _159)))
 (=> (and $x3144 $x268) (and (= (time-to-state (+ time 1)) _160) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3144 (= ?x269 _159)))
 (let (($x3149 (and $x3144 $x285)))
 (=> $x3149 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3162 (= ?x269 _160)))
 (=> (and $x3162 $x268) (and (= (time-to-state (+ time 1)) _161) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3162 (= ?x269 _160)))
 (let (($x3167 (and $x3162 $x285)))
 (=> $x3167 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3180 (= ?x269 _161)))
 (=> (and $x3180 $x268) (and (= (time-to-state (+ time 1)) _162) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3180 (= ?x269 _161)))
 (let (($x3185 (and $x3180 $x285)))
 (=> $x3185 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3198 (= ?x269 _162)))
 (=> (and $x3198 $x268) (and (= (time-to-state (+ time 1)) _163) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3198 (= ?x269 _162)))
 (let (($x3203 (and $x3198 $x285)))
 (=> $x3203 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3216 (= ?x269 _163)))
 (=> (and $x3216 $x268) (and (= (time-to-state (+ time 1)) _164) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3216 (= ?x269 _163)))
 (let (($x3221 (and $x3216 $x285)))
 (=> $x3221 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3234 (= ?x269 _164)))
 (=> (and $x3234 $x268) (and (= (time-to-state (+ time 1)) _165) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3234 (= ?x269 _164)))
 (let (($x3239 (and $x3234 $x285)))
 (=> $x3239 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3252 (= ?x269 _165)))
 (=> (and $x3252 $x268) (and (= (time-to-state (+ time 1)) _166) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3252 (= ?x269 _165)))
 (let (($x3257 (and $x3252 $x285)))
 (=> $x3257 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3270 (= ?x269 _166)))
 (=> (and $x3270 $x268) (and (= (time-to-state (+ time 1)) _167) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3270 (= ?x269 _166)))
 (let (($x3275 (and $x3270 $x285)))
 (=> $x3275 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3288 (= ?x269 _167)))
 (=> (and $x3288 $x268) (and (= (time-to-state (+ time 1)) _168) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3288 (= ?x269 _167)))
 (let (($x3293 (and $x3288 $x285)))
 (=> $x3293 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3306 (= ?x269 _168)))
 (=> (and $x3306 $x268) (and (= (time-to-state (+ time 1)) _169) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3306 (= ?x269 _168)))
 (let (($x3311 (and $x3306 $x285)))
 (=> $x3311 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3324 (= ?x269 _169)))
 (=> (and $x3324 $x268) (and (= (time-to-state (+ time 1)) _170) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3324 (= ?x269 _169)))
 (let (($x3329 (and $x3324 $x285)))
 (=> $x3329 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3342 (= ?x269 _170)))
 (=> (and $x3342 $x268) (and (= (time-to-state (+ time 1)) _171) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3342 (= ?x269 _170)))
 (let (($x3347 (and $x3342 $x285)))
 (=> $x3347 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3360 (= ?x269 _171)))
 (=> (and $x3360 $x268) (and (= (time-to-state (+ time 1)) _172) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3360 (= ?x269 _171)))
 (let (($x3365 (and $x3360 $x285)))
 (=> $x3365 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3378 (= ?x269 _172)))
 (=> (and $x3378 $x268) (and (= (time-to-state (+ time 1)) _173) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3378 (= ?x269 _172)))
 (let (($x3383 (and $x3378 $x285)))
 (=> $x3383 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3396 (= ?x269 _173)))
 (=> (and $x3396 $x268) (and (= (time-to-state (+ time 1)) _174) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3396 (= ?x269 _173)))
 (let (($x3401 (and $x3396 $x285)))
 (=> $x3401 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3414 (= ?x269 _174)))
 (=> (and $x3414 $x268) (and (= (time-to-state (+ time 1)) _175) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3414 (= ?x269 _174)))
 (let (($x3419 (and $x3414 $x285)))
 (=> $x3419 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3432 (= ?x269 _175)))
 (=> (and $x3432 $x268) (and (= (time-to-state (+ time 1)) _176) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3432 (= ?x269 _175)))
 (let (($x3437 (and $x3432 $x285)))
 (=> $x3437 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3450 (= ?x269 _176)))
 (=> (and $x3450 $x268) (and (= (time-to-state (+ time 1)) _177) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3450 (= ?x269 _176)))
 (let (($x3455 (and $x3450 $x285)))
 (=> $x3455 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3468 (= ?x269 _177)))
 (=> (and $x3468 $x268) (and (= (time-to-state (+ time 1)) _178) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3468 (= ?x269 _177)))
 (let (($x3473 (and $x3468 $x285)))
 (=> $x3473 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3486 (= ?x269 _178)))
 (=> (and $x3486 $x268) (and (= (time-to-state (+ time 1)) _179) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3486 (= ?x269 _178)))
 (let (($x3491 (and $x3486 $x285)))
 (=> $x3491 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3504 (= ?x269 _179)))
 (=> (and $x3504 $x268) (and (= (time-to-state (+ time 1)) _180) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3504 (= ?x269 _179)))
 (let (($x3509 (and $x3504 $x285)))
 (=> $x3509 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3522 (= ?x269 _180)))
 (=> (and $x3522 $x268) (and (= (time-to-state (+ time 1)) _181) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3522 (= ?x269 _180)))
 (let (($x3527 (and $x3522 $x285)))
 (=> $x3527 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3540 (= ?x269 _181)))
 (=> (and $x3540 $x268) (and (= (time-to-state (+ time 1)) _182) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3540 (= ?x269 _181)))
 (let (($x3545 (and $x3540 $x285)))
 (=> $x3545 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3558 (= ?x269 _182)))
 (=> (and $x3558 $x268) (and (= (time-to-state (+ time 1)) _183) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3558 (= ?x269 _182)))
 (let (($x3563 (and $x3558 $x285)))
 (=> $x3563 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3576 (= ?x269 _183)))
 (=> (and $x3576 $x268) (and (= (time-to-state (+ time 1)) _184) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3576 (= ?x269 _183)))
 (let (($x3581 (and $x3576 $x285)))
 (=> $x3581 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3594 (= ?x269 _184)))
 (=> (and $x3594 $x268) (and (= (time-to-state (+ time 1)) _185) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3594 (= ?x269 _184)))
 (let (($x3599 (and $x3594 $x285)))
 (=> $x3599 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3612 (= ?x269 _185)))
 (=> (and $x3612 $x268) (and (= (time-to-state (+ time 1)) _186) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3612 (= ?x269 _185)))
 (let (($x3617 (and $x3612 $x285)))
 (=> $x3617 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3630 (= ?x269 _186)))
 (=> (and $x3630 $x268) (and (= (time-to-state (+ time 1)) _187) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3630 (= ?x269 _186)))
 (let (($x3635 (and $x3630 $x285)))
 (=> $x3635 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3648 (= ?x269 _187)))
 (=> (and $x3648 $x268) (and (= (time-to-state (+ time 1)) _188) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3648 (= ?x269 _187)))
 (let (($x3653 (and $x3648 $x285)))
 (=> $x3653 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3666 (= ?x269 _188)))
 (=> (and $x3666 $x268) (and (= (time-to-state (+ time 1)) _189) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3666 (= ?x269 _188)))
 (let (($x3671 (and $x3666 $x285)))
 (=> $x3671 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3684 (= ?x269 _189)))
 (=> (and $x3684 $x268) (and (= (time-to-state (+ time 1)) _190) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3684 (= ?x269 _189)))
 (let (($x3689 (and $x3684 $x285)))
 (=> $x3689 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3702 (= ?x269 _190)))
 (=> (and $x3702 $x268) (and (= (time-to-state (+ time 1)) _191) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3702 (= ?x269 _190)))
 (let (($x3707 (and $x3702 $x285)))
 (=> $x3707 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3720 (= ?x269 _191)))
 (=> (and $x3720 $x268) (and (= (time-to-state (+ time 1)) _192) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3720 (= ?x269 _191)))
 (let (($x3725 (and $x3720 $x285)))
 (=> $x3725 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3738 (= ?x269 _192)))
 (=> (and $x3738 $x268) (and (= (time-to-state (+ time 1)) _193) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3738 (= ?x269 _192)))
 (let (($x3743 (and $x3738 $x285)))
 (=> $x3743 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3756 (= ?x269 _193)))
 (=> (and $x3756 $x268) (and (= (time-to-state (+ time 1)) _194) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3756 (= ?x269 _193)))
 (let (($x3761 (and $x3756 $x285)))
 (=> $x3761 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3774 (= ?x269 _194)))
 (=> (and $x3774 $x268) (and (= (time-to-state (+ time 1)) _195) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3774 (= ?x269 _194)))
 (let (($x3779 (and $x3774 $x285)))
 (=> $x3779 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3792 (= ?x269 _195)))
 (=> (and $x3792 $x268) (and (= (time-to-state (+ time 1)) _196) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3792 (= ?x269 _195)))
 (let (($x3797 (and $x3792 $x285)))
 (=> $x3797 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3810 (= ?x269 _196)))
 (=> (and $x3810 $x268) (and (= (time-to-state (+ time 1)) _197) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3810 (= ?x269 _196)))
 (let (($x3815 (and $x3810 $x285)))
 (=> $x3815 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3828 (= ?x269 _197)))
 (=> (and $x3828 $x268) (and (= (time-to-state (+ time 1)) _198) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3828 (= ?x269 _197)))
 (let (($x3833 (and $x3828 $x285)))
 (=> $x3833 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3846 (= ?x269 _198)))
 (=> (and $x3846 $x268) (and (= (time-to-state (+ time 1)) _199) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3846 (= ?x269 _198)))
 (let (($x3851 (and $x3846 $x285)))
 (=> $x3851 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3864 (= ?x269 _199)))
 (=> (and $x3864 $x268) (and (= (time-to-state (+ time 1)) _200) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3864 (= ?x269 _199)))
 (let (($x3869 (and $x3864 $x285)))
 (=> $x3869 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3882 (= ?x269 _200)))
 (=> (and $x3882 $x268) (and (= (time-to-state (+ time 1)) _201) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3882 (= ?x269 _200)))
 (let (($x3887 (and $x3882 $x285)))
 (=> $x3887 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3900 (= ?x269 _201)))
 (=> (and $x3900 $x268) (and (= (time-to-state (+ time 1)) _202) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3900 (= ?x269 _201)))
 (let (($x3905 (and $x3900 $x285)))
 (=> $x3905 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3918 (= ?x269 _202)))
 (=> (and $x3918 $x268) (and (= (time-to-state (+ time 1)) _203) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3918 (= ?x269 _202)))
 (let (($x3923 (and $x3918 $x285)))
 (=> $x3923 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3936 (= ?x269 _203)))
 (=> (and $x3936 $x268) (and (= (time-to-state (+ time 1)) _204) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3936 (= ?x269 _203)))
 (let (($x3941 (and $x3936 $x285)))
 (=> $x3941 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3954 (= ?x269 _204)))
 (=> (and $x3954 $x268) (and (= (time-to-state (+ time 1)) _205) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3954 (= ?x269 _204)))
 (let (($x3959 (and $x3954 $x285)))
 (=> $x3959 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3972 (= ?x269 _205)))
 (=> (and $x3972 $x268) (and (= (time-to-state (+ time 1)) _206) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3972 (= ?x269 _205)))
 (let (($x3977 (and $x3972 $x285)))
 (=> $x3977 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x3990 (= ?x269 _206)))
 (=> (and $x3990 $x268) (and (= (time-to-state (+ time 1)) _207) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x3990 (= ?x269 _206)))
 (let (($x3995 (and $x3990 $x285)))
 (=> $x3995 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x4008 (= ?x269 _207)))
 (=> (and $x4008 $x268) (and (= (time-to-state (+ time 1)) _208) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x4008 (= ?x269 _207)))
 (let (($x4013 (and $x4008 $x285)))
 (=> $x4013 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x4026 (= ?x269 _208)))
 (=> (and $x4026 $x268) (and (= (time-to-state (+ time 1)) _209) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x4026 (= ?x269 _208)))
 (let (($x4031 (and $x4026 $x285)))
 (=> $x4031 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let (($x263 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x267 (input-arg0 time)))
 (let (($x268 (and (distinct ?x267 0) true)))
 (let ((?x269 (time-to-state time)))
 (let (($x4044 (= ?x269 _209)))
 (=> (and $x4044 $x268) (and (= (time-to-state (+ time 1)) _210) $x263))))))))
 )
(assert
 (forall ((time Int) )(let ((?x261 (+ time 1)))
 (let ((?x264 (time-to-state ?x261)))
 (let (($x284 (= ?x264 ERR)))
 (let ((?x267 (input-arg0 time)))
 (let (($x285 (= ?x267 1)))
 (let ((?x269 (time-to-state time)))
 (let (($x4044 (= ?x269 _209)))
 (let (($x4049 (and $x4044 $x285)))
 (=> $x4049 $x284))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x269 (time-to-state time)))
 (let (($x4052 (= ?x269 ERR)))
 (and $x4052 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210) true))
(check-sat)
