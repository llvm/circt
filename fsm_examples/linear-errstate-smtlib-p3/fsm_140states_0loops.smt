; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(assert
 (let ((?x149 (time-to-state 0)))
 (= ?x149 _0)))
(assert
 (let ((?x169 (input-arg0 0)))
 (= ?x169 0)))
(assert
 (let ((?x171 (var1_0 0)))
 (= ?x171 0)))
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x200 (= ?x199 _0)))
 (let (($x216 (and $x200 $x215)))
 (=> $x216 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x230 (= ?x199 _1)))
 (let (($x235 (and $x230 $x215)))
 (=> $x235 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x248 (= ?x199 _2)))
 (let (($x253 (and $x248 $x215)))
 (=> $x253 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x266 (= ?x199 _3)))
 (let (($x271 (and $x266 $x215)))
 (=> $x271 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x284 (= ?x199 _4)))
 (let (($x289 (and $x284 $x215)))
 (=> $x289 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x302 (= ?x199 _5)))
 (let (($x307 (and $x302 $x215)))
 (=> $x307 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x320 (= ?x199 _6)))
 (let (($x325 (and $x320 $x215)))
 (=> $x325 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x338 (= ?x199 _7)))
 (let (($x343 (and $x338 $x215)))
 (=> $x343 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x356 (= ?x199 _8)))
 (let (($x361 (and $x356 $x215)))
 (=> $x361 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x374 (= ?x199 _9)))
 (let (($x379 (and $x374 $x215)))
 (=> $x379 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x392 (= ?x199 _10)))
 (let (($x397 (and $x392 $x215)))
 (=> $x397 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x410 (= ?x199 _11)))
 (let (($x415 (and $x410 $x215)))
 (=> $x415 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x428 (= ?x199 _12)))
 (let (($x433 (and $x428 $x215)))
 (=> $x433 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x446 (= ?x199 _13)))
 (let (($x451 (and $x446 $x215)))
 (=> $x451 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x464 (= ?x199 _14)))
 (let (($x469 (and $x464 $x215)))
 (=> $x469 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x482 (= ?x199 _15)))
 (let (($x487 (and $x482 $x215)))
 (=> $x487 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x500 (= ?x199 _16)))
 (let (($x505 (and $x500 $x215)))
 (=> $x505 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x518 (= ?x199 _17)))
 (let (($x523 (and $x518 $x215)))
 (=> $x523 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x536 (= ?x199 _18)))
 (let (($x541 (and $x536 $x215)))
 (=> $x541 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x554 (= ?x199 _19)))
 (let (($x559 (and $x554 $x215)))
 (=> $x559 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x572 (= ?x199 _20)))
 (let (($x577 (and $x572 $x215)))
 (=> $x577 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x590 (= ?x199 _21)))
 (let (($x595 (and $x590 $x215)))
 (=> $x595 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x608 (= ?x199 _22)))
 (let (($x613 (and $x608 $x215)))
 (=> $x613 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x626 (= ?x199 _23)))
 (let (($x631 (and $x626 $x215)))
 (=> $x631 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x644 (= ?x199 _24)))
 (let (($x649 (and $x644 $x215)))
 (=> $x649 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x662 (= ?x199 _25)))
 (let (($x667 (and $x662 $x215)))
 (=> $x667 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x680 (= ?x199 _26)))
 (let (($x685 (and $x680 $x215)))
 (=> $x685 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x698 (= ?x199 _27)))
 (let (($x703 (and $x698 $x215)))
 (=> $x703 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x716 (= ?x199 _28)))
 (let (($x721 (and $x716 $x215)))
 (=> $x721 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x734 (= ?x199 _29)))
 (let (($x739 (and $x734 $x215)))
 (=> $x739 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x752 (= ?x199 _30)))
 (let (($x757 (and $x752 $x215)))
 (=> $x757 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x770 (= ?x199 _31)))
 (let (($x775 (and $x770 $x215)))
 (=> $x775 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x788 (= ?x199 _32)))
 (let (($x793 (and $x788 $x215)))
 (=> $x793 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x806 (= ?x199 _33)))
 (let (($x811 (and $x806 $x215)))
 (=> $x811 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x824 (= ?x199 _34)))
 (let (($x829 (and $x824 $x215)))
 (=> $x829 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x842 (= ?x199 _35)))
 (let (($x847 (and $x842 $x215)))
 (=> $x847 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x860 (= ?x199 _36)))
 (let (($x865 (and $x860 $x215)))
 (=> $x865 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x878 (= ?x199 _37)))
 (let (($x883 (and $x878 $x215)))
 (=> $x883 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x896 (= ?x199 _38)))
 (let (($x901 (and $x896 $x215)))
 (=> $x901 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x914 (= ?x199 _39)))
 (let (($x919 (and $x914 $x215)))
 (=> $x919 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x932 (= ?x199 _40)))
 (let (($x937 (and $x932 $x215)))
 (=> $x937 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x950 (= ?x199 _41)))
 (let (($x955 (and $x950 $x215)))
 (=> $x955 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x968 (= ?x199 _42)))
 (let (($x973 (and $x968 $x215)))
 (=> $x973 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x986 (= ?x199 _43)))
 (let (($x991 (and $x986 $x215)))
 (=> $x991 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1004 (= ?x199 _44)))
 (let (($x1009 (and $x1004 $x215)))
 (=> $x1009 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1022 (= ?x199 _45)))
 (let (($x1027 (and $x1022 $x215)))
 (=> $x1027 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1040 (= ?x199 _46)))
 (let (($x1045 (and $x1040 $x215)))
 (=> $x1045 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1058 (= ?x199 _47)))
 (let (($x1063 (and $x1058 $x215)))
 (=> $x1063 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1076 (= ?x199 _48)))
 (let (($x1081 (and $x1076 $x215)))
 (=> $x1081 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1094 (= ?x199 _49)))
 (let (($x1099 (and $x1094 $x215)))
 (=> $x1099 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1112 (= ?x199 _50)))
 (let (($x1117 (and $x1112 $x215)))
 (=> $x1117 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1130 (= ?x199 _51)))
 (let (($x1135 (and $x1130 $x215)))
 (=> $x1135 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1148 (= ?x199 _52)))
 (let (($x1153 (and $x1148 $x215)))
 (=> $x1153 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1166 (= ?x199 _53)))
 (let (($x1171 (and $x1166 $x215)))
 (=> $x1171 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1184 (= ?x199 _54)))
 (let (($x1189 (and $x1184 $x215)))
 (=> $x1189 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1202 (= ?x199 _55)))
 (let (($x1207 (and $x1202 $x215)))
 (=> $x1207 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1220 (= ?x199 _56)))
 (let (($x1225 (and $x1220 $x215)))
 (=> $x1225 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1238 (= ?x199 _57)))
 (let (($x1243 (and $x1238 $x215)))
 (=> $x1243 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1256 (= ?x199 _58)))
 (let (($x1261 (and $x1256 $x215)))
 (=> $x1261 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1274 (= ?x199 _59)))
 (let (($x1279 (and $x1274 $x215)))
 (=> $x1279 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1292 (= ?x199 _60)))
 (let (($x1297 (and $x1292 $x215)))
 (=> $x1297 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1310 (= ?x199 _61)))
 (let (($x1315 (and $x1310 $x215)))
 (=> $x1315 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1328 (= ?x199 _62)))
 (let (($x1333 (and $x1328 $x215)))
 (=> $x1333 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1346 (= ?x199 _63)))
 (let (($x1351 (and $x1346 $x215)))
 (=> $x1351 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1364 (= ?x199 _64)))
 (let (($x1369 (and $x1364 $x215)))
 (=> $x1369 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1382 (= ?x199 _65)))
 (let (($x1387 (and $x1382 $x215)))
 (=> $x1387 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1400 (= ?x199 _66)))
 (let (($x1405 (and $x1400 $x215)))
 (=> $x1405 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1418 (= ?x199 _67)))
 (let (($x1423 (and $x1418 $x215)))
 (=> $x1423 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1436 (= ?x199 _68)))
 (let (($x1441 (and $x1436 $x215)))
 (=> $x1441 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1454 (= ?x199 _69)))
 (let (($x1459 (and $x1454 $x215)))
 (=> $x1459 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1472 (= ?x199 _70)))
 (let (($x1477 (and $x1472 $x215)))
 (=> $x1477 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1490 (= ?x199 _71)))
 (let (($x1495 (and $x1490 $x215)))
 (=> $x1495 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1508 (= ?x199 _72)))
 (let (($x1513 (and $x1508 $x215)))
 (=> $x1513 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1526 (= ?x199 _73)))
 (let (($x1531 (and $x1526 $x215)))
 (=> $x1531 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1544 (= ?x199 _74)))
 (let (($x1549 (and $x1544 $x215)))
 (=> $x1549 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1562 (= ?x199 _75)))
 (let (($x1567 (and $x1562 $x215)))
 (=> $x1567 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1580 (= ?x199 _76)))
 (let (($x1585 (and $x1580 $x215)))
 (=> $x1585 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1598 (= ?x199 _77)))
 (let (($x1603 (and $x1598 $x215)))
 (=> $x1603 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1616 (= ?x199 _78)))
 (let (($x1621 (and $x1616 $x215)))
 (=> $x1621 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1634 (= ?x199 _79)))
 (let (($x1639 (and $x1634 $x215)))
 (=> $x1639 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1652 (= ?x199 _80)))
 (let (($x1657 (and $x1652 $x215)))
 (=> $x1657 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1670 (= ?x199 _81)))
 (let (($x1675 (and $x1670 $x215)))
 (=> $x1675 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1688 (= ?x199 _82)))
 (let (($x1693 (and $x1688 $x215)))
 (=> $x1693 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1706 (= ?x199 _83)))
 (let (($x1711 (and $x1706 $x215)))
 (=> $x1711 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1724 (= ?x199 _84)))
 (let (($x1729 (and $x1724 $x215)))
 (=> $x1729 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1742 (= ?x199 _85)))
 (let (($x1747 (and $x1742 $x215)))
 (=> $x1747 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1760 (= ?x199 _86)))
 (let (($x1765 (and $x1760 $x215)))
 (=> $x1765 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1778 (= ?x199 _87)))
 (let (($x1783 (and $x1778 $x215)))
 (=> $x1783 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1796 (= ?x199 _88)))
 (let (($x1801 (and $x1796 $x215)))
 (=> $x1801 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1814 (= ?x199 _89)))
 (let (($x1819 (and $x1814 $x215)))
 (=> $x1819 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1832 (= ?x199 _90)))
 (let (($x1837 (and $x1832 $x215)))
 (=> $x1837 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1850 (= ?x199 _91)))
 (let (($x1855 (and $x1850 $x215)))
 (=> $x1855 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1868 (= ?x199 _92)))
 (let (($x1873 (and $x1868 $x215)))
 (=> $x1873 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1886 (= ?x199 _93)))
 (let (($x1891 (and $x1886 $x215)))
 (=> $x1891 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1904 (= ?x199 _94)))
 (let (($x1909 (and $x1904 $x215)))
 (=> $x1909 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1922 (= ?x199 _95)))
 (let (($x1927 (and $x1922 $x215)))
 (=> $x1927 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1940 (= ?x199 _96)))
 (let (($x1945 (and $x1940 $x215)))
 (=> $x1945 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1958 (= ?x199 _97)))
 (let (($x1963 (and $x1958 $x215)))
 (=> $x1963 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1976 (= ?x199 _98)))
 (let (($x1981 (and $x1976 $x215)))
 (=> $x1981 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x193))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x1994 (= ?x199 _99)))
 (let (($x1999 (and $x1994 $x215)))
 (=> $x1999 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2012 (= ?x199 _100)))
 (=> (and $x2012 $x198) (and (= (time-to-state (+ time 1)) _101) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2012 (= ?x199 _100)))
 (let (($x2017 (and $x2012 $x215)))
 (=> $x2017 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2030 (= ?x199 _101)))
 (=> (and $x2030 $x198) (and (= (time-to-state (+ time 1)) _102) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2030 (= ?x199 _101)))
 (let (($x2035 (and $x2030 $x215)))
 (=> $x2035 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2048 (= ?x199 _102)))
 (=> (and $x2048 $x198) (and (= (time-to-state (+ time 1)) _103) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2048 (= ?x199 _102)))
 (let (($x2053 (and $x2048 $x215)))
 (=> $x2053 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2066 (= ?x199 _103)))
 (=> (and $x2066 $x198) (and (= (time-to-state (+ time 1)) _104) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2066 (= ?x199 _103)))
 (let (($x2071 (and $x2066 $x215)))
 (=> $x2071 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2084 (= ?x199 _104)))
 (=> (and $x2084 $x198) (and (= (time-to-state (+ time 1)) _105) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2084 (= ?x199 _104)))
 (let (($x2089 (and $x2084 $x215)))
 (=> $x2089 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2102 (= ?x199 _105)))
 (=> (and $x2102 $x198) (and (= (time-to-state (+ time 1)) _106) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2102 (= ?x199 _105)))
 (let (($x2107 (and $x2102 $x215)))
 (=> $x2107 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2120 (= ?x199 _106)))
 (=> (and $x2120 $x198) (and (= (time-to-state (+ time 1)) _107) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2120 (= ?x199 _106)))
 (let (($x2125 (and $x2120 $x215)))
 (=> $x2125 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2138 (= ?x199 _107)))
 (=> (and $x2138 $x198) (and (= (time-to-state (+ time 1)) _108) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2138 (= ?x199 _107)))
 (let (($x2143 (and $x2138 $x215)))
 (=> $x2143 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2156 (= ?x199 _108)))
 (=> (and $x2156 $x198) (and (= (time-to-state (+ time 1)) _109) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2156 (= ?x199 _108)))
 (let (($x2161 (and $x2156 $x215)))
 (=> $x2161 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2174 (= ?x199 _109)))
 (=> (and $x2174 $x198) (and (= (time-to-state (+ time 1)) _110) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2174 (= ?x199 _109)))
 (let (($x2179 (and $x2174 $x215)))
 (=> $x2179 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2192 (= ?x199 _110)))
 (=> (and $x2192 $x198) (and (= (time-to-state (+ time 1)) _111) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2192 (= ?x199 _110)))
 (let (($x2197 (and $x2192 $x215)))
 (=> $x2197 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2210 (= ?x199 _111)))
 (=> (and $x2210 $x198) (and (= (time-to-state (+ time 1)) _112) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2210 (= ?x199 _111)))
 (let (($x2215 (and $x2210 $x215)))
 (=> $x2215 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2228 (= ?x199 _112)))
 (=> (and $x2228 $x198) (and (= (time-to-state (+ time 1)) _113) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2228 (= ?x199 _112)))
 (let (($x2233 (and $x2228 $x215)))
 (=> $x2233 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2246 (= ?x199 _113)))
 (=> (and $x2246 $x198) (and (= (time-to-state (+ time 1)) _114) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2246 (= ?x199 _113)))
 (let (($x2251 (and $x2246 $x215)))
 (=> $x2251 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2264 (= ?x199 _114)))
 (=> (and $x2264 $x198) (and (= (time-to-state (+ time 1)) _115) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2264 (= ?x199 _114)))
 (let (($x2269 (and $x2264 $x215)))
 (=> $x2269 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2282 (= ?x199 _115)))
 (=> (and $x2282 $x198) (and (= (time-to-state (+ time 1)) _116) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2282 (= ?x199 _115)))
 (let (($x2287 (and $x2282 $x215)))
 (=> $x2287 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2300 (= ?x199 _116)))
 (=> (and $x2300 $x198) (and (= (time-to-state (+ time 1)) _117) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2300 (= ?x199 _116)))
 (let (($x2305 (and $x2300 $x215)))
 (=> $x2305 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2318 (= ?x199 _117)))
 (=> (and $x2318 $x198) (and (= (time-to-state (+ time 1)) _118) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2318 (= ?x199 _117)))
 (let (($x2323 (and $x2318 $x215)))
 (=> $x2323 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2336 (= ?x199 _118)))
 (=> (and $x2336 $x198) (and (= (time-to-state (+ time 1)) _119) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2336 (= ?x199 _118)))
 (let (($x2341 (and $x2336 $x215)))
 (=> $x2341 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2354 (= ?x199 _119)))
 (=> (and $x2354 $x198) (and (= (time-to-state (+ time 1)) _120) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2354 (= ?x199 _119)))
 (let (($x2359 (and $x2354 $x215)))
 (=> $x2359 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2372 (= ?x199 _120)))
 (=> (and $x2372 $x198) (and (= (time-to-state (+ time 1)) _121) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2372 (= ?x199 _120)))
 (let (($x2377 (and $x2372 $x215)))
 (=> $x2377 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2390 (= ?x199 _121)))
 (=> (and $x2390 $x198) (and (= (time-to-state (+ time 1)) _122) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2390 (= ?x199 _121)))
 (let (($x2395 (and $x2390 $x215)))
 (=> $x2395 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2408 (= ?x199 _122)))
 (=> (and $x2408 $x198) (and (= (time-to-state (+ time 1)) _123) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2408 (= ?x199 _122)))
 (let (($x2413 (and $x2408 $x215)))
 (=> $x2413 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2426 (= ?x199 _123)))
 (=> (and $x2426 $x198) (and (= (time-to-state (+ time 1)) _124) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2426 (= ?x199 _123)))
 (let (($x2431 (and $x2426 $x215)))
 (=> $x2431 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2444 (= ?x199 _124)))
 (=> (and $x2444 $x198) (and (= (time-to-state (+ time 1)) _125) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2444 (= ?x199 _124)))
 (let (($x2449 (and $x2444 $x215)))
 (=> $x2449 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2462 (= ?x199 _125)))
 (=> (and $x2462 $x198) (and (= (time-to-state (+ time 1)) _126) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2462 (= ?x199 _125)))
 (let (($x2467 (and $x2462 $x215)))
 (=> $x2467 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2480 (= ?x199 _126)))
 (=> (and $x2480 $x198) (and (= (time-to-state (+ time 1)) _127) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2480 (= ?x199 _126)))
 (let (($x2485 (and $x2480 $x215)))
 (=> $x2485 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2498 (= ?x199 _127)))
 (=> (and $x2498 $x198) (and (= (time-to-state (+ time 1)) _128) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2498 (= ?x199 _127)))
 (let (($x2503 (and $x2498 $x215)))
 (=> $x2503 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2516 (= ?x199 _128)))
 (=> (and $x2516 $x198) (and (= (time-to-state (+ time 1)) _129) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2516 (= ?x199 _128)))
 (let (($x2521 (and $x2516 $x215)))
 (=> $x2521 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2534 (= ?x199 _129)))
 (=> (and $x2534 $x198) (and (= (time-to-state (+ time 1)) _130) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2534 (= ?x199 _129)))
 (let (($x2539 (and $x2534 $x215)))
 (=> $x2539 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2552 (= ?x199 _130)))
 (=> (and $x2552 $x198) (and (= (time-to-state (+ time 1)) _131) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2552 (= ?x199 _130)))
 (let (($x2557 (and $x2552 $x215)))
 (=> $x2557 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2570 (= ?x199 _131)))
 (=> (and $x2570 $x198) (and (= (time-to-state (+ time 1)) _132) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2570 (= ?x199 _131)))
 (let (($x2575 (and $x2570 $x215)))
 (=> $x2575 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2588 (= ?x199 _132)))
 (=> (and $x2588 $x198) (and (= (time-to-state (+ time 1)) _133) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2588 (= ?x199 _132)))
 (let (($x2593 (and $x2588 $x215)))
 (=> $x2593 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2606 (= ?x199 _133)))
 (=> (and $x2606 $x198) (and (= (time-to-state (+ time 1)) _134) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2606 (= ?x199 _133)))
 (let (($x2611 (and $x2606 $x215)))
 (=> $x2611 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2624 (= ?x199 _134)))
 (=> (and $x2624 $x198) (and (= (time-to-state (+ time 1)) _135) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2624 (= ?x199 _134)))
 (let (($x2629 (and $x2624 $x215)))
 (=> $x2629 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2642 (= ?x199 _135)))
 (=> (and $x2642 $x198) (and (= (time-to-state (+ time 1)) _136) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2642 (= ?x199 _135)))
 (let (($x2647 (and $x2642 $x215)))
 (=> $x2647 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2660 (= ?x199 _136)))
 (=> (and $x2660 $x198) (and (= (time-to-state (+ time 1)) _137) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2660 (= ?x199 _136)))
 (let (($x2665 (and $x2660 $x215)))
 (=> $x2665 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2678 (= ?x199 _137)))
 (=> (and $x2678 $x198) (and (= (time-to-state (+ time 1)) _138) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2678 (= ?x199 _137)))
 (let (($x2683 (and $x2678 $x215)))
 (=> $x2683 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2696 (= ?x199 _138)))
 (=> (and $x2696 $x198) (and (= (time-to-state (+ time 1)) _139) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2696 (= ?x199 _138)))
 (let (($x2701 (and $x2696 $x215)))
 (=> $x2701 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let (($x193 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x197 (input-arg0 time)))
 (let (($x198 (and (distinct ?x197 0) true)))
 (let ((?x199 (time-to-state time)))
 (let (($x2714 (= ?x199 _139)))
 (=> (and $x2714 $x198) (and (= (time-to-state (+ time 1)) _140) $x193))))))))
 )
(assert
 (forall ((time Int) )(let ((?x191 (+ time 1)))
 (let ((?x194 (time-to-state ?x191)))
 (let (($x214 (= ?x194 ERR)))
 (let ((?x197 (input-arg0 time)))
 (let (($x215 (= ?x197 1)))
 (let ((?x199 (time-to-state time)))
 (let (($x2714 (= ?x199 _139)))
 (let (($x2719 (and $x2714 $x215)))
 (=> $x2719 $x214))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x199 (time-to-state time)))
 (let (($x2722 (= ?x199 ERR)))
 (and $x2722 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140) true))
(check-sat)
