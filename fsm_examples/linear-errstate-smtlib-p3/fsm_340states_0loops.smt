; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(assert
 (let ((?x349 (time-to-state 0)))
 (= ?x349 _0)))
(assert
 (let ((?x369 (input-arg0 0)))
 (= ?x369 0)))
(assert
 (let ((?x371 (var1_0 0)))
 (= ?x371 0)))
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x400 (= ?x399 _0)))
 (let (($x416 (and $x400 $x415)))
 (=> $x416 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x430 (= ?x399 _1)))
 (let (($x435 (and $x430 $x415)))
 (=> $x435 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x448 (= ?x399 _2)))
 (let (($x453 (and $x448 $x415)))
 (=> $x453 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x466 (= ?x399 _3)))
 (let (($x471 (and $x466 $x415)))
 (=> $x471 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x484 (= ?x399 _4)))
 (let (($x489 (and $x484 $x415)))
 (=> $x489 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x502 (= ?x399 _5)))
 (let (($x507 (and $x502 $x415)))
 (=> $x507 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x520 (= ?x399 _6)))
 (let (($x525 (and $x520 $x415)))
 (=> $x525 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x538 (= ?x399 _7)))
 (let (($x543 (and $x538 $x415)))
 (=> $x543 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x556 (= ?x399 _8)))
 (let (($x561 (and $x556 $x415)))
 (=> $x561 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x574 (= ?x399 _9)))
 (let (($x579 (and $x574 $x415)))
 (=> $x579 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x592 (= ?x399 _10)))
 (let (($x597 (and $x592 $x415)))
 (=> $x597 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x610 (= ?x399 _11)))
 (let (($x615 (and $x610 $x415)))
 (=> $x615 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x628 (= ?x399 _12)))
 (let (($x633 (and $x628 $x415)))
 (=> $x633 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x646 (= ?x399 _13)))
 (let (($x651 (and $x646 $x415)))
 (=> $x651 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x664 (= ?x399 _14)))
 (let (($x669 (and $x664 $x415)))
 (=> $x669 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x682 (= ?x399 _15)))
 (let (($x687 (and $x682 $x415)))
 (=> $x687 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x700 (= ?x399 _16)))
 (let (($x705 (and $x700 $x415)))
 (=> $x705 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x718 (= ?x399 _17)))
 (let (($x723 (and $x718 $x415)))
 (=> $x723 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x736 (= ?x399 _18)))
 (let (($x741 (and $x736 $x415)))
 (=> $x741 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x754 (= ?x399 _19)))
 (let (($x759 (and $x754 $x415)))
 (=> $x759 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x772 (= ?x399 _20)))
 (let (($x777 (and $x772 $x415)))
 (=> $x777 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x790 (= ?x399 _21)))
 (let (($x795 (and $x790 $x415)))
 (=> $x795 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x808 (= ?x399 _22)))
 (let (($x813 (and $x808 $x415)))
 (=> $x813 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x826 (= ?x399 _23)))
 (let (($x831 (and $x826 $x415)))
 (=> $x831 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x844 (= ?x399 _24)))
 (let (($x849 (and $x844 $x415)))
 (=> $x849 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x862 (= ?x399 _25)))
 (let (($x867 (and $x862 $x415)))
 (=> $x867 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x880 (= ?x399 _26)))
 (let (($x885 (and $x880 $x415)))
 (=> $x885 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x898 (= ?x399 _27)))
 (let (($x903 (and $x898 $x415)))
 (=> $x903 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x916 (= ?x399 _28)))
 (let (($x921 (and $x916 $x415)))
 (=> $x921 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x934 (= ?x399 _29)))
 (let (($x939 (and $x934 $x415)))
 (=> $x939 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x952 (= ?x399 _30)))
 (let (($x957 (and $x952 $x415)))
 (=> $x957 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x970 (= ?x399 _31)))
 (let (($x975 (and $x970 $x415)))
 (=> $x975 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x988 (= ?x399 _32)))
 (let (($x993 (and $x988 $x415)))
 (=> $x993 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1006 (= ?x399 _33)))
 (let (($x1011 (and $x1006 $x415)))
 (=> $x1011 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1024 (= ?x399 _34)))
 (let (($x1029 (and $x1024 $x415)))
 (=> $x1029 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1042 (= ?x399 _35)))
 (let (($x1047 (and $x1042 $x415)))
 (=> $x1047 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1060 (= ?x399 _36)))
 (let (($x1065 (and $x1060 $x415)))
 (=> $x1065 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1078 (= ?x399 _37)))
 (let (($x1083 (and $x1078 $x415)))
 (=> $x1083 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1096 (= ?x399 _38)))
 (let (($x1101 (and $x1096 $x415)))
 (=> $x1101 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1114 (= ?x399 _39)))
 (let (($x1119 (and $x1114 $x415)))
 (=> $x1119 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1132 (= ?x399 _40)))
 (let (($x1137 (and $x1132 $x415)))
 (=> $x1137 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1150 (= ?x399 _41)))
 (let (($x1155 (and $x1150 $x415)))
 (=> $x1155 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1168 (= ?x399 _42)))
 (let (($x1173 (and $x1168 $x415)))
 (=> $x1173 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1186 (= ?x399 _43)))
 (let (($x1191 (and $x1186 $x415)))
 (=> $x1191 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1204 (= ?x399 _44)))
 (let (($x1209 (and $x1204 $x415)))
 (=> $x1209 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1222 (= ?x399 _45)))
 (let (($x1227 (and $x1222 $x415)))
 (=> $x1227 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1240 (= ?x399 _46)))
 (let (($x1245 (and $x1240 $x415)))
 (=> $x1245 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1258 (= ?x399 _47)))
 (let (($x1263 (and $x1258 $x415)))
 (=> $x1263 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1276 (= ?x399 _48)))
 (let (($x1281 (and $x1276 $x415)))
 (=> $x1281 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1294 (= ?x399 _49)))
 (let (($x1299 (and $x1294 $x415)))
 (=> $x1299 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1312 (= ?x399 _50)))
 (let (($x1317 (and $x1312 $x415)))
 (=> $x1317 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1330 (= ?x399 _51)))
 (let (($x1335 (and $x1330 $x415)))
 (=> $x1335 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1348 (= ?x399 _52)))
 (let (($x1353 (and $x1348 $x415)))
 (=> $x1353 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1366 (= ?x399 _53)))
 (let (($x1371 (and $x1366 $x415)))
 (=> $x1371 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1384 (= ?x399 _54)))
 (let (($x1389 (and $x1384 $x415)))
 (=> $x1389 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1402 (= ?x399 _55)))
 (let (($x1407 (and $x1402 $x415)))
 (=> $x1407 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1420 (= ?x399 _56)))
 (let (($x1425 (and $x1420 $x415)))
 (=> $x1425 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1438 (= ?x399 _57)))
 (let (($x1443 (and $x1438 $x415)))
 (=> $x1443 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1456 (= ?x399 _58)))
 (let (($x1461 (and $x1456 $x415)))
 (=> $x1461 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1474 (= ?x399 _59)))
 (let (($x1479 (and $x1474 $x415)))
 (=> $x1479 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1492 (= ?x399 _60)))
 (let (($x1497 (and $x1492 $x415)))
 (=> $x1497 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1510 (= ?x399 _61)))
 (let (($x1515 (and $x1510 $x415)))
 (=> $x1515 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1528 (= ?x399 _62)))
 (let (($x1533 (and $x1528 $x415)))
 (=> $x1533 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1546 (= ?x399 _63)))
 (let (($x1551 (and $x1546 $x415)))
 (=> $x1551 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1564 (= ?x399 _64)))
 (let (($x1569 (and $x1564 $x415)))
 (=> $x1569 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1582 (= ?x399 _65)))
 (let (($x1587 (and $x1582 $x415)))
 (=> $x1587 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1600 (= ?x399 _66)))
 (let (($x1605 (and $x1600 $x415)))
 (=> $x1605 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1618 (= ?x399 _67)))
 (let (($x1623 (and $x1618 $x415)))
 (=> $x1623 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1636 (= ?x399 _68)))
 (let (($x1641 (and $x1636 $x415)))
 (=> $x1641 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1654 (= ?x399 _69)))
 (let (($x1659 (and $x1654 $x415)))
 (=> $x1659 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1672 (= ?x399 _70)))
 (let (($x1677 (and $x1672 $x415)))
 (=> $x1677 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1690 (= ?x399 _71)))
 (let (($x1695 (and $x1690 $x415)))
 (=> $x1695 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1708 (= ?x399 _72)))
 (let (($x1713 (and $x1708 $x415)))
 (=> $x1713 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1726 (= ?x399 _73)))
 (let (($x1731 (and $x1726 $x415)))
 (=> $x1731 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1744 (= ?x399 _74)))
 (let (($x1749 (and $x1744 $x415)))
 (=> $x1749 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1762 (= ?x399 _75)))
 (let (($x1767 (and $x1762 $x415)))
 (=> $x1767 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1780 (= ?x399 _76)))
 (let (($x1785 (and $x1780 $x415)))
 (=> $x1785 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1798 (= ?x399 _77)))
 (let (($x1803 (and $x1798 $x415)))
 (=> $x1803 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1816 (= ?x399 _78)))
 (let (($x1821 (and $x1816 $x415)))
 (=> $x1821 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1834 (= ?x399 _79)))
 (let (($x1839 (and $x1834 $x415)))
 (=> $x1839 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1852 (= ?x399 _80)))
 (let (($x1857 (and $x1852 $x415)))
 (=> $x1857 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1870 (= ?x399 _81)))
 (let (($x1875 (and $x1870 $x415)))
 (=> $x1875 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1888 (= ?x399 _82)))
 (let (($x1893 (and $x1888 $x415)))
 (=> $x1893 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1906 (= ?x399 _83)))
 (let (($x1911 (and $x1906 $x415)))
 (=> $x1911 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1924 (= ?x399 _84)))
 (let (($x1929 (and $x1924 $x415)))
 (=> $x1929 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1942 (= ?x399 _85)))
 (let (($x1947 (and $x1942 $x415)))
 (=> $x1947 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1960 (= ?x399 _86)))
 (let (($x1965 (and $x1960 $x415)))
 (=> $x1965 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1978 (= ?x399 _87)))
 (let (($x1983 (and $x1978 $x415)))
 (=> $x1983 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x1996 (= ?x399 _88)))
 (let (($x2001 (and $x1996 $x415)))
 (=> $x2001 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2014 (= ?x399 _89)))
 (let (($x2019 (and $x2014 $x415)))
 (=> $x2019 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2032 (= ?x399 _90)))
 (let (($x2037 (and $x2032 $x415)))
 (=> $x2037 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2050 (= ?x399 _91)))
 (let (($x2055 (and $x2050 $x415)))
 (=> $x2055 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2068 (= ?x399 _92)))
 (let (($x2073 (and $x2068 $x415)))
 (=> $x2073 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2086 (= ?x399 _93)))
 (let (($x2091 (and $x2086 $x415)))
 (=> $x2091 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2104 (= ?x399 _94)))
 (let (($x2109 (and $x2104 $x415)))
 (=> $x2109 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2122 (= ?x399 _95)))
 (let (($x2127 (and $x2122 $x415)))
 (=> $x2127 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2140 (= ?x399 _96)))
 (let (($x2145 (and $x2140 $x415)))
 (=> $x2145 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2158 (= ?x399 _97)))
 (let (($x2163 (and $x2158 $x415)))
 (=> $x2163 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2176 (= ?x399 _98)))
 (let (($x2181 (and $x2176 $x415)))
 (=> $x2181 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x393))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2194 (= ?x399 _99)))
 (let (($x2199 (and $x2194 $x415)))
 (=> $x2199 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2212 (= ?x399 _100)))
 (=> (and $x2212 $x398) (and (= (time-to-state (+ time 1)) _101) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2212 (= ?x399 _100)))
 (let (($x2217 (and $x2212 $x415)))
 (=> $x2217 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2230 (= ?x399 _101)))
 (=> (and $x2230 $x398) (and (= (time-to-state (+ time 1)) _102) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2230 (= ?x399 _101)))
 (let (($x2235 (and $x2230 $x415)))
 (=> $x2235 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2248 (= ?x399 _102)))
 (=> (and $x2248 $x398) (and (= (time-to-state (+ time 1)) _103) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2248 (= ?x399 _102)))
 (let (($x2253 (and $x2248 $x415)))
 (=> $x2253 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2266 (= ?x399 _103)))
 (=> (and $x2266 $x398) (and (= (time-to-state (+ time 1)) _104) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2266 (= ?x399 _103)))
 (let (($x2271 (and $x2266 $x415)))
 (=> $x2271 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2284 (= ?x399 _104)))
 (=> (and $x2284 $x398) (and (= (time-to-state (+ time 1)) _105) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2284 (= ?x399 _104)))
 (let (($x2289 (and $x2284 $x415)))
 (=> $x2289 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2302 (= ?x399 _105)))
 (=> (and $x2302 $x398) (and (= (time-to-state (+ time 1)) _106) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2302 (= ?x399 _105)))
 (let (($x2307 (and $x2302 $x415)))
 (=> $x2307 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2320 (= ?x399 _106)))
 (=> (and $x2320 $x398) (and (= (time-to-state (+ time 1)) _107) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2320 (= ?x399 _106)))
 (let (($x2325 (and $x2320 $x415)))
 (=> $x2325 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2338 (= ?x399 _107)))
 (=> (and $x2338 $x398) (and (= (time-to-state (+ time 1)) _108) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2338 (= ?x399 _107)))
 (let (($x2343 (and $x2338 $x415)))
 (=> $x2343 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2356 (= ?x399 _108)))
 (=> (and $x2356 $x398) (and (= (time-to-state (+ time 1)) _109) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2356 (= ?x399 _108)))
 (let (($x2361 (and $x2356 $x415)))
 (=> $x2361 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2374 (= ?x399 _109)))
 (=> (and $x2374 $x398) (and (= (time-to-state (+ time 1)) _110) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2374 (= ?x399 _109)))
 (let (($x2379 (and $x2374 $x415)))
 (=> $x2379 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2392 (= ?x399 _110)))
 (=> (and $x2392 $x398) (and (= (time-to-state (+ time 1)) _111) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2392 (= ?x399 _110)))
 (let (($x2397 (and $x2392 $x415)))
 (=> $x2397 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2410 (= ?x399 _111)))
 (=> (and $x2410 $x398) (and (= (time-to-state (+ time 1)) _112) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2410 (= ?x399 _111)))
 (let (($x2415 (and $x2410 $x415)))
 (=> $x2415 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2428 (= ?x399 _112)))
 (=> (and $x2428 $x398) (and (= (time-to-state (+ time 1)) _113) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2428 (= ?x399 _112)))
 (let (($x2433 (and $x2428 $x415)))
 (=> $x2433 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2446 (= ?x399 _113)))
 (=> (and $x2446 $x398) (and (= (time-to-state (+ time 1)) _114) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2446 (= ?x399 _113)))
 (let (($x2451 (and $x2446 $x415)))
 (=> $x2451 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2464 (= ?x399 _114)))
 (=> (and $x2464 $x398) (and (= (time-to-state (+ time 1)) _115) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2464 (= ?x399 _114)))
 (let (($x2469 (and $x2464 $x415)))
 (=> $x2469 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2482 (= ?x399 _115)))
 (=> (and $x2482 $x398) (and (= (time-to-state (+ time 1)) _116) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2482 (= ?x399 _115)))
 (let (($x2487 (and $x2482 $x415)))
 (=> $x2487 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2500 (= ?x399 _116)))
 (=> (and $x2500 $x398) (and (= (time-to-state (+ time 1)) _117) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2500 (= ?x399 _116)))
 (let (($x2505 (and $x2500 $x415)))
 (=> $x2505 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2518 (= ?x399 _117)))
 (=> (and $x2518 $x398) (and (= (time-to-state (+ time 1)) _118) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2518 (= ?x399 _117)))
 (let (($x2523 (and $x2518 $x415)))
 (=> $x2523 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2536 (= ?x399 _118)))
 (=> (and $x2536 $x398) (and (= (time-to-state (+ time 1)) _119) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2536 (= ?x399 _118)))
 (let (($x2541 (and $x2536 $x415)))
 (=> $x2541 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2554 (= ?x399 _119)))
 (=> (and $x2554 $x398) (and (= (time-to-state (+ time 1)) _120) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2554 (= ?x399 _119)))
 (let (($x2559 (and $x2554 $x415)))
 (=> $x2559 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2572 (= ?x399 _120)))
 (=> (and $x2572 $x398) (and (= (time-to-state (+ time 1)) _121) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2572 (= ?x399 _120)))
 (let (($x2577 (and $x2572 $x415)))
 (=> $x2577 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2590 (= ?x399 _121)))
 (=> (and $x2590 $x398) (and (= (time-to-state (+ time 1)) _122) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2590 (= ?x399 _121)))
 (let (($x2595 (and $x2590 $x415)))
 (=> $x2595 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2608 (= ?x399 _122)))
 (=> (and $x2608 $x398) (and (= (time-to-state (+ time 1)) _123) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2608 (= ?x399 _122)))
 (let (($x2613 (and $x2608 $x415)))
 (=> $x2613 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2626 (= ?x399 _123)))
 (=> (and $x2626 $x398) (and (= (time-to-state (+ time 1)) _124) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2626 (= ?x399 _123)))
 (let (($x2631 (and $x2626 $x415)))
 (=> $x2631 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2644 (= ?x399 _124)))
 (=> (and $x2644 $x398) (and (= (time-to-state (+ time 1)) _125) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2644 (= ?x399 _124)))
 (let (($x2649 (and $x2644 $x415)))
 (=> $x2649 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2662 (= ?x399 _125)))
 (=> (and $x2662 $x398) (and (= (time-to-state (+ time 1)) _126) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2662 (= ?x399 _125)))
 (let (($x2667 (and $x2662 $x415)))
 (=> $x2667 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2680 (= ?x399 _126)))
 (=> (and $x2680 $x398) (and (= (time-to-state (+ time 1)) _127) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2680 (= ?x399 _126)))
 (let (($x2685 (and $x2680 $x415)))
 (=> $x2685 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2698 (= ?x399 _127)))
 (=> (and $x2698 $x398) (and (= (time-to-state (+ time 1)) _128) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2698 (= ?x399 _127)))
 (let (($x2703 (and $x2698 $x415)))
 (=> $x2703 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2716 (= ?x399 _128)))
 (=> (and $x2716 $x398) (and (= (time-to-state (+ time 1)) _129) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2716 (= ?x399 _128)))
 (let (($x2721 (and $x2716 $x415)))
 (=> $x2721 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2734 (= ?x399 _129)))
 (=> (and $x2734 $x398) (and (= (time-to-state (+ time 1)) _130) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2734 (= ?x399 _129)))
 (let (($x2739 (and $x2734 $x415)))
 (=> $x2739 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2752 (= ?x399 _130)))
 (=> (and $x2752 $x398) (and (= (time-to-state (+ time 1)) _131) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2752 (= ?x399 _130)))
 (let (($x2757 (and $x2752 $x415)))
 (=> $x2757 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2770 (= ?x399 _131)))
 (=> (and $x2770 $x398) (and (= (time-to-state (+ time 1)) _132) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2770 (= ?x399 _131)))
 (let (($x2775 (and $x2770 $x415)))
 (=> $x2775 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2788 (= ?x399 _132)))
 (=> (and $x2788 $x398) (and (= (time-to-state (+ time 1)) _133) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2788 (= ?x399 _132)))
 (let (($x2793 (and $x2788 $x415)))
 (=> $x2793 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2806 (= ?x399 _133)))
 (=> (and $x2806 $x398) (and (= (time-to-state (+ time 1)) _134) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2806 (= ?x399 _133)))
 (let (($x2811 (and $x2806 $x415)))
 (=> $x2811 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2824 (= ?x399 _134)))
 (=> (and $x2824 $x398) (and (= (time-to-state (+ time 1)) _135) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2824 (= ?x399 _134)))
 (let (($x2829 (and $x2824 $x415)))
 (=> $x2829 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2842 (= ?x399 _135)))
 (=> (and $x2842 $x398) (and (= (time-to-state (+ time 1)) _136) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2842 (= ?x399 _135)))
 (let (($x2847 (and $x2842 $x415)))
 (=> $x2847 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2860 (= ?x399 _136)))
 (=> (and $x2860 $x398) (and (= (time-to-state (+ time 1)) _137) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2860 (= ?x399 _136)))
 (let (($x2865 (and $x2860 $x415)))
 (=> $x2865 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2878 (= ?x399 _137)))
 (=> (and $x2878 $x398) (and (= (time-to-state (+ time 1)) _138) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2878 (= ?x399 _137)))
 (let (($x2883 (and $x2878 $x415)))
 (=> $x2883 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2896 (= ?x399 _138)))
 (=> (and $x2896 $x398) (and (= (time-to-state (+ time 1)) _139) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2896 (= ?x399 _138)))
 (let (($x2901 (and $x2896 $x415)))
 (=> $x2901 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2914 (= ?x399 _139)))
 (=> (and $x2914 $x398) (and (= (time-to-state (+ time 1)) _140) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2914 (= ?x399 _139)))
 (let (($x2919 (and $x2914 $x415)))
 (=> $x2919 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2932 (= ?x399 _140)))
 (=> (and $x2932 $x398) (and (= (time-to-state (+ time 1)) _141) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2932 (= ?x399 _140)))
 (let (($x2937 (and $x2932 $x415)))
 (=> $x2937 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2950 (= ?x399 _141)))
 (=> (and $x2950 $x398) (and (= (time-to-state (+ time 1)) _142) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2950 (= ?x399 _141)))
 (let (($x2955 (and $x2950 $x415)))
 (=> $x2955 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2968 (= ?x399 _142)))
 (=> (and $x2968 $x398) (and (= (time-to-state (+ time 1)) _143) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2968 (= ?x399 _142)))
 (let (($x2973 (and $x2968 $x415)))
 (=> $x2973 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x2986 (= ?x399 _143)))
 (=> (and $x2986 $x398) (and (= (time-to-state (+ time 1)) _144) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x2986 (= ?x399 _143)))
 (let (($x2991 (and $x2986 $x415)))
 (=> $x2991 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3004 (= ?x399 _144)))
 (=> (and $x3004 $x398) (and (= (time-to-state (+ time 1)) _145) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3004 (= ?x399 _144)))
 (let (($x3009 (and $x3004 $x415)))
 (=> $x3009 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3022 (= ?x399 _145)))
 (=> (and $x3022 $x398) (and (= (time-to-state (+ time 1)) _146) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3022 (= ?x399 _145)))
 (let (($x3027 (and $x3022 $x415)))
 (=> $x3027 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3040 (= ?x399 _146)))
 (=> (and $x3040 $x398) (and (= (time-to-state (+ time 1)) _147) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3040 (= ?x399 _146)))
 (let (($x3045 (and $x3040 $x415)))
 (=> $x3045 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3058 (= ?x399 _147)))
 (=> (and $x3058 $x398) (and (= (time-to-state (+ time 1)) _148) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3058 (= ?x399 _147)))
 (let (($x3063 (and $x3058 $x415)))
 (=> $x3063 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3076 (= ?x399 _148)))
 (=> (and $x3076 $x398) (and (= (time-to-state (+ time 1)) _149) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3076 (= ?x399 _148)))
 (let (($x3081 (and $x3076 $x415)))
 (=> $x3081 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3094 (= ?x399 _149)))
 (=> (and $x3094 $x398) (and (= (time-to-state (+ time 1)) _150) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3094 (= ?x399 _149)))
 (let (($x3099 (and $x3094 $x415)))
 (=> $x3099 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3112 (= ?x399 _150)))
 (=> (and $x3112 $x398) (and (= (time-to-state (+ time 1)) _151) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3112 (= ?x399 _150)))
 (let (($x3117 (and $x3112 $x415)))
 (=> $x3117 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3130 (= ?x399 _151)))
 (=> (and $x3130 $x398) (and (= (time-to-state (+ time 1)) _152) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3130 (= ?x399 _151)))
 (let (($x3135 (and $x3130 $x415)))
 (=> $x3135 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3148 (= ?x399 _152)))
 (=> (and $x3148 $x398) (and (= (time-to-state (+ time 1)) _153) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3148 (= ?x399 _152)))
 (let (($x3153 (and $x3148 $x415)))
 (=> $x3153 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3166 (= ?x399 _153)))
 (=> (and $x3166 $x398) (and (= (time-to-state (+ time 1)) _154) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3166 (= ?x399 _153)))
 (let (($x3171 (and $x3166 $x415)))
 (=> $x3171 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3184 (= ?x399 _154)))
 (=> (and $x3184 $x398) (and (= (time-to-state (+ time 1)) _155) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3184 (= ?x399 _154)))
 (let (($x3189 (and $x3184 $x415)))
 (=> $x3189 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3202 (= ?x399 _155)))
 (=> (and $x3202 $x398) (and (= (time-to-state (+ time 1)) _156) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3202 (= ?x399 _155)))
 (let (($x3207 (and $x3202 $x415)))
 (=> $x3207 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3220 (= ?x399 _156)))
 (=> (and $x3220 $x398) (and (= (time-to-state (+ time 1)) _157) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3220 (= ?x399 _156)))
 (let (($x3225 (and $x3220 $x415)))
 (=> $x3225 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3238 (= ?x399 _157)))
 (=> (and $x3238 $x398) (and (= (time-to-state (+ time 1)) _158) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3238 (= ?x399 _157)))
 (let (($x3243 (and $x3238 $x415)))
 (=> $x3243 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3256 (= ?x399 _158)))
 (=> (and $x3256 $x398) (and (= (time-to-state (+ time 1)) _159) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3256 (= ?x399 _158)))
 (let (($x3261 (and $x3256 $x415)))
 (=> $x3261 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3274 (= ?x399 _159)))
 (=> (and $x3274 $x398) (and (= (time-to-state (+ time 1)) _160) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3274 (= ?x399 _159)))
 (let (($x3279 (and $x3274 $x415)))
 (=> $x3279 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3292 (= ?x399 _160)))
 (=> (and $x3292 $x398) (and (= (time-to-state (+ time 1)) _161) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3292 (= ?x399 _160)))
 (let (($x3297 (and $x3292 $x415)))
 (=> $x3297 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3310 (= ?x399 _161)))
 (=> (and $x3310 $x398) (and (= (time-to-state (+ time 1)) _162) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3310 (= ?x399 _161)))
 (let (($x3315 (and $x3310 $x415)))
 (=> $x3315 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3328 (= ?x399 _162)))
 (=> (and $x3328 $x398) (and (= (time-to-state (+ time 1)) _163) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3328 (= ?x399 _162)))
 (let (($x3333 (and $x3328 $x415)))
 (=> $x3333 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3346 (= ?x399 _163)))
 (=> (and $x3346 $x398) (and (= (time-to-state (+ time 1)) _164) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3346 (= ?x399 _163)))
 (let (($x3351 (and $x3346 $x415)))
 (=> $x3351 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3364 (= ?x399 _164)))
 (=> (and $x3364 $x398) (and (= (time-to-state (+ time 1)) _165) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3364 (= ?x399 _164)))
 (let (($x3369 (and $x3364 $x415)))
 (=> $x3369 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3382 (= ?x399 _165)))
 (=> (and $x3382 $x398) (and (= (time-to-state (+ time 1)) _166) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3382 (= ?x399 _165)))
 (let (($x3387 (and $x3382 $x415)))
 (=> $x3387 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3400 (= ?x399 _166)))
 (=> (and $x3400 $x398) (and (= (time-to-state (+ time 1)) _167) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3400 (= ?x399 _166)))
 (let (($x3405 (and $x3400 $x415)))
 (=> $x3405 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3418 (= ?x399 _167)))
 (=> (and $x3418 $x398) (and (= (time-to-state (+ time 1)) _168) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3418 (= ?x399 _167)))
 (let (($x3423 (and $x3418 $x415)))
 (=> $x3423 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3436 (= ?x399 _168)))
 (=> (and $x3436 $x398) (and (= (time-to-state (+ time 1)) _169) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3436 (= ?x399 _168)))
 (let (($x3441 (and $x3436 $x415)))
 (=> $x3441 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3454 (= ?x399 _169)))
 (=> (and $x3454 $x398) (and (= (time-to-state (+ time 1)) _170) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3454 (= ?x399 _169)))
 (let (($x3459 (and $x3454 $x415)))
 (=> $x3459 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3472 (= ?x399 _170)))
 (=> (and $x3472 $x398) (and (= (time-to-state (+ time 1)) _171) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3472 (= ?x399 _170)))
 (let (($x3477 (and $x3472 $x415)))
 (=> $x3477 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3490 (= ?x399 _171)))
 (=> (and $x3490 $x398) (and (= (time-to-state (+ time 1)) _172) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3490 (= ?x399 _171)))
 (let (($x3495 (and $x3490 $x415)))
 (=> $x3495 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3508 (= ?x399 _172)))
 (=> (and $x3508 $x398) (and (= (time-to-state (+ time 1)) _173) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3508 (= ?x399 _172)))
 (let (($x3513 (and $x3508 $x415)))
 (=> $x3513 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3526 (= ?x399 _173)))
 (=> (and $x3526 $x398) (and (= (time-to-state (+ time 1)) _174) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3526 (= ?x399 _173)))
 (let (($x3531 (and $x3526 $x415)))
 (=> $x3531 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3544 (= ?x399 _174)))
 (=> (and $x3544 $x398) (and (= (time-to-state (+ time 1)) _175) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3544 (= ?x399 _174)))
 (let (($x3549 (and $x3544 $x415)))
 (=> $x3549 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3562 (= ?x399 _175)))
 (=> (and $x3562 $x398) (and (= (time-to-state (+ time 1)) _176) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3562 (= ?x399 _175)))
 (let (($x3567 (and $x3562 $x415)))
 (=> $x3567 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3580 (= ?x399 _176)))
 (=> (and $x3580 $x398) (and (= (time-to-state (+ time 1)) _177) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3580 (= ?x399 _176)))
 (let (($x3585 (and $x3580 $x415)))
 (=> $x3585 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3598 (= ?x399 _177)))
 (=> (and $x3598 $x398) (and (= (time-to-state (+ time 1)) _178) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3598 (= ?x399 _177)))
 (let (($x3603 (and $x3598 $x415)))
 (=> $x3603 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3616 (= ?x399 _178)))
 (=> (and $x3616 $x398) (and (= (time-to-state (+ time 1)) _179) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3616 (= ?x399 _178)))
 (let (($x3621 (and $x3616 $x415)))
 (=> $x3621 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3634 (= ?x399 _179)))
 (=> (and $x3634 $x398) (and (= (time-to-state (+ time 1)) _180) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3634 (= ?x399 _179)))
 (let (($x3639 (and $x3634 $x415)))
 (=> $x3639 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3652 (= ?x399 _180)))
 (=> (and $x3652 $x398) (and (= (time-to-state (+ time 1)) _181) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3652 (= ?x399 _180)))
 (let (($x3657 (and $x3652 $x415)))
 (=> $x3657 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3670 (= ?x399 _181)))
 (=> (and $x3670 $x398) (and (= (time-to-state (+ time 1)) _182) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3670 (= ?x399 _181)))
 (let (($x3675 (and $x3670 $x415)))
 (=> $x3675 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3688 (= ?x399 _182)))
 (=> (and $x3688 $x398) (and (= (time-to-state (+ time 1)) _183) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3688 (= ?x399 _182)))
 (let (($x3693 (and $x3688 $x415)))
 (=> $x3693 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3706 (= ?x399 _183)))
 (=> (and $x3706 $x398) (and (= (time-to-state (+ time 1)) _184) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3706 (= ?x399 _183)))
 (let (($x3711 (and $x3706 $x415)))
 (=> $x3711 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3724 (= ?x399 _184)))
 (=> (and $x3724 $x398) (and (= (time-to-state (+ time 1)) _185) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3724 (= ?x399 _184)))
 (let (($x3729 (and $x3724 $x415)))
 (=> $x3729 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3742 (= ?x399 _185)))
 (=> (and $x3742 $x398) (and (= (time-to-state (+ time 1)) _186) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3742 (= ?x399 _185)))
 (let (($x3747 (and $x3742 $x415)))
 (=> $x3747 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3760 (= ?x399 _186)))
 (=> (and $x3760 $x398) (and (= (time-to-state (+ time 1)) _187) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3760 (= ?x399 _186)))
 (let (($x3765 (and $x3760 $x415)))
 (=> $x3765 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3778 (= ?x399 _187)))
 (=> (and $x3778 $x398) (and (= (time-to-state (+ time 1)) _188) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3778 (= ?x399 _187)))
 (let (($x3783 (and $x3778 $x415)))
 (=> $x3783 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3796 (= ?x399 _188)))
 (=> (and $x3796 $x398) (and (= (time-to-state (+ time 1)) _189) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3796 (= ?x399 _188)))
 (let (($x3801 (and $x3796 $x415)))
 (=> $x3801 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3814 (= ?x399 _189)))
 (=> (and $x3814 $x398) (and (= (time-to-state (+ time 1)) _190) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3814 (= ?x399 _189)))
 (let (($x3819 (and $x3814 $x415)))
 (=> $x3819 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3832 (= ?x399 _190)))
 (=> (and $x3832 $x398) (and (= (time-to-state (+ time 1)) _191) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3832 (= ?x399 _190)))
 (let (($x3837 (and $x3832 $x415)))
 (=> $x3837 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3850 (= ?x399 _191)))
 (=> (and $x3850 $x398) (and (= (time-to-state (+ time 1)) _192) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3850 (= ?x399 _191)))
 (let (($x3855 (and $x3850 $x415)))
 (=> $x3855 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3868 (= ?x399 _192)))
 (=> (and $x3868 $x398) (and (= (time-to-state (+ time 1)) _193) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3868 (= ?x399 _192)))
 (let (($x3873 (and $x3868 $x415)))
 (=> $x3873 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3886 (= ?x399 _193)))
 (=> (and $x3886 $x398) (and (= (time-to-state (+ time 1)) _194) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3886 (= ?x399 _193)))
 (let (($x3891 (and $x3886 $x415)))
 (=> $x3891 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3904 (= ?x399 _194)))
 (=> (and $x3904 $x398) (and (= (time-to-state (+ time 1)) _195) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3904 (= ?x399 _194)))
 (let (($x3909 (and $x3904 $x415)))
 (=> $x3909 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3922 (= ?x399 _195)))
 (=> (and $x3922 $x398) (and (= (time-to-state (+ time 1)) _196) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3922 (= ?x399 _195)))
 (let (($x3927 (and $x3922 $x415)))
 (=> $x3927 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3940 (= ?x399 _196)))
 (=> (and $x3940 $x398) (and (= (time-to-state (+ time 1)) _197) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3940 (= ?x399 _196)))
 (let (($x3945 (and $x3940 $x415)))
 (=> $x3945 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3958 (= ?x399 _197)))
 (=> (and $x3958 $x398) (and (= (time-to-state (+ time 1)) _198) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3958 (= ?x399 _197)))
 (let (($x3963 (and $x3958 $x415)))
 (=> $x3963 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3976 (= ?x399 _198)))
 (=> (and $x3976 $x398) (and (= (time-to-state (+ time 1)) _199) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3976 (= ?x399 _198)))
 (let (($x3981 (and $x3976 $x415)))
 (=> $x3981 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x3994 (= ?x399 _199)))
 (=> (and $x3994 $x398) (and (= (time-to-state (+ time 1)) _200) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x3994 (= ?x399 _199)))
 (let (($x3999 (and $x3994 $x415)))
 (=> $x3999 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4012 (= ?x399 _200)))
 (=> (and $x4012 $x398) (and (= (time-to-state (+ time 1)) _201) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4012 (= ?x399 _200)))
 (let (($x4017 (and $x4012 $x415)))
 (=> $x4017 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4030 (= ?x399 _201)))
 (=> (and $x4030 $x398) (and (= (time-to-state (+ time 1)) _202) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4030 (= ?x399 _201)))
 (let (($x4035 (and $x4030 $x415)))
 (=> $x4035 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4048 (= ?x399 _202)))
 (=> (and $x4048 $x398) (and (= (time-to-state (+ time 1)) _203) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4048 (= ?x399 _202)))
 (let (($x4053 (and $x4048 $x415)))
 (=> $x4053 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4066 (= ?x399 _203)))
 (=> (and $x4066 $x398) (and (= (time-to-state (+ time 1)) _204) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4066 (= ?x399 _203)))
 (let (($x4071 (and $x4066 $x415)))
 (=> $x4071 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4084 (= ?x399 _204)))
 (=> (and $x4084 $x398) (and (= (time-to-state (+ time 1)) _205) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4084 (= ?x399 _204)))
 (let (($x4089 (and $x4084 $x415)))
 (=> $x4089 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4102 (= ?x399 _205)))
 (=> (and $x4102 $x398) (and (= (time-to-state (+ time 1)) _206) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4102 (= ?x399 _205)))
 (let (($x4107 (and $x4102 $x415)))
 (=> $x4107 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4120 (= ?x399 _206)))
 (=> (and $x4120 $x398) (and (= (time-to-state (+ time 1)) _207) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4120 (= ?x399 _206)))
 (let (($x4125 (and $x4120 $x415)))
 (=> $x4125 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4138 (= ?x399 _207)))
 (=> (and $x4138 $x398) (and (= (time-to-state (+ time 1)) _208) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4138 (= ?x399 _207)))
 (let (($x4143 (and $x4138 $x415)))
 (=> $x4143 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4156 (= ?x399 _208)))
 (=> (and $x4156 $x398) (and (= (time-to-state (+ time 1)) _209) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4156 (= ?x399 _208)))
 (let (($x4161 (and $x4156 $x415)))
 (=> $x4161 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4174 (= ?x399 _209)))
 (=> (and $x4174 $x398) (and (= (time-to-state (+ time 1)) _210) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4174 (= ?x399 _209)))
 (let (($x4179 (and $x4174 $x415)))
 (=> $x4179 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4192 (= ?x399 _210)))
 (=> (and $x4192 $x398) (and (= (time-to-state (+ time 1)) _211) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4192 (= ?x399 _210)))
 (let (($x4197 (and $x4192 $x415)))
 (=> $x4197 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4210 (= ?x399 _211)))
 (=> (and $x4210 $x398) (and (= (time-to-state (+ time 1)) _212) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4210 (= ?x399 _211)))
 (let (($x4215 (and $x4210 $x415)))
 (=> $x4215 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4228 (= ?x399 _212)))
 (=> (and $x4228 $x398) (and (= (time-to-state (+ time 1)) _213) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4228 (= ?x399 _212)))
 (let (($x4233 (and $x4228 $x415)))
 (=> $x4233 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4246 (= ?x399 _213)))
 (=> (and $x4246 $x398) (and (= (time-to-state (+ time 1)) _214) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4246 (= ?x399 _213)))
 (let (($x4251 (and $x4246 $x415)))
 (=> $x4251 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4264 (= ?x399 _214)))
 (=> (and $x4264 $x398) (and (= (time-to-state (+ time 1)) _215) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4264 (= ?x399 _214)))
 (let (($x4269 (and $x4264 $x415)))
 (=> $x4269 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4282 (= ?x399 _215)))
 (=> (and $x4282 $x398) (and (= (time-to-state (+ time 1)) _216) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4282 (= ?x399 _215)))
 (let (($x4287 (and $x4282 $x415)))
 (=> $x4287 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4300 (= ?x399 _216)))
 (=> (and $x4300 $x398) (and (= (time-to-state (+ time 1)) _217) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4300 (= ?x399 _216)))
 (let (($x4305 (and $x4300 $x415)))
 (=> $x4305 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4318 (= ?x399 _217)))
 (=> (and $x4318 $x398) (and (= (time-to-state (+ time 1)) _218) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4318 (= ?x399 _217)))
 (let (($x4323 (and $x4318 $x415)))
 (=> $x4323 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4336 (= ?x399 _218)))
 (=> (and $x4336 $x398) (and (= (time-to-state (+ time 1)) _219) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4336 (= ?x399 _218)))
 (let (($x4341 (and $x4336 $x415)))
 (=> $x4341 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4354 (= ?x399 _219)))
 (=> (and $x4354 $x398) (and (= (time-to-state (+ time 1)) _220) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4354 (= ?x399 _219)))
 (let (($x4359 (and $x4354 $x415)))
 (=> $x4359 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4372 (= ?x399 _220)))
 (=> (and $x4372 $x398) (and (= (time-to-state (+ time 1)) _221) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4372 (= ?x399 _220)))
 (let (($x4377 (and $x4372 $x415)))
 (=> $x4377 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4390 (= ?x399 _221)))
 (=> (and $x4390 $x398) (and (= (time-to-state (+ time 1)) _222) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4390 (= ?x399 _221)))
 (let (($x4395 (and $x4390 $x415)))
 (=> $x4395 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4408 (= ?x399 _222)))
 (=> (and $x4408 $x398) (and (= (time-to-state (+ time 1)) _223) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4408 (= ?x399 _222)))
 (let (($x4413 (and $x4408 $x415)))
 (=> $x4413 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4426 (= ?x399 _223)))
 (=> (and $x4426 $x398) (and (= (time-to-state (+ time 1)) _224) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4426 (= ?x399 _223)))
 (let (($x4431 (and $x4426 $x415)))
 (=> $x4431 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4444 (= ?x399 _224)))
 (=> (and $x4444 $x398) (and (= (time-to-state (+ time 1)) _225) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4444 (= ?x399 _224)))
 (let (($x4449 (and $x4444 $x415)))
 (=> $x4449 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4462 (= ?x399 _225)))
 (=> (and $x4462 $x398) (and (= (time-to-state (+ time 1)) _226) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4462 (= ?x399 _225)))
 (let (($x4467 (and $x4462 $x415)))
 (=> $x4467 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4480 (= ?x399 _226)))
 (=> (and $x4480 $x398) (and (= (time-to-state (+ time 1)) _227) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4480 (= ?x399 _226)))
 (let (($x4485 (and $x4480 $x415)))
 (=> $x4485 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4498 (= ?x399 _227)))
 (=> (and $x4498 $x398) (and (= (time-to-state (+ time 1)) _228) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4498 (= ?x399 _227)))
 (let (($x4503 (and $x4498 $x415)))
 (=> $x4503 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4516 (= ?x399 _228)))
 (=> (and $x4516 $x398) (and (= (time-to-state (+ time 1)) _229) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4516 (= ?x399 _228)))
 (let (($x4521 (and $x4516 $x415)))
 (=> $x4521 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4534 (= ?x399 _229)))
 (=> (and $x4534 $x398) (and (= (time-to-state (+ time 1)) _230) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4534 (= ?x399 _229)))
 (let (($x4539 (and $x4534 $x415)))
 (=> $x4539 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4552 (= ?x399 _230)))
 (=> (and $x4552 $x398) (and (= (time-to-state (+ time 1)) _231) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4552 (= ?x399 _230)))
 (let (($x4557 (and $x4552 $x415)))
 (=> $x4557 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4570 (= ?x399 _231)))
 (=> (and $x4570 $x398) (and (= (time-to-state (+ time 1)) _232) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4570 (= ?x399 _231)))
 (let (($x4575 (and $x4570 $x415)))
 (=> $x4575 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4588 (= ?x399 _232)))
 (=> (and $x4588 $x398) (and (= (time-to-state (+ time 1)) _233) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4588 (= ?x399 _232)))
 (let (($x4593 (and $x4588 $x415)))
 (=> $x4593 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4606 (= ?x399 _233)))
 (=> (and $x4606 $x398) (and (= (time-to-state (+ time 1)) _234) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4606 (= ?x399 _233)))
 (let (($x4611 (and $x4606 $x415)))
 (=> $x4611 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4624 (= ?x399 _234)))
 (=> (and $x4624 $x398) (and (= (time-to-state (+ time 1)) _235) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4624 (= ?x399 _234)))
 (let (($x4629 (and $x4624 $x415)))
 (=> $x4629 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4642 (= ?x399 _235)))
 (=> (and $x4642 $x398) (and (= (time-to-state (+ time 1)) _236) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4642 (= ?x399 _235)))
 (let (($x4647 (and $x4642 $x415)))
 (=> $x4647 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4660 (= ?x399 _236)))
 (=> (and $x4660 $x398) (and (= (time-to-state (+ time 1)) _237) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4660 (= ?x399 _236)))
 (let (($x4665 (and $x4660 $x415)))
 (=> $x4665 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4678 (= ?x399 _237)))
 (=> (and $x4678 $x398) (and (= (time-to-state (+ time 1)) _238) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4678 (= ?x399 _237)))
 (let (($x4683 (and $x4678 $x415)))
 (=> $x4683 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4696 (= ?x399 _238)))
 (=> (and $x4696 $x398) (and (= (time-to-state (+ time 1)) _239) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4696 (= ?x399 _238)))
 (let (($x4701 (and $x4696 $x415)))
 (=> $x4701 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4714 (= ?x399 _239)))
 (=> (and $x4714 $x398) (and (= (time-to-state (+ time 1)) _240) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4714 (= ?x399 _239)))
 (let (($x4719 (and $x4714 $x415)))
 (=> $x4719 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4732 (= ?x399 _240)))
 (=> (and $x4732 $x398) (and (= (time-to-state (+ time 1)) _241) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4732 (= ?x399 _240)))
 (let (($x4737 (and $x4732 $x415)))
 (=> $x4737 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4750 (= ?x399 _241)))
 (=> (and $x4750 $x398) (and (= (time-to-state (+ time 1)) _242) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4750 (= ?x399 _241)))
 (let (($x4755 (and $x4750 $x415)))
 (=> $x4755 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4768 (= ?x399 _242)))
 (=> (and $x4768 $x398) (and (= (time-to-state (+ time 1)) _243) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4768 (= ?x399 _242)))
 (let (($x4773 (and $x4768 $x415)))
 (=> $x4773 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4786 (= ?x399 _243)))
 (=> (and $x4786 $x398) (and (= (time-to-state (+ time 1)) _244) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4786 (= ?x399 _243)))
 (let (($x4791 (and $x4786 $x415)))
 (=> $x4791 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4804 (= ?x399 _244)))
 (=> (and $x4804 $x398) (and (= (time-to-state (+ time 1)) _245) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4804 (= ?x399 _244)))
 (let (($x4809 (and $x4804 $x415)))
 (=> $x4809 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4822 (= ?x399 _245)))
 (=> (and $x4822 $x398) (and (= (time-to-state (+ time 1)) _246) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4822 (= ?x399 _245)))
 (let (($x4827 (and $x4822 $x415)))
 (=> $x4827 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4840 (= ?x399 _246)))
 (=> (and $x4840 $x398) (and (= (time-to-state (+ time 1)) _247) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4840 (= ?x399 _246)))
 (let (($x4845 (and $x4840 $x415)))
 (=> $x4845 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4858 (= ?x399 _247)))
 (=> (and $x4858 $x398) (and (= (time-to-state (+ time 1)) _248) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4858 (= ?x399 _247)))
 (let (($x4863 (and $x4858 $x415)))
 (=> $x4863 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4876 (= ?x399 _248)))
 (=> (and $x4876 $x398) (and (= (time-to-state (+ time 1)) _249) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4876 (= ?x399 _248)))
 (let (($x4881 (and $x4876 $x415)))
 (=> $x4881 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4894 (= ?x399 _249)))
 (=> (and $x4894 $x398) (and (= (time-to-state (+ time 1)) _250) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4894 (= ?x399 _249)))
 (let (($x4899 (and $x4894 $x415)))
 (=> $x4899 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4912 (= ?x399 _250)))
 (=> (and $x4912 $x398) (and (= (time-to-state (+ time 1)) _251) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4912 (= ?x399 _250)))
 (let (($x4917 (and $x4912 $x415)))
 (=> $x4917 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4930 (= ?x399 _251)))
 (=> (and $x4930 $x398) (and (= (time-to-state (+ time 1)) _252) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4930 (= ?x399 _251)))
 (let (($x4935 (and $x4930 $x415)))
 (=> $x4935 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4948 (= ?x399 _252)))
 (=> (and $x4948 $x398) (and (= (time-to-state (+ time 1)) _253) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4948 (= ?x399 _252)))
 (let (($x4953 (and $x4948 $x415)))
 (=> $x4953 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4966 (= ?x399 _253)))
 (=> (and $x4966 $x398) (and (= (time-to-state (+ time 1)) _254) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4966 (= ?x399 _253)))
 (let (($x4971 (and $x4966 $x415)))
 (=> $x4971 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x4984 (= ?x399 _254)))
 (=> (and $x4984 $x398) (and (= (time-to-state (+ time 1)) _255) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x4984 (= ?x399 _254)))
 (let (($x4989 (and $x4984 $x415)))
 (=> $x4989 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5002 (= ?x399 _255)))
 (=> (and $x5002 $x398) (and (= (time-to-state (+ time 1)) _256) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5002 (= ?x399 _255)))
 (let (($x5007 (and $x5002 $x415)))
 (=> $x5007 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5020 (= ?x399 _256)))
 (=> (and $x5020 $x398) (and (= (time-to-state (+ time 1)) _257) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5020 (= ?x399 _256)))
 (let (($x5025 (and $x5020 $x415)))
 (=> $x5025 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5038 (= ?x399 _257)))
 (=> (and $x5038 $x398) (and (= (time-to-state (+ time 1)) _258) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5038 (= ?x399 _257)))
 (let (($x5043 (and $x5038 $x415)))
 (=> $x5043 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5056 (= ?x399 _258)))
 (=> (and $x5056 $x398) (and (= (time-to-state (+ time 1)) _259) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5056 (= ?x399 _258)))
 (let (($x5061 (and $x5056 $x415)))
 (=> $x5061 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5074 (= ?x399 _259)))
 (=> (and $x5074 $x398) (and (= (time-to-state (+ time 1)) _260) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5074 (= ?x399 _259)))
 (let (($x5079 (and $x5074 $x415)))
 (=> $x5079 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5092 (= ?x399 _260)))
 (=> (and $x5092 $x398) (and (= (time-to-state (+ time 1)) _261) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5092 (= ?x399 _260)))
 (let (($x5097 (and $x5092 $x415)))
 (=> $x5097 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5110 (= ?x399 _261)))
 (=> (and $x5110 $x398) (and (= (time-to-state (+ time 1)) _262) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5110 (= ?x399 _261)))
 (let (($x5115 (and $x5110 $x415)))
 (=> $x5115 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5128 (= ?x399 _262)))
 (=> (and $x5128 $x398) (and (= (time-to-state (+ time 1)) _263) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5128 (= ?x399 _262)))
 (let (($x5133 (and $x5128 $x415)))
 (=> $x5133 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5146 (= ?x399 _263)))
 (=> (and $x5146 $x398) (and (= (time-to-state (+ time 1)) _264) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5146 (= ?x399 _263)))
 (let (($x5151 (and $x5146 $x415)))
 (=> $x5151 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5164 (= ?x399 _264)))
 (=> (and $x5164 $x398) (and (= (time-to-state (+ time 1)) _265) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5164 (= ?x399 _264)))
 (let (($x5169 (and $x5164 $x415)))
 (=> $x5169 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5182 (= ?x399 _265)))
 (=> (and $x5182 $x398) (and (= (time-to-state (+ time 1)) _266) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5182 (= ?x399 _265)))
 (let (($x5187 (and $x5182 $x415)))
 (=> $x5187 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5200 (= ?x399 _266)))
 (=> (and $x5200 $x398) (and (= (time-to-state (+ time 1)) _267) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5200 (= ?x399 _266)))
 (let (($x5205 (and $x5200 $x415)))
 (=> $x5205 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5218 (= ?x399 _267)))
 (=> (and $x5218 $x398) (and (= (time-to-state (+ time 1)) _268) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5218 (= ?x399 _267)))
 (let (($x5223 (and $x5218 $x415)))
 (=> $x5223 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5236 (= ?x399 _268)))
 (=> (and $x5236 $x398) (and (= (time-to-state (+ time 1)) _269) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5236 (= ?x399 _268)))
 (let (($x5241 (and $x5236 $x415)))
 (=> $x5241 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5254 (= ?x399 _269)))
 (=> (and $x5254 $x398) (and (= (time-to-state (+ time 1)) _270) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5254 (= ?x399 _269)))
 (let (($x5259 (and $x5254 $x415)))
 (=> $x5259 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5272 (= ?x399 _270)))
 (=> (and $x5272 $x398) (and (= (time-to-state (+ time 1)) _271) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5272 (= ?x399 _270)))
 (let (($x5277 (and $x5272 $x415)))
 (=> $x5277 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5290 (= ?x399 _271)))
 (=> (and $x5290 $x398) (and (= (time-to-state (+ time 1)) _272) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5290 (= ?x399 _271)))
 (let (($x5295 (and $x5290 $x415)))
 (=> $x5295 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5308 (= ?x399 _272)))
 (=> (and $x5308 $x398) (and (= (time-to-state (+ time 1)) _273) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5308 (= ?x399 _272)))
 (let (($x5313 (and $x5308 $x415)))
 (=> $x5313 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5326 (= ?x399 _273)))
 (=> (and $x5326 $x398) (and (= (time-to-state (+ time 1)) _274) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5326 (= ?x399 _273)))
 (let (($x5331 (and $x5326 $x415)))
 (=> $x5331 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5344 (= ?x399 _274)))
 (=> (and $x5344 $x398) (and (= (time-to-state (+ time 1)) _275) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5344 (= ?x399 _274)))
 (let (($x5349 (and $x5344 $x415)))
 (=> $x5349 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5362 (= ?x399 _275)))
 (=> (and $x5362 $x398) (and (= (time-to-state (+ time 1)) _276) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5362 (= ?x399 _275)))
 (let (($x5367 (and $x5362 $x415)))
 (=> $x5367 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5380 (= ?x399 _276)))
 (=> (and $x5380 $x398) (and (= (time-to-state (+ time 1)) _277) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5380 (= ?x399 _276)))
 (let (($x5385 (and $x5380 $x415)))
 (=> $x5385 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5398 (= ?x399 _277)))
 (=> (and $x5398 $x398) (and (= (time-to-state (+ time 1)) _278) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5398 (= ?x399 _277)))
 (let (($x5403 (and $x5398 $x415)))
 (=> $x5403 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5416 (= ?x399 _278)))
 (=> (and $x5416 $x398) (and (= (time-to-state (+ time 1)) _279) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5416 (= ?x399 _278)))
 (let (($x5421 (and $x5416 $x415)))
 (=> $x5421 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5434 (= ?x399 _279)))
 (=> (and $x5434 $x398) (and (= (time-to-state (+ time 1)) _280) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5434 (= ?x399 _279)))
 (let (($x5439 (and $x5434 $x415)))
 (=> $x5439 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5452 (= ?x399 _280)))
 (=> (and $x5452 $x398) (and (= (time-to-state (+ time 1)) _281) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5452 (= ?x399 _280)))
 (let (($x5457 (and $x5452 $x415)))
 (=> $x5457 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5470 (= ?x399 _281)))
 (=> (and $x5470 $x398) (and (= (time-to-state (+ time 1)) _282) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5470 (= ?x399 _281)))
 (let (($x5475 (and $x5470 $x415)))
 (=> $x5475 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5488 (= ?x399 _282)))
 (=> (and $x5488 $x398) (and (= (time-to-state (+ time 1)) _283) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5488 (= ?x399 _282)))
 (let (($x5493 (and $x5488 $x415)))
 (=> $x5493 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5506 (= ?x399 _283)))
 (=> (and $x5506 $x398) (and (= (time-to-state (+ time 1)) _284) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5506 (= ?x399 _283)))
 (let (($x5511 (and $x5506 $x415)))
 (=> $x5511 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5524 (= ?x399 _284)))
 (=> (and $x5524 $x398) (and (= (time-to-state (+ time 1)) _285) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5524 (= ?x399 _284)))
 (let (($x5529 (and $x5524 $x415)))
 (=> $x5529 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5542 (= ?x399 _285)))
 (=> (and $x5542 $x398) (and (= (time-to-state (+ time 1)) _286) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5542 (= ?x399 _285)))
 (let (($x5547 (and $x5542 $x415)))
 (=> $x5547 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5560 (= ?x399 _286)))
 (=> (and $x5560 $x398) (and (= (time-to-state (+ time 1)) _287) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5560 (= ?x399 _286)))
 (let (($x5565 (and $x5560 $x415)))
 (=> $x5565 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5578 (= ?x399 _287)))
 (=> (and $x5578 $x398) (and (= (time-to-state (+ time 1)) _288) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5578 (= ?x399 _287)))
 (let (($x5583 (and $x5578 $x415)))
 (=> $x5583 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5596 (= ?x399 _288)))
 (=> (and $x5596 $x398) (and (= (time-to-state (+ time 1)) _289) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5596 (= ?x399 _288)))
 (let (($x5601 (and $x5596 $x415)))
 (=> $x5601 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5614 (= ?x399 _289)))
 (=> (and $x5614 $x398) (and (= (time-to-state (+ time 1)) _290) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5614 (= ?x399 _289)))
 (let (($x5619 (and $x5614 $x415)))
 (=> $x5619 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5632 (= ?x399 _290)))
 (=> (and $x5632 $x398) (and (= (time-to-state (+ time 1)) _291) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5632 (= ?x399 _290)))
 (let (($x5637 (and $x5632 $x415)))
 (=> $x5637 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5650 (= ?x399 _291)))
 (=> (and $x5650 $x398) (and (= (time-to-state (+ time 1)) _292) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5650 (= ?x399 _291)))
 (let (($x5655 (and $x5650 $x415)))
 (=> $x5655 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5668 (= ?x399 _292)))
 (=> (and $x5668 $x398) (and (= (time-to-state (+ time 1)) _293) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5668 (= ?x399 _292)))
 (let (($x5673 (and $x5668 $x415)))
 (=> $x5673 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5686 (= ?x399 _293)))
 (=> (and $x5686 $x398) (and (= (time-to-state (+ time 1)) _294) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5686 (= ?x399 _293)))
 (let (($x5691 (and $x5686 $x415)))
 (=> $x5691 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5704 (= ?x399 _294)))
 (=> (and $x5704 $x398) (and (= (time-to-state (+ time 1)) _295) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5704 (= ?x399 _294)))
 (let (($x5709 (and $x5704 $x415)))
 (=> $x5709 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5722 (= ?x399 _295)))
 (=> (and $x5722 $x398) (and (= (time-to-state (+ time 1)) _296) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5722 (= ?x399 _295)))
 (let (($x5727 (and $x5722 $x415)))
 (=> $x5727 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5740 (= ?x399 _296)))
 (=> (and $x5740 $x398) (and (= (time-to-state (+ time 1)) _297) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5740 (= ?x399 _296)))
 (let (($x5745 (and $x5740 $x415)))
 (=> $x5745 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5758 (= ?x399 _297)))
 (=> (and $x5758 $x398) (and (= (time-to-state (+ time 1)) _298) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5758 (= ?x399 _297)))
 (let (($x5763 (and $x5758 $x415)))
 (=> $x5763 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5776 (= ?x399 _298)))
 (=> (and $x5776 $x398) (and (= (time-to-state (+ time 1)) _299) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5776 (= ?x399 _298)))
 (let (($x5781 (and $x5776 $x415)))
 (=> $x5781 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5794 (= ?x399 _299)))
 (=> (and $x5794 $x398) (and (= (time-to-state (+ time 1)) _300) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5794 (= ?x399 _299)))
 (let (($x5799 (and $x5794 $x415)))
 (=> $x5799 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5812 (= ?x399 _300)))
 (=> (and $x5812 $x398) (and (= (time-to-state (+ time 1)) _301) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5812 (= ?x399 _300)))
 (let (($x5817 (and $x5812 $x415)))
 (=> $x5817 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5830 (= ?x399 _301)))
 (=> (and $x5830 $x398) (and (= (time-to-state (+ time 1)) _302) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5830 (= ?x399 _301)))
 (let (($x5835 (and $x5830 $x415)))
 (=> $x5835 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5848 (= ?x399 _302)))
 (=> (and $x5848 $x398) (and (= (time-to-state (+ time 1)) _303) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5848 (= ?x399 _302)))
 (let (($x5853 (and $x5848 $x415)))
 (=> $x5853 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5866 (= ?x399 _303)))
 (=> (and $x5866 $x398) (and (= (time-to-state (+ time 1)) _304) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5866 (= ?x399 _303)))
 (let (($x5871 (and $x5866 $x415)))
 (=> $x5871 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5884 (= ?x399 _304)))
 (=> (and $x5884 $x398) (and (= (time-to-state (+ time 1)) _305) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5884 (= ?x399 _304)))
 (let (($x5889 (and $x5884 $x415)))
 (=> $x5889 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5902 (= ?x399 _305)))
 (=> (and $x5902 $x398) (and (= (time-to-state (+ time 1)) _306) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5902 (= ?x399 _305)))
 (let (($x5907 (and $x5902 $x415)))
 (=> $x5907 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5920 (= ?x399 _306)))
 (=> (and $x5920 $x398) (and (= (time-to-state (+ time 1)) _307) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5920 (= ?x399 _306)))
 (let (($x5925 (and $x5920 $x415)))
 (=> $x5925 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5938 (= ?x399 _307)))
 (=> (and $x5938 $x398) (and (= (time-to-state (+ time 1)) _308) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5938 (= ?x399 _307)))
 (let (($x5943 (and $x5938 $x415)))
 (=> $x5943 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5956 (= ?x399 _308)))
 (=> (and $x5956 $x398) (and (= (time-to-state (+ time 1)) _309) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5956 (= ?x399 _308)))
 (let (($x5961 (and $x5956 $x415)))
 (=> $x5961 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5974 (= ?x399 _309)))
 (=> (and $x5974 $x398) (and (= (time-to-state (+ time 1)) _310) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5974 (= ?x399 _309)))
 (let (($x5979 (and $x5974 $x415)))
 (=> $x5979 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x5992 (= ?x399 _310)))
 (=> (and $x5992 $x398) (and (= (time-to-state (+ time 1)) _311) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x5992 (= ?x399 _310)))
 (let (($x5997 (and $x5992 $x415)))
 (=> $x5997 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6010 (= ?x399 _311)))
 (=> (and $x6010 $x398) (and (= (time-to-state (+ time 1)) _312) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6010 (= ?x399 _311)))
 (let (($x6015 (and $x6010 $x415)))
 (=> $x6015 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6028 (= ?x399 _312)))
 (=> (and $x6028 $x398) (and (= (time-to-state (+ time 1)) _313) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6028 (= ?x399 _312)))
 (let (($x6033 (and $x6028 $x415)))
 (=> $x6033 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6046 (= ?x399 _313)))
 (=> (and $x6046 $x398) (and (= (time-to-state (+ time 1)) _314) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6046 (= ?x399 _313)))
 (let (($x6051 (and $x6046 $x415)))
 (=> $x6051 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6064 (= ?x399 _314)))
 (=> (and $x6064 $x398) (and (= (time-to-state (+ time 1)) _315) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6064 (= ?x399 _314)))
 (let (($x6069 (and $x6064 $x415)))
 (=> $x6069 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6082 (= ?x399 _315)))
 (=> (and $x6082 $x398) (and (= (time-to-state (+ time 1)) _316) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6082 (= ?x399 _315)))
 (let (($x6087 (and $x6082 $x415)))
 (=> $x6087 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6100 (= ?x399 _316)))
 (=> (and $x6100 $x398) (and (= (time-to-state (+ time 1)) _317) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6100 (= ?x399 _316)))
 (let (($x6105 (and $x6100 $x415)))
 (=> $x6105 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6118 (= ?x399 _317)))
 (=> (and $x6118 $x398) (and (= (time-to-state (+ time 1)) _318) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6118 (= ?x399 _317)))
 (let (($x6123 (and $x6118 $x415)))
 (=> $x6123 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6136 (= ?x399 _318)))
 (=> (and $x6136 $x398) (and (= (time-to-state (+ time 1)) _319) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6136 (= ?x399 _318)))
 (let (($x6141 (and $x6136 $x415)))
 (=> $x6141 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6154 (= ?x399 _319)))
 (=> (and $x6154 $x398) (and (= (time-to-state (+ time 1)) _320) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6154 (= ?x399 _319)))
 (let (($x6159 (and $x6154 $x415)))
 (=> $x6159 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6172 (= ?x399 _320)))
 (=> (and $x6172 $x398) (and (= (time-to-state (+ time 1)) _321) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6172 (= ?x399 _320)))
 (let (($x6177 (and $x6172 $x415)))
 (=> $x6177 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6190 (= ?x399 _321)))
 (=> (and $x6190 $x398) (and (= (time-to-state (+ time 1)) _322) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6190 (= ?x399 _321)))
 (let (($x6195 (and $x6190 $x415)))
 (=> $x6195 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6208 (= ?x399 _322)))
 (=> (and $x6208 $x398) (and (= (time-to-state (+ time 1)) _323) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6208 (= ?x399 _322)))
 (let (($x6213 (and $x6208 $x415)))
 (=> $x6213 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6226 (= ?x399 _323)))
 (=> (and $x6226 $x398) (and (= (time-to-state (+ time 1)) _324) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6226 (= ?x399 _323)))
 (let (($x6231 (and $x6226 $x415)))
 (=> $x6231 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6244 (= ?x399 _324)))
 (=> (and $x6244 $x398) (and (= (time-to-state (+ time 1)) _325) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6244 (= ?x399 _324)))
 (let (($x6249 (and $x6244 $x415)))
 (=> $x6249 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6262 (= ?x399 _325)))
 (=> (and $x6262 $x398) (and (= (time-to-state (+ time 1)) _326) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6262 (= ?x399 _325)))
 (let (($x6267 (and $x6262 $x415)))
 (=> $x6267 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6280 (= ?x399 _326)))
 (=> (and $x6280 $x398) (and (= (time-to-state (+ time 1)) _327) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6280 (= ?x399 _326)))
 (let (($x6285 (and $x6280 $x415)))
 (=> $x6285 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6298 (= ?x399 _327)))
 (=> (and $x6298 $x398) (and (= (time-to-state (+ time 1)) _328) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6298 (= ?x399 _327)))
 (let (($x6303 (and $x6298 $x415)))
 (=> $x6303 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6316 (= ?x399 _328)))
 (=> (and $x6316 $x398) (and (= (time-to-state (+ time 1)) _329) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6316 (= ?x399 _328)))
 (let (($x6321 (and $x6316 $x415)))
 (=> $x6321 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6334 (= ?x399 _329)))
 (=> (and $x6334 $x398) (and (= (time-to-state (+ time 1)) _330) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6334 (= ?x399 _329)))
 (let (($x6339 (and $x6334 $x415)))
 (=> $x6339 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6352 (= ?x399 _330)))
 (=> (and $x6352 $x398) (and (= (time-to-state (+ time 1)) _331) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6352 (= ?x399 _330)))
 (let (($x6357 (and $x6352 $x415)))
 (=> $x6357 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6370 (= ?x399 _331)))
 (=> (and $x6370 $x398) (and (= (time-to-state (+ time 1)) _332) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6370 (= ?x399 _331)))
 (let (($x6375 (and $x6370 $x415)))
 (=> $x6375 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6388 (= ?x399 _332)))
 (=> (and $x6388 $x398) (and (= (time-to-state (+ time 1)) _333) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6388 (= ?x399 _332)))
 (let (($x6393 (and $x6388 $x415)))
 (=> $x6393 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6406 (= ?x399 _333)))
 (=> (and $x6406 $x398) (and (= (time-to-state (+ time 1)) _334) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6406 (= ?x399 _333)))
 (let (($x6411 (and $x6406 $x415)))
 (=> $x6411 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6424 (= ?x399 _334)))
 (=> (and $x6424 $x398) (and (= (time-to-state (+ time 1)) _335) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6424 (= ?x399 _334)))
 (let (($x6429 (and $x6424 $x415)))
 (=> $x6429 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6442 (= ?x399 _335)))
 (=> (and $x6442 $x398) (and (= (time-to-state (+ time 1)) _336) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6442 (= ?x399 _335)))
 (let (($x6447 (and $x6442 $x415)))
 (=> $x6447 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6460 (= ?x399 _336)))
 (=> (and $x6460 $x398) (and (= (time-to-state (+ time 1)) _337) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6460 (= ?x399 _336)))
 (let (($x6465 (and $x6460 $x415)))
 (=> $x6465 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6478 (= ?x399 _337)))
 (=> (and $x6478 $x398) (and (= (time-to-state (+ time 1)) _338) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6478 (= ?x399 _337)))
 (let (($x6483 (and $x6478 $x415)))
 (=> $x6483 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6496 (= ?x399 _338)))
 (=> (and $x6496 $x398) (and (= (time-to-state (+ time 1)) _339) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6496 (= ?x399 _338)))
 (let (($x6501 (and $x6496 $x415)))
 (=> $x6501 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let (($x393 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x397 (input-arg0 time)))
 (let (($x398 (and (distinct ?x397 0) true)))
 (let ((?x399 (time-to-state time)))
 (let (($x6514 (= ?x399 _339)))
 (=> (and $x6514 $x398) (and (= (time-to-state (+ time 1)) _340) $x393))))))))
 )
(assert
 (forall ((time Int) )(let ((?x391 (+ time 1)))
 (let ((?x394 (time-to-state ?x391)))
 (let (($x414 (= ?x394 ERR)))
 (let ((?x397 (input-arg0 time)))
 (let (($x415 (= ?x397 1)))
 (let ((?x399 (time-to-state time)))
 (let (($x6514 (= ?x399 _339)))
 (let (($x6519 (and $x6514 $x415)))
 (=> $x6519 $x414))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x399 (time-to-state time)))
 (let (($x6522 (= ?x399 ERR)))
 (and $x6522 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340) true))
(check-sat)
