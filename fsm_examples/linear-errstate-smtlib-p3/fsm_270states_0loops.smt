; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(assert
 (let ((?x279 (time-to-state 0)))
 (= ?x279 _0)))
(assert
 (let ((?x299 (input-arg0 0)))
 (= ?x299 0)))
(assert
 (let ((?x301 (var1_0 0)))
 (= ?x301 0)))
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x330 (= ?x329 _0)))
 (let (($x346 (and $x330 $x345)))
 (=> $x346 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x360 (= ?x329 _1)))
 (let (($x365 (and $x360 $x345)))
 (=> $x365 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x378 (= ?x329 _2)))
 (let (($x383 (and $x378 $x345)))
 (=> $x383 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x396 (= ?x329 _3)))
 (let (($x401 (and $x396 $x345)))
 (=> $x401 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x414 (= ?x329 _4)))
 (let (($x419 (and $x414 $x345)))
 (=> $x419 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x432 (= ?x329 _5)))
 (let (($x437 (and $x432 $x345)))
 (=> $x437 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x450 (= ?x329 _6)))
 (let (($x455 (and $x450 $x345)))
 (=> $x455 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x468 (= ?x329 _7)))
 (let (($x473 (and $x468 $x345)))
 (=> $x473 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x486 (= ?x329 _8)))
 (let (($x491 (and $x486 $x345)))
 (=> $x491 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x504 (= ?x329 _9)))
 (let (($x509 (and $x504 $x345)))
 (=> $x509 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x522 (= ?x329 _10)))
 (let (($x527 (and $x522 $x345)))
 (=> $x527 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x540 (= ?x329 _11)))
 (let (($x545 (and $x540 $x345)))
 (=> $x545 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x558 (= ?x329 _12)))
 (let (($x563 (and $x558 $x345)))
 (=> $x563 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x576 (= ?x329 _13)))
 (let (($x581 (and $x576 $x345)))
 (=> $x581 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x594 (= ?x329 _14)))
 (let (($x599 (and $x594 $x345)))
 (=> $x599 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x612 (= ?x329 _15)))
 (let (($x617 (and $x612 $x345)))
 (=> $x617 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x630 (= ?x329 _16)))
 (let (($x635 (and $x630 $x345)))
 (=> $x635 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x648 (= ?x329 _17)))
 (let (($x653 (and $x648 $x345)))
 (=> $x653 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x666 (= ?x329 _18)))
 (let (($x671 (and $x666 $x345)))
 (=> $x671 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x684 (= ?x329 _19)))
 (let (($x689 (and $x684 $x345)))
 (=> $x689 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x702 (= ?x329 _20)))
 (let (($x707 (and $x702 $x345)))
 (=> $x707 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x720 (= ?x329 _21)))
 (let (($x725 (and $x720 $x345)))
 (=> $x725 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x738 (= ?x329 _22)))
 (let (($x743 (and $x738 $x345)))
 (=> $x743 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x756 (= ?x329 _23)))
 (let (($x761 (and $x756 $x345)))
 (=> $x761 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x774 (= ?x329 _24)))
 (let (($x779 (and $x774 $x345)))
 (=> $x779 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x792 (= ?x329 _25)))
 (let (($x797 (and $x792 $x345)))
 (=> $x797 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x810 (= ?x329 _26)))
 (let (($x815 (and $x810 $x345)))
 (=> $x815 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x828 (= ?x329 _27)))
 (let (($x833 (and $x828 $x345)))
 (=> $x833 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x846 (= ?x329 _28)))
 (let (($x851 (and $x846 $x345)))
 (=> $x851 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x864 (= ?x329 _29)))
 (let (($x869 (and $x864 $x345)))
 (=> $x869 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x882 (= ?x329 _30)))
 (let (($x887 (and $x882 $x345)))
 (=> $x887 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x900 (= ?x329 _31)))
 (let (($x905 (and $x900 $x345)))
 (=> $x905 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x918 (= ?x329 _32)))
 (let (($x923 (and $x918 $x345)))
 (=> $x923 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x936 (= ?x329 _33)))
 (let (($x941 (and $x936 $x345)))
 (=> $x941 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x954 (= ?x329 _34)))
 (let (($x959 (and $x954 $x345)))
 (=> $x959 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x972 (= ?x329 _35)))
 (let (($x977 (and $x972 $x345)))
 (=> $x977 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x990 (= ?x329 _36)))
 (let (($x995 (and $x990 $x345)))
 (=> $x995 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1008 (= ?x329 _37)))
 (let (($x1013 (and $x1008 $x345)))
 (=> $x1013 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1026 (= ?x329 _38)))
 (let (($x1031 (and $x1026 $x345)))
 (=> $x1031 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1044 (= ?x329 _39)))
 (let (($x1049 (and $x1044 $x345)))
 (=> $x1049 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1062 (= ?x329 _40)))
 (let (($x1067 (and $x1062 $x345)))
 (=> $x1067 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1080 (= ?x329 _41)))
 (let (($x1085 (and $x1080 $x345)))
 (=> $x1085 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1098 (= ?x329 _42)))
 (let (($x1103 (and $x1098 $x345)))
 (=> $x1103 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1116 (= ?x329 _43)))
 (let (($x1121 (and $x1116 $x345)))
 (=> $x1121 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1134 (= ?x329 _44)))
 (let (($x1139 (and $x1134 $x345)))
 (=> $x1139 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1152 (= ?x329 _45)))
 (let (($x1157 (and $x1152 $x345)))
 (=> $x1157 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1170 (= ?x329 _46)))
 (let (($x1175 (and $x1170 $x345)))
 (=> $x1175 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1188 (= ?x329 _47)))
 (let (($x1193 (and $x1188 $x345)))
 (=> $x1193 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1206 (= ?x329 _48)))
 (let (($x1211 (and $x1206 $x345)))
 (=> $x1211 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1224 (= ?x329 _49)))
 (let (($x1229 (and $x1224 $x345)))
 (=> $x1229 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1242 (= ?x329 _50)))
 (let (($x1247 (and $x1242 $x345)))
 (=> $x1247 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1260 (= ?x329 _51)))
 (let (($x1265 (and $x1260 $x345)))
 (=> $x1265 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1278 (= ?x329 _52)))
 (let (($x1283 (and $x1278 $x345)))
 (=> $x1283 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1296 (= ?x329 _53)))
 (let (($x1301 (and $x1296 $x345)))
 (=> $x1301 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1314 (= ?x329 _54)))
 (let (($x1319 (and $x1314 $x345)))
 (=> $x1319 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1332 (= ?x329 _55)))
 (let (($x1337 (and $x1332 $x345)))
 (=> $x1337 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1350 (= ?x329 _56)))
 (let (($x1355 (and $x1350 $x345)))
 (=> $x1355 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1368 (= ?x329 _57)))
 (let (($x1373 (and $x1368 $x345)))
 (=> $x1373 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1386 (= ?x329 _58)))
 (let (($x1391 (and $x1386 $x345)))
 (=> $x1391 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1404 (= ?x329 _59)))
 (let (($x1409 (and $x1404 $x345)))
 (=> $x1409 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1422 (= ?x329 _60)))
 (let (($x1427 (and $x1422 $x345)))
 (=> $x1427 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1440 (= ?x329 _61)))
 (let (($x1445 (and $x1440 $x345)))
 (=> $x1445 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1458 (= ?x329 _62)))
 (let (($x1463 (and $x1458 $x345)))
 (=> $x1463 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1476 (= ?x329 _63)))
 (let (($x1481 (and $x1476 $x345)))
 (=> $x1481 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1494 (= ?x329 _64)))
 (let (($x1499 (and $x1494 $x345)))
 (=> $x1499 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1512 (= ?x329 _65)))
 (let (($x1517 (and $x1512 $x345)))
 (=> $x1517 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1530 (= ?x329 _66)))
 (let (($x1535 (and $x1530 $x345)))
 (=> $x1535 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1548 (= ?x329 _67)))
 (let (($x1553 (and $x1548 $x345)))
 (=> $x1553 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1566 (= ?x329 _68)))
 (let (($x1571 (and $x1566 $x345)))
 (=> $x1571 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1584 (= ?x329 _69)))
 (let (($x1589 (and $x1584 $x345)))
 (=> $x1589 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1602 (= ?x329 _70)))
 (let (($x1607 (and $x1602 $x345)))
 (=> $x1607 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1620 (= ?x329 _71)))
 (let (($x1625 (and $x1620 $x345)))
 (=> $x1625 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1638 (= ?x329 _72)))
 (let (($x1643 (and $x1638 $x345)))
 (=> $x1643 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1656 (= ?x329 _73)))
 (let (($x1661 (and $x1656 $x345)))
 (=> $x1661 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1674 (= ?x329 _74)))
 (let (($x1679 (and $x1674 $x345)))
 (=> $x1679 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1692 (= ?x329 _75)))
 (let (($x1697 (and $x1692 $x345)))
 (=> $x1697 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1710 (= ?x329 _76)))
 (let (($x1715 (and $x1710 $x345)))
 (=> $x1715 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1728 (= ?x329 _77)))
 (let (($x1733 (and $x1728 $x345)))
 (=> $x1733 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1746 (= ?x329 _78)))
 (let (($x1751 (and $x1746 $x345)))
 (=> $x1751 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1764 (= ?x329 _79)))
 (let (($x1769 (and $x1764 $x345)))
 (=> $x1769 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1782 (= ?x329 _80)))
 (let (($x1787 (and $x1782 $x345)))
 (=> $x1787 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1800 (= ?x329 _81)))
 (let (($x1805 (and $x1800 $x345)))
 (=> $x1805 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1818 (= ?x329 _82)))
 (let (($x1823 (and $x1818 $x345)))
 (=> $x1823 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1836 (= ?x329 _83)))
 (let (($x1841 (and $x1836 $x345)))
 (=> $x1841 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1854 (= ?x329 _84)))
 (let (($x1859 (and $x1854 $x345)))
 (=> $x1859 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1872 (= ?x329 _85)))
 (let (($x1877 (and $x1872 $x345)))
 (=> $x1877 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1890 (= ?x329 _86)))
 (let (($x1895 (and $x1890 $x345)))
 (=> $x1895 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1908 (= ?x329 _87)))
 (let (($x1913 (and $x1908 $x345)))
 (=> $x1913 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1926 (= ?x329 _88)))
 (let (($x1931 (and $x1926 $x345)))
 (=> $x1931 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1944 (= ?x329 _89)))
 (let (($x1949 (and $x1944 $x345)))
 (=> $x1949 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1962 (= ?x329 _90)))
 (let (($x1967 (and $x1962 $x345)))
 (=> $x1967 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1980 (= ?x329 _91)))
 (let (($x1985 (and $x1980 $x345)))
 (=> $x1985 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x1998 (= ?x329 _92)))
 (let (($x2003 (and $x1998 $x345)))
 (=> $x2003 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2016 (= ?x329 _93)))
 (let (($x2021 (and $x2016 $x345)))
 (=> $x2021 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2034 (= ?x329 _94)))
 (let (($x2039 (and $x2034 $x345)))
 (=> $x2039 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2052 (= ?x329 _95)))
 (let (($x2057 (and $x2052 $x345)))
 (=> $x2057 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2070 (= ?x329 _96)))
 (let (($x2075 (and $x2070 $x345)))
 (=> $x2075 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2088 (= ?x329 _97)))
 (let (($x2093 (and $x2088 $x345)))
 (=> $x2093 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2106 (= ?x329 _98)))
 (let (($x2111 (and $x2106 $x345)))
 (=> $x2111 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x323))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2124 (= ?x329 _99)))
 (let (($x2129 (and $x2124 $x345)))
 (=> $x2129 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2142 (= ?x329 _100)))
 (=> (and $x2142 $x328) (and (= (time-to-state (+ time 1)) _101) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2142 (= ?x329 _100)))
 (let (($x2147 (and $x2142 $x345)))
 (=> $x2147 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2160 (= ?x329 _101)))
 (=> (and $x2160 $x328) (and (= (time-to-state (+ time 1)) _102) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2160 (= ?x329 _101)))
 (let (($x2165 (and $x2160 $x345)))
 (=> $x2165 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2178 (= ?x329 _102)))
 (=> (and $x2178 $x328) (and (= (time-to-state (+ time 1)) _103) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2178 (= ?x329 _102)))
 (let (($x2183 (and $x2178 $x345)))
 (=> $x2183 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2196 (= ?x329 _103)))
 (=> (and $x2196 $x328) (and (= (time-to-state (+ time 1)) _104) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2196 (= ?x329 _103)))
 (let (($x2201 (and $x2196 $x345)))
 (=> $x2201 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2214 (= ?x329 _104)))
 (=> (and $x2214 $x328) (and (= (time-to-state (+ time 1)) _105) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2214 (= ?x329 _104)))
 (let (($x2219 (and $x2214 $x345)))
 (=> $x2219 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2232 (= ?x329 _105)))
 (=> (and $x2232 $x328) (and (= (time-to-state (+ time 1)) _106) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2232 (= ?x329 _105)))
 (let (($x2237 (and $x2232 $x345)))
 (=> $x2237 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2250 (= ?x329 _106)))
 (=> (and $x2250 $x328) (and (= (time-to-state (+ time 1)) _107) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2250 (= ?x329 _106)))
 (let (($x2255 (and $x2250 $x345)))
 (=> $x2255 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2268 (= ?x329 _107)))
 (=> (and $x2268 $x328) (and (= (time-to-state (+ time 1)) _108) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2268 (= ?x329 _107)))
 (let (($x2273 (and $x2268 $x345)))
 (=> $x2273 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2286 (= ?x329 _108)))
 (=> (and $x2286 $x328) (and (= (time-to-state (+ time 1)) _109) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2286 (= ?x329 _108)))
 (let (($x2291 (and $x2286 $x345)))
 (=> $x2291 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2304 (= ?x329 _109)))
 (=> (and $x2304 $x328) (and (= (time-to-state (+ time 1)) _110) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2304 (= ?x329 _109)))
 (let (($x2309 (and $x2304 $x345)))
 (=> $x2309 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2322 (= ?x329 _110)))
 (=> (and $x2322 $x328) (and (= (time-to-state (+ time 1)) _111) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2322 (= ?x329 _110)))
 (let (($x2327 (and $x2322 $x345)))
 (=> $x2327 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2340 (= ?x329 _111)))
 (=> (and $x2340 $x328) (and (= (time-to-state (+ time 1)) _112) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2340 (= ?x329 _111)))
 (let (($x2345 (and $x2340 $x345)))
 (=> $x2345 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2358 (= ?x329 _112)))
 (=> (and $x2358 $x328) (and (= (time-to-state (+ time 1)) _113) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2358 (= ?x329 _112)))
 (let (($x2363 (and $x2358 $x345)))
 (=> $x2363 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2376 (= ?x329 _113)))
 (=> (and $x2376 $x328) (and (= (time-to-state (+ time 1)) _114) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2376 (= ?x329 _113)))
 (let (($x2381 (and $x2376 $x345)))
 (=> $x2381 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2394 (= ?x329 _114)))
 (=> (and $x2394 $x328) (and (= (time-to-state (+ time 1)) _115) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2394 (= ?x329 _114)))
 (let (($x2399 (and $x2394 $x345)))
 (=> $x2399 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2412 (= ?x329 _115)))
 (=> (and $x2412 $x328) (and (= (time-to-state (+ time 1)) _116) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2412 (= ?x329 _115)))
 (let (($x2417 (and $x2412 $x345)))
 (=> $x2417 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2430 (= ?x329 _116)))
 (=> (and $x2430 $x328) (and (= (time-to-state (+ time 1)) _117) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2430 (= ?x329 _116)))
 (let (($x2435 (and $x2430 $x345)))
 (=> $x2435 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2448 (= ?x329 _117)))
 (=> (and $x2448 $x328) (and (= (time-to-state (+ time 1)) _118) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2448 (= ?x329 _117)))
 (let (($x2453 (and $x2448 $x345)))
 (=> $x2453 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2466 (= ?x329 _118)))
 (=> (and $x2466 $x328) (and (= (time-to-state (+ time 1)) _119) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2466 (= ?x329 _118)))
 (let (($x2471 (and $x2466 $x345)))
 (=> $x2471 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2484 (= ?x329 _119)))
 (=> (and $x2484 $x328) (and (= (time-to-state (+ time 1)) _120) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2484 (= ?x329 _119)))
 (let (($x2489 (and $x2484 $x345)))
 (=> $x2489 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2502 (= ?x329 _120)))
 (=> (and $x2502 $x328) (and (= (time-to-state (+ time 1)) _121) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2502 (= ?x329 _120)))
 (let (($x2507 (and $x2502 $x345)))
 (=> $x2507 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2520 (= ?x329 _121)))
 (=> (and $x2520 $x328) (and (= (time-to-state (+ time 1)) _122) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2520 (= ?x329 _121)))
 (let (($x2525 (and $x2520 $x345)))
 (=> $x2525 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2538 (= ?x329 _122)))
 (=> (and $x2538 $x328) (and (= (time-to-state (+ time 1)) _123) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2538 (= ?x329 _122)))
 (let (($x2543 (and $x2538 $x345)))
 (=> $x2543 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2556 (= ?x329 _123)))
 (=> (and $x2556 $x328) (and (= (time-to-state (+ time 1)) _124) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2556 (= ?x329 _123)))
 (let (($x2561 (and $x2556 $x345)))
 (=> $x2561 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2574 (= ?x329 _124)))
 (=> (and $x2574 $x328) (and (= (time-to-state (+ time 1)) _125) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2574 (= ?x329 _124)))
 (let (($x2579 (and $x2574 $x345)))
 (=> $x2579 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2592 (= ?x329 _125)))
 (=> (and $x2592 $x328) (and (= (time-to-state (+ time 1)) _126) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2592 (= ?x329 _125)))
 (let (($x2597 (and $x2592 $x345)))
 (=> $x2597 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2610 (= ?x329 _126)))
 (=> (and $x2610 $x328) (and (= (time-to-state (+ time 1)) _127) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2610 (= ?x329 _126)))
 (let (($x2615 (and $x2610 $x345)))
 (=> $x2615 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2628 (= ?x329 _127)))
 (=> (and $x2628 $x328) (and (= (time-to-state (+ time 1)) _128) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2628 (= ?x329 _127)))
 (let (($x2633 (and $x2628 $x345)))
 (=> $x2633 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2646 (= ?x329 _128)))
 (=> (and $x2646 $x328) (and (= (time-to-state (+ time 1)) _129) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2646 (= ?x329 _128)))
 (let (($x2651 (and $x2646 $x345)))
 (=> $x2651 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2664 (= ?x329 _129)))
 (=> (and $x2664 $x328) (and (= (time-to-state (+ time 1)) _130) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2664 (= ?x329 _129)))
 (let (($x2669 (and $x2664 $x345)))
 (=> $x2669 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2682 (= ?x329 _130)))
 (=> (and $x2682 $x328) (and (= (time-to-state (+ time 1)) _131) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2682 (= ?x329 _130)))
 (let (($x2687 (and $x2682 $x345)))
 (=> $x2687 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2700 (= ?x329 _131)))
 (=> (and $x2700 $x328) (and (= (time-to-state (+ time 1)) _132) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2700 (= ?x329 _131)))
 (let (($x2705 (and $x2700 $x345)))
 (=> $x2705 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2718 (= ?x329 _132)))
 (=> (and $x2718 $x328) (and (= (time-to-state (+ time 1)) _133) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2718 (= ?x329 _132)))
 (let (($x2723 (and $x2718 $x345)))
 (=> $x2723 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2736 (= ?x329 _133)))
 (=> (and $x2736 $x328) (and (= (time-to-state (+ time 1)) _134) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2736 (= ?x329 _133)))
 (let (($x2741 (and $x2736 $x345)))
 (=> $x2741 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2754 (= ?x329 _134)))
 (=> (and $x2754 $x328) (and (= (time-to-state (+ time 1)) _135) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2754 (= ?x329 _134)))
 (let (($x2759 (and $x2754 $x345)))
 (=> $x2759 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2772 (= ?x329 _135)))
 (=> (and $x2772 $x328) (and (= (time-to-state (+ time 1)) _136) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2772 (= ?x329 _135)))
 (let (($x2777 (and $x2772 $x345)))
 (=> $x2777 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2790 (= ?x329 _136)))
 (=> (and $x2790 $x328) (and (= (time-to-state (+ time 1)) _137) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2790 (= ?x329 _136)))
 (let (($x2795 (and $x2790 $x345)))
 (=> $x2795 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2808 (= ?x329 _137)))
 (=> (and $x2808 $x328) (and (= (time-to-state (+ time 1)) _138) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2808 (= ?x329 _137)))
 (let (($x2813 (and $x2808 $x345)))
 (=> $x2813 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2826 (= ?x329 _138)))
 (=> (and $x2826 $x328) (and (= (time-to-state (+ time 1)) _139) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2826 (= ?x329 _138)))
 (let (($x2831 (and $x2826 $x345)))
 (=> $x2831 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2844 (= ?x329 _139)))
 (=> (and $x2844 $x328) (and (= (time-to-state (+ time 1)) _140) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2844 (= ?x329 _139)))
 (let (($x2849 (and $x2844 $x345)))
 (=> $x2849 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2862 (= ?x329 _140)))
 (=> (and $x2862 $x328) (and (= (time-to-state (+ time 1)) _141) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2862 (= ?x329 _140)))
 (let (($x2867 (and $x2862 $x345)))
 (=> $x2867 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2880 (= ?x329 _141)))
 (=> (and $x2880 $x328) (and (= (time-to-state (+ time 1)) _142) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2880 (= ?x329 _141)))
 (let (($x2885 (and $x2880 $x345)))
 (=> $x2885 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2898 (= ?x329 _142)))
 (=> (and $x2898 $x328) (and (= (time-to-state (+ time 1)) _143) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2898 (= ?x329 _142)))
 (let (($x2903 (and $x2898 $x345)))
 (=> $x2903 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2916 (= ?x329 _143)))
 (=> (and $x2916 $x328) (and (= (time-to-state (+ time 1)) _144) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2916 (= ?x329 _143)))
 (let (($x2921 (and $x2916 $x345)))
 (=> $x2921 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2934 (= ?x329 _144)))
 (=> (and $x2934 $x328) (and (= (time-to-state (+ time 1)) _145) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2934 (= ?x329 _144)))
 (let (($x2939 (and $x2934 $x345)))
 (=> $x2939 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2952 (= ?x329 _145)))
 (=> (and $x2952 $x328) (and (= (time-to-state (+ time 1)) _146) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2952 (= ?x329 _145)))
 (let (($x2957 (and $x2952 $x345)))
 (=> $x2957 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2970 (= ?x329 _146)))
 (=> (and $x2970 $x328) (and (= (time-to-state (+ time 1)) _147) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2970 (= ?x329 _146)))
 (let (($x2975 (and $x2970 $x345)))
 (=> $x2975 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x2988 (= ?x329 _147)))
 (=> (and $x2988 $x328) (and (= (time-to-state (+ time 1)) _148) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x2988 (= ?x329 _147)))
 (let (($x2993 (and $x2988 $x345)))
 (=> $x2993 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3006 (= ?x329 _148)))
 (=> (and $x3006 $x328) (and (= (time-to-state (+ time 1)) _149) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3006 (= ?x329 _148)))
 (let (($x3011 (and $x3006 $x345)))
 (=> $x3011 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3024 (= ?x329 _149)))
 (=> (and $x3024 $x328) (and (= (time-to-state (+ time 1)) _150) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3024 (= ?x329 _149)))
 (let (($x3029 (and $x3024 $x345)))
 (=> $x3029 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3042 (= ?x329 _150)))
 (=> (and $x3042 $x328) (and (= (time-to-state (+ time 1)) _151) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3042 (= ?x329 _150)))
 (let (($x3047 (and $x3042 $x345)))
 (=> $x3047 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3060 (= ?x329 _151)))
 (=> (and $x3060 $x328) (and (= (time-to-state (+ time 1)) _152) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3060 (= ?x329 _151)))
 (let (($x3065 (and $x3060 $x345)))
 (=> $x3065 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3078 (= ?x329 _152)))
 (=> (and $x3078 $x328) (and (= (time-to-state (+ time 1)) _153) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3078 (= ?x329 _152)))
 (let (($x3083 (and $x3078 $x345)))
 (=> $x3083 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3096 (= ?x329 _153)))
 (=> (and $x3096 $x328) (and (= (time-to-state (+ time 1)) _154) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3096 (= ?x329 _153)))
 (let (($x3101 (and $x3096 $x345)))
 (=> $x3101 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3114 (= ?x329 _154)))
 (=> (and $x3114 $x328) (and (= (time-to-state (+ time 1)) _155) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3114 (= ?x329 _154)))
 (let (($x3119 (and $x3114 $x345)))
 (=> $x3119 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3132 (= ?x329 _155)))
 (=> (and $x3132 $x328) (and (= (time-to-state (+ time 1)) _156) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3132 (= ?x329 _155)))
 (let (($x3137 (and $x3132 $x345)))
 (=> $x3137 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3150 (= ?x329 _156)))
 (=> (and $x3150 $x328) (and (= (time-to-state (+ time 1)) _157) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3150 (= ?x329 _156)))
 (let (($x3155 (and $x3150 $x345)))
 (=> $x3155 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3168 (= ?x329 _157)))
 (=> (and $x3168 $x328) (and (= (time-to-state (+ time 1)) _158) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3168 (= ?x329 _157)))
 (let (($x3173 (and $x3168 $x345)))
 (=> $x3173 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3186 (= ?x329 _158)))
 (=> (and $x3186 $x328) (and (= (time-to-state (+ time 1)) _159) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3186 (= ?x329 _158)))
 (let (($x3191 (and $x3186 $x345)))
 (=> $x3191 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3204 (= ?x329 _159)))
 (=> (and $x3204 $x328) (and (= (time-to-state (+ time 1)) _160) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3204 (= ?x329 _159)))
 (let (($x3209 (and $x3204 $x345)))
 (=> $x3209 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3222 (= ?x329 _160)))
 (=> (and $x3222 $x328) (and (= (time-to-state (+ time 1)) _161) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3222 (= ?x329 _160)))
 (let (($x3227 (and $x3222 $x345)))
 (=> $x3227 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3240 (= ?x329 _161)))
 (=> (and $x3240 $x328) (and (= (time-to-state (+ time 1)) _162) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3240 (= ?x329 _161)))
 (let (($x3245 (and $x3240 $x345)))
 (=> $x3245 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3258 (= ?x329 _162)))
 (=> (and $x3258 $x328) (and (= (time-to-state (+ time 1)) _163) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3258 (= ?x329 _162)))
 (let (($x3263 (and $x3258 $x345)))
 (=> $x3263 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3276 (= ?x329 _163)))
 (=> (and $x3276 $x328) (and (= (time-to-state (+ time 1)) _164) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3276 (= ?x329 _163)))
 (let (($x3281 (and $x3276 $x345)))
 (=> $x3281 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3294 (= ?x329 _164)))
 (=> (and $x3294 $x328) (and (= (time-to-state (+ time 1)) _165) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3294 (= ?x329 _164)))
 (let (($x3299 (and $x3294 $x345)))
 (=> $x3299 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3312 (= ?x329 _165)))
 (=> (and $x3312 $x328) (and (= (time-to-state (+ time 1)) _166) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3312 (= ?x329 _165)))
 (let (($x3317 (and $x3312 $x345)))
 (=> $x3317 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3330 (= ?x329 _166)))
 (=> (and $x3330 $x328) (and (= (time-to-state (+ time 1)) _167) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3330 (= ?x329 _166)))
 (let (($x3335 (and $x3330 $x345)))
 (=> $x3335 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3348 (= ?x329 _167)))
 (=> (and $x3348 $x328) (and (= (time-to-state (+ time 1)) _168) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3348 (= ?x329 _167)))
 (let (($x3353 (and $x3348 $x345)))
 (=> $x3353 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3366 (= ?x329 _168)))
 (=> (and $x3366 $x328) (and (= (time-to-state (+ time 1)) _169) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3366 (= ?x329 _168)))
 (let (($x3371 (and $x3366 $x345)))
 (=> $x3371 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3384 (= ?x329 _169)))
 (=> (and $x3384 $x328) (and (= (time-to-state (+ time 1)) _170) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3384 (= ?x329 _169)))
 (let (($x3389 (and $x3384 $x345)))
 (=> $x3389 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3402 (= ?x329 _170)))
 (=> (and $x3402 $x328) (and (= (time-to-state (+ time 1)) _171) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3402 (= ?x329 _170)))
 (let (($x3407 (and $x3402 $x345)))
 (=> $x3407 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3420 (= ?x329 _171)))
 (=> (and $x3420 $x328) (and (= (time-to-state (+ time 1)) _172) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3420 (= ?x329 _171)))
 (let (($x3425 (and $x3420 $x345)))
 (=> $x3425 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3438 (= ?x329 _172)))
 (=> (and $x3438 $x328) (and (= (time-to-state (+ time 1)) _173) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3438 (= ?x329 _172)))
 (let (($x3443 (and $x3438 $x345)))
 (=> $x3443 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3456 (= ?x329 _173)))
 (=> (and $x3456 $x328) (and (= (time-to-state (+ time 1)) _174) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3456 (= ?x329 _173)))
 (let (($x3461 (and $x3456 $x345)))
 (=> $x3461 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3474 (= ?x329 _174)))
 (=> (and $x3474 $x328) (and (= (time-to-state (+ time 1)) _175) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3474 (= ?x329 _174)))
 (let (($x3479 (and $x3474 $x345)))
 (=> $x3479 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3492 (= ?x329 _175)))
 (=> (and $x3492 $x328) (and (= (time-to-state (+ time 1)) _176) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3492 (= ?x329 _175)))
 (let (($x3497 (and $x3492 $x345)))
 (=> $x3497 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3510 (= ?x329 _176)))
 (=> (and $x3510 $x328) (and (= (time-to-state (+ time 1)) _177) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3510 (= ?x329 _176)))
 (let (($x3515 (and $x3510 $x345)))
 (=> $x3515 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3528 (= ?x329 _177)))
 (=> (and $x3528 $x328) (and (= (time-to-state (+ time 1)) _178) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3528 (= ?x329 _177)))
 (let (($x3533 (and $x3528 $x345)))
 (=> $x3533 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3546 (= ?x329 _178)))
 (=> (and $x3546 $x328) (and (= (time-to-state (+ time 1)) _179) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3546 (= ?x329 _178)))
 (let (($x3551 (and $x3546 $x345)))
 (=> $x3551 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3564 (= ?x329 _179)))
 (=> (and $x3564 $x328) (and (= (time-to-state (+ time 1)) _180) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3564 (= ?x329 _179)))
 (let (($x3569 (and $x3564 $x345)))
 (=> $x3569 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3582 (= ?x329 _180)))
 (=> (and $x3582 $x328) (and (= (time-to-state (+ time 1)) _181) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3582 (= ?x329 _180)))
 (let (($x3587 (and $x3582 $x345)))
 (=> $x3587 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3600 (= ?x329 _181)))
 (=> (and $x3600 $x328) (and (= (time-to-state (+ time 1)) _182) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3600 (= ?x329 _181)))
 (let (($x3605 (and $x3600 $x345)))
 (=> $x3605 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3618 (= ?x329 _182)))
 (=> (and $x3618 $x328) (and (= (time-to-state (+ time 1)) _183) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3618 (= ?x329 _182)))
 (let (($x3623 (and $x3618 $x345)))
 (=> $x3623 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3636 (= ?x329 _183)))
 (=> (and $x3636 $x328) (and (= (time-to-state (+ time 1)) _184) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3636 (= ?x329 _183)))
 (let (($x3641 (and $x3636 $x345)))
 (=> $x3641 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3654 (= ?x329 _184)))
 (=> (and $x3654 $x328) (and (= (time-to-state (+ time 1)) _185) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3654 (= ?x329 _184)))
 (let (($x3659 (and $x3654 $x345)))
 (=> $x3659 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3672 (= ?x329 _185)))
 (=> (and $x3672 $x328) (and (= (time-to-state (+ time 1)) _186) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3672 (= ?x329 _185)))
 (let (($x3677 (and $x3672 $x345)))
 (=> $x3677 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3690 (= ?x329 _186)))
 (=> (and $x3690 $x328) (and (= (time-to-state (+ time 1)) _187) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3690 (= ?x329 _186)))
 (let (($x3695 (and $x3690 $x345)))
 (=> $x3695 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3708 (= ?x329 _187)))
 (=> (and $x3708 $x328) (and (= (time-to-state (+ time 1)) _188) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3708 (= ?x329 _187)))
 (let (($x3713 (and $x3708 $x345)))
 (=> $x3713 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3726 (= ?x329 _188)))
 (=> (and $x3726 $x328) (and (= (time-to-state (+ time 1)) _189) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3726 (= ?x329 _188)))
 (let (($x3731 (and $x3726 $x345)))
 (=> $x3731 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3744 (= ?x329 _189)))
 (=> (and $x3744 $x328) (and (= (time-to-state (+ time 1)) _190) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3744 (= ?x329 _189)))
 (let (($x3749 (and $x3744 $x345)))
 (=> $x3749 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3762 (= ?x329 _190)))
 (=> (and $x3762 $x328) (and (= (time-to-state (+ time 1)) _191) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3762 (= ?x329 _190)))
 (let (($x3767 (and $x3762 $x345)))
 (=> $x3767 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3780 (= ?x329 _191)))
 (=> (and $x3780 $x328) (and (= (time-to-state (+ time 1)) _192) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3780 (= ?x329 _191)))
 (let (($x3785 (and $x3780 $x345)))
 (=> $x3785 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3798 (= ?x329 _192)))
 (=> (and $x3798 $x328) (and (= (time-to-state (+ time 1)) _193) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3798 (= ?x329 _192)))
 (let (($x3803 (and $x3798 $x345)))
 (=> $x3803 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3816 (= ?x329 _193)))
 (=> (and $x3816 $x328) (and (= (time-to-state (+ time 1)) _194) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3816 (= ?x329 _193)))
 (let (($x3821 (and $x3816 $x345)))
 (=> $x3821 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3834 (= ?x329 _194)))
 (=> (and $x3834 $x328) (and (= (time-to-state (+ time 1)) _195) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3834 (= ?x329 _194)))
 (let (($x3839 (and $x3834 $x345)))
 (=> $x3839 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3852 (= ?x329 _195)))
 (=> (and $x3852 $x328) (and (= (time-to-state (+ time 1)) _196) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3852 (= ?x329 _195)))
 (let (($x3857 (and $x3852 $x345)))
 (=> $x3857 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3870 (= ?x329 _196)))
 (=> (and $x3870 $x328) (and (= (time-to-state (+ time 1)) _197) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3870 (= ?x329 _196)))
 (let (($x3875 (and $x3870 $x345)))
 (=> $x3875 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3888 (= ?x329 _197)))
 (=> (and $x3888 $x328) (and (= (time-to-state (+ time 1)) _198) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3888 (= ?x329 _197)))
 (let (($x3893 (and $x3888 $x345)))
 (=> $x3893 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3906 (= ?x329 _198)))
 (=> (and $x3906 $x328) (and (= (time-to-state (+ time 1)) _199) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3906 (= ?x329 _198)))
 (let (($x3911 (and $x3906 $x345)))
 (=> $x3911 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3924 (= ?x329 _199)))
 (=> (and $x3924 $x328) (and (= (time-to-state (+ time 1)) _200) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3924 (= ?x329 _199)))
 (let (($x3929 (and $x3924 $x345)))
 (=> $x3929 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3942 (= ?x329 _200)))
 (=> (and $x3942 $x328) (and (= (time-to-state (+ time 1)) _201) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3942 (= ?x329 _200)))
 (let (($x3947 (and $x3942 $x345)))
 (=> $x3947 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3960 (= ?x329 _201)))
 (=> (and $x3960 $x328) (and (= (time-to-state (+ time 1)) _202) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3960 (= ?x329 _201)))
 (let (($x3965 (and $x3960 $x345)))
 (=> $x3965 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3978 (= ?x329 _202)))
 (=> (and $x3978 $x328) (and (= (time-to-state (+ time 1)) _203) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3978 (= ?x329 _202)))
 (let (($x3983 (and $x3978 $x345)))
 (=> $x3983 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x3996 (= ?x329 _203)))
 (=> (and $x3996 $x328) (and (= (time-to-state (+ time 1)) _204) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x3996 (= ?x329 _203)))
 (let (($x4001 (and $x3996 $x345)))
 (=> $x4001 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4014 (= ?x329 _204)))
 (=> (and $x4014 $x328) (and (= (time-to-state (+ time 1)) _205) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4014 (= ?x329 _204)))
 (let (($x4019 (and $x4014 $x345)))
 (=> $x4019 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4032 (= ?x329 _205)))
 (=> (and $x4032 $x328) (and (= (time-to-state (+ time 1)) _206) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4032 (= ?x329 _205)))
 (let (($x4037 (and $x4032 $x345)))
 (=> $x4037 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4050 (= ?x329 _206)))
 (=> (and $x4050 $x328) (and (= (time-to-state (+ time 1)) _207) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4050 (= ?x329 _206)))
 (let (($x4055 (and $x4050 $x345)))
 (=> $x4055 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4068 (= ?x329 _207)))
 (=> (and $x4068 $x328) (and (= (time-to-state (+ time 1)) _208) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4068 (= ?x329 _207)))
 (let (($x4073 (and $x4068 $x345)))
 (=> $x4073 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4086 (= ?x329 _208)))
 (=> (and $x4086 $x328) (and (= (time-to-state (+ time 1)) _209) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4086 (= ?x329 _208)))
 (let (($x4091 (and $x4086 $x345)))
 (=> $x4091 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4104 (= ?x329 _209)))
 (=> (and $x4104 $x328) (and (= (time-to-state (+ time 1)) _210) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4104 (= ?x329 _209)))
 (let (($x4109 (and $x4104 $x345)))
 (=> $x4109 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4122 (= ?x329 _210)))
 (=> (and $x4122 $x328) (and (= (time-to-state (+ time 1)) _211) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4122 (= ?x329 _210)))
 (let (($x4127 (and $x4122 $x345)))
 (=> $x4127 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4140 (= ?x329 _211)))
 (=> (and $x4140 $x328) (and (= (time-to-state (+ time 1)) _212) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4140 (= ?x329 _211)))
 (let (($x4145 (and $x4140 $x345)))
 (=> $x4145 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4158 (= ?x329 _212)))
 (=> (and $x4158 $x328) (and (= (time-to-state (+ time 1)) _213) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4158 (= ?x329 _212)))
 (let (($x4163 (and $x4158 $x345)))
 (=> $x4163 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4176 (= ?x329 _213)))
 (=> (and $x4176 $x328) (and (= (time-to-state (+ time 1)) _214) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4176 (= ?x329 _213)))
 (let (($x4181 (and $x4176 $x345)))
 (=> $x4181 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4194 (= ?x329 _214)))
 (=> (and $x4194 $x328) (and (= (time-to-state (+ time 1)) _215) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4194 (= ?x329 _214)))
 (let (($x4199 (and $x4194 $x345)))
 (=> $x4199 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4212 (= ?x329 _215)))
 (=> (and $x4212 $x328) (and (= (time-to-state (+ time 1)) _216) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4212 (= ?x329 _215)))
 (let (($x4217 (and $x4212 $x345)))
 (=> $x4217 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4230 (= ?x329 _216)))
 (=> (and $x4230 $x328) (and (= (time-to-state (+ time 1)) _217) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4230 (= ?x329 _216)))
 (let (($x4235 (and $x4230 $x345)))
 (=> $x4235 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4248 (= ?x329 _217)))
 (=> (and $x4248 $x328) (and (= (time-to-state (+ time 1)) _218) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4248 (= ?x329 _217)))
 (let (($x4253 (and $x4248 $x345)))
 (=> $x4253 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4266 (= ?x329 _218)))
 (=> (and $x4266 $x328) (and (= (time-to-state (+ time 1)) _219) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4266 (= ?x329 _218)))
 (let (($x4271 (and $x4266 $x345)))
 (=> $x4271 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4284 (= ?x329 _219)))
 (=> (and $x4284 $x328) (and (= (time-to-state (+ time 1)) _220) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4284 (= ?x329 _219)))
 (let (($x4289 (and $x4284 $x345)))
 (=> $x4289 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4302 (= ?x329 _220)))
 (=> (and $x4302 $x328) (and (= (time-to-state (+ time 1)) _221) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4302 (= ?x329 _220)))
 (let (($x4307 (and $x4302 $x345)))
 (=> $x4307 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4320 (= ?x329 _221)))
 (=> (and $x4320 $x328) (and (= (time-to-state (+ time 1)) _222) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4320 (= ?x329 _221)))
 (let (($x4325 (and $x4320 $x345)))
 (=> $x4325 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4338 (= ?x329 _222)))
 (=> (and $x4338 $x328) (and (= (time-to-state (+ time 1)) _223) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4338 (= ?x329 _222)))
 (let (($x4343 (and $x4338 $x345)))
 (=> $x4343 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4356 (= ?x329 _223)))
 (=> (and $x4356 $x328) (and (= (time-to-state (+ time 1)) _224) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4356 (= ?x329 _223)))
 (let (($x4361 (and $x4356 $x345)))
 (=> $x4361 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4374 (= ?x329 _224)))
 (=> (and $x4374 $x328) (and (= (time-to-state (+ time 1)) _225) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4374 (= ?x329 _224)))
 (let (($x4379 (and $x4374 $x345)))
 (=> $x4379 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4392 (= ?x329 _225)))
 (=> (and $x4392 $x328) (and (= (time-to-state (+ time 1)) _226) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4392 (= ?x329 _225)))
 (let (($x4397 (and $x4392 $x345)))
 (=> $x4397 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4410 (= ?x329 _226)))
 (=> (and $x4410 $x328) (and (= (time-to-state (+ time 1)) _227) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4410 (= ?x329 _226)))
 (let (($x4415 (and $x4410 $x345)))
 (=> $x4415 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4428 (= ?x329 _227)))
 (=> (and $x4428 $x328) (and (= (time-to-state (+ time 1)) _228) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4428 (= ?x329 _227)))
 (let (($x4433 (and $x4428 $x345)))
 (=> $x4433 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4446 (= ?x329 _228)))
 (=> (and $x4446 $x328) (and (= (time-to-state (+ time 1)) _229) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4446 (= ?x329 _228)))
 (let (($x4451 (and $x4446 $x345)))
 (=> $x4451 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4464 (= ?x329 _229)))
 (=> (and $x4464 $x328) (and (= (time-to-state (+ time 1)) _230) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4464 (= ?x329 _229)))
 (let (($x4469 (and $x4464 $x345)))
 (=> $x4469 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4482 (= ?x329 _230)))
 (=> (and $x4482 $x328) (and (= (time-to-state (+ time 1)) _231) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4482 (= ?x329 _230)))
 (let (($x4487 (and $x4482 $x345)))
 (=> $x4487 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4500 (= ?x329 _231)))
 (=> (and $x4500 $x328) (and (= (time-to-state (+ time 1)) _232) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4500 (= ?x329 _231)))
 (let (($x4505 (and $x4500 $x345)))
 (=> $x4505 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4518 (= ?x329 _232)))
 (=> (and $x4518 $x328) (and (= (time-to-state (+ time 1)) _233) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4518 (= ?x329 _232)))
 (let (($x4523 (and $x4518 $x345)))
 (=> $x4523 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4536 (= ?x329 _233)))
 (=> (and $x4536 $x328) (and (= (time-to-state (+ time 1)) _234) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4536 (= ?x329 _233)))
 (let (($x4541 (and $x4536 $x345)))
 (=> $x4541 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4554 (= ?x329 _234)))
 (=> (and $x4554 $x328) (and (= (time-to-state (+ time 1)) _235) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4554 (= ?x329 _234)))
 (let (($x4559 (and $x4554 $x345)))
 (=> $x4559 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4572 (= ?x329 _235)))
 (=> (and $x4572 $x328) (and (= (time-to-state (+ time 1)) _236) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4572 (= ?x329 _235)))
 (let (($x4577 (and $x4572 $x345)))
 (=> $x4577 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4590 (= ?x329 _236)))
 (=> (and $x4590 $x328) (and (= (time-to-state (+ time 1)) _237) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4590 (= ?x329 _236)))
 (let (($x4595 (and $x4590 $x345)))
 (=> $x4595 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4608 (= ?x329 _237)))
 (=> (and $x4608 $x328) (and (= (time-to-state (+ time 1)) _238) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4608 (= ?x329 _237)))
 (let (($x4613 (and $x4608 $x345)))
 (=> $x4613 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4626 (= ?x329 _238)))
 (=> (and $x4626 $x328) (and (= (time-to-state (+ time 1)) _239) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4626 (= ?x329 _238)))
 (let (($x4631 (and $x4626 $x345)))
 (=> $x4631 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4644 (= ?x329 _239)))
 (=> (and $x4644 $x328) (and (= (time-to-state (+ time 1)) _240) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4644 (= ?x329 _239)))
 (let (($x4649 (and $x4644 $x345)))
 (=> $x4649 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4662 (= ?x329 _240)))
 (=> (and $x4662 $x328) (and (= (time-to-state (+ time 1)) _241) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4662 (= ?x329 _240)))
 (let (($x4667 (and $x4662 $x345)))
 (=> $x4667 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4680 (= ?x329 _241)))
 (=> (and $x4680 $x328) (and (= (time-to-state (+ time 1)) _242) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4680 (= ?x329 _241)))
 (let (($x4685 (and $x4680 $x345)))
 (=> $x4685 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4698 (= ?x329 _242)))
 (=> (and $x4698 $x328) (and (= (time-to-state (+ time 1)) _243) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4698 (= ?x329 _242)))
 (let (($x4703 (and $x4698 $x345)))
 (=> $x4703 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4716 (= ?x329 _243)))
 (=> (and $x4716 $x328) (and (= (time-to-state (+ time 1)) _244) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4716 (= ?x329 _243)))
 (let (($x4721 (and $x4716 $x345)))
 (=> $x4721 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4734 (= ?x329 _244)))
 (=> (and $x4734 $x328) (and (= (time-to-state (+ time 1)) _245) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4734 (= ?x329 _244)))
 (let (($x4739 (and $x4734 $x345)))
 (=> $x4739 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4752 (= ?x329 _245)))
 (=> (and $x4752 $x328) (and (= (time-to-state (+ time 1)) _246) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4752 (= ?x329 _245)))
 (let (($x4757 (and $x4752 $x345)))
 (=> $x4757 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4770 (= ?x329 _246)))
 (=> (and $x4770 $x328) (and (= (time-to-state (+ time 1)) _247) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4770 (= ?x329 _246)))
 (let (($x4775 (and $x4770 $x345)))
 (=> $x4775 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4788 (= ?x329 _247)))
 (=> (and $x4788 $x328) (and (= (time-to-state (+ time 1)) _248) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4788 (= ?x329 _247)))
 (let (($x4793 (and $x4788 $x345)))
 (=> $x4793 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4806 (= ?x329 _248)))
 (=> (and $x4806 $x328) (and (= (time-to-state (+ time 1)) _249) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4806 (= ?x329 _248)))
 (let (($x4811 (and $x4806 $x345)))
 (=> $x4811 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4824 (= ?x329 _249)))
 (=> (and $x4824 $x328) (and (= (time-to-state (+ time 1)) _250) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4824 (= ?x329 _249)))
 (let (($x4829 (and $x4824 $x345)))
 (=> $x4829 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4842 (= ?x329 _250)))
 (=> (and $x4842 $x328) (and (= (time-to-state (+ time 1)) _251) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4842 (= ?x329 _250)))
 (let (($x4847 (and $x4842 $x345)))
 (=> $x4847 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4860 (= ?x329 _251)))
 (=> (and $x4860 $x328) (and (= (time-to-state (+ time 1)) _252) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4860 (= ?x329 _251)))
 (let (($x4865 (and $x4860 $x345)))
 (=> $x4865 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4878 (= ?x329 _252)))
 (=> (and $x4878 $x328) (and (= (time-to-state (+ time 1)) _253) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4878 (= ?x329 _252)))
 (let (($x4883 (and $x4878 $x345)))
 (=> $x4883 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4896 (= ?x329 _253)))
 (=> (and $x4896 $x328) (and (= (time-to-state (+ time 1)) _254) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4896 (= ?x329 _253)))
 (let (($x4901 (and $x4896 $x345)))
 (=> $x4901 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4914 (= ?x329 _254)))
 (=> (and $x4914 $x328) (and (= (time-to-state (+ time 1)) _255) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4914 (= ?x329 _254)))
 (let (($x4919 (and $x4914 $x345)))
 (=> $x4919 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4932 (= ?x329 _255)))
 (=> (and $x4932 $x328) (and (= (time-to-state (+ time 1)) _256) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4932 (= ?x329 _255)))
 (let (($x4937 (and $x4932 $x345)))
 (=> $x4937 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4950 (= ?x329 _256)))
 (=> (and $x4950 $x328) (and (= (time-to-state (+ time 1)) _257) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4950 (= ?x329 _256)))
 (let (($x4955 (and $x4950 $x345)))
 (=> $x4955 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4968 (= ?x329 _257)))
 (=> (and $x4968 $x328) (and (= (time-to-state (+ time 1)) _258) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4968 (= ?x329 _257)))
 (let (($x4973 (and $x4968 $x345)))
 (=> $x4973 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x4986 (= ?x329 _258)))
 (=> (and $x4986 $x328) (and (= (time-to-state (+ time 1)) _259) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x4986 (= ?x329 _258)))
 (let (($x4991 (and $x4986 $x345)))
 (=> $x4991 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5004 (= ?x329 _259)))
 (=> (and $x5004 $x328) (and (= (time-to-state (+ time 1)) _260) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5004 (= ?x329 _259)))
 (let (($x5009 (and $x5004 $x345)))
 (=> $x5009 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5022 (= ?x329 _260)))
 (=> (and $x5022 $x328) (and (= (time-to-state (+ time 1)) _261) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5022 (= ?x329 _260)))
 (let (($x5027 (and $x5022 $x345)))
 (=> $x5027 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5040 (= ?x329 _261)))
 (=> (and $x5040 $x328) (and (= (time-to-state (+ time 1)) _262) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5040 (= ?x329 _261)))
 (let (($x5045 (and $x5040 $x345)))
 (=> $x5045 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5058 (= ?x329 _262)))
 (=> (and $x5058 $x328) (and (= (time-to-state (+ time 1)) _263) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5058 (= ?x329 _262)))
 (let (($x5063 (and $x5058 $x345)))
 (=> $x5063 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5076 (= ?x329 _263)))
 (=> (and $x5076 $x328) (and (= (time-to-state (+ time 1)) _264) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5076 (= ?x329 _263)))
 (let (($x5081 (and $x5076 $x345)))
 (=> $x5081 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5094 (= ?x329 _264)))
 (=> (and $x5094 $x328) (and (= (time-to-state (+ time 1)) _265) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5094 (= ?x329 _264)))
 (let (($x5099 (and $x5094 $x345)))
 (=> $x5099 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5112 (= ?x329 _265)))
 (=> (and $x5112 $x328) (and (= (time-to-state (+ time 1)) _266) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5112 (= ?x329 _265)))
 (let (($x5117 (and $x5112 $x345)))
 (=> $x5117 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5130 (= ?x329 _266)))
 (=> (and $x5130 $x328) (and (= (time-to-state (+ time 1)) _267) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5130 (= ?x329 _266)))
 (let (($x5135 (and $x5130 $x345)))
 (=> $x5135 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5148 (= ?x329 _267)))
 (=> (and $x5148 $x328) (and (= (time-to-state (+ time 1)) _268) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5148 (= ?x329 _267)))
 (let (($x5153 (and $x5148 $x345)))
 (=> $x5153 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5166 (= ?x329 _268)))
 (=> (and $x5166 $x328) (and (= (time-to-state (+ time 1)) _269) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5166 (= ?x329 _268)))
 (let (($x5171 (and $x5166 $x345)))
 (=> $x5171 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let (($x323 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x327 (input-arg0 time)))
 (let (($x328 (and (distinct ?x327 0) true)))
 (let ((?x329 (time-to-state time)))
 (let (($x5184 (= ?x329 _269)))
 (=> (and $x5184 $x328) (and (= (time-to-state (+ time 1)) _270) $x323))))))))
 )
(assert
 (forall ((time Int) )(let ((?x321 (+ time 1)))
 (let ((?x324 (time-to-state ?x321)))
 (let (($x344 (= ?x324 ERR)))
 (let ((?x327 (input-arg0 time)))
 (let (($x345 (= ?x327 1)))
 (let ((?x329 (time-to-state time)))
 (let (($x5184 (= ?x329 _269)))
 (let (($x5189 (and $x5184 $x345)))
 (=> $x5189 $x344))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x329 (time-to-state time)))
 (let (($x5192 (= ?x329 ERR)))
 (and $x5192 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270) true))
(check-sat)
