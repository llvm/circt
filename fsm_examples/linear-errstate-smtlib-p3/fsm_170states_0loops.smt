; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(assert
 (let ((?x179 (time-to-state 0)))
 (= ?x179 _0)))
(assert
 (let ((?x199 (input-arg0 0)))
 (= ?x199 0)))
(assert
 (let ((?x201 (var1_0 0)))
 (= ?x201 0)))
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x230 (= ?x229 _0)))
 (let (($x246 (and $x230 $x245)))
 (=> $x246 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x260 (= ?x229 _1)))
 (let (($x265 (and $x260 $x245)))
 (=> $x265 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x278 (= ?x229 _2)))
 (let (($x283 (and $x278 $x245)))
 (=> $x283 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x296 (= ?x229 _3)))
 (let (($x301 (and $x296 $x245)))
 (=> $x301 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x314 (= ?x229 _4)))
 (let (($x319 (and $x314 $x245)))
 (=> $x319 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x332 (= ?x229 _5)))
 (let (($x337 (and $x332 $x245)))
 (=> $x337 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x350 (= ?x229 _6)))
 (let (($x355 (and $x350 $x245)))
 (=> $x355 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x368 (= ?x229 _7)))
 (let (($x373 (and $x368 $x245)))
 (=> $x373 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x386 (= ?x229 _8)))
 (let (($x391 (and $x386 $x245)))
 (=> $x391 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x404 (= ?x229 _9)))
 (let (($x409 (and $x404 $x245)))
 (=> $x409 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x422 (= ?x229 _10)))
 (let (($x427 (and $x422 $x245)))
 (=> $x427 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x440 (= ?x229 _11)))
 (let (($x445 (and $x440 $x245)))
 (=> $x445 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x458 (= ?x229 _12)))
 (let (($x463 (and $x458 $x245)))
 (=> $x463 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x476 (= ?x229 _13)))
 (let (($x481 (and $x476 $x245)))
 (=> $x481 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x494 (= ?x229 _14)))
 (let (($x499 (and $x494 $x245)))
 (=> $x499 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x512 (= ?x229 _15)))
 (let (($x517 (and $x512 $x245)))
 (=> $x517 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x530 (= ?x229 _16)))
 (let (($x535 (and $x530 $x245)))
 (=> $x535 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x548 (= ?x229 _17)))
 (let (($x553 (and $x548 $x245)))
 (=> $x553 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x566 (= ?x229 _18)))
 (let (($x571 (and $x566 $x245)))
 (=> $x571 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x584 (= ?x229 _19)))
 (let (($x589 (and $x584 $x245)))
 (=> $x589 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x602 (= ?x229 _20)))
 (let (($x607 (and $x602 $x245)))
 (=> $x607 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x620 (= ?x229 _21)))
 (let (($x625 (and $x620 $x245)))
 (=> $x625 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x638 (= ?x229 _22)))
 (let (($x643 (and $x638 $x245)))
 (=> $x643 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x656 (= ?x229 _23)))
 (let (($x661 (and $x656 $x245)))
 (=> $x661 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x674 (= ?x229 _24)))
 (let (($x679 (and $x674 $x245)))
 (=> $x679 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x692 (= ?x229 _25)))
 (let (($x697 (and $x692 $x245)))
 (=> $x697 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x710 (= ?x229 _26)))
 (let (($x715 (and $x710 $x245)))
 (=> $x715 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x728 (= ?x229 _27)))
 (let (($x733 (and $x728 $x245)))
 (=> $x733 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x746 (= ?x229 _28)))
 (let (($x751 (and $x746 $x245)))
 (=> $x751 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x764 (= ?x229 _29)))
 (let (($x769 (and $x764 $x245)))
 (=> $x769 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x782 (= ?x229 _30)))
 (let (($x787 (and $x782 $x245)))
 (=> $x787 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x800 (= ?x229 _31)))
 (let (($x805 (and $x800 $x245)))
 (=> $x805 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x818 (= ?x229 _32)))
 (let (($x823 (and $x818 $x245)))
 (=> $x823 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x836 (= ?x229 _33)))
 (let (($x841 (and $x836 $x245)))
 (=> $x841 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x854 (= ?x229 _34)))
 (let (($x859 (and $x854 $x245)))
 (=> $x859 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x872 (= ?x229 _35)))
 (let (($x877 (and $x872 $x245)))
 (=> $x877 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x890 (= ?x229 _36)))
 (let (($x895 (and $x890 $x245)))
 (=> $x895 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x908 (= ?x229 _37)))
 (let (($x913 (and $x908 $x245)))
 (=> $x913 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x926 (= ?x229 _38)))
 (let (($x931 (and $x926 $x245)))
 (=> $x931 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x944 (= ?x229 _39)))
 (let (($x949 (and $x944 $x245)))
 (=> $x949 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x962 (= ?x229 _40)))
 (let (($x967 (and $x962 $x245)))
 (=> $x967 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x980 (= ?x229 _41)))
 (let (($x985 (and $x980 $x245)))
 (=> $x985 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x998 (= ?x229 _42)))
 (let (($x1003 (and $x998 $x245)))
 (=> $x1003 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1016 (= ?x229 _43)))
 (let (($x1021 (and $x1016 $x245)))
 (=> $x1021 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1034 (= ?x229 _44)))
 (let (($x1039 (and $x1034 $x245)))
 (=> $x1039 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1052 (= ?x229 _45)))
 (let (($x1057 (and $x1052 $x245)))
 (=> $x1057 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1070 (= ?x229 _46)))
 (let (($x1075 (and $x1070 $x245)))
 (=> $x1075 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1088 (= ?x229 _47)))
 (let (($x1093 (and $x1088 $x245)))
 (=> $x1093 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1106 (= ?x229 _48)))
 (let (($x1111 (and $x1106 $x245)))
 (=> $x1111 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1124 (= ?x229 _49)))
 (let (($x1129 (and $x1124 $x245)))
 (=> $x1129 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1142 (= ?x229 _50)))
 (let (($x1147 (and $x1142 $x245)))
 (=> $x1147 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1160 (= ?x229 _51)))
 (let (($x1165 (and $x1160 $x245)))
 (=> $x1165 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1178 (= ?x229 _52)))
 (let (($x1183 (and $x1178 $x245)))
 (=> $x1183 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1196 (= ?x229 _53)))
 (let (($x1201 (and $x1196 $x245)))
 (=> $x1201 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1214 (= ?x229 _54)))
 (let (($x1219 (and $x1214 $x245)))
 (=> $x1219 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1232 (= ?x229 _55)))
 (let (($x1237 (and $x1232 $x245)))
 (=> $x1237 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1250 (= ?x229 _56)))
 (let (($x1255 (and $x1250 $x245)))
 (=> $x1255 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1268 (= ?x229 _57)))
 (let (($x1273 (and $x1268 $x245)))
 (=> $x1273 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1286 (= ?x229 _58)))
 (let (($x1291 (and $x1286 $x245)))
 (=> $x1291 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1304 (= ?x229 _59)))
 (let (($x1309 (and $x1304 $x245)))
 (=> $x1309 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1322 (= ?x229 _60)))
 (let (($x1327 (and $x1322 $x245)))
 (=> $x1327 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1340 (= ?x229 _61)))
 (let (($x1345 (and $x1340 $x245)))
 (=> $x1345 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1358 (= ?x229 _62)))
 (let (($x1363 (and $x1358 $x245)))
 (=> $x1363 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1376 (= ?x229 _63)))
 (let (($x1381 (and $x1376 $x245)))
 (=> $x1381 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1394 (= ?x229 _64)))
 (let (($x1399 (and $x1394 $x245)))
 (=> $x1399 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1412 (= ?x229 _65)))
 (let (($x1417 (and $x1412 $x245)))
 (=> $x1417 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1430 (= ?x229 _66)))
 (let (($x1435 (and $x1430 $x245)))
 (=> $x1435 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1448 (= ?x229 _67)))
 (let (($x1453 (and $x1448 $x245)))
 (=> $x1453 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1466 (= ?x229 _68)))
 (let (($x1471 (and $x1466 $x245)))
 (=> $x1471 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1484 (= ?x229 _69)))
 (let (($x1489 (and $x1484 $x245)))
 (=> $x1489 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1502 (= ?x229 _70)))
 (let (($x1507 (and $x1502 $x245)))
 (=> $x1507 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1520 (= ?x229 _71)))
 (let (($x1525 (and $x1520 $x245)))
 (=> $x1525 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1538 (= ?x229 _72)))
 (let (($x1543 (and $x1538 $x245)))
 (=> $x1543 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1556 (= ?x229 _73)))
 (let (($x1561 (and $x1556 $x245)))
 (=> $x1561 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1574 (= ?x229 _74)))
 (let (($x1579 (and $x1574 $x245)))
 (=> $x1579 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1592 (= ?x229 _75)))
 (let (($x1597 (and $x1592 $x245)))
 (=> $x1597 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1610 (= ?x229 _76)))
 (let (($x1615 (and $x1610 $x245)))
 (=> $x1615 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1628 (= ?x229 _77)))
 (let (($x1633 (and $x1628 $x245)))
 (=> $x1633 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1646 (= ?x229 _78)))
 (let (($x1651 (and $x1646 $x245)))
 (=> $x1651 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1664 (= ?x229 _79)))
 (let (($x1669 (and $x1664 $x245)))
 (=> $x1669 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1682 (= ?x229 _80)))
 (let (($x1687 (and $x1682 $x245)))
 (=> $x1687 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1700 (= ?x229 _81)))
 (let (($x1705 (and $x1700 $x245)))
 (=> $x1705 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1718 (= ?x229 _82)))
 (let (($x1723 (and $x1718 $x245)))
 (=> $x1723 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1736 (= ?x229 _83)))
 (let (($x1741 (and $x1736 $x245)))
 (=> $x1741 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1754 (= ?x229 _84)))
 (let (($x1759 (and $x1754 $x245)))
 (=> $x1759 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1772 (= ?x229 _85)))
 (let (($x1777 (and $x1772 $x245)))
 (=> $x1777 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1790 (= ?x229 _86)))
 (let (($x1795 (and $x1790 $x245)))
 (=> $x1795 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1808 (= ?x229 _87)))
 (let (($x1813 (and $x1808 $x245)))
 (=> $x1813 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1826 (= ?x229 _88)))
 (let (($x1831 (and $x1826 $x245)))
 (=> $x1831 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1844 (= ?x229 _89)))
 (let (($x1849 (and $x1844 $x245)))
 (=> $x1849 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1862 (= ?x229 _90)))
 (let (($x1867 (and $x1862 $x245)))
 (=> $x1867 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1880 (= ?x229 _91)))
 (let (($x1885 (and $x1880 $x245)))
 (=> $x1885 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1898 (= ?x229 _92)))
 (let (($x1903 (and $x1898 $x245)))
 (=> $x1903 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1916 (= ?x229 _93)))
 (let (($x1921 (and $x1916 $x245)))
 (=> $x1921 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1934 (= ?x229 _94)))
 (let (($x1939 (and $x1934 $x245)))
 (=> $x1939 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1952 (= ?x229 _95)))
 (let (($x1957 (and $x1952 $x245)))
 (=> $x1957 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1970 (= ?x229 _96)))
 (let (($x1975 (and $x1970 $x245)))
 (=> $x1975 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x1988 (= ?x229 _97)))
 (let (($x1993 (and $x1988 $x245)))
 (=> $x1993 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2006 (= ?x229 _98)))
 (let (($x2011 (and $x2006 $x245)))
 (=> $x2011 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x223))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2024 (= ?x229 _99)))
 (let (($x2029 (and $x2024 $x245)))
 (=> $x2029 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2042 (= ?x229 _100)))
 (=> (and $x2042 $x228) (and (= (time-to-state (+ time 1)) _101) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2042 (= ?x229 _100)))
 (let (($x2047 (and $x2042 $x245)))
 (=> $x2047 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2060 (= ?x229 _101)))
 (=> (and $x2060 $x228) (and (= (time-to-state (+ time 1)) _102) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2060 (= ?x229 _101)))
 (let (($x2065 (and $x2060 $x245)))
 (=> $x2065 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2078 (= ?x229 _102)))
 (=> (and $x2078 $x228) (and (= (time-to-state (+ time 1)) _103) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2078 (= ?x229 _102)))
 (let (($x2083 (and $x2078 $x245)))
 (=> $x2083 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2096 (= ?x229 _103)))
 (=> (and $x2096 $x228) (and (= (time-to-state (+ time 1)) _104) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2096 (= ?x229 _103)))
 (let (($x2101 (and $x2096 $x245)))
 (=> $x2101 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2114 (= ?x229 _104)))
 (=> (and $x2114 $x228) (and (= (time-to-state (+ time 1)) _105) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2114 (= ?x229 _104)))
 (let (($x2119 (and $x2114 $x245)))
 (=> $x2119 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2132 (= ?x229 _105)))
 (=> (and $x2132 $x228) (and (= (time-to-state (+ time 1)) _106) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2132 (= ?x229 _105)))
 (let (($x2137 (and $x2132 $x245)))
 (=> $x2137 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2150 (= ?x229 _106)))
 (=> (and $x2150 $x228) (and (= (time-to-state (+ time 1)) _107) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2150 (= ?x229 _106)))
 (let (($x2155 (and $x2150 $x245)))
 (=> $x2155 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2168 (= ?x229 _107)))
 (=> (and $x2168 $x228) (and (= (time-to-state (+ time 1)) _108) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2168 (= ?x229 _107)))
 (let (($x2173 (and $x2168 $x245)))
 (=> $x2173 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2186 (= ?x229 _108)))
 (=> (and $x2186 $x228) (and (= (time-to-state (+ time 1)) _109) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2186 (= ?x229 _108)))
 (let (($x2191 (and $x2186 $x245)))
 (=> $x2191 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2204 (= ?x229 _109)))
 (=> (and $x2204 $x228) (and (= (time-to-state (+ time 1)) _110) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2204 (= ?x229 _109)))
 (let (($x2209 (and $x2204 $x245)))
 (=> $x2209 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2222 (= ?x229 _110)))
 (=> (and $x2222 $x228) (and (= (time-to-state (+ time 1)) _111) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2222 (= ?x229 _110)))
 (let (($x2227 (and $x2222 $x245)))
 (=> $x2227 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2240 (= ?x229 _111)))
 (=> (and $x2240 $x228) (and (= (time-to-state (+ time 1)) _112) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2240 (= ?x229 _111)))
 (let (($x2245 (and $x2240 $x245)))
 (=> $x2245 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2258 (= ?x229 _112)))
 (=> (and $x2258 $x228) (and (= (time-to-state (+ time 1)) _113) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2258 (= ?x229 _112)))
 (let (($x2263 (and $x2258 $x245)))
 (=> $x2263 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2276 (= ?x229 _113)))
 (=> (and $x2276 $x228) (and (= (time-to-state (+ time 1)) _114) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2276 (= ?x229 _113)))
 (let (($x2281 (and $x2276 $x245)))
 (=> $x2281 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2294 (= ?x229 _114)))
 (=> (and $x2294 $x228) (and (= (time-to-state (+ time 1)) _115) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2294 (= ?x229 _114)))
 (let (($x2299 (and $x2294 $x245)))
 (=> $x2299 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2312 (= ?x229 _115)))
 (=> (and $x2312 $x228) (and (= (time-to-state (+ time 1)) _116) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2312 (= ?x229 _115)))
 (let (($x2317 (and $x2312 $x245)))
 (=> $x2317 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2330 (= ?x229 _116)))
 (=> (and $x2330 $x228) (and (= (time-to-state (+ time 1)) _117) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2330 (= ?x229 _116)))
 (let (($x2335 (and $x2330 $x245)))
 (=> $x2335 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2348 (= ?x229 _117)))
 (=> (and $x2348 $x228) (and (= (time-to-state (+ time 1)) _118) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2348 (= ?x229 _117)))
 (let (($x2353 (and $x2348 $x245)))
 (=> $x2353 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2366 (= ?x229 _118)))
 (=> (and $x2366 $x228) (and (= (time-to-state (+ time 1)) _119) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2366 (= ?x229 _118)))
 (let (($x2371 (and $x2366 $x245)))
 (=> $x2371 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2384 (= ?x229 _119)))
 (=> (and $x2384 $x228) (and (= (time-to-state (+ time 1)) _120) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2384 (= ?x229 _119)))
 (let (($x2389 (and $x2384 $x245)))
 (=> $x2389 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2402 (= ?x229 _120)))
 (=> (and $x2402 $x228) (and (= (time-to-state (+ time 1)) _121) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2402 (= ?x229 _120)))
 (let (($x2407 (and $x2402 $x245)))
 (=> $x2407 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2420 (= ?x229 _121)))
 (=> (and $x2420 $x228) (and (= (time-to-state (+ time 1)) _122) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2420 (= ?x229 _121)))
 (let (($x2425 (and $x2420 $x245)))
 (=> $x2425 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2438 (= ?x229 _122)))
 (=> (and $x2438 $x228) (and (= (time-to-state (+ time 1)) _123) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2438 (= ?x229 _122)))
 (let (($x2443 (and $x2438 $x245)))
 (=> $x2443 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2456 (= ?x229 _123)))
 (=> (and $x2456 $x228) (and (= (time-to-state (+ time 1)) _124) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2456 (= ?x229 _123)))
 (let (($x2461 (and $x2456 $x245)))
 (=> $x2461 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2474 (= ?x229 _124)))
 (=> (and $x2474 $x228) (and (= (time-to-state (+ time 1)) _125) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2474 (= ?x229 _124)))
 (let (($x2479 (and $x2474 $x245)))
 (=> $x2479 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2492 (= ?x229 _125)))
 (=> (and $x2492 $x228) (and (= (time-to-state (+ time 1)) _126) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2492 (= ?x229 _125)))
 (let (($x2497 (and $x2492 $x245)))
 (=> $x2497 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2510 (= ?x229 _126)))
 (=> (and $x2510 $x228) (and (= (time-to-state (+ time 1)) _127) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2510 (= ?x229 _126)))
 (let (($x2515 (and $x2510 $x245)))
 (=> $x2515 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2528 (= ?x229 _127)))
 (=> (and $x2528 $x228) (and (= (time-to-state (+ time 1)) _128) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2528 (= ?x229 _127)))
 (let (($x2533 (and $x2528 $x245)))
 (=> $x2533 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2546 (= ?x229 _128)))
 (=> (and $x2546 $x228) (and (= (time-to-state (+ time 1)) _129) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2546 (= ?x229 _128)))
 (let (($x2551 (and $x2546 $x245)))
 (=> $x2551 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2564 (= ?x229 _129)))
 (=> (and $x2564 $x228) (and (= (time-to-state (+ time 1)) _130) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2564 (= ?x229 _129)))
 (let (($x2569 (and $x2564 $x245)))
 (=> $x2569 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2582 (= ?x229 _130)))
 (=> (and $x2582 $x228) (and (= (time-to-state (+ time 1)) _131) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2582 (= ?x229 _130)))
 (let (($x2587 (and $x2582 $x245)))
 (=> $x2587 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2600 (= ?x229 _131)))
 (=> (and $x2600 $x228) (and (= (time-to-state (+ time 1)) _132) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2600 (= ?x229 _131)))
 (let (($x2605 (and $x2600 $x245)))
 (=> $x2605 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2618 (= ?x229 _132)))
 (=> (and $x2618 $x228) (and (= (time-to-state (+ time 1)) _133) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2618 (= ?x229 _132)))
 (let (($x2623 (and $x2618 $x245)))
 (=> $x2623 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2636 (= ?x229 _133)))
 (=> (and $x2636 $x228) (and (= (time-to-state (+ time 1)) _134) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2636 (= ?x229 _133)))
 (let (($x2641 (and $x2636 $x245)))
 (=> $x2641 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2654 (= ?x229 _134)))
 (=> (and $x2654 $x228) (and (= (time-to-state (+ time 1)) _135) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2654 (= ?x229 _134)))
 (let (($x2659 (and $x2654 $x245)))
 (=> $x2659 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2672 (= ?x229 _135)))
 (=> (and $x2672 $x228) (and (= (time-to-state (+ time 1)) _136) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2672 (= ?x229 _135)))
 (let (($x2677 (and $x2672 $x245)))
 (=> $x2677 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2690 (= ?x229 _136)))
 (=> (and $x2690 $x228) (and (= (time-to-state (+ time 1)) _137) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2690 (= ?x229 _136)))
 (let (($x2695 (and $x2690 $x245)))
 (=> $x2695 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2708 (= ?x229 _137)))
 (=> (and $x2708 $x228) (and (= (time-to-state (+ time 1)) _138) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2708 (= ?x229 _137)))
 (let (($x2713 (and $x2708 $x245)))
 (=> $x2713 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2726 (= ?x229 _138)))
 (=> (and $x2726 $x228) (and (= (time-to-state (+ time 1)) _139) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2726 (= ?x229 _138)))
 (let (($x2731 (and $x2726 $x245)))
 (=> $x2731 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2744 (= ?x229 _139)))
 (=> (and $x2744 $x228) (and (= (time-to-state (+ time 1)) _140) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2744 (= ?x229 _139)))
 (let (($x2749 (and $x2744 $x245)))
 (=> $x2749 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2762 (= ?x229 _140)))
 (=> (and $x2762 $x228) (and (= (time-to-state (+ time 1)) _141) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2762 (= ?x229 _140)))
 (let (($x2767 (and $x2762 $x245)))
 (=> $x2767 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2780 (= ?x229 _141)))
 (=> (and $x2780 $x228) (and (= (time-to-state (+ time 1)) _142) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2780 (= ?x229 _141)))
 (let (($x2785 (and $x2780 $x245)))
 (=> $x2785 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2798 (= ?x229 _142)))
 (=> (and $x2798 $x228) (and (= (time-to-state (+ time 1)) _143) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2798 (= ?x229 _142)))
 (let (($x2803 (and $x2798 $x245)))
 (=> $x2803 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2816 (= ?x229 _143)))
 (=> (and $x2816 $x228) (and (= (time-to-state (+ time 1)) _144) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2816 (= ?x229 _143)))
 (let (($x2821 (and $x2816 $x245)))
 (=> $x2821 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2834 (= ?x229 _144)))
 (=> (and $x2834 $x228) (and (= (time-to-state (+ time 1)) _145) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2834 (= ?x229 _144)))
 (let (($x2839 (and $x2834 $x245)))
 (=> $x2839 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2852 (= ?x229 _145)))
 (=> (and $x2852 $x228) (and (= (time-to-state (+ time 1)) _146) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2852 (= ?x229 _145)))
 (let (($x2857 (and $x2852 $x245)))
 (=> $x2857 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2870 (= ?x229 _146)))
 (=> (and $x2870 $x228) (and (= (time-to-state (+ time 1)) _147) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2870 (= ?x229 _146)))
 (let (($x2875 (and $x2870 $x245)))
 (=> $x2875 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2888 (= ?x229 _147)))
 (=> (and $x2888 $x228) (and (= (time-to-state (+ time 1)) _148) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2888 (= ?x229 _147)))
 (let (($x2893 (and $x2888 $x245)))
 (=> $x2893 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2906 (= ?x229 _148)))
 (=> (and $x2906 $x228) (and (= (time-to-state (+ time 1)) _149) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2906 (= ?x229 _148)))
 (let (($x2911 (and $x2906 $x245)))
 (=> $x2911 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2924 (= ?x229 _149)))
 (=> (and $x2924 $x228) (and (= (time-to-state (+ time 1)) _150) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2924 (= ?x229 _149)))
 (let (($x2929 (and $x2924 $x245)))
 (=> $x2929 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2942 (= ?x229 _150)))
 (=> (and $x2942 $x228) (and (= (time-to-state (+ time 1)) _151) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2942 (= ?x229 _150)))
 (let (($x2947 (and $x2942 $x245)))
 (=> $x2947 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2960 (= ?x229 _151)))
 (=> (and $x2960 $x228) (and (= (time-to-state (+ time 1)) _152) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2960 (= ?x229 _151)))
 (let (($x2965 (and $x2960 $x245)))
 (=> $x2965 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2978 (= ?x229 _152)))
 (=> (and $x2978 $x228) (and (= (time-to-state (+ time 1)) _153) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2978 (= ?x229 _152)))
 (let (($x2983 (and $x2978 $x245)))
 (=> $x2983 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x2996 (= ?x229 _153)))
 (=> (and $x2996 $x228) (and (= (time-to-state (+ time 1)) _154) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x2996 (= ?x229 _153)))
 (let (($x3001 (and $x2996 $x245)))
 (=> $x3001 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3014 (= ?x229 _154)))
 (=> (and $x3014 $x228) (and (= (time-to-state (+ time 1)) _155) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3014 (= ?x229 _154)))
 (let (($x3019 (and $x3014 $x245)))
 (=> $x3019 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3032 (= ?x229 _155)))
 (=> (and $x3032 $x228) (and (= (time-to-state (+ time 1)) _156) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3032 (= ?x229 _155)))
 (let (($x3037 (and $x3032 $x245)))
 (=> $x3037 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3050 (= ?x229 _156)))
 (=> (and $x3050 $x228) (and (= (time-to-state (+ time 1)) _157) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3050 (= ?x229 _156)))
 (let (($x3055 (and $x3050 $x245)))
 (=> $x3055 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3068 (= ?x229 _157)))
 (=> (and $x3068 $x228) (and (= (time-to-state (+ time 1)) _158) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3068 (= ?x229 _157)))
 (let (($x3073 (and $x3068 $x245)))
 (=> $x3073 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3086 (= ?x229 _158)))
 (=> (and $x3086 $x228) (and (= (time-to-state (+ time 1)) _159) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3086 (= ?x229 _158)))
 (let (($x3091 (and $x3086 $x245)))
 (=> $x3091 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3104 (= ?x229 _159)))
 (=> (and $x3104 $x228) (and (= (time-to-state (+ time 1)) _160) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3104 (= ?x229 _159)))
 (let (($x3109 (and $x3104 $x245)))
 (=> $x3109 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3122 (= ?x229 _160)))
 (=> (and $x3122 $x228) (and (= (time-to-state (+ time 1)) _161) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3122 (= ?x229 _160)))
 (let (($x3127 (and $x3122 $x245)))
 (=> $x3127 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3140 (= ?x229 _161)))
 (=> (and $x3140 $x228) (and (= (time-to-state (+ time 1)) _162) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3140 (= ?x229 _161)))
 (let (($x3145 (and $x3140 $x245)))
 (=> $x3145 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3158 (= ?x229 _162)))
 (=> (and $x3158 $x228) (and (= (time-to-state (+ time 1)) _163) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3158 (= ?x229 _162)))
 (let (($x3163 (and $x3158 $x245)))
 (=> $x3163 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3176 (= ?x229 _163)))
 (=> (and $x3176 $x228) (and (= (time-to-state (+ time 1)) _164) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3176 (= ?x229 _163)))
 (let (($x3181 (and $x3176 $x245)))
 (=> $x3181 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3194 (= ?x229 _164)))
 (=> (and $x3194 $x228) (and (= (time-to-state (+ time 1)) _165) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3194 (= ?x229 _164)))
 (let (($x3199 (and $x3194 $x245)))
 (=> $x3199 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3212 (= ?x229 _165)))
 (=> (and $x3212 $x228) (and (= (time-to-state (+ time 1)) _166) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3212 (= ?x229 _165)))
 (let (($x3217 (and $x3212 $x245)))
 (=> $x3217 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3230 (= ?x229 _166)))
 (=> (and $x3230 $x228) (and (= (time-to-state (+ time 1)) _167) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3230 (= ?x229 _166)))
 (let (($x3235 (and $x3230 $x245)))
 (=> $x3235 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3248 (= ?x229 _167)))
 (=> (and $x3248 $x228) (and (= (time-to-state (+ time 1)) _168) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3248 (= ?x229 _167)))
 (let (($x3253 (and $x3248 $x245)))
 (=> $x3253 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3266 (= ?x229 _168)))
 (=> (and $x3266 $x228) (and (= (time-to-state (+ time 1)) _169) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3266 (= ?x229 _168)))
 (let (($x3271 (and $x3266 $x245)))
 (=> $x3271 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let (($x223 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x227 (input-arg0 time)))
 (let (($x228 (and (distinct ?x227 0) true)))
 (let ((?x229 (time-to-state time)))
 (let (($x3284 (= ?x229 _169)))
 (=> (and $x3284 $x228) (and (= (time-to-state (+ time 1)) _170) $x223))))))))
 )
(assert
 (forall ((time Int) )(let ((?x221 (+ time 1)))
 (let ((?x224 (time-to-state ?x221)))
 (let (($x244 (= ?x224 ERR)))
 (let ((?x227 (input-arg0 time)))
 (let (($x245 (= ?x227 1)))
 (let ((?x229 (time-to-state time)))
 (let (($x3284 (= ?x229 _169)))
 (let (($x3289 (and $x3284 $x245)))
 (=> $x3289 $x244))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x229 (time-to-state time)))
 (let (($x3292 (= ?x229 ERR)))
 (and $x3292 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170) true))
(check-sat)
