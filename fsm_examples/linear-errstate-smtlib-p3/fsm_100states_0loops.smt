; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(assert
 (let ((?x109 (time-to-state 0)))
 (= ?x109 _0)))
(assert
 (let ((?x129 (input-arg0 0)))
 (= ?x129 0)))
(assert
 (let ((?x131 (var1_0 0)))
 (= ?x131 0)))
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x160 (= ?x159 _0)))
 (let (($x176 (and $x160 $x175)))
 (=> $x176 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x190 (= ?x159 _1)))
 (let (($x195 (and $x190 $x175)))
 (=> $x195 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x208 (= ?x159 _2)))
 (let (($x213 (and $x208 $x175)))
 (=> $x213 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x226 (= ?x159 _3)))
 (let (($x231 (and $x226 $x175)))
 (=> $x231 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x244 (= ?x159 _4)))
 (let (($x249 (and $x244 $x175)))
 (=> $x249 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x262 (= ?x159 _5)))
 (let (($x267 (and $x262 $x175)))
 (=> $x267 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x280 (= ?x159 _6)))
 (let (($x285 (and $x280 $x175)))
 (=> $x285 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x298 (= ?x159 _7)))
 (let (($x303 (and $x298 $x175)))
 (=> $x303 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x316 (= ?x159 _8)))
 (let (($x321 (and $x316 $x175)))
 (=> $x321 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x334 (= ?x159 _9)))
 (let (($x339 (and $x334 $x175)))
 (=> $x339 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x352 (= ?x159 _10)))
 (let (($x357 (and $x352 $x175)))
 (=> $x357 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x370 (= ?x159 _11)))
 (let (($x375 (and $x370 $x175)))
 (=> $x375 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x388 (= ?x159 _12)))
 (let (($x393 (and $x388 $x175)))
 (=> $x393 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x406 (= ?x159 _13)))
 (let (($x411 (and $x406 $x175)))
 (=> $x411 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x424 (= ?x159 _14)))
 (let (($x429 (and $x424 $x175)))
 (=> $x429 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x442 (= ?x159 _15)))
 (let (($x447 (and $x442 $x175)))
 (=> $x447 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x460 (= ?x159 _16)))
 (let (($x465 (and $x460 $x175)))
 (=> $x465 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x478 (= ?x159 _17)))
 (let (($x483 (and $x478 $x175)))
 (=> $x483 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x496 (= ?x159 _18)))
 (let (($x501 (and $x496 $x175)))
 (=> $x501 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x514 (= ?x159 _19)))
 (let (($x519 (and $x514 $x175)))
 (=> $x519 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x532 (= ?x159 _20)))
 (let (($x537 (and $x532 $x175)))
 (=> $x537 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x550 (= ?x159 _21)))
 (let (($x555 (and $x550 $x175)))
 (=> $x555 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x568 (= ?x159 _22)))
 (let (($x573 (and $x568 $x175)))
 (=> $x573 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x586 (= ?x159 _23)))
 (let (($x591 (and $x586 $x175)))
 (=> $x591 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x604 (= ?x159 _24)))
 (let (($x609 (and $x604 $x175)))
 (=> $x609 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x622 (= ?x159 _25)))
 (let (($x627 (and $x622 $x175)))
 (=> $x627 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x640 (= ?x159 _26)))
 (let (($x645 (and $x640 $x175)))
 (=> $x645 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x658 (= ?x159 _27)))
 (let (($x663 (and $x658 $x175)))
 (=> $x663 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x676 (= ?x159 _28)))
 (let (($x681 (and $x676 $x175)))
 (=> $x681 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x694 (= ?x159 _29)))
 (let (($x699 (and $x694 $x175)))
 (=> $x699 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x712 (= ?x159 _30)))
 (let (($x717 (and $x712 $x175)))
 (=> $x717 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x730 (= ?x159 _31)))
 (let (($x735 (and $x730 $x175)))
 (=> $x735 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x748 (= ?x159 _32)))
 (let (($x753 (and $x748 $x175)))
 (=> $x753 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x766 (= ?x159 _33)))
 (let (($x771 (and $x766 $x175)))
 (=> $x771 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x784 (= ?x159 _34)))
 (let (($x789 (and $x784 $x175)))
 (=> $x789 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x802 (= ?x159 _35)))
 (let (($x807 (and $x802 $x175)))
 (=> $x807 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x820 (= ?x159 _36)))
 (let (($x825 (and $x820 $x175)))
 (=> $x825 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x838 (= ?x159 _37)))
 (let (($x843 (and $x838 $x175)))
 (=> $x843 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x856 (= ?x159 _38)))
 (let (($x861 (and $x856 $x175)))
 (=> $x861 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x874 (= ?x159 _39)))
 (let (($x879 (and $x874 $x175)))
 (=> $x879 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x892 (= ?x159 _40)))
 (let (($x897 (and $x892 $x175)))
 (=> $x897 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x910 (= ?x159 _41)))
 (let (($x915 (and $x910 $x175)))
 (=> $x915 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x928 (= ?x159 _42)))
 (let (($x933 (and $x928 $x175)))
 (=> $x933 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x946 (= ?x159 _43)))
 (let (($x951 (and $x946 $x175)))
 (=> $x951 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x964 (= ?x159 _44)))
 (let (($x969 (and $x964 $x175)))
 (=> $x969 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x982 (= ?x159 _45)))
 (let (($x987 (and $x982 $x175)))
 (=> $x987 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1000 (= ?x159 _46)))
 (let (($x1005 (and $x1000 $x175)))
 (=> $x1005 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1018 (= ?x159 _47)))
 (let (($x1023 (and $x1018 $x175)))
 (=> $x1023 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1036 (= ?x159 _48)))
 (let (($x1041 (and $x1036 $x175)))
 (=> $x1041 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1054 (= ?x159 _49)))
 (let (($x1059 (and $x1054 $x175)))
 (=> $x1059 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1072 (= ?x159 _50)))
 (let (($x1077 (and $x1072 $x175)))
 (=> $x1077 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1090 (= ?x159 _51)))
 (let (($x1095 (and $x1090 $x175)))
 (=> $x1095 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1108 (= ?x159 _52)))
 (let (($x1113 (and $x1108 $x175)))
 (=> $x1113 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1126 (= ?x159 _53)))
 (let (($x1131 (and $x1126 $x175)))
 (=> $x1131 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1144 (= ?x159 _54)))
 (let (($x1149 (and $x1144 $x175)))
 (=> $x1149 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1162 (= ?x159 _55)))
 (let (($x1167 (and $x1162 $x175)))
 (=> $x1167 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1180 (= ?x159 _56)))
 (let (($x1185 (and $x1180 $x175)))
 (=> $x1185 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1198 (= ?x159 _57)))
 (let (($x1203 (and $x1198 $x175)))
 (=> $x1203 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1216 (= ?x159 _58)))
 (let (($x1221 (and $x1216 $x175)))
 (=> $x1221 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1234 (= ?x159 _59)))
 (let (($x1239 (and $x1234 $x175)))
 (=> $x1239 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1252 (= ?x159 _60)))
 (let (($x1257 (and $x1252 $x175)))
 (=> $x1257 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1270 (= ?x159 _61)))
 (let (($x1275 (and $x1270 $x175)))
 (=> $x1275 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1288 (= ?x159 _62)))
 (let (($x1293 (and $x1288 $x175)))
 (=> $x1293 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1306 (= ?x159 _63)))
 (let (($x1311 (and $x1306 $x175)))
 (=> $x1311 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1324 (= ?x159 _64)))
 (let (($x1329 (and $x1324 $x175)))
 (=> $x1329 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1342 (= ?x159 _65)))
 (let (($x1347 (and $x1342 $x175)))
 (=> $x1347 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1360 (= ?x159 _66)))
 (let (($x1365 (and $x1360 $x175)))
 (=> $x1365 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1378 (= ?x159 _67)))
 (let (($x1383 (and $x1378 $x175)))
 (=> $x1383 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1396 (= ?x159 _68)))
 (let (($x1401 (and $x1396 $x175)))
 (=> $x1401 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1414 (= ?x159 _69)))
 (let (($x1419 (and $x1414 $x175)))
 (=> $x1419 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1432 (= ?x159 _70)))
 (let (($x1437 (and $x1432 $x175)))
 (=> $x1437 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1450 (= ?x159 _71)))
 (let (($x1455 (and $x1450 $x175)))
 (=> $x1455 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1468 (= ?x159 _72)))
 (let (($x1473 (and $x1468 $x175)))
 (=> $x1473 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1486 (= ?x159 _73)))
 (let (($x1491 (and $x1486 $x175)))
 (=> $x1491 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1504 (= ?x159 _74)))
 (let (($x1509 (and $x1504 $x175)))
 (=> $x1509 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1522 (= ?x159 _75)))
 (let (($x1527 (and $x1522 $x175)))
 (=> $x1527 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1540 (= ?x159 _76)))
 (let (($x1545 (and $x1540 $x175)))
 (=> $x1545 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1558 (= ?x159 _77)))
 (let (($x1563 (and $x1558 $x175)))
 (=> $x1563 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1576 (= ?x159 _78)))
 (let (($x1581 (and $x1576 $x175)))
 (=> $x1581 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1594 (= ?x159 _79)))
 (let (($x1599 (and $x1594 $x175)))
 (=> $x1599 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1612 (= ?x159 _80)))
 (let (($x1617 (and $x1612 $x175)))
 (=> $x1617 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1630 (= ?x159 _81)))
 (let (($x1635 (and $x1630 $x175)))
 (=> $x1635 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1648 (= ?x159 _82)))
 (let (($x1653 (and $x1648 $x175)))
 (=> $x1653 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1666 (= ?x159 _83)))
 (let (($x1671 (and $x1666 $x175)))
 (=> $x1671 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1684 (= ?x159 _84)))
 (let (($x1689 (and $x1684 $x175)))
 (=> $x1689 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1702 (= ?x159 _85)))
 (let (($x1707 (and $x1702 $x175)))
 (=> $x1707 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1720 (= ?x159 _86)))
 (let (($x1725 (and $x1720 $x175)))
 (=> $x1725 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1738 (= ?x159 _87)))
 (let (($x1743 (and $x1738 $x175)))
 (=> $x1743 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1756 (= ?x159 _88)))
 (let (($x1761 (and $x1756 $x175)))
 (=> $x1761 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1774 (= ?x159 _89)))
 (let (($x1779 (and $x1774 $x175)))
 (=> $x1779 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1792 (= ?x159 _90)))
 (let (($x1797 (and $x1792 $x175)))
 (=> $x1797 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1810 (= ?x159 _91)))
 (let (($x1815 (and $x1810 $x175)))
 (=> $x1815 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1828 (= ?x159 _92)))
 (let (($x1833 (and $x1828 $x175)))
 (=> $x1833 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1846 (= ?x159 _93)))
 (let (($x1851 (and $x1846 $x175)))
 (=> $x1851 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1864 (= ?x159 _94)))
 (let (($x1869 (and $x1864 $x175)))
 (=> $x1869 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1882 (= ?x159 _95)))
 (let (($x1887 (and $x1882 $x175)))
 (=> $x1887 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1900 (= ?x159 _96)))
 (let (($x1905 (and $x1900 $x175)))
 (=> $x1905 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1918 (= ?x159 _97)))
 (let (($x1923 (and $x1918 $x175)))
 (=> $x1923 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1936 (= ?x159 _98)))
 (let (($x1941 (and $x1936 $x175)))
 (=> $x1941 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let (($x153 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x153))))
 )
(assert
 (forall ((time Int) )(let ((?x151 (+ time 1)))
 (let ((?x154 (time-to-state ?x151)))
 (let (($x174 (= ?x154 ERR)))
 (let ((?x157 (input-arg0 time)))
 (let (($x175 (= ?x157 1)))
 (let ((?x159 (time-to-state time)))
 (let (($x1954 (= ?x159 _99)))
 (let (($x1959 (and $x1954 $x175)))
 (=> $x1959 $x174))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x159 (time-to-state time)))
 (let (($x1962 (= ?x159 ERR)))
 (and $x1962 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100) true))
(check-sat)
