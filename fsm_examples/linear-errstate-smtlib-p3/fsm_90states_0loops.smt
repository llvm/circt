; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(assert
 (let ((?x99 (time-to-state 0)))
 (= ?x99 _0)))
(assert
 (let ((?x119 (input-arg0 0)))
 (= ?x119 0)))
(assert
 (let ((?x121 (var1_0 0)))
 (= ?x121 0)))
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x150 (= ?x149 _0)))
 (let (($x166 (and $x150 $x165)))
 (=> $x166 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x180 (= ?x149 _1)))
 (let (($x185 (and $x180 $x165)))
 (=> $x185 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x198 (= ?x149 _2)))
 (let (($x203 (and $x198 $x165)))
 (=> $x203 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x216 (= ?x149 _3)))
 (let (($x221 (and $x216 $x165)))
 (=> $x221 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x234 (= ?x149 _4)))
 (let (($x239 (and $x234 $x165)))
 (=> $x239 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x252 (= ?x149 _5)))
 (let (($x257 (and $x252 $x165)))
 (=> $x257 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x270 (= ?x149 _6)))
 (let (($x275 (and $x270 $x165)))
 (=> $x275 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x288 (= ?x149 _7)))
 (let (($x293 (and $x288 $x165)))
 (=> $x293 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x306 (= ?x149 _8)))
 (let (($x311 (and $x306 $x165)))
 (=> $x311 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x324 (= ?x149 _9)))
 (let (($x329 (and $x324 $x165)))
 (=> $x329 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x342 (= ?x149 _10)))
 (let (($x347 (and $x342 $x165)))
 (=> $x347 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x360 (= ?x149 _11)))
 (let (($x365 (and $x360 $x165)))
 (=> $x365 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x378 (= ?x149 _12)))
 (let (($x383 (and $x378 $x165)))
 (=> $x383 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x396 (= ?x149 _13)))
 (let (($x401 (and $x396 $x165)))
 (=> $x401 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x414 (= ?x149 _14)))
 (let (($x419 (and $x414 $x165)))
 (=> $x419 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x432 (= ?x149 _15)))
 (let (($x437 (and $x432 $x165)))
 (=> $x437 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x450 (= ?x149 _16)))
 (let (($x455 (and $x450 $x165)))
 (=> $x455 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x468 (= ?x149 _17)))
 (let (($x473 (and $x468 $x165)))
 (=> $x473 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x486 (= ?x149 _18)))
 (let (($x491 (and $x486 $x165)))
 (=> $x491 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x504 (= ?x149 _19)))
 (let (($x509 (and $x504 $x165)))
 (=> $x509 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x522 (= ?x149 _20)))
 (let (($x527 (and $x522 $x165)))
 (=> $x527 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x540 (= ?x149 _21)))
 (let (($x545 (and $x540 $x165)))
 (=> $x545 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x558 (= ?x149 _22)))
 (let (($x563 (and $x558 $x165)))
 (=> $x563 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x576 (= ?x149 _23)))
 (let (($x581 (and $x576 $x165)))
 (=> $x581 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x594 (= ?x149 _24)))
 (let (($x599 (and $x594 $x165)))
 (=> $x599 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x612 (= ?x149 _25)))
 (let (($x617 (and $x612 $x165)))
 (=> $x617 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x630 (= ?x149 _26)))
 (let (($x635 (and $x630 $x165)))
 (=> $x635 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x648 (= ?x149 _27)))
 (let (($x653 (and $x648 $x165)))
 (=> $x653 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x666 (= ?x149 _28)))
 (let (($x671 (and $x666 $x165)))
 (=> $x671 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x684 (= ?x149 _29)))
 (let (($x689 (and $x684 $x165)))
 (=> $x689 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x702 (= ?x149 _30)))
 (let (($x707 (and $x702 $x165)))
 (=> $x707 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x720 (= ?x149 _31)))
 (let (($x725 (and $x720 $x165)))
 (=> $x725 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x738 (= ?x149 _32)))
 (let (($x743 (and $x738 $x165)))
 (=> $x743 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x756 (= ?x149 _33)))
 (let (($x761 (and $x756 $x165)))
 (=> $x761 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x774 (= ?x149 _34)))
 (let (($x779 (and $x774 $x165)))
 (=> $x779 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x792 (= ?x149 _35)))
 (let (($x797 (and $x792 $x165)))
 (=> $x797 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x810 (= ?x149 _36)))
 (let (($x815 (and $x810 $x165)))
 (=> $x815 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x828 (= ?x149 _37)))
 (let (($x833 (and $x828 $x165)))
 (=> $x833 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x846 (= ?x149 _38)))
 (let (($x851 (and $x846 $x165)))
 (=> $x851 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x864 (= ?x149 _39)))
 (let (($x869 (and $x864 $x165)))
 (=> $x869 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x882 (= ?x149 _40)))
 (let (($x887 (and $x882 $x165)))
 (=> $x887 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x900 (= ?x149 _41)))
 (let (($x905 (and $x900 $x165)))
 (=> $x905 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x918 (= ?x149 _42)))
 (let (($x923 (and $x918 $x165)))
 (=> $x923 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x936 (= ?x149 _43)))
 (let (($x941 (and $x936 $x165)))
 (=> $x941 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x954 (= ?x149 _44)))
 (let (($x959 (and $x954 $x165)))
 (=> $x959 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x972 (= ?x149 _45)))
 (let (($x977 (and $x972 $x165)))
 (=> $x977 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x990 (= ?x149 _46)))
 (let (($x995 (and $x990 $x165)))
 (=> $x995 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1008 (= ?x149 _47)))
 (let (($x1013 (and $x1008 $x165)))
 (=> $x1013 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1026 (= ?x149 _48)))
 (let (($x1031 (and $x1026 $x165)))
 (=> $x1031 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1044 (= ?x149 _49)))
 (let (($x1049 (and $x1044 $x165)))
 (=> $x1049 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1062 (= ?x149 _50)))
 (let (($x1067 (and $x1062 $x165)))
 (=> $x1067 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1080 (= ?x149 _51)))
 (let (($x1085 (and $x1080 $x165)))
 (=> $x1085 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1098 (= ?x149 _52)))
 (let (($x1103 (and $x1098 $x165)))
 (=> $x1103 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1116 (= ?x149 _53)))
 (let (($x1121 (and $x1116 $x165)))
 (=> $x1121 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1134 (= ?x149 _54)))
 (let (($x1139 (and $x1134 $x165)))
 (=> $x1139 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1152 (= ?x149 _55)))
 (let (($x1157 (and $x1152 $x165)))
 (=> $x1157 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1170 (= ?x149 _56)))
 (let (($x1175 (and $x1170 $x165)))
 (=> $x1175 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1188 (= ?x149 _57)))
 (let (($x1193 (and $x1188 $x165)))
 (=> $x1193 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1206 (= ?x149 _58)))
 (let (($x1211 (and $x1206 $x165)))
 (=> $x1211 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1224 (= ?x149 _59)))
 (let (($x1229 (and $x1224 $x165)))
 (=> $x1229 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1242 (= ?x149 _60)))
 (let (($x1247 (and $x1242 $x165)))
 (=> $x1247 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1260 (= ?x149 _61)))
 (let (($x1265 (and $x1260 $x165)))
 (=> $x1265 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1278 (= ?x149 _62)))
 (let (($x1283 (and $x1278 $x165)))
 (=> $x1283 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1296 (= ?x149 _63)))
 (let (($x1301 (and $x1296 $x165)))
 (=> $x1301 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1314 (= ?x149 _64)))
 (let (($x1319 (and $x1314 $x165)))
 (=> $x1319 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1332 (= ?x149 _65)))
 (let (($x1337 (and $x1332 $x165)))
 (=> $x1337 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1350 (= ?x149 _66)))
 (let (($x1355 (and $x1350 $x165)))
 (=> $x1355 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1368 (= ?x149 _67)))
 (let (($x1373 (and $x1368 $x165)))
 (=> $x1373 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1386 (= ?x149 _68)))
 (let (($x1391 (and $x1386 $x165)))
 (=> $x1391 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1404 (= ?x149 _69)))
 (let (($x1409 (and $x1404 $x165)))
 (=> $x1409 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1422 (= ?x149 _70)))
 (let (($x1427 (and $x1422 $x165)))
 (=> $x1427 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1440 (= ?x149 _71)))
 (let (($x1445 (and $x1440 $x165)))
 (=> $x1445 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1458 (= ?x149 _72)))
 (let (($x1463 (and $x1458 $x165)))
 (=> $x1463 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1476 (= ?x149 _73)))
 (let (($x1481 (and $x1476 $x165)))
 (=> $x1481 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1494 (= ?x149 _74)))
 (let (($x1499 (and $x1494 $x165)))
 (=> $x1499 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1512 (= ?x149 _75)))
 (let (($x1517 (and $x1512 $x165)))
 (=> $x1517 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1530 (= ?x149 _76)))
 (let (($x1535 (and $x1530 $x165)))
 (=> $x1535 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1548 (= ?x149 _77)))
 (let (($x1553 (and $x1548 $x165)))
 (=> $x1553 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1566 (= ?x149 _78)))
 (let (($x1571 (and $x1566 $x165)))
 (=> $x1571 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1584 (= ?x149 _79)))
 (let (($x1589 (and $x1584 $x165)))
 (=> $x1589 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1602 (= ?x149 _80)))
 (let (($x1607 (and $x1602 $x165)))
 (=> $x1607 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1620 (= ?x149 _81)))
 (let (($x1625 (and $x1620 $x165)))
 (=> $x1625 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1638 (= ?x149 _82)))
 (let (($x1643 (and $x1638 $x165)))
 (=> $x1643 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1656 (= ?x149 _83)))
 (let (($x1661 (and $x1656 $x165)))
 (=> $x1661 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1674 (= ?x149 _84)))
 (let (($x1679 (and $x1674 $x165)))
 (=> $x1679 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1692 (= ?x149 _85)))
 (let (($x1697 (and $x1692 $x165)))
 (=> $x1697 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1710 (= ?x149 _86)))
 (let (($x1715 (and $x1710 $x165)))
 (=> $x1715 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1728 (= ?x149 _87)))
 (let (($x1733 (and $x1728 $x165)))
 (=> $x1733 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1746 (= ?x149 _88)))
 (let (($x1751 (and $x1746 $x165)))
 (=> $x1751 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let (($x143 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x143))))
 )
(assert
 (forall ((time Int) )(let ((?x141 (+ time 1)))
 (let ((?x144 (time-to-state ?x141)))
 (let (($x164 (= ?x144 ERR)))
 (let ((?x147 (input-arg0 time)))
 (let (($x165 (= ?x147 1)))
 (let ((?x149 (time-to-state time)))
 (let (($x1764 (= ?x149 _89)))
 (let (($x1769 (and $x1764 $x165)))
 (=> $x1769 $x164))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x149 (time-to-state time)))
 (let (($x1772 (= ?x149 ERR)))
 (and $x1772 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90) true))
(check-sat)
