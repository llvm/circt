; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(assert
 (let ((?x249 (time-to-state 0)))
 (= ?x249 _0)))
(assert
 (let ((?x269 (input-arg0 0)))
 (= ?x269 0)))
(assert
 (let ((?x271 (var1_0 0)))
 (= ?x271 0)))
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x300 (= ?x299 _0)))
 (let (($x316 (and $x300 $x315)))
 (=> $x316 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x330 (= ?x299 _1)))
 (let (($x335 (and $x330 $x315)))
 (=> $x335 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x348 (= ?x299 _2)))
 (let (($x353 (and $x348 $x315)))
 (=> $x353 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x366 (= ?x299 _3)))
 (let (($x371 (and $x366 $x315)))
 (=> $x371 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x384 (= ?x299 _4)))
 (let (($x389 (and $x384 $x315)))
 (=> $x389 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x402 (= ?x299 _5)))
 (let (($x407 (and $x402 $x315)))
 (=> $x407 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x420 (= ?x299 _6)))
 (let (($x425 (and $x420 $x315)))
 (=> $x425 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x438 (= ?x299 _7)))
 (let (($x443 (and $x438 $x315)))
 (=> $x443 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x456 (= ?x299 _8)))
 (let (($x461 (and $x456 $x315)))
 (=> $x461 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x474 (= ?x299 _9)))
 (let (($x479 (and $x474 $x315)))
 (=> $x479 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x492 (= ?x299 _10)))
 (let (($x497 (and $x492 $x315)))
 (=> $x497 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x510 (= ?x299 _11)))
 (let (($x515 (and $x510 $x315)))
 (=> $x515 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x528 (= ?x299 _12)))
 (let (($x533 (and $x528 $x315)))
 (=> $x533 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x546 (= ?x299 _13)))
 (let (($x551 (and $x546 $x315)))
 (=> $x551 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x564 (= ?x299 _14)))
 (let (($x569 (and $x564 $x315)))
 (=> $x569 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x582 (= ?x299 _15)))
 (let (($x587 (and $x582 $x315)))
 (=> $x587 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x600 (= ?x299 _16)))
 (let (($x605 (and $x600 $x315)))
 (=> $x605 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x618 (= ?x299 _17)))
 (let (($x623 (and $x618 $x315)))
 (=> $x623 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x636 (= ?x299 _18)))
 (let (($x641 (and $x636 $x315)))
 (=> $x641 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x654 (= ?x299 _19)))
 (let (($x659 (and $x654 $x315)))
 (=> $x659 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x672 (= ?x299 _20)))
 (let (($x677 (and $x672 $x315)))
 (=> $x677 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x690 (= ?x299 _21)))
 (let (($x695 (and $x690 $x315)))
 (=> $x695 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x708 (= ?x299 _22)))
 (let (($x713 (and $x708 $x315)))
 (=> $x713 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x726 (= ?x299 _23)))
 (let (($x731 (and $x726 $x315)))
 (=> $x731 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x744 (= ?x299 _24)))
 (let (($x749 (and $x744 $x315)))
 (=> $x749 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x762 (= ?x299 _25)))
 (let (($x767 (and $x762 $x315)))
 (=> $x767 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x780 (= ?x299 _26)))
 (let (($x785 (and $x780 $x315)))
 (=> $x785 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x798 (= ?x299 _27)))
 (let (($x803 (and $x798 $x315)))
 (=> $x803 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x816 (= ?x299 _28)))
 (let (($x821 (and $x816 $x315)))
 (=> $x821 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x834 (= ?x299 _29)))
 (let (($x839 (and $x834 $x315)))
 (=> $x839 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x852 (= ?x299 _30)))
 (let (($x857 (and $x852 $x315)))
 (=> $x857 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x870 (= ?x299 _31)))
 (let (($x875 (and $x870 $x315)))
 (=> $x875 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x888 (= ?x299 _32)))
 (let (($x893 (and $x888 $x315)))
 (=> $x893 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x906 (= ?x299 _33)))
 (let (($x911 (and $x906 $x315)))
 (=> $x911 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x924 (= ?x299 _34)))
 (let (($x929 (and $x924 $x315)))
 (=> $x929 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x942 (= ?x299 _35)))
 (let (($x947 (and $x942 $x315)))
 (=> $x947 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x960 (= ?x299 _36)))
 (let (($x965 (and $x960 $x315)))
 (=> $x965 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x978 (= ?x299 _37)))
 (let (($x983 (and $x978 $x315)))
 (=> $x983 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x996 (= ?x299 _38)))
 (let (($x1001 (and $x996 $x315)))
 (=> $x1001 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1014 (= ?x299 _39)))
 (let (($x1019 (and $x1014 $x315)))
 (=> $x1019 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1032 (= ?x299 _40)))
 (let (($x1037 (and $x1032 $x315)))
 (=> $x1037 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1050 (= ?x299 _41)))
 (let (($x1055 (and $x1050 $x315)))
 (=> $x1055 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1068 (= ?x299 _42)))
 (let (($x1073 (and $x1068 $x315)))
 (=> $x1073 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1086 (= ?x299 _43)))
 (let (($x1091 (and $x1086 $x315)))
 (=> $x1091 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1104 (= ?x299 _44)))
 (let (($x1109 (and $x1104 $x315)))
 (=> $x1109 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1122 (= ?x299 _45)))
 (let (($x1127 (and $x1122 $x315)))
 (=> $x1127 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1140 (= ?x299 _46)))
 (let (($x1145 (and $x1140 $x315)))
 (=> $x1145 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1158 (= ?x299 _47)))
 (let (($x1163 (and $x1158 $x315)))
 (=> $x1163 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1176 (= ?x299 _48)))
 (let (($x1181 (and $x1176 $x315)))
 (=> $x1181 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1194 (= ?x299 _49)))
 (let (($x1199 (and $x1194 $x315)))
 (=> $x1199 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1212 (= ?x299 _50)))
 (let (($x1217 (and $x1212 $x315)))
 (=> $x1217 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1230 (= ?x299 _51)))
 (let (($x1235 (and $x1230 $x315)))
 (=> $x1235 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1248 (= ?x299 _52)))
 (let (($x1253 (and $x1248 $x315)))
 (=> $x1253 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1266 (= ?x299 _53)))
 (let (($x1271 (and $x1266 $x315)))
 (=> $x1271 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1284 (= ?x299 _54)))
 (let (($x1289 (and $x1284 $x315)))
 (=> $x1289 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1302 (= ?x299 _55)))
 (let (($x1307 (and $x1302 $x315)))
 (=> $x1307 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1320 (= ?x299 _56)))
 (let (($x1325 (and $x1320 $x315)))
 (=> $x1325 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1338 (= ?x299 _57)))
 (let (($x1343 (and $x1338 $x315)))
 (=> $x1343 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1356 (= ?x299 _58)))
 (let (($x1361 (and $x1356 $x315)))
 (=> $x1361 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1374 (= ?x299 _59)))
 (let (($x1379 (and $x1374 $x315)))
 (=> $x1379 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1392 (= ?x299 _60)))
 (let (($x1397 (and $x1392 $x315)))
 (=> $x1397 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1410 (= ?x299 _61)))
 (let (($x1415 (and $x1410 $x315)))
 (=> $x1415 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1428 (= ?x299 _62)))
 (let (($x1433 (and $x1428 $x315)))
 (=> $x1433 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1446 (= ?x299 _63)))
 (let (($x1451 (and $x1446 $x315)))
 (=> $x1451 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1464 (= ?x299 _64)))
 (let (($x1469 (and $x1464 $x315)))
 (=> $x1469 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1482 (= ?x299 _65)))
 (let (($x1487 (and $x1482 $x315)))
 (=> $x1487 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1500 (= ?x299 _66)))
 (let (($x1505 (and $x1500 $x315)))
 (=> $x1505 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1518 (= ?x299 _67)))
 (let (($x1523 (and $x1518 $x315)))
 (=> $x1523 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1536 (= ?x299 _68)))
 (let (($x1541 (and $x1536 $x315)))
 (=> $x1541 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1554 (= ?x299 _69)))
 (let (($x1559 (and $x1554 $x315)))
 (=> $x1559 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1572 (= ?x299 _70)))
 (let (($x1577 (and $x1572 $x315)))
 (=> $x1577 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1590 (= ?x299 _71)))
 (let (($x1595 (and $x1590 $x315)))
 (=> $x1595 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1608 (= ?x299 _72)))
 (let (($x1613 (and $x1608 $x315)))
 (=> $x1613 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1626 (= ?x299 _73)))
 (let (($x1631 (and $x1626 $x315)))
 (=> $x1631 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1644 (= ?x299 _74)))
 (let (($x1649 (and $x1644 $x315)))
 (=> $x1649 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1662 (= ?x299 _75)))
 (let (($x1667 (and $x1662 $x315)))
 (=> $x1667 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1680 (= ?x299 _76)))
 (let (($x1685 (and $x1680 $x315)))
 (=> $x1685 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1698 (= ?x299 _77)))
 (let (($x1703 (and $x1698 $x315)))
 (=> $x1703 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1716 (= ?x299 _78)))
 (let (($x1721 (and $x1716 $x315)))
 (=> $x1721 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1734 (= ?x299 _79)))
 (let (($x1739 (and $x1734 $x315)))
 (=> $x1739 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1752 (= ?x299 _80)))
 (let (($x1757 (and $x1752 $x315)))
 (=> $x1757 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1770 (= ?x299 _81)))
 (let (($x1775 (and $x1770 $x315)))
 (=> $x1775 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1788 (= ?x299 _82)))
 (let (($x1793 (and $x1788 $x315)))
 (=> $x1793 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1806 (= ?x299 _83)))
 (let (($x1811 (and $x1806 $x315)))
 (=> $x1811 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1824 (= ?x299 _84)))
 (let (($x1829 (and $x1824 $x315)))
 (=> $x1829 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1842 (= ?x299 _85)))
 (let (($x1847 (and $x1842 $x315)))
 (=> $x1847 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1860 (= ?x299 _86)))
 (let (($x1865 (and $x1860 $x315)))
 (=> $x1865 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1878 (= ?x299 _87)))
 (let (($x1883 (and $x1878 $x315)))
 (=> $x1883 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1896 (= ?x299 _88)))
 (let (($x1901 (and $x1896 $x315)))
 (=> $x1901 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1914 (= ?x299 _89)))
 (let (($x1919 (and $x1914 $x315)))
 (=> $x1919 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1932 (= ?x299 _90)))
 (let (($x1937 (and $x1932 $x315)))
 (=> $x1937 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1950 (= ?x299 _91)))
 (let (($x1955 (and $x1950 $x315)))
 (=> $x1955 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1968 (= ?x299 _92)))
 (let (($x1973 (and $x1968 $x315)))
 (=> $x1973 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x1986 (= ?x299 _93)))
 (let (($x1991 (and $x1986 $x315)))
 (=> $x1991 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2004 (= ?x299 _94)))
 (let (($x2009 (and $x2004 $x315)))
 (=> $x2009 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2022 (= ?x299 _95)))
 (let (($x2027 (and $x2022 $x315)))
 (=> $x2027 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2040 (= ?x299 _96)))
 (let (($x2045 (and $x2040 $x315)))
 (=> $x2045 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2058 (= ?x299 _97)))
 (let (($x2063 (and $x2058 $x315)))
 (=> $x2063 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2076 (= ?x299 _98)))
 (let (($x2081 (and $x2076 $x315)))
 (=> $x2081 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x293))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2094 (= ?x299 _99)))
 (let (($x2099 (and $x2094 $x315)))
 (=> $x2099 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2112 (= ?x299 _100)))
 (=> (and $x2112 $x298) (and (= (time-to-state (+ time 1)) _101) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2112 (= ?x299 _100)))
 (let (($x2117 (and $x2112 $x315)))
 (=> $x2117 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2130 (= ?x299 _101)))
 (=> (and $x2130 $x298) (and (= (time-to-state (+ time 1)) _102) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2130 (= ?x299 _101)))
 (let (($x2135 (and $x2130 $x315)))
 (=> $x2135 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2148 (= ?x299 _102)))
 (=> (and $x2148 $x298) (and (= (time-to-state (+ time 1)) _103) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2148 (= ?x299 _102)))
 (let (($x2153 (and $x2148 $x315)))
 (=> $x2153 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2166 (= ?x299 _103)))
 (=> (and $x2166 $x298) (and (= (time-to-state (+ time 1)) _104) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2166 (= ?x299 _103)))
 (let (($x2171 (and $x2166 $x315)))
 (=> $x2171 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2184 (= ?x299 _104)))
 (=> (and $x2184 $x298) (and (= (time-to-state (+ time 1)) _105) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2184 (= ?x299 _104)))
 (let (($x2189 (and $x2184 $x315)))
 (=> $x2189 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2202 (= ?x299 _105)))
 (=> (and $x2202 $x298) (and (= (time-to-state (+ time 1)) _106) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2202 (= ?x299 _105)))
 (let (($x2207 (and $x2202 $x315)))
 (=> $x2207 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2220 (= ?x299 _106)))
 (=> (and $x2220 $x298) (and (= (time-to-state (+ time 1)) _107) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2220 (= ?x299 _106)))
 (let (($x2225 (and $x2220 $x315)))
 (=> $x2225 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2238 (= ?x299 _107)))
 (=> (and $x2238 $x298) (and (= (time-to-state (+ time 1)) _108) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2238 (= ?x299 _107)))
 (let (($x2243 (and $x2238 $x315)))
 (=> $x2243 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2256 (= ?x299 _108)))
 (=> (and $x2256 $x298) (and (= (time-to-state (+ time 1)) _109) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2256 (= ?x299 _108)))
 (let (($x2261 (and $x2256 $x315)))
 (=> $x2261 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2274 (= ?x299 _109)))
 (=> (and $x2274 $x298) (and (= (time-to-state (+ time 1)) _110) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2274 (= ?x299 _109)))
 (let (($x2279 (and $x2274 $x315)))
 (=> $x2279 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2292 (= ?x299 _110)))
 (=> (and $x2292 $x298) (and (= (time-to-state (+ time 1)) _111) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2292 (= ?x299 _110)))
 (let (($x2297 (and $x2292 $x315)))
 (=> $x2297 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2310 (= ?x299 _111)))
 (=> (and $x2310 $x298) (and (= (time-to-state (+ time 1)) _112) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2310 (= ?x299 _111)))
 (let (($x2315 (and $x2310 $x315)))
 (=> $x2315 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2328 (= ?x299 _112)))
 (=> (and $x2328 $x298) (and (= (time-to-state (+ time 1)) _113) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2328 (= ?x299 _112)))
 (let (($x2333 (and $x2328 $x315)))
 (=> $x2333 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2346 (= ?x299 _113)))
 (=> (and $x2346 $x298) (and (= (time-to-state (+ time 1)) _114) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2346 (= ?x299 _113)))
 (let (($x2351 (and $x2346 $x315)))
 (=> $x2351 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2364 (= ?x299 _114)))
 (=> (and $x2364 $x298) (and (= (time-to-state (+ time 1)) _115) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2364 (= ?x299 _114)))
 (let (($x2369 (and $x2364 $x315)))
 (=> $x2369 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2382 (= ?x299 _115)))
 (=> (and $x2382 $x298) (and (= (time-to-state (+ time 1)) _116) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2382 (= ?x299 _115)))
 (let (($x2387 (and $x2382 $x315)))
 (=> $x2387 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2400 (= ?x299 _116)))
 (=> (and $x2400 $x298) (and (= (time-to-state (+ time 1)) _117) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2400 (= ?x299 _116)))
 (let (($x2405 (and $x2400 $x315)))
 (=> $x2405 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2418 (= ?x299 _117)))
 (=> (and $x2418 $x298) (and (= (time-to-state (+ time 1)) _118) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2418 (= ?x299 _117)))
 (let (($x2423 (and $x2418 $x315)))
 (=> $x2423 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2436 (= ?x299 _118)))
 (=> (and $x2436 $x298) (and (= (time-to-state (+ time 1)) _119) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2436 (= ?x299 _118)))
 (let (($x2441 (and $x2436 $x315)))
 (=> $x2441 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2454 (= ?x299 _119)))
 (=> (and $x2454 $x298) (and (= (time-to-state (+ time 1)) _120) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2454 (= ?x299 _119)))
 (let (($x2459 (and $x2454 $x315)))
 (=> $x2459 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2472 (= ?x299 _120)))
 (=> (and $x2472 $x298) (and (= (time-to-state (+ time 1)) _121) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2472 (= ?x299 _120)))
 (let (($x2477 (and $x2472 $x315)))
 (=> $x2477 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2490 (= ?x299 _121)))
 (=> (and $x2490 $x298) (and (= (time-to-state (+ time 1)) _122) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2490 (= ?x299 _121)))
 (let (($x2495 (and $x2490 $x315)))
 (=> $x2495 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2508 (= ?x299 _122)))
 (=> (and $x2508 $x298) (and (= (time-to-state (+ time 1)) _123) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2508 (= ?x299 _122)))
 (let (($x2513 (and $x2508 $x315)))
 (=> $x2513 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2526 (= ?x299 _123)))
 (=> (and $x2526 $x298) (and (= (time-to-state (+ time 1)) _124) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2526 (= ?x299 _123)))
 (let (($x2531 (and $x2526 $x315)))
 (=> $x2531 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2544 (= ?x299 _124)))
 (=> (and $x2544 $x298) (and (= (time-to-state (+ time 1)) _125) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2544 (= ?x299 _124)))
 (let (($x2549 (and $x2544 $x315)))
 (=> $x2549 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2562 (= ?x299 _125)))
 (=> (and $x2562 $x298) (and (= (time-to-state (+ time 1)) _126) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2562 (= ?x299 _125)))
 (let (($x2567 (and $x2562 $x315)))
 (=> $x2567 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2580 (= ?x299 _126)))
 (=> (and $x2580 $x298) (and (= (time-to-state (+ time 1)) _127) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2580 (= ?x299 _126)))
 (let (($x2585 (and $x2580 $x315)))
 (=> $x2585 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2598 (= ?x299 _127)))
 (=> (and $x2598 $x298) (and (= (time-to-state (+ time 1)) _128) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2598 (= ?x299 _127)))
 (let (($x2603 (and $x2598 $x315)))
 (=> $x2603 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2616 (= ?x299 _128)))
 (=> (and $x2616 $x298) (and (= (time-to-state (+ time 1)) _129) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2616 (= ?x299 _128)))
 (let (($x2621 (and $x2616 $x315)))
 (=> $x2621 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2634 (= ?x299 _129)))
 (=> (and $x2634 $x298) (and (= (time-to-state (+ time 1)) _130) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2634 (= ?x299 _129)))
 (let (($x2639 (and $x2634 $x315)))
 (=> $x2639 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2652 (= ?x299 _130)))
 (=> (and $x2652 $x298) (and (= (time-to-state (+ time 1)) _131) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2652 (= ?x299 _130)))
 (let (($x2657 (and $x2652 $x315)))
 (=> $x2657 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2670 (= ?x299 _131)))
 (=> (and $x2670 $x298) (and (= (time-to-state (+ time 1)) _132) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2670 (= ?x299 _131)))
 (let (($x2675 (and $x2670 $x315)))
 (=> $x2675 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2688 (= ?x299 _132)))
 (=> (and $x2688 $x298) (and (= (time-to-state (+ time 1)) _133) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2688 (= ?x299 _132)))
 (let (($x2693 (and $x2688 $x315)))
 (=> $x2693 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2706 (= ?x299 _133)))
 (=> (and $x2706 $x298) (and (= (time-to-state (+ time 1)) _134) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2706 (= ?x299 _133)))
 (let (($x2711 (and $x2706 $x315)))
 (=> $x2711 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2724 (= ?x299 _134)))
 (=> (and $x2724 $x298) (and (= (time-to-state (+ time 1)) _135) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2724 (= ?x299 _134)))
 (let (($x2729 (and $x2724 $x315)))
 (=> $x2729 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2742 (= ?x299 _135)))
 (=> (and $x2742 $x298) (and (= (time-to-state (+ time 1)) _136) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2742 (= ?x299 _135)))
 (let (($x2747 (and $x2742 $x315)))
 (=> $x2747 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2760 (= ?x299 _136)))
 (=> (and $x2760 $x298) (and (= (time-to-state (+ time 1)) _137) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2760 (= ?x299 _136)))
 (let (($x2765 (and $x2760 $x315)))
 (=> $x2765 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2778 (= ?x299 _137)))
 (=> (and $x2778 $x298) (and (= (time-to-state (+ time 1)) _138) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2778 (= ?x299 _137)))
 (let (($x2783 (and $x2778 $x315)))
 (=> $x2783 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2796 (= ?x299 _138)))
 (=> (and $x2796 $x298) (and (= (time-to-state (+ time 1)) _139) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2796 (= ?x299 _138)))
 (let (($x2801 (and $x2796 $x315)))
 (=> $x2801 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2814 (= ?x299 _139)))
 (=> (and $x2814 $x298) (and (= (time-to-state (+ time 1)) _140) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2814 (= ?x299 _139)))
 (let (($x2819 (and $x2814 $x315)))
 (=> $x2819 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2832 (= ?x299 _140)))
 (=> (and $x2832 $x298) (and (= (time-to-state (+ time 1)) _141) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2832 (= ?x299 _140)))
 (let (($x2837 (and $x2832 $x315)))
 (=> $x2837 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2850 (= ?x299 _141)))
 (=> (and $x2850 $x298) (and (= (time-to-state (+ time 1)) _142) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2850 (= ?x299 _141)))
 (let (($x2855 (and $x2850 $x315)))
 (=> $x2855 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2868 (= ?x299 _142)))
 (=> (and $x2868 $x298) (and (= (time-to-state (+ time 1)) _143) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2868 (= ?x299 _142)))
 (let (($x2873 (and $x2868 $x315)))
 (=> $x2873 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2886 (= ?x299 _143)))
 (=> (and $x2886 $x298) (and (= (time-to-state (+ time 1)) _144) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2886 (= ?x299 _143)))
 (let (($x2891 (and $x2886 $x315)))
 (=> $x2891 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2904 (= ?x299 _144)))
 (=> (and $x2904 $x298) (and (= (time-to-state (+ time 1)) _145) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2904 (= ?x299 _144)))
 (let (($x2909 (and $x2904 $x315)))
 (=> $x2909 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2922 (= ?x299 _145)))
 (=> (and $x2922 $x298) (and (= (time-to-state (+ time 1)) _146) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2922 (= ?x299 _145)))
 (let (($x2927 (and $x2922 $x315)))
 (=> $x2927 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2940 (= ?x299 _146)))
 (=> (and $x2940 $x298) (and (= (time-to-state (+ time 1)) _147) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2940 (= ?x299 _146)))
 (let (($x2945 (and $x2940 $x315)))
 (=> $x2945 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2958 (= ?x299 _147)))
 (=> (and $x2958 $x298) (and (= (time-to-state (+ time 1)) _148) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2958 (= ?x299 _147)))
 (let (($x2963 (and $x2958 $x315)))
 (=> $x2963 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2976 (= ?x299 _148)))
 (=> (and $x2976 $x298) (and (= (time-to-state (+ time 1)) _149) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2976 (= ?x299 _148)))
 (let (($x2981 (and $x2976 $x315)))
 (=> $x2981 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x2994 (= ?x299 _149)))
 (=> (and $x2994 $x298) (and (= (time-to-state (+ time 1)) _150) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x2994 (= ?x299 _149)))
 (let (($x2999 (and $x2994 $x315)))
 (=> $x2999 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3012 (= ?x299 _150)))
 (=> (and $x3012 $x298) (and (= (time-to-state (+ time 1)) _151) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3012 (= ?x299 _150)))
 (let (($x3017 (and $x3012 $x315)))
 (=> $x3017 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3030 (= ?x299 _151)))
 (=> (and $x3030 $x298) (and (= (time-to-state (+ time 1)) _152) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3030 (= ?x299 _151)))
 (let (($x3035 (and $x3030 $x315)))
 (=> $x3035 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3048 (= ?x299 _152)))
 (=> (and $x3048 $x298) (and (= (time-to-state (+ time 1)) _153) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3048 (= ?x299 _152)))
 (let (($x3053 (and $x3048 $x315)))
 (=> $x3053 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3066 (= ?x299 _153)))
 (=> (and $x3066 $x298) (and (= (time-to-state (+ time 1)) _154) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3066 (= ?x299 _153)))
 (let (($x3071 (and $x3066 $x315)))
 (=> $x3071 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3084 (= ?x299 _154)))
 (=> (and $x3084 $x298) (and (= (time-to-state (+ time 1)) _155) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3084 (= ?x299 _154)))
 (let (($x3089 (and $x3084 $x315)))
 (=> $x3089 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3102 (= ?x299 _155)))
 (=> (and $x3102 $x298) (and (= (time-to-state (+ time 1)) _156) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3102 (= ?x299 _155)))
 (let (($x3107 (and $x3102 $x315)))
 (=> $x3107 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3120 (= ?x299 _156)))
 (=> (and $x3120 $x298) (and (= (time-to-state (+ time 1)) _157) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3120 (= ?x299 _156)))
 (let (($x3125 (and $x3120 $x315)))
 (=> $x3125 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3138 (= ?x299 _157)))
 (=> (and $x3138 $x298) (and (= (time-to-state (+ time 1)) _158) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3138 (= ?x299 _157)))
 (let (($x3143 (and $x3138 $x315)))
 (=> $x3143 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3156 (= ?x299 _158)))
 (=> (and $x3156 $x298) (and (= (time-to-state (+ time 1)) _159) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3156 (= ?x299 _158)))
 (let (($x3161 (and $x3156 $x315)))
 (=> $x3161 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3174 (= ?x299 _159)))
 (=> (and $x3174 $x298) (and (= (time-to-state (+ time 1)) _160) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3174 (= ?x299 _159)))
 (let (($x3179 (and $x3174 $x315)))
 (=> $x3179 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3192 (= ?x299 _160)))
 (=> (and $x3192 $x298) (and (= (time-to-state (+ time 1)) _161) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3192 (= ?x299 _160)))
 (let (($x3197 (and $x3192 $x315)))
 (=> $x3197 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3210 (= ?x299 _161)))
 (=> (and $x3210 $x298) (and (= (time-to-state (+ time 1)) _162) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3210 (= ?x299 _161)))
 (let (($x3215 (and $x3210 $x315)))
 (=> $x3215 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3228 (= ?x299 _162)))
 (=> (and $x3228 $x298) (and (= (time-to-state (+ time 1)) _163) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3228 (= ?x299 _162)))
 (let (($x3233 (and $x3228 $x315)))
 (=> $x3233 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3246 (= ?x299 _163)))
 (=> (and $x3246 $x298) (and (= (time-to-state (+ time 1)) _164) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3246 (= ?x299 _163)))
 (let (($x3251 (and $x3246 $x315)))
 (=> $x3251 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3264 (= ?x299 _164)))
 (=> (and $x3264 $x298) (and (= (time-to-state (+ time 1)) _165) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3264 (= ?x299 _164)))
 (let (($x3269 (and $x3264 $x315)))
 (=> $x3269 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3282 (= ?x299 _165)))
 (=> (and $x3282 $x298) (and (= (time-to-state (+ time 1)) _166) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3282 (= ?x299 _165)))
 (let (($x3287 (and $x3282 $x315)))
 (=> $x3287 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3300 (= ?x299 _166)))
 (=> (and $x3300 $x298) (and (= (time-to-state (+ time 1)) _167) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3300 (= ?x299 _166)))
 (let (($x3305 (and $x3300 $x315)))
 (=> $x3305 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3318 (= ?x299 _167)))
 (=> (and $x3318 $x298) (and (= (time-to-state (+ time 1)) _168) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3318 (= ?x299 _167)))
 (let (($x3323 (and $x3318 $x315)))
 (=> $x3323 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3336 (= ?x299 _168)))
 (=> (and $x3336 $x298) (and (= (time-to-state (+ time 1)) _169) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3336 (= ?x299 _168)))
 (let (($x3341 (and $x3336 $x315)))
 (=> $x3341 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3354 (= ?x299 _169)))
 (=> (and $x3354 $x298) (and (= (time-to-state (+ time 1)) _170) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3354 (= ?x299 _169)))
 (let (($x3359 (and $x3354 $x315)))
 (=> $x3359 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3372 (= ?x299 _170)))
 (=> (and $x3372 $x298) (and (= (time-to-state (+ time 1)) _171) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3372 (= ?x299 _170)))
 (let (($x3377 (and $x3372 $x315)))
 (=> $x3377 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3390 (= ?x299 _171)))
 (=> (and $x3390 $x298) (and (= (time-to-state (+ time 1)) _172) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3390 (= ?x299 _171)))
 (let (($x3395 (and $x3390 $x315)))
 (=> $x3395 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3408 (= ?x299 _172)))
 (=> (and $x3408 $x298) (and (= (time-to-state (+ time 1)) _173) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3408 (= ?x299 _172)))
 (let (($x3413 (and $x3408 $x315)))
 (=> $x3413 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3426 (= ?x299 _173)))
 (=> (and $x3426 $x298) (and (= (time-to-state (+ time 1)) _174) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3426 (= ?x299 _173)))
 (let (($x3431 (and $x3426 $x315)))
 (=> $x3431 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3444 (= ?x299 _174)))
 (=> (and $x3444 $x298) (and (= (time-to-state (+ time 1)) _175) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3444 (= ?x299 _174)))
 (let (($x3449 (and $x3444 $x315)))
 (=> $x3449 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3462 (= ?x299 _175)))
 (=> (and $x3462 $x298) (and (= (time-to-state (+ time 1)) _176) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3462 (= ?x299 _175)))
 (let (($x3467 (and $x3462 $x315)))
 (=> $x3467 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3480 (= ?x299 _176)))
 (=> (and $x3480 $x298) (and (= (time-to-state (+ time 1)) _177) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3480 (= ?x299 _176)))
 (let (($x3485 (and $x3480 $x315)))
 (=> $x3485 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3498 (= ?x299 _177)))
 (=> (and $x3498 $x298) (and (= (time-to-state (+ time 1)) _178) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3498 (= ?x299 _177)))
 (let (($x3503 (and $x3498 $x315)))
 (=> $x3503 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3516 (= ?x299 _178)))
 (=> (and $x3516 $x298) (and (= (time-to-state (+ time 1)) _179) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3516 (= ?x299 _178)))
 (let (($x3521 (and $x3516 $x315)))
 (=> $x3521 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3534 (= ?x299 _179)))
 (=> (and $x3534 $x298) (and (= (time-to-state (+ time 1)) _180) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3534 (= ?x299 _179)))
 (let (($x3539 (and $x3534 $x315)))
 (=> $x3539 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3552 (= ?x299 _180)))
 (=> (and $x3552 $x298) (and (= (time-to-state (+ time 1)) _181) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3552 (= ?x299 _180)))
 (let (($x3557 (and $x3552 $x315)))
 (=> $x3557 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3570 (= ?x299 _181)))
 (=> (and $x3570 $x298) (and (= (time-to-state (+ time 1)) _182) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3570 (= ?x299 _181)))
 (let (($x3575 (and $x3570 $x315)))
 (=> $x3575 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3588 (= ?x299 _182)))
 (=> (and $x3588 $x298) (and (= (time-to-state (+ time 1)) _183) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3588 (= ?x299 _182)))
 (let (($x3593 (and $x3588 $x315)))
 (=> $x3593 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3606 (= ?x299 _183)))
 (=> (and $x3606 $x298) (and (= (time-to-state (+ time 1)) _184) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3606 (= ?x299 _183)))
 (let (($x3611 (and $x3606 $x315)))
 (=> $x3611 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3624 (= ?x299 _184)))
 (=> (and $x3624 $x298) (and (= (time-to-state (+ time 1)) _185) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3624 (= ?x299 _184)))
 (let (($x3629 (and $x3624 $x315)))
 (=> $x3629 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3642 (= ?x299 _185)))
 (=> (and $x3642 $x298) (and (= (time-to-state (+ time 1)) _186) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3642 (= ?x299 _185)))
 (let (($x3647 (and $x3642 $x315)))
 (=> $x3647 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3660 (= ?x299 _186)))
 (=> (and $x3660 $x298) (and (= (time-to-state (+ time 1)) _187) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3660 (= ?x299 _186)))
 (let (($x3665 (and $x3660 $x315)))
 (=> $x3665 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3678 (= ?x299 _187)))
 (=> (and $x3678 $x298) (and (= (time-to-state (+ time 1)) _188) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3678 (= ?x299 _187)))
 (let (($x3683 (and $x3678 $x315)))
 (=> $x3683 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3696 (= ?x299 _188)))
 (=> (and $x3696 $x298) (and (= (time-to-state (+ time 1)) _189) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3696 (= ?x299 _188)))
 (let (($x3701 (and $x3696 $x315)))
 (=> $x3701 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3714 (= ?x299 _189)))
 (=> (and $x3714 $x298) (and (= (time-to-state (+ time 1)) _190) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3714 (= ?x299 _189)))
 (let (($x3719 (and $x3714 $x315)))
 (=> $x3719 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3732 (= ?x299 _190)))
 (=> (and $x3732 $x298) (and (= (time-to-state (+ time 1)) _191) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3732 (= ?x299 _190)))
 (let (($x3737 (and $x3732 $x315)))
 (=> $x3737 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3750 (= ?x299 _191)))
 (=> (and $x3750 $x298) (and (= (time-to-state (+ time 1)) _192) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3750 (= ?x299 _191)))
 (let (($x3755 (and $x3750 $x315)))
 (=> $x3755 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3768 (= ?x299 _192)))
 (=> (and $x3768 $x298) (and (= (time-to-state (+ time 1)) _193) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3768 (= ?x299 _192)))
 (let (($x3773 (and $x3768 $x315)))
 (=> $x3773 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3786 (= ?x299 _193)))
 (=> (and $x3786 $x298) (and (= (time-to-state (+ time 1)) _194) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3786 (= ?x299 _193)))
 (let (($x3791 (and $x3786 $x315)))
 (=> $x3791 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3804 (= ?x299 _194)))
 (=> (and $x3804 $x298) (and (= (time-to-state (+ time 1)) _195) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3804 (= ?x299 _194)))
 (let (($x3809 (and $x3804 $x315)))
 (=> $x3809 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3822 (= ?x299 _195)))
 (=> (and $x3822 $x298) (and (= (time-to-state (+ time 1)) _196) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3822 (= ?x299 _195)))
 (let (($x3827 (and $x3822 $x315)))
 (=> $x3827 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3840 (= ?x299 _196)))
 (=> (and $x3840 $x298) (and (= (time-to-state (+ time 1)) _197) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3840 (= ?x299 _196)))
 (let (($x3845 (and $x3840 $x315)))
 (=> $x3845 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3858 (= ?x299 _197)))
 (=> (and $x3858 $x298) (and (= (time-to-state (+ time 1)) _198) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3858 (= ?x299 _197)))
 (let (($x3863 (and $x3858 $x315)))
 (=> $x3863 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3876 (= ?x299 _198)))
 (=> (and $x3876 $x298) (and (= (time-to-state (+ time 1)) _199) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3876 (= ?x299 _198)))
 (let (($x3881 (and $x3876 $x315)))
 (=> $x3881 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3894 (= ?x299 _199)))
 (=> (and $x3894 $x298) (and (= (time-to-state (+ time 1)) _200) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3894 (= ?x299 _199)))
 (let (($x3899 (and $x3894 $x315)))
 (=> $x3899 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3912 (= ?x299 _200)))
 (=> (and $x3912 $x298) (and (= (time-to-state (+ time 1)) _201) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3912 (= ?x299 _200)))
 (let (($x3917 (and $x3912 $x315)))
 (=> $x3917 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3930 (= ?x299 _201)))
 (=> (and $x3930 $x298) (and (= (time-to-state (+ time 1)) _202) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3930 (= ?x299 _201)))
 (let (($x3935 (and $x3930 $x315)))
 (=> $x3935 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3948 (= ?x299 _202)))
 (=> (and $x3948 $x298) (and (= (time-to-state (+ time 1)) _203) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3948 (= ?x299 _202)))
 (let (($x3953 (and $x3948 $x315)))
 (=> $x3953 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3966 (= ?x299 _203)))
 (=> (and $x3966 $x298) (and (= (time-to-state (+ time 1)) _204) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3966 (= ?x299 _203)))
 (let (($x3971 (and $x3966 $x315)))
 (=> $x3971 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x3984 (= ?x299 _204)))
 (=> (and $x3984 $x298) (and (= (time-to-state (+ time 1)) _205) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x3984 (= ?x299 _204)))
 (let (($x3989 (and $x3984 $x315)))
 (=> $x3989 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4002 (= ?x299 _205)))
 (=> (and $x4002 $x298) (and (= (time-to-state (+ time 1)) _206) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4002 (= ?x299 _205)))
 (let (($x4007 (and $x4002 $x315)))
 (=> $x4007 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4020 (= ?x299 _206)))
 (=> (and $x4020 $x298) (and (= (time-to-state (+ time 1)) _207) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4020 (= ?x299 _206)))
 (let (($x4025 (and $x4020 $x315)))
 (=> $x4025 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4038 (= ?x299 _207)))
 (=> (and $x4038 $x298) (and (= (time-to-state (+ time 1)) _208) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4038 (= ?x299 _207)))
 (let (($x4043 (and $x4038 $x315)))
 (=> $x4043 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4056 (= ?x299 _208)))
 (=> (and $x4056 $x298) (and (= (time-to-state (+ time 1)) _209) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4056 (= ?x299 _208)))
 (let (($x4061 (and $x4056 $x315)))
 (=> $x4061 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4074 (= ?x299 _209)))
 (=> (and $x4074 $x298) (and (= (time-to-state (+ time 1)) _210) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4074 (= ?x299 _209)))
 (let (($x4079 (and $x4074 $x315)))
 (=> $x4079 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4092 (= ?x299 _210)))
 (=> (and $x4092 $x298) (and (= (time-to-state (+ time 1)) _211) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4092 (= ?x299 _210)))
 (let (($x4097 (and $x4092 $x315)))
 (=> $x4097 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4110 (= ?x299 _211)))
 (=> (and $x4110 $x298) (and (= (time-to-state (+ time 1)) _212) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4110 (= ?x299 _211)))
 (let (($x4115 (and $x4110 $x315)))
 (=> $x4115 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4128 (= ?x299 _212)))
 (=> (and $x4128 $x298) (and (= (time-to-state (+ time 1)) _213) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4128 (= ?x299 _212)))
 (let (($x4133 (and $x4128 $x315)))
 (=> $x4133 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4146 (= ?x299 _213)))
 (=> (and $x4146 $x298) (and (= (time-to-state (+ time 1)) _214) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4146 (= ?x299 _213)))
 (let (($x4151 (and $x4146 $x315)))
 (=> $x4151 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4164 (= ?x299 _214)))
 (=> (and $x4164 $x298) (and (= (time-to-state (+ time 1)) _215) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4164 (= ?x299 _214)))
 (let (($x4169 (and $x4164 $x315)))
 (=> $x4169 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4182 (= ?x299 _215)))
 (=> (and $x4182 $x298) (and (= (time-to-state (+ time 1)) _216) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4182 (= ?x299 _215)))
 (let (($x4187 (and $x4182 $x315)))
 (=> $x4187 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4200 (= ?x299 _216)))
 (=> (and $x4200 $x298) (and (= (time-to-state (+ time 1)) _217) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4200 (= ?x299 _216)))
 (let (($x4205 (and $x4200 $x315)))
 (=> $x4205 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4218 (= ?x299 _217)))
 (=> (and $x4218 $x298) (and (= (time-to-state (+ time 1)) _218) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4218 (= ?x299 _217)))
 (let (($x4223 (and $x4218 $x315)))
 (=> $x4223 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4236 (= ?x299 _218)))
 (=> (and $x4236 $x298) (and (= (time-to-state (+ time 1)) _219) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4236 (= ?x299 _218)))
 (let (($x4241 (and $x4236 $x315)))
 (=> $x4241 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4254 (= ?x299 _219)))
 (=> (and $x4254 $x298) (and (= (time-to-state (+ time 1)) _220) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4254 (= ?x299 _219)))
 (let (($x4259 (and $x4254 $x315)))
 (=> $x4259 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4272 (= ?x299 _220)))
 (=> (and $x4272 $x298) (and (= (time-to-state (+ time 1)) _221) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4272 (= ?x299 _220)))
 (let (($x4277 (and $x4272 $x315)))
 (=> $x4277 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4290 (= ?x299 _221)))
 (=> (and $x4290 $x298) (and (= (time-to-state (+ time 1)) _222) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4290 (= ?x299 _221)))
 (let (($x4295 (and $x4290 $x315)))
 (=> $x4295 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4308 (= ?x299 _222)))
 (=> (and $x4308 $x298) (and (= (time-to-state (+ time 1)) _223) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4308 (= ?x299 _222)))
 (let (($x4313 (and $x4308 $x315)))
 (=> $x4313 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4326 (= ?x299 _223)))
 (=> (and $x4326 $x298) (and (= (time-to-state (+ time 1)) _224) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4326 (= ?x299 _223)))
 (let (($x4331 (and $x4326 $x315)))
 (=> $x4331 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4344 (= ?x299 _224)))
 (=> (and $x4344 $x298) (and (= (time-to-state (+ time 1)) _225) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4344 (= ?x299 _224)))
 (let (($x4349 (and $x4344 $x315)))
 (=> $x4349 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4362 (= ?x299 _225)))
 (=> (and $x4362 $x298) (and (= (time-to-state (+ time 1)) _226) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4362 (= ?x299 _225)))
 (let (($x4367 (and $x4362 $x315)))
 (=> $x4367 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4380 (= ?x299 _226)))
 (=> (and $x4380 $x298) (and (= (time-to-state (+ time 1)) _227) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4380 (= ?x299 _226)))
 (let (($x4385 (and $x4380 $x315)))
 (=> $x4385 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4398 (= ?x299 _227)))
 (=> (and $x4398 $x298) (and (= (time-to-state (+ time 1)) _228) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4398 (= ?x299 _227)))
 (let (($x4403 (and $x4398 $x315)))
 (=> $x4403 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4416 (= ?x299 _228)))
 (=> (and $x4416 $x298) (and (= (time-to-state (+ time 1)) _229) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4416 (= ?x299 _228)))
 (let (($x4421 (and $x4416 $x315)))
 (=> $x4421 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4434 (= ?x299 _229)))
 (=> (and $x4434 $x298) (and (= (time-to-state (+ time 1)) _230) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4434 (= ?x299 _229)))
 (let (($x4439 (and $x4434 $x315)))
 (=> $x4439 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4452 (= ?x299 _230)))
 (=> (and $x4452 $x298) (and (= (time-to-state (+ time 1)) _231) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4452 (= ?x299 _230)))
 (let (($x4457 (and $x4452 $x315)))
 (=> $x4457 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4470 (= ?x299 _231)))
 (=> (and $x4470 $x298) (and (= (time-to-state (+ time 1)) _232) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4470 (= ?x299 _231)))
 (let (($x4475 (and $x4470 $x315)))
 (=> $x4475 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4488 (= ?x299 _232)))
 (=> (and $x4488 $x298) (and (= (time-to-state (+ time 1)) _233) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4488 (= ?x299 _232)))
 (let (($x4493 (and $x4488 $x315)))
 (=> $x4493 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4506 (= ?x299 _233)))
 (=> (and $x4506 $x298) (and (= (time-to-state (+ time 1)) _234) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4506 (= ?x299 _233)))
 (let (($x4511 (and $x4506 $x315)))
 (=> $x4511 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4524 (= ?x299 _234)))
 (=> (and $x4524 $x298) (and (= (time-to-state (+ time 1)) _235) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4524 (= ?x299 _234)))
 (let (($x4529 (and $x4524 $x315)))
 (=> $x4529 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4542 (= ?x299 _235)))
 (=> (and $x4542 $x298) (and (= (time-to-state (+ time 1)) _236) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4542 (= ?x299 _235)))
 (let (($x4547 (and $x4542 $x315)))
 (=> $x4547 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4560 (= ?x299 _236)))
 (=> (and $x4560 $x298) (and (= (time-to-state (+ time 1)) _237) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4560 (= ?x299 _236)))
 (let (($x4565 (and $x4560 $x315)))
 (=> $x4565 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4578 (= ?x299 _237)))
 (=> (and $x4578 $x298) (and (= (time-to-state (+ time 1)) _238) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4578 (= ?x299 _237)))
 (let (($x4583 (and $x4578 $x315)))
 (=> $x4583 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4596 (= ?x299 _238)))
 (=> (and $x4596 $x298) (and (= (time-to-state (+ time 1)) _239) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4596 (= ?x299 _238)))
 (let (($x4601 (and $x4596 $x315)))
 (=> $x4601 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let (($x293 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x297 (input-arg0 time)))
 (let (($x298 (and (distinct ?x297 0) true)))
 (let ((?x299 (time-to-state time)))
 (let (($x4614 (= ?x299 _239)))
 (=> (and $x4614 $x298) (and (= (time-to-state (+ time 1)) _240) $x293))))))))
 )
(assert
 (forall ((time Int) )(let ((?x291 (+ time 1)))
 (let ((?x294 (time-to-state ?x291)))
 (let (($x314 (= ?x294 ERR)))
 (let ((?x297 (input-arg0 time)))
 (let (($x315 (= ?x297 1)))
 (let ((?x299 (time-to-state time)))
 (let (($x4614 (= ?x299 _239)))
 (let (($x4619 (and $x4614 $x315)))
 (=> $x4619 $x314))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x299 (time-to-state time)))
 (let (($x4622 (= ?x299 ERR)))
 (and $x4622 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240) true))
(check-sat)
