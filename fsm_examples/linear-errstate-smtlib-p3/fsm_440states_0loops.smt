; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(declare-fun _371 () STATE)
(declare-fun _372 () STATE)
(declare-fun _373 () STATE)
(declare-fun _374 () STATE)
(declare-fun _375 () STATE)
(declare-fun _376 () STATE)
(declare-fun _377 () STATE)
(declare-fun _378 () STATE)
(declare-fun _379 () STATE)
(declare-fun _380 () STATE)
(declare-fun _381 () STATE)
(declare-fun _382 () STATE)
(declare-fun _383 () STATE)
(declare-fun _384 () STATE)
(declare-fun _385 () STATE)
(declare-fun _386 () STATE)
(declare-fun _387 () STATE)
(declare-fun _388 () STATE)
(declare-fun _389 () STATE)
(declare-fun _390 () STATE)
(declare-fun _391 () STATE)
(declare-fun _392 () STATE)
(declare-fun _393 () STATE)
(declare-fun _394 () STATE)
(declare-fun _395 () STATE)
(declare-fun _396 () STATE)
(declare-fun _397 () STATE)
(declare-fun _398 () STATE)
(declare-fun _399 () STATE)
(declare-fun _400 () STATE)
(declare-fun _401 () STATE)
(declare-fun _402 () STATE)
(declare-fun _403 () STATE)
(declare-fun _404 () STATE)
(declare-fun _405 () STATE)
(declare-fun _406 () STATE)
(declare-fun _407 () STATE)
(declare-fun _408 () STATE)
(declare-fun _409 () STATE)
(declare-fun _410 () STATE)
(declare-fun _411 () STATE)
(declare-fun _412 () STATE)
(declare-fun _413 () STATE)
(declare-fun _414 () STATE)
(declare-fun _415 () STATE)
(declare-fun _416 () STATE)
(declare-fun _417 () STATE)
(declare-fun _418 () STATE)
(declare-fun _419 () STATE)
(declare-fun _420 () STATE)
(declare-fun _421 () STATE)
(declare-fun _422 () STATE)
(declare-fun _423 () STATE)
(declare-fun _424 () STATE)
(declare-fun _425 () STATE)
(declare-fun _426 () STATE)
(declare-fun _427 () STATE)
(declare-fun _428 () STATE)
(declare-fun _429 () STATE)
(declare-fun _430 () STATE)
(declare-fun _431 () STATE)
(declare-fun _432 () STATE)
(declare-fun _433 () STATE)
(declare-fun _434 () STATE)
(declare-fun _435 () STATE)
(declare-fun _436 () STATE)
(declare-fun _437 () STATE)
(declare-fun _438 () STATE)
(declare-fun _439 () STATE)
(declare-fun _440 () STATE)
(assert
 (let ((?x449 (time-to-state 0)))
 (= ?x449 _0)))
(assert
 (let ((?x469 (input-arg0 0)))
 (= ?x469 0)))
(assert
 (let ((?x471 (var1_0 0)))
 (= ?x471 0)))
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x500 (= ?x499 _0)))
 (let (($x516 (and $x500 $x515)))
 (=> $x516 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x530 (= ?x499 _1)))
 (let (($x535 (and $x530 $x515)))
 (=> $x535 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x548 (= ?x499 _2)))
 (let (($x553 (and $x548 $x515)))
 (=> $x553 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x566 (= ?x499 _3)))
 (let (($x571 (and $x566 $x515)))
 (=> $x571 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x584 (= ?x499 _4)))
 (let (($x589 (and $x584 $x515)))
 (=> $x589 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x602 (= ?x499 _5)))
 (let (($x607 (and $x602 $x515)))
 (=> $x607 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x620 (= ?x499 _6)))
 (let (($x625 (and $x620 $x515)))
 (=> $x625 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x638 (= ?x499 _7)))
 (let (($x643 (and $x638 $x515)))
 (=> $x643 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x656 (= ?x499 _8)))
 (let (($x661 (and $x656 $x515)))
 (=> $x661 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x674 (= ?x499 _9)))
 (let (($x679 (and $x674 $x515)))
 (=> $x679 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x692 (= ?x499 _10)))
 (let (($x697 (and $x692 $x515)))
 (=> $x697 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x710 (= ?x499 _11)))
 (let (($x715 (and $x710 $x515)))
 (=> $x715 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x728 (= ?x499 _12)))
 (let (($x733 (and $x728 $x515)))
 (=> $x733 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x746 (= ?x499 _13)))
 (let (($x751 (and $x746 $x515)))
 (=> $x751 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x764 (= ?x499 _14)))
 (let (($x769 (and $x764 $x515)))
 (=> $x769 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x782 (= ?x499 _15)))
 (let (($x787 (and $x782 $x515)))
 (=> $x787 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x800 (= ?x499 _16)))
 (let (($x805 (and $x800 $x515)))
 (=> $x805 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x818 (= ?x499 _17)))
 (let (($x823 (and $x818 $x515)))
 (=> $x823 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x836 (= ?x499 _18)))
 (let (($x841 (and $x836 $x515)))
 (=> $x841 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x854 (= ?x499 _19)))
 (let (($x859 (and $x854 $x515)))
 (=> $x859 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x872 (= ?x499 _20)))
 (let (($x877 (and $x872 $x515)))
 (=> $x877 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x890 (= ?x499 _21)))
 (let (($x895 (and $x890 $x515)))
 (=> $x895 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x908 (= ?x499 _22)))
 (let (($x913 (and $x908 $x515)))
 (=> $x913 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x926 (= ?x499 _23)))
 (let (($x931 (and $x926 $x515)))
 (=> $x931 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x944 (= ?x499 _24)))
 (let (($x949 (and $x944 $x515)))
 (=> $x949 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x962 (= ?x499 _25)))
 (let (($x967 (and $x962 $x515)))
 (=> $x967 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x980 (= ?x499 _26)))
 (let (($x985 (and $x980 $x515)))
 (=> $x985 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x998 (= ?x499 _27)))
 (let (($x1003 (and $x998 $x515)))
 (=> $x1003 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1016 (= ?x499 _28)))
 (let (($x1021 (and $x1016 $x515)))
 (=> $x1021 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1034 (= ?x499 _29)))
 (let (($x1039 (and $x1034 $x515)))
 (=> $x1039 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1052 (= ?x499 _30)))
 (let (($x1057 (and $x1052 $x515)))
 (=> $x1057 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1070 (= ?x499 _31)))
 (let (($x1075 (and $x1070 $x515)))
 (=> $x1075 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1088 (= ?x499 _32)))
 (let (($x1093 (and $x1088 $x515)))
 (=> $x1093 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1106 (= ?x499 _33)))
 (let (($x1111 (and $x1106 $x515)))
 (=> $x1111 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1124 (= ?x499 _34)))
 (let (($x1129 (and $x1124 $x515)))
 (=> $x1129 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1142 (= ?x499 _35)))
 (let (($x1147 (and $x1142 $x515)))
 (=> $x1147 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1160 (= ?x499 _36)))
 (let (($x1165 (and $x1160 $x515)))
 (=> $x1165 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1178 (= ?x499 _37)))
 (let (($x1183 (and $x1178 $x515)))
 (=> $x1183 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1196 (= ?x499 _38)))
 (let (($x1201 (and $x1196 $x515)))
 (=> $x1201 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1214 (= ?x499 _39)))
 (let (($x1219 (and $x1214 $x515)))
 (=> $x1219 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1232 (= ?x499 _40)))
 (let (($x1237 (and $x1232 $x515)))
 (=> $x1237 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1250 (= ?x499 _41)))
 (let (($x1255 (and $x1250 $x515)))
 (=> $x1255 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1268 (= ?x499 _42)))
 (let (($x1273 (and $x1268 $x515)))
 (=> $x1273 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1286 (= ?x499 _43)))
 (let (($x1291 (and $x1286 $x515)))
 (=> $x1291 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1304 (= ?x499 _44)))
 (let (($x1309 (and $x1304 $x515)))
 (=> $x1309 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1322 (= ?x499 _45)))
 (let (($x1327 (and $x1322 $x515)))
 (=> $x1327 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1340 (= ?x499 _46)))
 (let (($x1345 (and $x1340 $x515)))
 (=> $x1345 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1358 (= ?x499 _47)))
 (let (($x1363 (and $x1358 $x515)))
 (=> $x1363 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1376 (= ?x499 _48)))
 (let (($x1381 (and $x1376 $x515)))
 (=> $x1381 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1394 (= ?x499 _49)))
 (let (($x1399 (and $x1394 $x515)))
 (=> $x1399 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1412 (= ?x499 _50)))
 (let (($x1417 (and $x1412 $x515)))
 (=> $x1417 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1430 (= ?x499 _51)))
 (let (($x1435 (and $x1430 $x515)))
 (=> $x1435 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1448 (= ?x499 _52)))
 (let (($x1453 (and $x1448 $x515)))
 (=> $x1453 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1466 (= ?x499 _53)))
 (let (($x1471 (and $x1466 $x515)))
 (=> $x1471 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1484 (= ?x499 _54)))
 (let (($x1489 (and $x1484 $x515)))
 (=> $x1489 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1502 (= ?x499 _55)))
 (let (($x1507 (and $x1502 $x515)))
 (=> $x1507 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1520 (= ?x499 _56)))
 (let (($x1525 (and $x1520 $x515)))
 (=> $x1525 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1538 (= ?x499 _57)))
 (let (($x1543 (and $x1538 $x515)))
 (=> $x1543 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1556 (= ?x499 _58)))
 (let (($x1561 (and $x1556 $x515)))
 (=> $x1561 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1574 (= ?x499 _59)))
 (let (($x1579 (and $x1574 $x515)))
 (=> $x1579 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1592 (= ?x499 _60)))
 (let (($x1597 (and $x1592 $x515)))
 (=> $x1597 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1610 (= ?x499 _61)))
 (let (($x1615 (and $x1610 $x515)))
 (=> $x1615 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1628 (= ?x499 _62)))
 (let (($x1633 (and $x1628 $x515)))
 (=> $x1633 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1646 (= ?x499 _63)))
 (let (($x1651 (and $x1646 $x515)))
 (=> $x1651 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1664 (= ?x499 _64)))
 (let (($x1669 (and $x1664 $x515)))
 (=> $x1669 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1682 (= ?x499 _65)))
 (let (($x1687 (and $x1682 $x515)))
 (=> $x1687 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1700 (= ?x499 _66)))
 (let (($x1705 (and $x1700 $x515)))
 (=> $x1705 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1718 (= ?x499 _67)))
 (let (($x1723 (and $x1718 $x515)))
 (=> $x1723 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1736 (= ?x499 _68)))
 (let (($x1741 (and $x1736 $x515)))
 (=> $x1741 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1754 (= ?x499 _69)))
 (let (($x1759 (and $x1754 $x515)))
 (=> $x1759 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1772 (= ?x499 _70)))
 (let (($x1777 (and $x1772 $x515)))
 (=> $x1777 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1790 (= ?x499 _71)))
 (let (($x1795 (and $x1790 $x515)))
 (=> $x1795 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1808 (= ?x499 _72)))
 (let (($x1813 (and $x1808 $x515)))
 (=> $x1813 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1826 (= ?x499 _73)))
 (let (($x1831 (and $x1826 $x515)))
 (=> $x1831 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1844 (= ?x499 _74)))
 (let (($x1849 (and $x1844 $x515)))
 (=> $x1849 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1862 (= ?x499 _75)))
 (let (($x1867 (and $x1862 $x515)))
 (=> $x1867 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1880 (= ?x499 _76)))
 (let (($x1885 (and $x1880 $x515)))
 (=> $x1885 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1898 (= ?x499 _77)))
 (let (($x1903 (and $x1898 $x515)))
 (=> $x1903 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1916 (= ?x499 _78)))
 (let (($x1921 (and $x1916 $x515)))
 (=> $x1921 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1934 (= ?x499 _79)))
 (let (($x1939 (and $x1934 $x515)))
 (=> $x1939 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1952 (= ?x499 _80)))
 (let (($x1957 (and $x1952 $x515)))
 (=> $x1957 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1970 (= ?x499 _81)))
 (let (($x1975 (and $x1970 $x515)))
 (=> $x1975 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x1988 (= ?x499 _82)))
 (let (($x1993 (and $x1988 $x515)))
 (=> $x1993 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2006 (= ?x499 _83)))
 (let (($x2011 (and $x2006 $x515)))
 (=> $x2011 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2024 (= ?x499 _84)))
 (let (($x2029 (and $x2024 $x515)))
 (=> $x2029 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2042 (= ?x499 _85)))
 (let (($x2047 (and $x2042 $x515)))
 (=> $x2047 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2060 (= ?x499 _86)))
 (let (($x2065 (and $x2060 $x515)))
 (=> $x2065 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2078 (= ?x499 _87)))
 (let (($x2083 (and $x2078 $x515)))
 (=> $x2083 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2096 (= ?x499 _88)))
 (let (($x2101 (and $x2096 $x515)))
 (=> $x2101 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2114 (= ?x499 _89)))
 (let (($x2119 (and $x2114 $x515)))
 (=> $x2119 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2132 (= ?x499 _90)))
 (let (($x2137 (and $x2132 $x515)))
 (=> $x2137 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2150 (= ?x499 _91)))
 (let (($x2155 (and $x2150 $x515)))
 (=> $x2155 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2168 (= ?x499 _92)))
 (let (($x2173 (and $x2168 $x515)))
 (=> $x2173 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2186 (= ?x499 _93)))
 (let (($x2191 (and $x2186 $x515)))
 (=> $x2191 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2204 (= ?x499 _94)))
 (let (($x2209 (and $x2204 $x515)))
 (=> $x2209 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2222 (= ?x499 _95)))
 (let (($x2227 (and $x2222 $x515)))
 (=> $x2227 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2240 (= ?x499 _96)))
 (let (($x2245 (and $x2240 $x515)))
 (=> $x2245 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2258 (= ?x499 _97)))
 (let (($x2263 (and $x2258 $x515)))
 (=> $x2263 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2276 (= ?x499 _98)))
 (let (($x2281 (and $x2276 $x515)))
 (=> $x2281 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x493))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2294 (= ?x499 _99)))
 (let (($x2299 (and $x2294 $x515)))
 (=> $x2299 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2312 (= ?x499 _100)))
 (=> (and $x2312 $x498) (and (= (time-to-state (+ time 1)) _101) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2312 (= ?x499 _100)))
 (let (($x2317 (and $x2312 $x515)))
 (=> $x2317 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2330 (= ?x499 _101)))
 (=> (and $x2330 $x498) (and (= (time-to-state (+ time 1)) _102) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2330 (= ?x499 _101)))
 (let (($x2335 (and $x2330 $x515)))
 (=> $x2335 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2348 (= ?x499 _102)))
 (=> (and $x2348 $x498) (and (= (time-to-state (+ time 1)) _103) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2348 (= ?x499 _102)))
 (let (($x2353 (and $x2348 $x515)))
 (=> $x2353 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2366 (= ?x499 _103)))
 (=> (and $x2366 $x498) (and (= (time-to-state (+ time 1)) _104) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2366 (= ?x499 _103)))
 (let (($x2371 (and $x2366 $x515)))
 (=> $x2371 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2384 (= ?x499 _104)))
 (=> (and $x2384 $x498) (and (= (time-to-state (+ time 1)) _105) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2384 (= ?x499 _104)))
 (let (($x2389 (and $x2384 $x515)))
 (=> $x2389 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2402 (= ?x499 _105)))
 (=> (and $x2402 $x498) (and (= (time-to-state (+ time 1)) _106) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2402 (= ?x499 _105)))
 (let (($x2407 (and $x2402 $x515)))
 (=> $x2407 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2420 (= ?x499 _106)))
 (=> (and $x2420 $x498) (and (= (time-to-state (+ time 1)) _107) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2420 (= ?x499 _106)))
 (let (($x2425 (and $x2420 $x515)))
 (=> $x2425 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2438 (= ?x499 _107)))
 (=> (and $x2438 $x498) (and (= (time-to-state (+ time 1)) _108) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2438 (= ?x499 _107)))
 (let (($x2443 (and $x2438 $x515)))
 (=> $x2443 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2456 (= ?x499 _108)))
 (=> (and $x2456 $x498) (and (= (time-to-state (+ time 1)) _109) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2456 (= ?x499 _108)))
 (let (($x2461 (and $x2456 $x515)))
 (=> $x2461 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2474 (= ?x499 _109)))
 (=> (and $x2474 $x498) (and (= (time-to-state (+ time 1)) _110) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2474 (= ?x499 _109)))
 (let (($x2479 (and $x2474 $x515)))
 (=> $x2479 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2492 (= ?x499 _110)))
 (=> (and $x2492 $x498) (and (= (time-to-state (+ time 1)) _111) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2492 (= ?x499 _110)))
 (let (($x2497 (and $x2492 $x515)))
 (=> $x2497 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2510 (= ?x499 _111)))
 (=> (and $x2510 $x498) (and (= (time-to-state (+ time 1)) _112) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2510 (= ?x499 _111)))
 (let (($x2515 (and $x2510 $x515)))
 (=> $x2515 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2528 (= ?x499 _112)))
 (=> (and $x2528 $x498) (and (= (time-to-state (+ time 1)) _113) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2528 (= ?x499 _112)))
 (let (($x2533 (and $x2528 $x515)))
 (=> $x2533 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2546 (= ?x499 _113)))
 (=> (and $x2546 $x498) (and (= (time-to-state (+ time 1)) _114) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2546 (= ?x499 _113)))
 (let (($x2551 (and $x2546 $x515)))
 (=> $x2551 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2564 (= ?x499 _114)))
 (=> (and $x2564 $x498) (and (= (time-to-state (+ time 1)) _115) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2564 (= ?x499 _114)))
 (let (($x2569 (and $x2564 $x515)))
 (=> $x2569 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2582 (= ?x499 _115)))
 (=> (and $x2582 $x498) (and (= (time-to-state (+ time 1)) _116) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2582 (= ?x499 _115)))
 (let (($x2587 (and $x2582 $x515)))
 (=> $x2587 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2600 (= ?x499 _116)))
 (=> (and $x2600 $x498) (and (= (time-to-state (+ time 1)) _117) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2600 (= ?x499 _116)))
 (let (($x2605 (and $x2600 $x515)))
 (=> $x2605 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2618 (= ?x499 _117)))
 (=> (and $x2618 $x498) (and (= (time-to-state (+ time 1)) _118) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2618 (= ?x499 _117)))
 (let (($x2623 (and $x2618 $x515)))
 (=> $x2623 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2636 (= ?x499 _118)))
 (=> (and $x2636 $x498) (and (= (time-to-state (+ time 1)) _119) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2636 (= ?x499 _118)))
 (let (($x2641 (and $x2636 $x515)))
 (=> $x2641 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2654 (= ?x499 _119)))
 (=> (and $x2654 $x498) (and (= (time-to-state (+ time 1)) _120) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2654 (= ?x499 _119)))
 (let (($x2659 (and $x2654 $x515)))
 (=> $x2659 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2672 (= ?x499 _120)))
 (=> (and $x2672 $x498) (and (= (time-to-state (+ time 1)) _121) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2672 (= ?x499 _120)))
 (let (($x2677 (and $x2672 $x515)))
 (=> $x2677 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2690 (= ?x499 _121)))
 (=> (and $x2690 $x498) (and (= (time-to-state (+ time 1)) _122) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2690 (= ?x499 _121)))
 (let (($x2695 (and $x2690 $x515)))
 (=> $x2695 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2708 (= ?x499 _122)))
 (=> (and $x2708 $x498) (and (= (time-to-state (+ time 1)) _123) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2708 (= ?x499 _122)))
 (let (($x2713 (and $x2708 $x515)))
 (=> $x2713 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2726 (= ?x499 _123)))
 (=> (and $x2726 $x498) (and (= (time-to-state (+ time 1)) _124) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2726 (= ?x499 _123)))
 (let (($x2731 (and $x2726 $x515)))
 (=> $x2731 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2744 (= ?x499 _124)))
 (=> (and $x2744 $x498) (and (= (time-to-state (+ time 1)) _125) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2744 (= ?x499 _124)))
 (let (($x2749 (and $x2744 $x515)))
 (=> $x2749 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2762 (= ?x499 _125)))
 (=> (and $x2762 $x498) (and (= (time-to-state (+ time 1)) _126) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2762 (= ?x499 _125)))
 (let (($x2767 (and $x2762 $x515)))
 (=> $x2767 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2780 (= ?x499 _126)))
 (=> (and $x2780 $x498) (and (= (time-to-state (+ time 1)) _127) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2780 (= ?x499 _126)))
 (let (($x2785 (and $x2780 $x515)))
 (=> $x2785 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2798 (= ?x499 _127)))
 (=> (and $x2798 $x498) (and (= (time-to-state (+ time 1)) _128) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2798 (= ?x499 _127)))
 (let (($x2803 (and $x2798 $x515)))
 (=> $x2803 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2816 (= ?x499 _128)))
 (=> (and $x2816 $x498) (and (= (time-to-state (+ time 1)) _129) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2816 (= ?x499 _128)))
 (let (($x2821 (and $x2816 $x515)))
 (=> $x2821 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2834 (= ?x499 _129)))
 (=> (and $x2834 $x498) (and (= (time-to-state (+ time 1)) _130) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2834 (= ?x499 _129)))
 (let (($x2839 (and $x2834 $x515)))
 (=> $x2839 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2852 (= ?x499 _130)))
 (=> (and $x2852 $x498) (and (= (time-to-state (+ time 1)) _131) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2852 (= ?x499 _130)))
 (let (($x2857 (and $x2852 $x515)))
 (=> $x2857 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2870 (= ?x499 _131)))
 (=> (and $x2870 $x498) (and (= (time-to-state (+ time 1)) _132) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2870 (= ?x499 _131)))
 (let (($x2875 (and $x2870 $x515)))
 (=> $x2875 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2888 (= ?x499 _132)))
 (=> (and $x2888 $x498) (and (= (time-to-state (+ time 1)) _133) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2888 (= ?x499 _132)))
 (let (($x2893 (and $x2888 $x515)))
 (=> $x2893 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2906 (= ?x499 _133)))
 (=> (and $x2906 $x498) (and (= (time-to-state (+ time 1)) _134) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2906 (= ?x499 _133)))
 (let (($x2911 (and $x2906 $x515)))
 (=> $x2911 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2924 (= ?x499 _134)))
 (=> (and $x2924 $x498) (and (= (time-to-state (+ time 1)) _135) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2924 (= ?x499 _134)))
 (let (($x2929 (and $x2924 $x515)))
 (=> $x2929 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2942 (= ?x499 _135)))
 (=> (and $x2942 $x498) (and (= (time-to-state (+ time 1)) _136) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2942 (= ?x499 _135)))
 (let (($x2947 (and $x2942 $x515)))
 (=> $x2947 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2960 (= ?x499 _136)))
 (=> (and $x2960 $x498) (and (= (time-to-state (+ time 1)) _137) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2960 (= ?x499 _136)))
 (let (($x2965 (and $x2960 $x515)))
 (=> $x2965 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2978 (= ?x499 _137)))
 (=> (and $x2978 $x498) (and (= (time-to-state (+ time 1)) _138) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2978 (= ?x499 _137)))
 (let (($x2983 (and $x2978 $x515)))
 (=> $x2983 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x2996 (= ?x499 _138)))
 (=> (and $x2996 $x498) (and (= (time-to-state (+ time 1)) _139) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x2996 (= ?x499 _138)))
 (let (($x3001 (and $x2996 $x515)))
 (=> $x3001 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3014 (= ?x499 _139)))
 (=> (and $x3014 $x498) (and (= (time-to-state (+ time 1)) _140) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3014 (= ?x499 _139)))
 (let (($x3019 (and $x3014 $x515)))
 (=> $x3019 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3032 (= ?x499 _140)))
 (=> (and $x3032 $x498) (and (= (time-to-state (+ time 1)) _141) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3032 (= ?x499 _140)))
 (let (($x3037 (and $x3032 $x515)))
 (=> $x3037 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3050 (= ?x499 _141)))
 (=> (and $x3050 $x498) (and (= (time-to-state (+ time 1)) _142) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3050 (= ?x499 _141)))
 (let (($x3055 (and $x3050 $x515)))
 (=> $x3055 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3068 (= ?x499 _142)))
 (=> (and $x3068 $x498) (and (= (time-to-state (+ time 1)) _143) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3068 (= ?x499 _142)))
 (let (($x3073 (and $x3068 $x515)))
 (=> $x3073 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3086 (= ?x499 _143)))
 (=> (and $x3086 $x498) (and (= (time-to-state (+ time 1)) _144) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3086 (= ?x499 _143)))
 (let (($x3091 (and $x3086 $x515)))
 (=> $x3091 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3104 (= ?x499 _144)))
 (=> (and $x3104 $x498) (and (= (time-to-state (+ time 1)) _145) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3104 (= ?x499 _144)))
 (let (($x3109 (and $x3104 $x515)))
 (=> $x3109 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3122 (= ?x499 _145)))
 (=> (and $x3122 $x498) (and (= (time-to-state (+ time 1)) _146) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3122 (= ?x499 _145)))
 (let (($x3127 (and $x3122 $x515)))
 (=> $x3127 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3140 (= ?x499 _146)))
 (=> (and $x3140 $x498) (and (= (time-to-state (+ time 1)) _147) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3140 (= ?x499 _146)))
 (let (($x3145 (and $x3140 $x515)))
 (=> $x3145 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3158 (= ?x499 _147)))
 (=> (and $x3158 $x498) (and (= (time-to-state (+ time 1)) _148) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3158 (= ?x499 _147)))
 (let (($x3163 (and $x3158 $x515)))
 (=> $x3163 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3176 (= ?x499 _148)))
 (=> (and $x3176 $x498) (and (= (time-to-state (+ time 1)) _149) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3176 (= ?x499 _148)))
 (let (($x3181 (and $x3176 $x515)))
 (=> $x3181 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3194 (= ?x499 _149)))
 (=> (and $x3194 $x498) (and (= (time-to-state (+ time 1)) _150) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3194 (= ?x499 _149)))
 (let (($x3199 (and $x3194 $x515)))
 (=> $x3199 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3212 (= ?x499 _150)))
 (=> (and $x3212 $x498) (and (= (time-to-state (+ time 1)) _151) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3212 (= ?x499 _150)))
 (let (($x3217 (and $x3212 $x515)))
 (=> $x3217 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3230 (= ?x499 _151)))
 (=> (and $x3230 $x498) (and (= (time-to-state (+ time 1)) _152) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3230 (= ?x499 _151)))
 (let (($x3235 (and $x3230 $x515)))
 (=> $x3235 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3248 (= ?x499 _152)))
 (=> (and $x3248 $x498) (and (= (time-to-state (+ time 1)) _153) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3248 (= ?x499 _152)))
 (let (($x3253 (and $x3248 $x515)))
 (=> $x3253 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3266 (= ?x499 _153)))
 (=> (and $x3266 $x498) (and (= (time-to-state (+ time 1)) _154) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3266 (= ?x499 _153)))
 (let (($x3271 (and $x3266 $x515)))
 (=> $x3271 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3284 (= ?x499 _154)))
 (=> (and $x3284 $x498) (and (= (time-to-state (+ time 1)) _155) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3284 (= ?x499 _154)))
 (let (($x3289 (and $x3284 $x515)))
 (=> $x3289 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3302 (= ?x499 _155)))
 (=> (and $x3302 $x498) (and (= (time-to-state (+ time 1)) _156) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3302 (= ?x499 _155)))
 (let (($x3307 (and $x3302 $x515)))
 (=> $x3307 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3320 (= ?x499 _156)))
 (=> (and $x3320 $x498) (and (= (time-to-state (+ time 1)) _157) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3320 (= ?x499 _156)))
 (let (($x3325 (and $x3320 $x515)))
 (=> $x3325 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3338 (= ?x499 _157)))
 (=> (and $x3338 $x498) (and (= (time-to-state (+ time 1)) _158) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3338 (= ?x499 _157)))
 (let (($x3343 (and $x3338 $x515)))
 (=> $x3343 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3356 (= ?x499 _158)))
 (=> (and $x3356 $x498) (and (= (time-to-state (+ time 1)) _159) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3356 (= ?x499 _158)))
 (let (($x3361 (and $x3356 $x515)))
 (=> $x3361 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3374 (= ?x499 _159)))
 (=> (and $x3374 $x498) (and (= (time-to-state (+ time 1)) _160) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3374 (= ?x499 _159)))
 (let (($x3379 (and $x3374 $x515)))
 (=> $x3379 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3392 (= ?x499 _160)))
 (=> (and $x3392 $x498) (and (= (time-to-state (+ time 1)) _161) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3392 (= ?x499 _160)))
 (let (($x3397 (and $x3392 $x515)))
 (=> $x3397 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3410 (= ?x499 _161)))
 (=> (and $x3410 $x498) (and (= (time-to-state (+ time 1)) _162) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3410 (= ?x499 _161)))
 (let (($x3415 (and $x3410 $x515)))
 (=> $x3415 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3428 (= ?x499 _162)))
 (=> (and $x3428 $x498) (and (= (time-to-state (+ time 1)) _163) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3428 (= ?x499 _162)))
 (let (($x3433 (and $x3428 $x515)))
 (=> $x3433 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3446 (= ?x499 _163)))
 (=> (and $x3446 $x498) (and (= (time-to-state (+ time 1)) _164) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3446 (= ?x499 _163)))
 (let (($x3451 (and $x3446 $x515)))
 (=> $x3451 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3464 (= ?x499 _164)))
 (=> (and $x3464 $x498) (and (= (time-to-state (+ time 1)) _165) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3464 (= ?x499 _164)))
 (let (($x3469 (and $x3464 $x515)))
 (=> $x3469 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3482 (= ?x499 _165)))
 (=> (and $x3482 $x498) (and (= (time-to-state (+ time 1)) _166) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3482 (= ?x499 _165)))
 (let (($x3487 (and $x3482 $x515)))
 (=> $x3487 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3500 (= ?x499 _166)))
 (=> (and $x3500 $x498) (and (= (time-to-state (+ time 1)) _167) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3500 (= ?x499 _166)))
 (let (($x3505 (and $x3500 $x515)))
 (=> $x3505 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3518 (= ?x499 _167)))
 (=> (and $x3518 $x498) (and (= (time-to-state (+ time 1)) _168) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3518 (= ?x499 _167)))
 (let (($x3523 (and $x3518 $x515)))
 (=> $x3523 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3536 (= ?x499 _168)))
 (=> (and $x3536 $x498) (and (= (time-to-state (+ time 1)) _169) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3536 (= ?x499 _168)))
 (let (($x3541 (and $x3536 $x515)))
 (=> $x3541 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3554 (= ?x499 _169)))
 (=> (and $x3554 $x498) (and (= (time-to-state (+ time 1)) _170) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3554 (= ?x499 _169)))
 (let (($x3559 (and $x3554 $x515)))
 (=> $x3559 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3572 (= ?x499 _170)))
 (=> (and $x3572 $x498) (and (= (time-to-state (+ time 1)) _171) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3572 (= ?x499 _170)))
 (let (($x3577 (and $x3572 $x515)))
 (=> $x3577 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3590 (= ?x499 _171)))
 (=> (and $x3590 $x498) (and (= (time-to-state (+ time 1)) _172) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3590 (= ?x499 _171)))
 (let (($x3595 (and $x3590 $x515)))
 (=> $x3595 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3608 (= ?x499 _172)))
 (=> (and $x3608 $x498) (and (= (time-to-state (+ time 1)) _173) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3608 (= ?x499 _172)))
 (let (($x3613 (and $x3608 $x515)))
 (=> $x3613 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3626 (= ?x499 _173)))
 (=> (and $x3626 $x498) (and (= (time-to-state (+ time 1)) _174) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3626 (= ?x499 _173)))
 (let (($x3631 (and $x3626 $x515)))
 (=> $x3631 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3644 (= ?x499 _174)))
 (=> (and $x3644 $x498) (and (= (time-to-state (+ time 1)) _175) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3644 (= ?x499 _174)))
 (let (($x3649 (and $x3644 $x515)))
 (=> $x3649 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3662 (= ?x499 _175)))
 (=> (and $x3662 $x498) (and (= (time-to-state (+ time 1)) _176) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3662 (= ?x499 _175)))
 (let (($x3667 (and $x3662 $x515)))
 (=> $x3667 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3680 (= ?x499 _176)))
 (=> (and $x3680 $x498) (and (= (time-to-state (+ time 1)) _177) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3680 (= ?x499 _176)))
 (let (($x3685 (and $x3680 $x515)))
 (=> $x3685 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3698 (= ?x499 _177)))
 (=> (and $x3698 $x498) (and (= (time-to-state (+ time 1)) _178) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3698 (= ?x499 _177)))
 (let (($x3703 (and $x3698 $x515)))
 (=> $x3703 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3716 (= ?x499 _178)))
 (=> (and $x3716 $x498) (and (= (time-to-state (+ time 1)) _179) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3716 (= ?x499 _178)))
 (let (($x3721 (and $x3716 $x515)))
 (=> $x3721 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3734 (= ?x499 _179)))
 (=> (and $x3734 $x498) (and (= (time-to-state (+ time 1)) _180) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3734 (= ?x499 _179)))
 (let (($x3739 (and $x3734 $x515)))
 (=> $x3739 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3752 (= ?x499 _180)))
 (=> (and $x3752 $x498) (and (= (time-to-state (+ time 1)) _181) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3752 (= ?x499 _180)))
 (let (($x3757 (and $x3752 $x515)))
 (=> $x3757 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3770 (= ?x499 _181)))
 (=> (and $x3770 $x498) (and (= (time-to-state (+ time 1)) _182) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3770 (= ?x499 _181)))
 (let (($x3775 (and $x3770 $x515)))
 (=> $x3775 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3788 (= ?x499 _182)))
 (=> (and $x3788 $x498) (and (= (time-to-state (+ time 1)) _183) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3788 (= ?x499 _182)))
 (let (($x3793 (and $x3788 $x515)))
 (=> $x3793 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3806 (= ?x499 _183)))
 (=> (and $x3806 $x498) (and (= (time-to-state (+ time 1)) _184) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3806 (= ?x499 _183)))
 (let (($x3811 (and $x3806 $x515)))
 (=> $x3811 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3824 (= ?x499 _184)))
 (=> (and $x3824 $x498) (and (= (time-to-state (+ time 1)) _185) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3824 (= ?x499 _184)))
 (let (($x3829 (and $x3824 $x515)))
 (=> $x3829 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3842 (= ?x499 _185)))
 (=> (and $x3842 $x498) (and (= (time-to-state (+ time 1)) _186) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3842 (= ?x499 _185)))
 (let (($x3847 (and $x3842 $x515)))
 (=> $x3847 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3860 (= ?x499 _186)))
 (=> (and $x3860 $x498) (and (= (time-to-state (+ time 1)) _187) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3860 (= ?x499 _186)))
 (let (($x3865 (and $x3860 $x515)))
 (=> $x3865 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3878 (= ?x499 _187)))
 (=> (and $x3878 $x498) (and (= (time-to-state (+ time 1)) _188) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3878 (= ?x499 _187)))
 (let (($x3883 (and $x3878 $x515)))
 (=> $x3883 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3896 (= ?x499 _188)))
 (=> (and $x3896 $x498) (and (= (time-to-state (+ time 1)) _189) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3896 (= ?x499 _188)))
 (let (($x3901 (and $x3896 $x515)))
 (=> $x3901 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3914 (= ?x499 _189)))
 (=> (and $x3914 $x498) (and (= (time-to-state (+ time 1)) _190) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3914 (= ?x499 _189)))
 (let (($x3919 (and $x3914 $x515)))
 (=> $x3919 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3932 (= ?x499 _190)))
 (=> (and $x3932 $x498) (and (= (time-to-state (+ time 1)) _191) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3932 (= ?x499 _190)))
 (let (($x3937 (and $x3932 $x515)))
 (=> $x3937 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3950 (= ?x499 _191)))
 (=> (and $x3950 $x498) (and (= (time-to-state (+ time 1)) _192) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3950 (= ?x499 _191)))
 (let (($x3955 (and $x3950 $x515)))
 (=> $x3955 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3968 (= ?x499 _192)))
 (=> (and $x3968 $x498) (and (= (time-to-state (+ time 1)) _193) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3968 (= ?x499 _192)))
 (let (($x3973 (and $x3968 $x515)))
 (=> $x3973 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x3986 (= ?x499 _193)))
 (=> (and $x3986 $x498) (and (= (time-to-state (+ time 1)) _194) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x3986 (= ?x499 _193)))
 (let (($x3991 (and $x3986 $x515)))
 (=> $x3991 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4004 (= ?x499 _194)))
 (=> (and $x4004 $x498) (and (= (time-to-state (+ time 1)) _195) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4004 (= ?x499 _194)))
 (let (($x4009 (and $x4004 $x515)))
 (=> $x4009 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4022 (= ?x499 _195)))
 (=> (and $x4022 $x498) (and (= (time-to-state (+ time 1)) _196) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4022 (= ?x499 _195)))
 (let (($x4027 (and $x4022 $x515)))
 (=> $x4027 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4040 (= ?x499 _196)))
 (=> (and $x4040 $x498) (and (= (time-to-state (+ time 1)) _197) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4040 (= ?x499 _196)))
 (let (($x4045 (and $x4040 $x515)))
 (=> $x4045 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4058 (= ?x499 _197)))
 (=> (and $x4058 $x498) (and (= (time-to-state (+ time 1)) _198) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4058 (= ?x499 _197)))
 (let (($x4063 (and $x4058 $x515)))
 (=> $x4063 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4076 (= ?x499 _198)))
 (=> (and $x4076 $x498) (and (= (time-to-state (+ time 1)) _199) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4076 (= ?x499 _198)))
 (let (($x4081 (and $x4076 $x515)))
 (=> $x4081 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4094 (= ?x499 _199)))
 (=> (and $x4094 $x498) (and (= (time-to-state (+ time 1)) _200) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4094 (= ?x499 _199)))
 (let (($x4099 (and $x4094 $x515)))
 (=> $x4099 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4112 (= ?x499 _200)))
 (=> (and $x4112 $x498) (and (= (time-to-state (+ time 1)) _201) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4112 (= ?x499 _200)))
 (let (($x4117 (and $x4112 $x515)))
 (=> $x4117 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4130 (= ?x499 _201)))
 (=> (and $x4130 $x498) (and (= (time-to-state (+ time 1)) _202) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4130 (= ?x499 _201)))
 (let (($x4135 (and $x4130 $x515)))
 (=> $x4135 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4148 (= ?x499 _202)))
 (=> (and $x4148 $x498) (and (= (time-to-state (+ time 1)) _203) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4148 (= ?x499 _202)))
 (let (($x4153 (and $x4148 $x515)))
 (=> $x4153 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4166 (= ?x499 _203)))
 (=> (and $x4166 $x498) (and (= (time-to-state (+ time 1)) _204) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4166 (= ?x499 _203)))
 (let (($x4171 (and $x4166 $x515)))
 (=> $x4171 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4184 (= ?x499 _204)))
 (=> (and $x4184 $x498) (and (= (time-to-state (+ time 1)) _205) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4184 (= ?x499 _204)))
 (let (($x4189 (and $x4184 $x515)))
 (=> $x4189 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4202 (= ?x499 _205)))
 (=> (and $x4202 $x498) (and (= (time-to-state (+ time 1)) _206) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4202 (= ?x499 _205)))
 (let (($x4207 (and $x4202 $x515)))
 (=> $x4207 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4220 (= ?x499 _206)))
 (=> (and $x4220 $x498) (and (= (time-to-state (+ time 1)) _207) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4220 (= ?x499 _206)))
 (let (($x4225 (and $x4220 $x515)))
 (=> $x4225 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4238 (= ?x499 _207)))
 (=> (and $x4238 $x498) (and (= (time-to-state (+ time 1)) _208) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4238 (= ?x499 _207)))
 (let (($x4243 (and $x4238 $x515)))
 (=> $x4243 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4256 (= ?x499 _208)))
 (=> (and $x4256 $x498) (and (= (time-to-state (+ time 1)) _209) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4256 (= ?x499 _208)))
 (let (($x4261 (and $x4256 $x515)))
 (=> $x4261 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4274 (= ?x499 _209)))
 (=> (and $x4274 $x498) (and (= (time-to-state (+ time 1)) _210) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4274 (= ?x499 _209)))
 (let (($x4279 (and $x4274 $x515)))
 (=> $x4279 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4292 (= ?x499 _210)))
 (=> (and $x4292 $x498) (and (= (time-to-state (+ time 1)) _211) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4292 (= ?x499 _210)))
 (let (($x4297 (and $x4292 $x515)))
 (=> $x4297 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4310 (= ?x499 _211)))
 (=> (and $x4310 $x498) (and (= (time-to-state (+ time 1)) _212) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4310 (= ?x499 _211)))
 (let (($x4315 (and $x4310 $x515)))
 (=> $x4315 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4328 (= ?x499 _212)))
 (=> (and $x4328 $x498) (and (= (time-to-state (+ time 1)) _213) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4328 (= ?x499 _212)))
 (let (($x4333 (and $x4328 $x515)))
 (=> $x4333 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4346 (= ?x499 _213)))
 (=> (and $x4346 $x498) (and (= (time-to-state (+ time 1)) _214) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4346 (= ?x499 _213)))
 (let (($x4351 (and $x4346 $x515)))
 (=> $x4351 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4364 (= ?x499 _214)))
 (=> (and $x4364 $x498) (and (= (time-to-state (+ time 1)) _215) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4364 (= ?x499 _214)))
 (let (($x4369 (and $x4364 $x515)))
 (=> $x4369 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4382 (= ?x499 _215)))
 (=> (and $x4382 $x498) (and (= (time-to-state (+ time 1)) _216) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4382 (= ?x499 _215)))
 (let (($x4387 (and $x4382 $x515)))
 (=> $x4387 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4400 (= ?x499 _216)))
 (=> (and $x4400 $x498) (and (= (time-to-state (+ time 1)) _217) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4400 (= ?x499 _216)))
 (let (($x4405 (and $x4400 $x515)))
 (=> $x4405 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4418 (= ?x499 _217)))
 (=> (and $x4418 $x498) (and (= (time-to-state (+ time 1)) _218) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4418 (= ?x499 _217)))
 (let (($x4423 (and $x4418 $x515)))
 (=> $x4423 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4436 (= ?x499 _218)))
 (=> (and $x4436 $x498) (and (= (time-to-state (+ time 1)) _219) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4436 (= ?x499 _218)))
 (let (($x4441 (and $x4436 $x515)))
 (=> $x4441 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4454 (= ?x499 _219)))
 (=> (and $x4454 $x498) (and (= (time-to-state (+ time 1)) _220) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4454 (= ?x499 _219)))
 (let (($x4459 (and $x4454 $x515)))
 (=> $x4459 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4472 (= ?x499 _220)))
 (=> (and $x4472 $x498) (and (= (time-to-state (+ time 1)) _221) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4472 (= ?x499 _220)))
 (let (($x4477 (and $x4472 $x515)))
 (=> $x4477 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4490 (= ?x499 _221)))
 (=> (and $x4490 $x498) (and (= (time-to-state (+ time 1)) _222) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4490 (= ?x499 _221)))
 (let (($x4495 (and $x4490 $x515)))
 (=> $x4495 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4508 (= ?x499 _222)))
 (=> (and $x4508 $x498) (and (= (time-to-state (+ time 1)) _223) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4508 (= ?x499 _222)))
 (let (($x4513 (and $x4508 $x515)))
 (=> $x4513 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4526 (= ?x499 _223)))
 (=> (and $x4526 $x498) (and (= (time-to-state (+ time 1)) _224) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4526 (= ?x499 _223)))
 (let (($x4531 (and $x4526 $x515)))
 (=> $x4531 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4544 (= ?x499 _224)))
 (=> (and $x4544 $x498) (and (= (time-to-state (+ time 1)) _225) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4544 (= ?x499 _224)))
 (let (($x4549 (and $x4544 $x515)))
 (=> $x4549 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4562 (= ?x499 _225)))
 (=> (and $x4562 $x498) (and (= (time-to-state (+ time 1)) _226) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4562 (= ?x499 _225)))
 (let (($x4567 (and $x4562 $x515)))
 (=> $x4567 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4580 (= ?x499 _226)))
 (=> (and $x4580 $x498) (and (= (time-to-state (+ time 1)) _227) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4580 (= ?x499 _226)))
 (let (($x4585 (and $x4580 $x515)))
 (=> $x4585 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4598 (= ?x499 _227)))
 (=> (and $x4598 $x498) (and (= (time-to-state (+ time 1)) _228) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4598 (= ?x499 _227)))
 (let (($x4603 (and $x4598 $x515)))
 (=> $x4603 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4616 (= ?x499 _228)))
 (=> (and $x4616 $x498) (and (= (time-to-state (+ time 1)) _229) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4616 (= ?x499 _228)))
 (let (($x4621 (and $x4616 $x515)))
 (=> $x4621 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4634 (= ?x499 _229)))
 (=> (and $x4634 $x498) (and (= (time-to-state (+ time 1)) _230) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4634 (= ?x499 _229)))
 (let (($x4639 (and $x4634 $x515)))
 (=> $x4639 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4652 (= ?x499 _230)))
 (=> (and $x4652 $x498) (and (= (time-to-state (+ time 1)) _231) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4652 (= ?x499 _230)))
 (let (($x4657 (and $x4652 $x515)))
 (=> $x4657 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4670 (= ?x499 _231)))
 (=> (and $x4670 $x498) (and (= (time-to-state (+ time 1)) _232) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4670 (= ?x499 _231)))
 (let (($x4675 (and $x4670 $x515)))
 (=> $x4675 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4688 (= ?x499 _232)))
 (=> (and $x4688 $x498) (and (= (time-to-state (+ time 1)) _233) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4688 (= ?x499 _232)))
 (let (($x4693 (and $x4688 $x515)))
 (=> $x4693 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4706 (= ?x499 _233)))
 (=> (and $x4706 $x498) (and (= (time-to-state (+ time 1)) _234) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4706 (= ?x499 _233)))
 (let (($x4711 (and $x4706 $x515)))
 (=> $x4711 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4724 (= ?x499 _234)))
 (=> (and $x4724 $x498) (and (= (time-to-state (+ time 1)) _235) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4724 (= ?x499 _234)))
 (let (($x4729 (and $x4724 $x515)))
 (=> $x4729 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4742 (= ?x499 _235)))
 (=> (and $x4742 $x498) (and (= (time-to-state (+ time 1)) _236) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4742 (= ?x499 _235)))
 (let (($x4747 (and $x4742 $x515)))
 (=> $x4747 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4760 (= ?x499 _236)))
 (=> (and $x4760 $x498) (and (= (time-to-state (+ time 1)) _237) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4760 (= ?x499 _236)))
 (let (($x4765 (and $x4760 $x515)))
 (=> $x4765 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4778 (= ?x499 _237)))
 (=> (and $x4778 $x498) (and (= (time-to-state (+ time 1)) _238) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4778 (= ?x499 _237)))
 (let (($x4783 (and $x4778 $x515)))
 (=> $x4783 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4796 (= ?x499 _238)))
 (=> (and $x4796 $x498) (and (= (time-to-state (+ time 1)) _239) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4796 (= ?x499 _238)))
 (let (($x4801 (and $x4796 $x515)))
 (=> $x4801 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4814 (= ?x499 _239)))
 (=> (and $x4814 $x498) (and (= (time-to-state (+ time 1)) _240) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4814 (= ?x499 _239)))
 (let (($x4819 (and $x4814 $x515)))
 (=> $x4819 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4832 (= ?x499 _240)))
 (=> (and $x4832 $x498) (and (= (time-to-state (+ time 1)) _241) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4832 (= ?x499 _240)))
 (let (($x4837 (and $x4832 $x515)))
 (=> $x4837 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4850 (= ?x499 _241)))
 (=> (and $x4850 $x498) (and (= (time-to-state (+ time 1)) _242) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4850 (= ?x499 _241)))
 (let (($x4855 (and $x4850 $x515)))
 (=> $x4855 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4868 (= ?x499 _242)))
 (=> (and $x4868 $x498) (and (= (time-to-state (+ time 1)) _243) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4868 (= ?x499 _242)))
 (let (($x4873 (and $x4868 $x515)))
 (=> $x4873 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4886 (= ?x499 _243)))
 (=> (and $x4886 $x498) (and (= (time-to-state (+ time 1)) _244) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4886 (= ?x499 _243)))
 (let (($x4891 (and $x4886 $x515)))
 (=> $x4891 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4904 (= ?x499 _244)))
 (=> (and $x4904 $x498) (and (= (time-to-state (+ time 1)) _245) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4904 (= ?x499 _244)))
 (let (($x4909 (and $x4904 $x515)))
 (=> $x4909 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4922 (= ?x499 _245)))
 (=> (and $x4922 $x498) (and (= (time-to-state (+ time 1)) _246) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4922 (= ?x499 _245)))
 (let (($x4927 (and $x4922 $x515)))
 (=> $x4927 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4940 (= ?x499 _246)))
 (=> (and $x4940 $x498) (and (= (time-to-state (+ time 1)) _247) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4940 (= ?x499 _246)))
 (let (($x4945 (and $x4940 $x515)))
 (=> $x4945 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4958 (= ?x499 _247)))
 (=> (and $x4958 $x498) (and (= (time-to-state (+ time 1)) _248) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4958 (= ?x499 _247)))
 (let (($x4963 (and $x4958 $x515)))
 (=> $x4963 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4976 (= ?x499 _248)))
 (=> (and $x4976 $x498) (and (= (time-to-state (+ time 1)) _249) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4976 (= ?x499 _248)))
 (let (($x4981 (and $x4976 $x515)))
 (=> $x4981 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x4994 (= ?x499 _249)))
 (=> (and $x4994 $x498) (and (= (time-to-state (+ time 1)) _250) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x4994 (= ?x499 _249)))
 (let (($x4999 (and $x4994 $x515)))
 (=> $x4999 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5012 (= ?x499 _250)))
 (=> (and $x5012 $x498) (and (= (time-to-state (+ time 1)) _251) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5012 (= ?x499 _250)))
 (let (($x5017 (and $x5012 $x515)))
 (=> $x5017 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5030 (= ?x499 _251)))
 (=> (and $x5030 $x498) (and (= (time-to-state (+ time 1)) _252) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5030 (= ?x499 _251)))
 (let (($x5035 (and $x5030 $x515)))
 (=> $x5035 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5048 (= ?x499 _252)))
 (=> (and $x5048 $x498) (and (= (time-to-state (+ time 1)) _253) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5048 (= ?x499 _252)))
 (let (($x5053 (and $x5048 $x515)))
 (=> $x5053 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5066 (= ?x499 _253)))
 (=> (and $x5066 $x498) (and (= (time-to-state (+ time 1)) _254) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5066 (= ?x499 _253)))
 (let (($x5071 (and $x5066 $x515)))
 (=> $x5071 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5084 (= ?x499 _254)))
 (=> (and $x5084 $x498) (and (= (time-to-state (+ time 1)) _255) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5084 (= ?x499 _254)))
 (let (($x5089 (and $x5084 $x515)))
 (=> $x5089 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5102 (= ?x499 _255)))
 (=> (and $x5102 $x498) (and (= (time-to-state (+ time 1)) _256) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5102 (= ?x499 _255)))
 (let (($x5107 (and $x5102 $x515)))
 (=> $x5107 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5120 (= ?x499 _256)))
 (=> (and $x5120 $x498) (and (= (time-to-state (+ time 1)) _257) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5120 (= ?x499 _256)))
 (let (($x5125 (and $x5120 $x515)))
 (=> $x5125 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5138 (= ?x499 _257)))
 (=> (and $x5138 $x498) (and (= (time-to-state (+ time 1)) _258) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5138 (= ?x499 _257)))
 (let (($x5143 (and $x5138 $x515)))
 (=> $x5143 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5156 (= ?x499 _258)))
 (=> (and $x5156 $x498) (and (= (time-to-state (+ time 1)) _259) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5156 (= ?x499 _258)))
 (let (($x5161 (and $x5156 $x515)))
 (=> $x5161 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5174 (= ?x499 _259)))
 (=> (and $x5174 $x498) (and (= (time-to-state (+ time 1)) _260) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5174 (= ?x499 _259)))
 (let (($x5179 (and $x5174 $x515)))
 (=> $x5179 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5192 (= ?x499 _260)))
 (=> (and $x5192 $x498) (and (= (time-to-state (+ time 1)) _261) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5192 (= ?x499 _260)))
 (let (($x5197 (and $x5192 $x515)))
 (=> $x5197 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5210 (= ?x499 _261)))
 (=> (and $x5210 $x498) (and (= (time-to-state (+ time 1)) _262) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5210 (= ?x499 _261)))
 (let (($x5215 (and $x5210 $x515)))
 (=> $x5215 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5228 (= ?x499 _262)))
 (=> (and $x5228 $x498) (and (= (time-to-state (+ time 1)) _263) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5228 (= ?x499 _262)))
 (let (($x5233 (and $x5228 $x515)))
 (=> $x5233 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5246 (= ?x499 _263)))
 (=> (and $x5246 $x498) (and (= (time-to-state (+ time 1)) _264) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5246 (= ?x499 _263)))
 (let (($x5251 (and $x5246 $x515)))
 (=> $x5251 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5264 (= ?x499 _264)))
 (=> (and $x5264 $x498) (and (= (time-to-state (+ time 1)) _265) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5264 (= ?x499 _264)))
 (let (($x5269 (and $x5264 $x515)))
 (=> $x5269 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5282 (= ?x499 _265)))
 (=> (and $x5282 $x498) (and (= (time-to-state (+ time 1)) _266) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5282 (= ?x499 _265)))
 (let (($x5287 (and $x5282 $x515)))
 (=> $x5287 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5300 (= ?x499 _266)))
 (=> (and $x5300 $x498) (and (= (time-to-state (+ time 1)) _267) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5300 (= ?x499 _266)))
 (let (($x5305 (and $x5300 $x515)))
 (=> $x5305 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5318 (= ?x499 _267)))
 (=> (and $x5318 $x498) (and (= (time-to-state (+ time 1)) _268) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5318 (= ?x499 _267)))
 (let (($x5323 (and $x5318 $x515)))
 (=> $x5323 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5336 (= ?x499 _268)))
 (=> (and $x5336 $x498) (and (= (time-to-state (+ time 1)) _269) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5336 (= ?x499 _268)))
 (let (($x5341 (and $x5336 $x515)))
 (=> $x5341 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5354 (= ?x499 _269)))
 (=> (and $x5354 $x498) (and (= (time-to-state (+ time 1)) _270) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5354 (= ?x499 _269)))
 (let (($x5359 (and $x5354 $x515)))
 (=> $x5359 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5372 (= ?x499 _270)))
 (=> (and $x5372 $x498) (and (= (time-to-state (+ time 1)) _271) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5372 (= ?x499 _270)))
 (let (($x5377 (and $x5372 $x515)))
 (=> $x5377 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5390 (= ?x499 _271)))
 (=> (and $x5390 $x498) (and (= (time-to-state (+ time 1)) _272) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5390 (= ?x499 _271)))
 (let (($x5395 (and $x5390 $x515)))
 (=> $x5395 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5408 (= ?x499 _272)))
 (=> (and $x5408 $x498) (and (= (time-to-state (+ time 1)) _273) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5408 (= ?x499 _272)))
 (let (($x5413 (and $x5408 $x515)))
 (=> $x5413 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5426 (= ?x499 _273)))
 (=> (and $x5426 $x498) (and (= (time-to-state (+ time 1)) _274) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5426 (= ?x499 _273)))
 (let (($x5431 (and $x5426 $x515)))
 (=> $x5431 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5444 (= ?x499 _274)))
 (=> (and $x5444 $x498) (and (= (time-to-state (+ time 1)) _275) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5444 (= ?x499 _274)))
 (let (($x5449 (and $x5444 $x515)))
 (=> $x5449 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5462 (= ?x499 _275)))
 (=> (and $x5462 $x498) (and (= (time-to-state (+ time 1)) _276) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5462 (= ?x499 _275)))
 (let (($x5467 (and $x5462 $x515)))
 (=> $x5467 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5480 (= ?x499 _276)))
 (=> (and $x5480 $x498) (and (= (time-to-state (+ time 1)) _277) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5480 (= ?x499 _276)))
 (let (($x5485 (and $x5480 $x515)))
 (=> $x5485 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5498 (= ?x499 _277)))
 (=> (and $x5498 $x498) (and (= (time-to-state (+ time 1)) _278) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5498 (= ?x499 _277)))
 (let (($x5503 (and $x5498 $x515)))
 (=> $x5503 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5516 (= ?x499 _278)))
 (=> (and $x5516 $x498) (and (= (time-to-state (+ time 1)) _279) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5516 (= ?x499 _278)))
 (let (($x5521 (and $x5516 $x515)))
 (=> $x5521 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5534 (= ?x499 _279)))
 (=> (and $x5534 $x498) (and (= (time-to-state (+ time 1)) _280) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5534 (= ?x499 _279)))
 (let (($x5539 (and $x5534 $x515)))
 (=> $x5539 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5552 (= ?x499 _280)))
 (=> (and $x5552 $x498) (and (= (time-to-state (+ time 1)) _281) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5552 (= ?x499 _280)))
 (let (($x5557 (and $x5552 $x515)))
 (=> $x5557 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5570 (= ?x499 _281)))
 (=> (and $x5570 $x498) (and (= (time-to-state (+ time 1)) _282) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5570 (= ?x499 _281)))
 (let (($x5575 (and $x5570 $x515)))
 (=> $x5575 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5588 (= ?x499 _282)))
 (=> (and $x5588 $x498) (and (= (time-to-state (+ time 1)) _283) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5588 (= ?x499 _282)))
 (let (($x5593 (and $x5588 $x515)))
 (=> $x5593 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5606 (= ?x499 _283)))
 (=> (and $x5606 $x498) (and (= (time-to-state (+ time 1)) _284) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5606 (= ?x499 _283)))
 (let (($x5611 (and $x5606 $x515)))
 (=> $x5611 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5624 (= ?x499 _284)))
 (=> (and $x5624 $x498) (and (= (time-to-state (+ time 1)) _285) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5624 (= ?x499 _284)))
 (let (($x5629 (and $x5624 $x515)))
 (=> $x5629 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5642 (= ?x499 _285)))
 (=> (and $x5642 $x498) (and (= (time-to-state (+ time 1)) _286) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5642 (= ?x499 _285)))
 (let (($x5647 (and $x5642 $x515)))
 (=> $x5647 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5660 (= ?x499 _286)))
 (=> (and $x5660 $x498) (and (= (time-to-state (+ time 1)) _287) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5660 (= ?x499 _286)))
 (let (($x5665 (and $x5660 $x515)))
 (=> $x5665 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5678 (= ?x499 _287)))
 (=> (and $x5678 $x498) (and (= (time-to-state (+ time 1)) _288) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5678 (= ?x499 _287)))
 (let (($x5683 (and $x5678 $x515)))
 (=> $x5683 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5696 (= ?x499 _288)))
 (=> (and $x5696 $x498) (and (= (time-to-state (+ time 1)) _289) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5696 (= ?x499 _288)))
 (let (($x5701 (and $x5696 $x515)))
 (=> $x5701 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5714 (= ?x499 _289)))
 (=> (and $x5714 $x498) (and (= (time-to-state (+ time 1)) _290) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5714 (= ?x499 _289)))
 (let (($x5719 (and $x5714 $x515)))
 (=> $x5719 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5732 (= ?x499 _290)))
 (=> (and $x5732 $x498) (and (= (time-to-state (+ time 1)) _291) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5732 (= ?x499 _290)))
 (let (($x5737 (and $x5732 $x515)))
 (=> $x5737 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5750 (= ?x499 _291)))
 (=> (and $x5750 $x498) (and (= (time-to-state (+ time 1)) _292) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5750 (= ?x499 _291)))
 (let (($x5755 (and $x5750 $x515)))
 (=> $x5755 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5768 (= ?x499 _292)))
 (=> (and $x5768 $x498) (and (= (time-to-state (+ time 1)) _293) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5768 (= ?x499 _292)))
 (let (($x5773 (and $x5768 $x515)))
 (=> $x5773 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5786 (= ?x499 _293)))
 (=> (and $x5786 $x498) (and (= (time-to-state (+ time 1)) _294) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5786 (= ?x499 _293)))
 (let (($x5791 (and $x5786 $x515)))
 (=> $x5791 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5804 (= ?x499 _294)))
 (=> (and $x5804 $x498) (and (= (time-to-state (+ time 1)) _295) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5804 (= ?x499 _294)))
 (let (($x5809 (and $x5804 $x515)))
 (=> $x5809 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5822 (= ?x499 _295)))
 (=> (and $x5822 $x498) (and (= (time-to-state (+ time 1)) _296) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5822 (= ?x499 _295)))
 (let (($x5827 (and $x5822 $x515)))
 (=> $x5827 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5840 (= ?x499 _296)))
 (=> (and $x5840 $x498) (and (= (time-to-state (+ time 1)) _297) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5840 (= ?x499 _296)))
 (let (($x5845 (and $x5840 $x515)))
 (=> $x5845 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5858 (= ?x499 _297)))
 (=> (and $x5858 $x498) (and (= (time-to-state (+ time 1)) _298) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5858 (= ?x499 _297)))
 (let (($x5863 (and $x5858 $x515)))
 (=> $x5863 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5876 (= ?x499 _298)))
 (=> (and $x5876 $x498) (and (= (time-to-state (+ time 1)) _299) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5876 (= ?x499 _298)))
 (let (($x5881 (and $x5876 $x515)))
 (=> $x5881 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5894 (= ?x499 _299)))
 (=> (and $x5894 $x498) (and (= (time-to-state (+ time 1)) _300) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5894 (= ?x499 _299)))
 (let (($x5899 (and $x5894 $x515)))
 (=> $x5899 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5912 (= ?x499 _300)))
 (=> (and $x5912 $x498) (and (= (time-to-state (+ time 1)) _301) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5912 (= ?x499 _300)))
 (let (($x5917 (and $x5912 $x515)))
 (=> $x5917 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5930 (= ?x499 _301)))
 (=> (and $x5930 $x498) (and (= (time-to-state (+ time 1)) _302) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5930 (= ?x499 _301)))
 (let (($x5935 (and $x5930 $x515)))
 (=> $x5935 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5948 (= ?x499 _302)))
 (=> (and $x5948 $x498) (and (= (time-to-state (+ time 1)) _303) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5948 (= ?x499 _302)))
 (let (($x5953 (and $x5948 $x515)))
 (=> $x5953 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5966 (= ?x499 _303)))
 (=> (and $x5966 $x498) (and (= (time-to-state (+ time 1)) _304) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5966 (= ?x499 _303)))
 (let (($x5971 (and $x5966 $x515)))
 (=> $x5971 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x5984 (= ?x499 _304)))
 (=> (and $x5984 $x498) (and (= (time-to-state (+ time 1)) _305) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x5984 (= ?x499 _304)))
 (let (($x5989 (and $x5984 $x515)))
 (=> $x5989 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6002 (= ?x499 _305)))
 (=> (and $x6002 $x498) (and (= (time-to-state (+ time 1)) _306) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6002 (= ?x499 _305)))
 (let (($x6007 (and $x6002 $x515)))
 (=> $x6007 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6020 (= ?x499 _306)))
 (=> (and $x6020 $x498) (and (= (time-to-state (+ time 1)) _307) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6020 (= ?x499 _306)))
 (let (($x6025 (and $x6020 $x515)))
 (=> $x6025 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6038 (= ?x499 _307)))
 (=> (and $x6038 $x498) (and (= (time-to-state (+ time 1)) _308) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6038 (= ?x499 _307)))
 (let (($x6043 (and $x6038 $x515)))
 (=> $x6043 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6056 (= ?x499 _308)))
 (=> (and $x6056 $x498) (and (= (time-to-state (+ time 1)) _309) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6056 (= ?x499 _308)))
 (let (($x6061 (and $x6056 $x515)))
 (=> $x6061 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6074 (= ?x499 _309)))
 (=> (and $x6074 $x498) (and (= (time-to-state (+ time 1)) _310) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6074 (= ?x499 _309)))
 (let (($x6079 (and $x6074 $x515)))
 (=> $x6079 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6092 (= ?x499 _310)))
 (=> (and $x6092 $x498) (and (= (time-to-state (+ time 1)) _311) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6092 (= ?x499 _310)))
 (let (($x6097 (and $x6092 $x515)))
 (=> $x6097 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6110 (= ?x499 _311)))
 (=> (and $x6110 $x498) (and (= (time-to-state (+ time 1)) _312) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6110 (= ?x499 _311)))
 (let (($x6115 (and $x6110 $x515)))
 (=> $x6115 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6128 (= ?x499 _312)))
 (=> (and $x6128 $x498) (and (= (time-to-state (+ time 1)) _313) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6128 (= ?x499 _312)))
 (let (($x6133 (and $x6128 $x515)))
 (=> $x6133 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6146 (= ?x499 _313)))
 (=> (and $x6146 $x498) (and (= (time-to-state (+ time 1)) _314) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6146 (= ?x499 _313)))
 (let (($x6151 (and $x6146 $x515)))
 (=> $x6151 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6164 (= ?x499 _314)))
 (=> (and $x6164 $x498) (and (= (time-to-state (+ time 1)) _315) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6164 (= ?x499 _314)))
 (let (($x6169 (and $x6164 $x515)))
 (=> $x6169 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6182 (= ?x499 _315)))
 (=> (and $x6182 $x498) (and (= (time-to-state (+ time 1)) _316) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6182 (= ?x499 _315)))
 (let (($x6187 (and $x6182 $x515)))
 (=> $x6187 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6200 (= ?x499 _316)))
 (=> (and $x6200 $x498) (and (= (time-to-state (+ time 1)) _317) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6200 (= ?x499 _316)))
 (let (($x6205 (and $x6200 $x515)))
 (=> $x6205 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6218 (= ?x499 _317)))
 (=> (and $x6218 $x498) (and (= (time-to-state (+ time 1)) _318) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6218 (= ?x499 _317)))
 (let (($x6223 (and $x6218 $x515)))
 (=> $x6223 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6236 (= ?x499 _318)))
 (=> (and $x6236 $x498) (and (= (time-to-state (+ time 1)) _319) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6236 (= ?x499 _318)))
 (let (($x6241 (and $x6236 $x515)))
 (=> $x6241 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6254 (= ?x499 _319)))
 (=> (and $x6254 $x498) (and (= (time-to-state (+ time 1)) _320) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6254 (= ?x499 _319)))
 (let (($x6259 (and $x6254 $x515)))
 (=> $x6259 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6272 (= ?x499 _320)))
 (=> (and $x6272 $x498) (and (= (time-to-state (+ time 1)) _321) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6272 (= ?x499 _320)))
 (let (($x6277 (and $x6272 $x515)))
 (=> $x6277 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6290 (= ?x499 _321)))
 (=> (and $x6290 $x498) (and (= (time-to-state (+ time 1)) _322) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6290 (= ?x499 _321)))
 (let (($x6295 (and $x6290 $x515)))
 (=> $x6295 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6308 (= ?x499 _322)))
 (=> (and $x6308 $x498) (and (= (time-to-state (+ time 1)) _323) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6308 (= ?x499 _322)))
 (let (($x6313 (and $x6308 $x515)))
 (=> $x6313 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6326 (= ?x499 _323)))
 (=> (and $x6326 $x498) (and (= (time-to-state (+ time 1)) _324) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6326 (= ?x499 _323)))
 (let (($x6331 (and $x6326 $x515)))
 (=> $x6331 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6344 (= ?x499 _324)))
 (=> (and $x6344 $x498) (and (= (time-to-state (+ time 1)) _325) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6344 (= ?x499 _324)))
 (let (($x6349 (and $x6344 $x515)))
 (=> $x6349 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6362 (= ?x499 _325)))
 (=> (and $x6362 $x498) (and (= (time-to-state (+ time 1)) _326) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6362 (= ?x499 _325)))
 (let (($x6367 (and $x6362 $x515)))
 (=> $x6367 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6380 (= ?x499 _326)))
 (=> (and $x6380 $x498) (and (= (time-to-state (+ time 1)) _327) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6380 (= ?x499 _326)))
 (let (($x6385 (and $x6380 $x515)))
 (=> $x6385 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6398 (= ?x499 _327)))
 (=> (and $x6398 $x498) (and (= (time-to-state (+ time 1)) _328) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6398 (= ?x499 _327)))
 (let (($x6403 (and $x6398 $x515)))
 (=> $x6403 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6416 (= ?x499 _328)))
 (=> (and $x6416 $x498) (and (= (time-to-state (+ time 1)) _329) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6416 (= ?x499 _328)))
 (let (($x6421 (and $x6416 $x515)))
 (=> $x6421 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6434 (= ?x499 _329)))
 (=> (and $x6434 $x498) (and (= (time-to-state (+ time 1)) _330) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6434 (= ?x499 _329)))
 (let (($x6439 (and $x6434 $x515)))
 (=> $x6439 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6452 (= ?x499 _330)))
 (=> (and $x6452 $x498) (and (= (time-to-state (+ time 1)) _331) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6452 (= ?x499 _330)))
 (let (($x6457 (and $x6452 $x515)))
 (=> $x6457 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6470 (= ?x499 _331)))
 (=> (and $x6470 $x498) (and (= (time-to-state (+ time 1)) _332) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6470 (= ?x499 _331)))
 (let (($x6475 (and $x6470 $x515)))
 (=> $x6475 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6488 (= ?x499 _332)))
 (=> (and $x6488 $x498) (and (= (time-to-state (+ time 1)) _333) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6488 (= ?x499 _332)))
 (let (($x6493 (and $x6488 $x515)))
 (=> $x6493 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6506 (= ?x499 _333)))
 (=> (and $x6506 $x498) (and (= (time-to-state (+ time 1)) _334) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6506 (= ?x499 _333)))
 (let (($x6511 (and $x6506 $x515)))
 (=> $x6511 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6524 (= ?x499 _334)))
 (=> (and $x6524 $x498) (and (= (time-to-state (+ time 1)) _335) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6524 (= ?x499 _334)))
 (let (($x6529 (and $x6524 $x515)))
 (=> $x6529 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6542 (= ?x499 _335)))
 (=> (and $x6542 $x498) (and (= (time-to-state (+ time 1)) _336) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6542 (= ?x499 _335)))
 (let (($x6547 (and $x6542 $x515)))
 (=> $x6547 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6560 (= ?x499 _336)))
 (=> (and $x6560 $x498) (and (= (time-to-state (+ time 1)) _337) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6560 (= ?x499 _336)))
 (let (($x6565 (and $x6560 $x515)))
 (=> $x6565 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6578 (= ?x499 _337)))
 (=> (and $x6578 $x498) (and (= (time-to-state (+ time 1)) _338) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6578 (= ?x499 _337)))
 (let (($x6583 (and $x6578 $x515)))
 (=> $x6583 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6596 (= ?x499 _338)))
 (=> (and $x6596 $x498) (and (= (time-to-state (+ time 1)) _339) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6596 (= ?x499 _338)))
 (let (($x6601 (and $x6596 $x515)))
 (=> $x6601 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6614 (= ?x499 _339)))
 (=> (and $x6614 $x498) (and (= (time-to-state (+ time 1)) _340) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6614 (= ?x499 _339)))
 (let (($x6619 (and $x6614 $x515)))
 (=> $x6619 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6632 (= ?x499 _340)))
 (=> (and $x6632 $x498) (and (= (time-to-state (+ time 1)) _341) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6632 (= ?x499 _340)))
 (let (($x6637 (and $x6632 $x515)))
 (=> $x6637 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6650 (= ?x499 _341)))
 (=> (and $x6650 $x498) (and (= (time-to-state (+ time 1)) _342) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6650 (= ?x499 _341)))
 (let (($x6655 (and $x6650 $x515)))
 (=> $x6655 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6668 (= ?x499 _342)))
 (=> (and $x6668 $x498) (and (= (time-to-state (+ time 1)) _343) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6668 (= ?x499 _342)))
 (let (($x6673 (and $x6668 $x515)))
 (=> $x6673 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6686 (= ?x499 _343)))
 (=> (and $x6686 $x498) (and (= (time-to-state (+ time 1)) _344) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6686 (= ?x499 _343)))
 (let (($x6691 (and $x6686 $x515)))
 (=> $x6691 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6704 (= ?x499 _344)))
 (=> (and $x6704 $x498) (and (= (time-to-state (+ time 1)) _345) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6704 (= ?x499 _344)))
 (let (($x6709 (and $x6704 $x515)))
 (=> $x6709 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6722 (= ?x499 _345)))
 (=> (and $x6722 $x498) (and (= (time-to-state (+ time 1)) _346) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6722 (= ?x499 _345)))
 (let (($x6727 (and $x6722 $x515)))
 (=> $x6727 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6740 (= ?x499 _346)))
 (=> (and $x6740 $x498) (and (= (time-to-state (+ time 1)) _347) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6740 (= ?x499 _346)))
 (let (($x6745 (and $x6740 $x515)))
 (=> $x6745 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6758 (= ?x499 _347)))
 (=> (and $x6758 $x498) (and (= (time-to-state (+ time 1)) _348) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6758 (= ?x499 _347)))
 (let (($x6763 (and $x6758 $x515)))
 (=> $x6763 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6776 (= ?x499 _348)))
 (=> (and $x6776 $x498) (and (= (time-to-state (+ time 1)) _349) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6776 (= ?x499 _348)))
 (let (($x6781 (and $x6776 $x515)))
 (=> $x6781 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6794 (= ?x499 _349)))
 (=> (and $x6794 $x498) (and (= (time-to-state (+ time 1)) _350) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6794 (= ?x499 _349)))
 (let (($x6799 (and $x6794 $x515)))
 (=> $x6799 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6812 (= ?x499 _350)))
 (=> (and $x6812 $x498) (and (= (time-to-state (+ time 1)) _351) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6812 (= ?x499 _350)))
 (let (($x6817 (and $x6812 $x515)))
 (=> $x6817 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6830 (= ?x499 _351)))
 (=> (and $x6830 $x498) (and (= (time-to-state (+ time 1)) _352) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6830 (= ?x499 _351)))
 (let (($x6835 (and $x6830 $x515)))
 (=> $x6835 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6848 (= ?x499 _352)))
 (=> (and $x6848 $x498) (and (= (time-to-state (+ time 1)) _353) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6848 (= ?x499 _352)))
 (let (($x6853 (and $x6848 $x515)))
 (=> $x6853 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6866 (= ?x499 _353)))
 (=> (and $x6866 $x498) (and (= (time-to-state (+ time 1)) _354) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6866 (= ?x499 _353)))
 (let (($x6871 (and $x6866 $x515)))
 (=> $x6871 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6884 (= ?x499 _354)))
 (=> (and $x6884 $x498) (and (= (time-to-state (+ time 1)) _355) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6884 (= ?x499 _354)))
 (let (($x6889 (and $x6884 $x515)))
 (=> $x6889 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6902 (= ?x499 _355)))
 (=> (and $x6902 $x498) (and (= (time-to-state (+ time 1)) _356) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6902 (= ?x499 _355)))
 (let (($x6907 (and $x6902 $x515)))
 (=> $x6907 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6920 (= ?x499 _356)))
 (=> (and $x6920 $x498) (and (= (time-to-state (+ time 1)) _357) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6920 (= ?x499 _356)))
 (let (($x6925 (and $x6920 $x515)))
 (=> $x6925 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6938 (= ?x499 _357)))
 (=> (and $x6938 $x498) (and (= (time-to-state (+ time 1)) _358) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6938 (= ?x499 _357)))
 (let (($x6943 (and $x6938 $x515)))
 (=> $x6943 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6956 (= ?x499 _358)))
 (=> (and $x6956 $x498) (and (= (time-to-state (+ time 1)) _359) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6956 (= ?x499 _358)))
 (let (($x6961 (and $x6956 $x515)))
 (=> $x6961 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6974 (= ?x499 _359)))
 (=> (and $x6974 $x498) (and (= (time-to-state (+ time 1)) _360) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6974 (= ?x499 _359)))
 (let (($x6979 (and $x6974 $x515)))
 (=> $x6979 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x6992 (= ?x499 _360)))
 (=> (and $x6992 $x498) (and (= (time-to-state (+ time 1)) _361) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x6992 (= ?x499 _360)))
 (let (($x6997 (and $x6992 $x515)))
 (=> $x6997 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7010 (= ?x499 _361)))
 (=> (and $x7010 $x498) (and (= (time-to-state (+ time 1)) _362) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7010 (= ?x499 _361)))
 (let (($x7015 (and $x7010 $x515)))
 (=> $x7015 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7028 (= ?x499 _362)))
 (=> (and $x7028 $x498) (and (= (time-to-state (+ time 1)) _363) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7028 (= ?x499 _362)))
 (let (($x7033 (and $x7028 $x515)))
 (=> $x7033 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7046 (= ?x499 _363)))
 (=> (and $x7046 $x498) (and (= (time-to-state (+ time 1)) _364) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7046 (= ?x499 _363)))
 (let (($x7051 (and $x7046 $x515)))
 (=> $x7051 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7064 (= ?x499 _364)))
 (=> (and $x7064 $x498) (and (= (time-to-state (+ time 1)) _365) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7064 (= ?x499 _364)))
 (let (($x7069 (and $x7064 $x515)))
 (=> $x7069 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7082 (= ?x499 _365)))
 (=> (and $x7082 $x498) (and (= (time-to-state (+ time 1)) _366) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7082 (= ?x499 _365)))
 (let (($x7087 (and $x7082 $x515)))
 (=> $x7087 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7100 (= ?x499 _366)))
 (=> (and $x7100 $x498) (and (= (time-to-state (+ time 1)) _367) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7100 (= ?x499 _366)))
 (let (($x7105 (and $x7100 $x515)))
 (=> $x7105 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7118 (= ?x499 _367)))
 (=> (and $x7118 $x498) (and (= (time-to-state (+ time 1)) _368) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7118 (= ?x499 _367)))
 (let (($x7123 (and $x7118 $x515)))
 (=> $x7123 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7136 (= ?x499 _368)))
 (=> (and $x7136 $x498) (and (= (time-to-state (+ time 1)) _369) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7136 (= ?x499 _368)))
 (let (($x7141 (and $x7136 $x515)))
 (=> $x7141 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7154 (= ?x499 _369)))
 (=> (and $x7154 $x498) (and (= (time-to-state (+ time 1)) _370) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7154 (= ?x499 _369)))
 (let (($x7159 (and $x7154 $x515)))
 (=> $x7159 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7172 (= ?x499 _370)))
 (=> (and $x7172 $x498) (and (= (time-to-state (+ time 1)) _371) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7172 (= ?x499 _370)))
 (let (($x7177 (and $x7172 $x515)))
 (=> $x7177 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7190 (= ?x499 _371)))
 (=> (and $x7190 $x498) (and (= (time-to-state (+ time 1)) _372) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7190 (= ?x499 _371)))
 (let (($x7195 (and $x7190 $x515)))
 (=> $x7195 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7208 (= ?x499 _372)))
 (=> (and $x7208 $x498) (and (= (time-to-state (+ time 1)) _373) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7208 (= ?x499 _372)))
 (let (($x7213 (and $x7208 $x515)))
 (=> $x7213 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7226 (= ?x499 _373)))
 (=> (and $x7226 $x498) (and (= (time-to-state (+ time 1)) _374) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7226 (= ?x499 _373)))
 (let (($x7231 (and $x7226 $x515)))
 (=> $x7231 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7244 (= ?x499 _374)))
 (=> (and $x7244 $x498) (and (= (time-to-state (+ time 1)) _375) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7244 (= ?x499 _374)))
 (let (($x7249 (and $x7244 $x515)))
 (=> $x7249 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7262 (= ?x499 _375)))
 (=> (and $x7262 $x498) (and (= (time-to-state (+ time 1)) _376) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7262 (= ?x499 _375)))
 (let (($x7267 (and $x7262 $x515)))
 (=> $x7267 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7280 (= ?x499 _376)))
 (=> (and $x7280 $x498) (and (= (time-to-state (+ time 1)) _377) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7280 (= ?x499 _376)))
 (let (($x7285 (and $x7280 $x515)))
 (=> $x7285 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7298 (= ?x499 _377)))
 (=> (and $x7298 $x498) (and (= (time-to-state (+ time 1)) _378) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7298 (= ?x499 _377)))
 (let (($x7303 (and $x7298 $x515)))
 (=> $x7303 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7316 (= ?x499 _378)))
 (=> (and $x7316 $x498) (and (= (time-to-state (+ time 1)) _379) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7316 (= ?x499 _378)))
 (let (($x7321 (and $x7316 $x515)))
 (=> $x7321 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7334 (= ?x499 _379)))
 (=> (and $x7334 $x498) (and (= (time-to-state (+ time 1)) _380) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7334 (= ?x499 _379)))
 (let (($x7339 (and $x7334 $x515)))
 (=> $x7339 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7352 (= ?x499 _380)))
 (=> (and $x7352 $x498) (and (= (time-to-state (+ time 1)) _381) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7352 (= ?x499 _380)))
 (let (($x7357 (and $x7352 $x515)))
 (=> $x7357 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7370 (= ?x499 _381)))
 (=> (and $x7370 $x498) (and (= (time-to-state (+ time 1)) _382) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7370 (= ?x499 _381)))
 (let (($x7375 (and $x7370 $x515)))
 (=> $x7375 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7388 (= ?x499 _382)))
 (=> (and $x7388 $x498) (and (= (time-to-state (+ time 1)) _383) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7388 (= ?x499 _382)))
 (let (($x7393 (and $x7388 $x515)))
 (=> $x7393 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7406 (= ?x499 _383)))
 (=> (and $x7406 $x498) (and (= (time-to-state (+ time 1)) _384) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7406 (= ?x499 _383)))
 (let (($x7411 (and $x7406 $x515)))
 (=> $x7411 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7424 (= ?x499 _384)))
 (=> (and $x7424 $x498) (and (= (time-to-state (+ time 1)) _385) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7424 (= ?x499 _384)))
 (let (($x7429 (and $x7424 $x515)))
 (=> $x7429 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7442 (= ?x499 _385)))
 (=> (and $x7442 $x498) (and (= (time-to-state (+ time 1)) _386) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7442 (= ?x499 _385)))
 (let (($x7447 (and $x7442 $x515)))
 (=> $x7447 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7460 (= ?x499 _386)))
 (=> (and $x7460 $x498) (and (= (time-to-state (+ time 1)) _387) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7460 (= ?x499 _386)))
 (let (($x7465 (and $x7460 $x515)))
 (=> $x7465 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7478 (= ?x499 _387)))
 (=> (and $x7478 $x498) (and (= (time-to-state (+ time 1)) _388) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7478 (= ?x499 _387)))
 (let (($x7483 (and $x7478 $x515)))
 (=> $x7483 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7496 (= ?x499 _388)))
 (=> (and $x7496 $x498) (and (= (time-to-state (+ time 1)) _389) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7496 (= ?x499 _388)))
 (let (($x7501 (and $x7496 $x515)))
 (=> $x7501 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7514 (= ?x499 _389)))
 (=> (and $x7514 $x498) (and (= (time-to-state (+ time 1)) _390) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7514 (= ?x499 _389)))
 (let (($x7519 (and $x7514 $x515)))
 (=> $x7519 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7532 (= ?x499 _390)))
 (=> (and $x7532 $x498) (and (= (time-to-state (+ time 1)) _391) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7532 (= ?x499 _390)))
 (let (($x7537 (and $x7532 $x515)))
 (=> $x7537 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7550 (= ?x499 _391)))
 (=> (and $x7550 $x498) (and (= (time-to-state (+ time 1)) _392) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7550 (= ?x499 _391)))
 (let (($x7555 (and $x7550 $x515)))
 (=> $x7555 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7568 (= ?x499 _392)))
 (=> (and $x7568 $x498) (and (= (time-to-state (+ time 1)) _393) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7568 (= ?x499 _392)))
 (let (($x7573 (and $x7568 $x515)))
 (=> $x7573 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7586 (= ?x499 _393)))
 (=> (and $x7586 $x498) (and (= (time-to-state (+ time 1)) _394) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7586 (= ?x499 _393)))
 (let (($x7591 (and $x7586 $x515)))
 (=> $x7591 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7604 (= ?x499 _394)))
 (=> (and $x7604 $x498) (and (= (time-to-state (+ time 1)) _395) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7604 (= ?x499 _394)))
 (let (($x7609 (and $x7604 $x515)))
 (=> $x7609 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7622 (= ?x499 _395)))
 (=> (and $x7622 $x498) (and (= (time-to-state (+ time 1)) _396) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7622 (= ?x499 _395)))
 (let (($x7627 (and $x7622 $x515)))
 (=> $x7627 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7640 (= ?x499 _396)))
 (=> (and $x7640 $x498) (and (= (time-to-state (+ time 1)) _397) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7640 (= ?x499 _396)))
 (let (($x7645 (and $x7640 $x515)))
 (=> $x7645 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7658 (= ?x499 _397)))
 (=> (and $x7658 $x498) (and (= (time-to-state (+ time 1)) _398) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7658 (= ?x499 _397)))
 (let (($x7663 (and $x7658 $x515)))
 (=> $x7663 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7676 (= ?x499 _398)))
 (=> (and $x7676 $x498) (and (= (time-to-state (+ time 1)) _399) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7676 (= ?x499 _398)))
 (let (($x7681 (and $x7676 $x515)))
 (=> $x7681 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7694 (= ?x499 _399)))
 (=> (and $x7694 $x498) (and (= (time-to-state (+ time 1)) _400) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7694 (= ?x499 _399)))
 (let (($x7699 (and $x7694 $x515)))
 (=> $x7699 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7712 (= ?x499 _400)))
 (=> (and $x7712 $x498) (and (= (time-to-state (+ time 1)) _401) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7712 (= ?x499 _400)))
 (let (($x7717 (and $x7712 $x515)))
 (=> $x7717 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7730 (= ?x499 _401)))
 (=> (and $x7730 $x498) (and (= (time-to-state (+ time 1)) _402) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7730 (= ?x499 _401)))
 (let (($x7735 (and $x7730 $x515)))
 (=> $x7735 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7748 (= ?x499 _402)))
 (=> (and $x7748 $x498) (and (= (time-to-state (+ time 1)) _403) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7748 (= ?x499 _402)))
 (let (($x7753 (and $x7748 $x515)))
 (=> $x7753 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7766 (= ?x499 _403)))
 (=> (and $x7766 $x498) (and (= (time-to-state (+ time 1)) _404) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7766 (= ?x499 _403)))
 (let (($x7771 (and $x7766 $x515)))
 (=> $x7771 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7784 (= ?x499 _404)))
 (=> (and $x7784 $x498) (and (= (time-to-state (+ time 1)) _405) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7784 (= ?x499 _404)))
 (let (($x7789 (and $x7784 $x515)))
 (=> $x7789 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7802 (= ?x499 _405)))
 (=> (and $x7802 $x498) (and (= (time-to-state (+ time 1)) _406) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7802 (= ?x499 _405)))
 (let (($x7807 (and $x7802 $x515)))
 (=> $x7807 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7820 (= ?x499 _406)))
 (=> (and $x7820 $x498) (and (= (time-to-state (+ time 1)) _407) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7820 (= ?x499 _406)))
 (let (($x7825 (and $x7820 $x515)))
 (=> $x7825 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7838 (= ?x499 _407)))
 (=> (and $x7838 $x498) (and (= (time-to-state (+ time 1)) _408) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7838 (= ?x499 _407)))
 (let (($x7843 (and $x7838 $x515)))
 (=> $x7843 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7856 (= ?x499 _408)))
 (=> (and $x7856 $x498) (and (= (time-to-state (+ time 1)) _409) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7856 (= ?x499 _408)))
 (let (($x7861 (and $x7856 $x515)))
 (=> $x7861 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7874 (= ?x499 _409)))
 (=> (and $x7874 $x498) (and (= (time-to-state (+ time 1)) _410) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7874 (= ?x499 _409)))
 (let (($x7879 (and $x7874 $x515)))
 (=> $x7879 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7892 (= ?x499 _410)))
 (=> (and $x7892 $x498) (and (= (time-to-state (+ time 1)) _411) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7892 (= ?x499 _410)))
 (let (($x7897 (and $x7892 $x515)))
 (=> $x7897 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7910 (= ?x499 _411)))
 (=> (and $x7910 $x498) (and (= (time-to-state (+ time 1)) _412) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7910 (= ?x499 _411)))
 (let (($x7915 (and $x7910 $x515)))
 (=> $x7915 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7928 (= ?x499 _412)))
 (=> (and $x7928 $x498) (and (= (time-to-state (+ time 1)) _413) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7928 (= ?x499 _412)))
 (let (($x7933 (and $x7928 $x515)))
 (=> $x7933 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7946 (= ?x499 _413)))
 (=> (and $x7946 $x498) (and (= (time-to-state (+ time 1)) _414) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7946 (= ?x499 _413)))
 (let (($x7951 (and $x7946 $x515)))
 (=> $x7951 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7964 (= ?x499 _414)))
 (=> (and $x7964 $x498) (and (= (time-to-state (+ time 1)) _415) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7964 (= ?x499 _414)))
 (let (($x7969 (and $x7964 $x515)))
 (=> $x7969 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x7982 (= ?x499 _415)))
 (=> (and $x7982 $x498) (and (= (time-to-state (+ time 1)) _416) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x7982 (= ?x499 _415)))
 (let (($x7987 (and $x7982 $x515)))
 (=> $x7987 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8000 (= ?x499 _416)))
 (=> (and $x8000 $x498) (and (= (time-to-state (+ time 1)) _417) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8000 (= ?x499 _416)))
 (let (($x8005 (and $x8000 $x515)))
 (=> $x8005 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8018 (= ?x499 _417)))
 (=> (and $x8018 $x498) (and (= (time-to-state (+ time 1)) _418) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8018 (= ?x499 _417)))
 (let (($x8023 (and $x8018 $x515)))
 (=> $x8023 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8036 (= ?x499 _418)))
 (=> (and $x8036 $x498) (and (= (time-to-state (+ time 1)) _419) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8036 (= ?x499 _418)))
 (let (($x8041 (and $x8036 $x515)))
 (=> $x8041 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8054 (= ?x499 _419)))
 (=> (and $x8054 $x498) (and (= (time-to-state (+ time 1)) _420) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8054 (= ?x499 _419)))
 (let (($x8059 (and $x8054 $x515)))
 (=> $x8059 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8072 (= ?x499 _420)))
 (=> (and $x8072 $x498) (and (= (time-to-state (+ time 1)) _421) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8072 (= ?x499 _420)))
 (let (($x8077 (and $x8072 $x515)))
 (=> $x8077 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8090 (= ?x499 _421)))
 (=> (and $x8090 $x498) (and (= (time-to-state (+ time 1)) _422) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8090 (= ?x499 _421)))
 (let (($x8095 (and $x8090 $x515)))
 (=> $x8095 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8108 (= ?x499 _422)))
 (=> (and $x8108 $x498) (and (= (time-to-state (+ time 1)) _423) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8108 (= ?x499 _422)))
 (let (($x8113 (and $x8108 $x515)))
 (=> $x8113 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8126 (= ?x499 _423)))
 (=> (and $x8126 $x498) (and (= (time-to-state (+ time 1)) _424) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8126 (= ?x499 _423)))
 (let (($x8131 (and $x8126 $x515)))
 (=> $x8131 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8144 (= ?x499 _424)))
 (=> (and $x8144 $x498) (and (= (time-to-state (+ time 1)) _425) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8144 (= ?x499 _424)))
 (let (($x8149 (and $x8144 $x515)))
 (=> $x8149 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8162 (= ?x499 _425)))
 (=> (and $x8162 $x498) (and (= (time-to-state (+ time 1)) _426) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8162 (= ?x499 _425)))
 (let (($x8167 (and $x8162 $x515)))
 (=> $x8167 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8180 (= ?x499 _426)))
 (=> (and $x8180 $x498) (and (= (time-to-state (+ time 1)) _427) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8180 (= ?x499 _426)))
 (let (($x8185 (and $x8180 $x515)))
 (=> $x8185 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8198 (= ?x499 _427)))
 (=> (and $x8198 $x498) (and (= (time-to-state (+ time 1)) _428) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8198 (= ?x499 _427)))
 (let (($x8203 (and $x8198 $x515)))
 (=> $x8203 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8216 (= ?x499 _428)))
 (=> (and $x8216 $x498) (and (= (time-to-state (+ time 1)) _429) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8216 (= ?x499 _428)))
 (let (($x8221 (and $x8216 $x515)))
 (=> $x8221 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8234 (= ?x499 _429)))
 (=> (and $x8234 $x498) (and (= (time-to-state (+ time 1)) _430) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8234 (= ?x499 _429)))
 (let (($x8239 (and $x8234 $x515)))
 (=> $x8239 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8252 (= ?x499 _430)))
 (=> (and $x8252 $x498) (and (= (time-to-state (+ time 1)) _431) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8252 (= ?x499 _430)))
 (let (($x8257 (and $x8252 $x515)))
 (=> $x8257 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8270 (= ?x499 _431)))
 (=> (and $x8270 $x498) (and (= (time-to-state (+ time 1)) _432) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8270 (= ?x499 _431)))
 (let (($x8275 (and $x8270 $x515)))
 (=> $x8275 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8288 (= ?x499 _432)))
 (=> (and $x8288 $x498) (and (= (time-to-state (+ time 1)) _433) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8288 (= ?x499 _432)))
 (let (($x8293 (and $x8288 $x515)))
 (=> $x8293 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8306 (= ?x499 _433)))
 (=> (and $x8306 $x498) (and (= (time-to-state (+ time 1)) _434) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8306 (= ?x499 _433)))
 (let (($x8311 (and $x8306 $x515)))
 (=> $x8311 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8324 (= ?x499 _434)))
 (=> (and $x8324 $x498) (and (= (time-to-state (+ time 1)) _435) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8324 (= ?x499 _434)))
 (let (($x8329 (and $x8324 $x515)))
 (=> $x8329 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8342 (= ?x499 _435)))
 (=> (and $x8342 $x498) (and (= (time-to-state (+ time 1)) _436) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8342 (= ?x499 _435)))
 (let (($x8347 (and $x8342 $x515)))
 (=> $x8347 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8360 (= ?x499 _436)))
 (=> (and $x8360 $x498) (and (= (time-to-state (+ time 1)) _437) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8360 (= ?x499 _436)))
 (let (($x8365 (and $x8360 $x515)))
 (=> $x8365 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8378 (= ?x499 _437)))
 (=> (and $x8378 $x498) (and (= (time-to-state (+ time 1)) _438) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8378 (= ?x499 _437)))
 (let (($x8383 (and $x8378 $x515)))
 (=> $x8383 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8396 (= ?x499 _438)))
 (=> (and $x8396 $x498) (and (= (time-to-state (+ time 1)) _439) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8396 (= ?x499 _438)))
 (let (($x8401 (and $x8396 $x515)))
 (=> $x8401 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let (($x493 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x497 (input-arg0 time)))
 (let (($x498 (and (distinct ?x497 0) true)))
 (let ((?x499 (time-to-state time)))
 (let (($x8414 (= ?x499 _439)))
 (=> (and $x8414 $x498) (and (= (time-to-state (+ time 1)) _440) $x493))))))))
 )
(assert
 (forall ((time Int) )(let ((?x491 (+ time 1)))
 (let ((?x494 (time-to-state ?x491)))
 (let (($x514 (= ?x494 ERR)))
 (let ((?x497 (input-arg0 time)))
 (let (($x515 (= ?x497 1)))
 (let ((?x499 (time-to-state time)))
 (let (($x8414 (= ?x499 _439)))
 (let (($x8419 (and $x8414 $x515)))
 (=> $x8419 $x514))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x499 (time-to-state time)))
 (let (($x8422 (= ?x499 ERR)))
 (and $x8422 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370 _371 _372 _373 _374 _375 _376 _377 _378 _379 _380 _381 _382 _383 _384 _385 _386 _387 _388 _389 _390 _391 _392 _393 _394 _395 _396 _397 _398 _399 _400 _401 _402 _403 _404 _405 _406 _407 _408 _409 _410 _411 _412 _413 _414 _415 _416 _417 _418 _419 _420 _421 _422 _423 _424 _425 _426 _427 _428 _429 _430 _431 _432 _433 _434 _435 _436 _437 _438 _439 _440) true))
(check-sat)
