; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(declare-fun _371 () STATE)
(declare-fun _372 () STATE)
(declare-fun _373 () STATE)
(declare-fun _374 () STATE)
(declare-fun _375 () STATE)
(declare-fun _376 () STATE)
(declare-fun _377 () STATE)
(declare-fun _378 () STATE)
(declare-fun _379 () STATE)
(declare-fun _380 () STATE)
(declare-fun _381 () STATE)
(declare-fun _382 () STATE)
(declare-fun _383 () STATE)
(declare-fun _384 () STATE)
(declare-fun _385 () STATE)
(declare-fun _386 () STATE)
(declare-fun _387 () STATE)
(declare-fun _388 () STATE)
(declare-fun _389 () STATE)
(declare-fun _390 () STATE)
(declare-fun _391 () STATE)
(declare-fun _392 () STATE)
(declare-fun _393 () STATE)
(declare-fun _394 () STATE)
(declare-fun _395 () STATE)
(declare-fun _396 () STATE)
(declare-fun _397 () STATE)
(declare-fun _398 () STATE)
(declare-fun _399 () STATE)
(declare-fun _400 () STATE)
(declare-fun _401 () STATE)
(declare-fun _402 () STATE)
(declare-fun _403 () STATE)
(declare-fun _404 () STATE)
(declare-fun _405 () STATE)
(declare-fun _406 () STATE)
(declare-fun _407 () STATE)
(declare-fun _408 () STATE)
(declare-fun _409 () STATE)
(declare-fun _410 () STATE)
(declare-fun _411 () STATE)
(declare-fun _412 () STATE)
(declare-fun _413 () STATE)
(declare-fun _414 () STATE)
(declare-fun _415 () STATE)
(declare-fun _416 () STATE)
(declare-fun _417 () STATE)
(declare-fun _418 () STATE)
(declare-fun _419 () STATE)
(declare-fun _420 () STATE)
(declare-fun _421 () STATE)
(declare-fun _422 () STATE)
(declare-fun _423 () STATE)
(declare-fun _424 () STATE)
(declare-fun _425 () STATE)
(declare-fun _426 () STATE)
(declare-fun _427 () STATE)
(declare-fun _428 () STATE)
(declare-fun _429 () STATE)
(declare-fun _430 () STATE)
(declare-fun _431 () STATE)
(declare-fun _432 () STATE)
(declare-fun _433 () STATE)
(declare-fun _434 () STATE)
(declare-fun _435 () STATE)
(declare-fun _436 () STATE)
(declare-fun _437 () STATE)
(declare-fun _438 () STATE)
(declare-fun _439 () STATE)
(declare-fun _440 () STATE)
(declare-fun _441 () STATE)
(declare-fun _442 () STATE)
(declare-fun _443 () STATE)
(declare-fun _444 () STATE)
(declare-fun _445 () STATE)
(declare-fun _446 () STATE)
(declare-fun _447 () STATE)
(declare-fun _448 () STATE)
(declare-fun _449 () STATE)
(declare-fun _450 () STATE)
(declare-fun _451 () STATE)
(declare-fun _452 () STATE)
(declare-fun _453 () STATE)
(declare-fun _454 () STATE)
(declare-fun _455 () STATE)
(declare-fun _456 () STATE)
(declare-fun _457 () STATE)
(declare-fun _458 () STATE)
(declare-fun _459 () STATE)
(declare-fun _460 () STATE)
(declare-fun _461 () STATE)
(declare-fun _462 () STATE)
(declare-fun _463 () STATE)
(declare-fun _464 () STATE)
(declare-fun _465 () STATE)
(declare-fun _466 () STATE)
(declare-fun _467 () STATE)
(declare-fun _468 () STATE)
(declare-fun _469 () STATE)
(declare-fun _470 () STATE)
(assert
 (let ((?x479 (time-to-state 0)))
 (= ?x479 _0)))
(assert
 (let ((?x499 (input-arg0 0)))
 (= ?x499 0)))
(assert
 (let ((?x501 (var1_0 0)))
 (= ?x501 0)))
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x530 (= ?x529 _0)))
 (let (($x546 (and $x530 $x545)))
 (=> $x546 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x560 (= ?x529 _1)))
 (let (($x565 (and $x560 $x545)))
 (=> $x565 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x578 (= ?x529 _2)))
 (let (($x583 (and $x578 $x545)))
 (=> $x583 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x596 (= ?x529 _3)))
 (let (($x601 (and $x596 $x545)))
 (=> $x601 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x614 (= ?x529 _4)))
 (let (($x619 (and $x614 $x545)))
 (=> $x619 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x632 (= ?x529 _5)))
 (let (($x637 (and $x632 $x545)))
 (=> $x637 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x650 (= ?x529 _6)))
 (let (($x655 (and $x650 $x545)))
 (=> $x655 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x668 (= ?x529 _7)))
 (let (($x673 (and $x668 $x545)))
 (=> $x673 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x686 (= ?x529 _8)))
 (let (($x691 (and $x686 $x545)))
 (=> $x691 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x704 (= ?x529 _9)))
 (let (($x709 (and $x704 $x545)))
 (=> $x709 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x722 (= ?x529 _10)))
 (let (($x727 (and $x722 $x545)))
 (=> $x727 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x740 (= ?x529 _11)))
 (let (($x745 (and $x740 $x545)))
 (=> $x745 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x758 (= ?x529 _12)))
 (let (($x763 (and $x758 $x545)))
 (=> $x763 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x776 (= ?x529 _13)))
 (let (($x781 (and $x776 $x545)))
 (=> $x781 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x794 (= ?x529 _14)))
 (let (($x799 (and $x794 $x545)))
 (=> $x799 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x812 (= ?x529 _15)))
 (let (($x817 (and $x812 $x545)))
 (=> $x817 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x830 (= ?x529 _16)))
 (let (($x835 (and $x830 $x545)))
 (=> $x835 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x848 (= ?x529 _17)))
 (let (($x853 (and $x848 $x545)))
 (=> $x853 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x866 (= ?x529 _18)))
 (let (($x871 (and $x866 $x545)))
 (=> $x871 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x884 (= ?x529 _19)))
 (let (($x889 (and $x884 $x545)))
 (=> $x889 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x902 (= ?x529 _20)))
 (let (($x907 (and $x902 $x545)))
 (=> $x907 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x920 (= ?x529 _21)))
 (let (($x925 (and $x920 $x545)))
 (=> $x925 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x938 (= ?x529 _22)))
 (let (($x943 (and $x938 $x545)))
 (=> $x943 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x956 (= ?x529 _23)))
 (let (($x961 (and $x956 $x545)))
 (=> $x961 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x974 (= ?x529 _24)))
 (let (($x979 (and $x974 $x545)))
 (=> $x979 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x992 (= ?x529 _25)))
 (let (($x997 (and $x992 $x545)))
 (=> $x997 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1010 (= ?x529 _26)))
 (let (($x1015 (and $x1010 $x545)))
 (=> $x1015 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1028 (= ?x529 _27)))
 (let (($x1033 (and $x1028 $x545)))
 (=> $x1033 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1046 (= ?x529 _28)))
 (let (($x1051 (and $x1046 $x545)))
 (=> $x1051 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1064 (= ?x529 _29)))
 (let (($x1069 (and $x1064 $x545)))
 (=> $x1069 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1082 (= ?x529 _30)))
 (let (($x1087 (and $x1082 $x545)))
 (=> $x1087 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1100 (= ?x529 _31)))
 (let (($x1105 (and $x1100 $x545)))
 (=> $x1105 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1118 (= ?x529 _32)))
 (let (($x1123 (and $x1118 $x545)))
 (=> $x1123 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1136 (= ?x529 _33)))
 (let (($x1141 (and $x1136 $x545)))
 (=> $x1141 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1154 (= ?x529 _34)))
 (let (($x1159 (and $x1154 $x545)))
 (=> $x1159 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1172 (= ?x529 _35)))
 (let (($x1177 (and $x1172 $x545)))
 (=> $x1177 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1190 (= ?x529 _36)))
 (let (($x1195 (and $x1190 $x545)))
 (=> $x1195 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1208 (= ?x529 _37)))
 (let (($x1213 (and $x1208 $x545)))
 (=> $x1213 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1226 (= ?x529 _38)))
 (let (($x1231 (and $x1226 $x545)))
 (=> $x1231 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1244 (= ?x529 _39)))
 (let (($x1249 (and $x1244 $x545)))
 (=> $x1249 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1262 (= ?x529 _40)))
 (let (($x1267 (and $x1262 $x545)))
 (=> $x1267 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1280 (= ?x529 _41)))
 (let (($x1285 (and $x1280 $x545)))
 (=> $x1285 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1298 (= ?x529 _42)))
 (let (($x1303 (and $x1298 $x545)))
 (=> $x1303 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1316 (= ?x529 _43)))
 (let (($x1321 (and $x1316 $x545)))
 (=> $x1321 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1334 (= ?x529 _44)))
 (let (($x1339 (and $x1334 $x545)))
 (=> $x1339 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1352 (= ?x529 _45)))
 (let (($x1357 (and $x1352 $x545)))
 (=> $x1357 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1370 (= ?x529 _46)))
 (let (($x1375 (and $x1370 $x545)))
 (=> $x1375 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1388 (= ?x529 _47)))
 (let (($x1393 (and $x1388 $x545)))
 (=> $x1393 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1406 (= ?x529 _48)))
 (let (($x1411 (and $x1406 $x545)))
 (=> $x1411 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1424 (= ?x529 _49)))
 (let (($x1429 (and $x1424 $x545)))
 (=> $x1429 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1442 (= ?x529 _50)))
 (let (($x1447 (and $x1442 $x545)))
 (=> $x1447 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1460 (= ?x529 _51)))
 (let (($x1465 (and $x1460 $x545)))
 (=> $x1465 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1478 (= ?x529 _52)))
 (let (($x1483 (and $x1478 $x545)))
 (=> $x1483 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1496 (= ?x529 _53)))
 (let (($x1501 (and $x1496 $x545)))
 (=> $x1501 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1514 (= ?x529 _54)))
 (let (($x1519 (and $x1514 $x545)))
 (=> $x1519 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1532 (= ?x529 _55)))
 (let (($x1537 (and $x1532 $x545)))
 (=> $x1537 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1550 (= ?x529 _56)))
 (let (($x1555 (and $x1550 $x545)))
 (=> $x1555 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1568 (= ?x529 _57)))
 (let (($x1573 (and $x1568 $x545)))
 (=> $x1573 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1586 (= ?x529 _58)))
 (let (($x1591 (and $x1586 $x545)))
 (=> $x1591 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1604 (= ?x529 _59)))
 (let (($x1609 (and $x1604 $x545)))
 (=> $x1609 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1622 (= ?x529 _60)))
 (let (($x1627 (and $x1622 $x545)))
 (=> $x1627 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1640 (= ?x529 _61)))
 (let (($x1645 (and $x1640 $x545)))
 (=> $x1645 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1658 (= ?x529 _62)))
 (let (($x1663 (and $x1658 $x545)))
 (=> $x1663 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1676 (= ?x529 _63)))
 (let (($x1681 (and $x1676 $x545)))
 (=> $x1681 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1694 (= ?x529 _64)))
 (let (($x1699 (and $x1694 $x545)))
 (=> $x1699 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1712 (= ?x529 _65)))
 (let (($x1717 (and $x1712 $x545)))
 (=> $x1717 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1730 (= ?x529 _66)))
 (let (($x1735 (and $x1730 $x545)))
 (=> $x1735 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1748 (= ?x529 _67)))
 (let (($x1753 (and $x1748 $x545)))
 (=> $x1753 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1766 (= ?x529 _68)))
 (let (($x1771 (and $x1766 $x545)))
 (=> $x1771 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1784 (= ?x529 _69)))
 (let (($x1789 (and $x1784 $x545)))
 (=> $x1789 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1802 (= ?x529 _70)))
 (let (($x1807 (and $x1802 $x545)))
 (=> $x1807 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1820 (= ?x529 _71)))
 (let (($x1825 (and $x1820 $x545)))
 (=> $x1825 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1838 (= ?x529 _72)))
 (let (($x1843 (and $x1838 $x545)))
 (=> $x1843 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1856 (= ?x529 _73)))
 (let (($x1861 (and $x1856 $x545)))
 (=> $x1861 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1874 (= ?x529 _74)))
 (let (($x1879 (and $x1874 $x545)))
 (=> $x1879 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1892 (= ?x529 _75)))
 (let (($x1897 (and $x1892 $x545)))
 (=> $x1897 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1910 (= ?x529 _76)))
 (let (($x1915 (and $x1910 $x545)))
 (=> $x1915 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1928 (= ?x529 _77)))
 (let (($x1933 (and $x1928 $x545)))
 (=> $x1933 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1946 (= ?x529 _78)))
 (let (($x1951 (and $x1946 $x545)))
 (=> $x1951 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1964 (= ?x529 _79)))
 (let (($x1969 (and $x1964 $x545)))
 (=> $x1969 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x1982 (= ?x529 _80)))
 (let (($x1987 (and $x1982 $x545)))
 (=> $x1987 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2000 (= ?x529 _81)))
 (let (($x2005 (and $x2000 $x545)))
 (=> $x2005 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2018 (= ?x529 _82)))
 (let (($x2023 (and $x2018 $x545)))
 (=> $x2023 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2036 (= ?x529 _83)))
 (let (($x2041 (and $x2036 $x545)))
 (=> $x2041 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2054 (= ?x529 _84)))
 (let (($x2059 (and $x2054 $x545)))
 (=> $x2059 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2072 (= ?x529 _85)))
 (let (($x2077 (and $x2072 $x545)))
 (=> $x2077 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2090 (= ?x529 _86)))
 (let (($x2095 (and $x2090 $x545)))
 (=> $x2095 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2108 (= ?x529 _87)))
 (let (($x2113 (and $x2108 $x545)))
 (=> $x2113 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2126 (= ?x529 _88)))
 (let (($x2131 (and $x2126 $x545)))
 (=> $x2131 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2144 (= ?x529 _89)))
 (let (($x2149 (and $x2144 $x545)))
 (=> $x2149 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2162 (= ?x529 _90)))
 (let (($x2167 (and $x2162 $x545)))
 (=> $x2167 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2180 (= ?x529 _91)))
 (let (($x2185 (and $x2180 $x545)))
 (=> $x2185 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2198 (= ?x529 _92)))
 (let (($x2203 (and $x2198 $x545)))
 (=> $x2203 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2216 (= ?x529 _93)))
 (let (($x2221 (and $x2216 $x545)))
 (=> $x2221 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2234 (= ?x529 _94)))
 (let (($x2239 (and $x2234 $x545)))
 (=> $x2239 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2252 (= ?x529 _95)))
 (let (($x2257 (and $x2252 $x545)))
 (=> $x2257 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2270 (= ?x529 _96)))
 (let (($x2275 (and $x2270 $x545)))
 (=> $x2275 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2288 (= ?x529 _97)))
 (let (($x2293 (and $x2288 $x545)))
 (=> $x2293 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2306 (= ?x529 _98)))
 (let (($x2311 (and $x2306 $x545)))
 (=> $x2311 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x523))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2324 (= ?x529 _99)))
 (let (($x2329 (and $x2324 $x545)))
 (=> $x2329 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2342 (= ?x529 _100)))
 (=> (and $x2342 $x528) (and (= (time-to-state (+ time 1)) _101) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2342 (= ?x529 _100)))
 (let (($x2347 (and $x2342 $x545)))
 (=> $x2347 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2360 (= ?x529 _101)))
 (=> (and $x2360 $x528) (and (= (time-to-state (+ time 1)) _102) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2360 (= ?x529 _101)))
 (let (($x2365 (and $x2360 $x545)))
 (=> $x2365 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2378 (= ?x529 _102)))
 (=> (and $x2378 $x528) (and (= (time-to-state (+ time 1)) _103) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2378 (= ?x529 _102)))
 (let (($x2383 (and $x2378 $x545)))
 (=> $x2383 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2396 (= ?x529 _103)))
 (=> (and $x2396 $x528) (and (= (time-to-state (+ time 1)) _104) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2396 (= ?x529 _103)))
 (let (($x2401 (and $x2396 $x545)))
 (=> $x2401 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2414 (= ?x529 _104)))
 (=> (and $x2414 $x528) (and (= (time-to-state (+ time 1)) _105) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2414 (= ?x529 _104)))
 (let (($x2419 (and $x2414 $x545)))
 (=> $x2419 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2432 (= ?x529 _105)))
 (=> (and $x2432 $x528) (and (= (time-to-state (+ time 1)) _106) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2432 (= ?x529 _105)))
 (let (($x2437 (and $x2432 $x545)))
 (=> $x2437 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2450 (= ?x529 _106)))
 (=> (and $x2450 $x528) (and (= (time-to-state (+ time 1)) _107) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2450 (= ?x529 _106)))
 (let (($x2455 (and $x2450 $x545)))
 (=> $x2455 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2468 (= ?x529 _107)))
 (=> (and $x2468 $x528) (and (= (time-to-state (+ time 1)) _108) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2468 (= ?x529 _107)))
 (let (($x2473 (and $x2468 $x545)))
 (=> $x2473 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2486 (= ?x529 _108)))
 (=> (and $x2486 $x528) (and (= (time-to-state (+ time 1)) _109) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2486 (= ?x529 _108)))
 (let (($x2491 (and $x2486 $x545)))
 (=> $x2491 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2504 (= ?x529 _109)))
 (=> (and $x2504 $x528) (and (= (time-to-state (+ time 1)) _110) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2504 (= ?x529 _109)))
 (let (($x2509 (and $x2504 $x545)))
 (=> $x2509 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2522 (= ?x529 _110)))
 (=> (and $x2522 $x528) (and (= (time-to-state (+ time 1)) _111) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2522 (= ?x529 _110)))
 (let (($x2527 (and $x2522 $x545)))
 (=> $x2527 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2540 (= ?x529 _111)))
 (=> (and $x2540 $x528) (and (= (time-to-state (+ time 1)) _112) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2540 (= ?x529 _111)))
 (let (($x2545 (and $x2540 $x545)))
 (=> $x2545 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2558 (= ?x529 _112)))
 (=> (and $x2558 $x528) (and (= (time-to-state (+ time 1)) _113) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2558 (= ?x529 _112)))
 (let (($x2563 (and $x2558 $x545)))
 (=> $x2563 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2576 (= ?x529 _113)))
 (=> (and $x2576 $x528) (and (= (time-to-state (+ time 1)) _114) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2576 (= ?x529 _113)))
 (let (($x2581 (and $x2576 $x545)))
 (=> $x2581 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2594 (= ?x529 _114)))
 (=> (and $x2594 $x528) (and (= (time-to-state (+ time 1)) _115) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2594 (= ?x529 _114)))
 (let (($x2599 (and $x2594 $x545)))
 (=> $x2599 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2612 (= ?x529 _115)))
 (=> (and $x2612 $x528) (and (= (time-to-state (+ time 1)) _116) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2612 (= ?x529 _115)))
 (let (($x2617 (and $x2612 $x545)))
 (=> $x2617 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2630 (= ?x529 _116)))
 (=> (and $x2630 $x528) (and (= (time-to-state (+ time 1)) _117) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2630 (= ?x529 _116)))
 (let (($x2635 (and $x2630 $x545)))
 (=> $x2635 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2648 (= ?x529 _117)))
 (=> (and $x2648 $x528) (and (= (time-to-state (+ time 1)) _118) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2648 (= ?x529 _117)))
 (let (($x2653 (and $x2648 $x545)))
 (=> $x2653 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2666 (= ?x529 _118)))
 (=> (and $x2666 $x528) (and (= (time-to-state (+ time 1)) _119) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2666 (= ?x529 _118)))
 (let (($x2671 (and $x2666 $x545)))
 (=> $x2671 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2684 (= ?x529 _119)))
 (=> (and $x2684 $x528) (and (= (time-to-state (+ time 1)) _120) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2684 (= ?x529 _119)))
 (let (($x2689 (and $x2684 $x545)))
 (=> $x2689 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2702 (= ?x529 _120)))
 (=> (and $x2702 $x528) (and (= (time-to-state (+ time 1)) _121) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2702 (= ?x529 _120)))
 (let (($x2707 (and $x2702 $x545)))
 (=> $x2707 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2720 (= ?x529 _121)))
 (=> (and $x2720 $x528) (and (= (time-to-state (+ time 1)) _122) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2720 (= ?x529 _121)))
 (let (($x2725 (and $x2720 $x545)))
 (=> $x2725 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2738 (= ?x529 _122)))
 (=> (and $x2738 $x528) (and (= (time-to-state (+ time 1)) _123) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2738 (= ?x529 _122)))
 (let (($x2743 (and $x2738 $x545)))
 (=> $x2743 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2756 (= ?x529 _123)))
 (=> (and $x2756 $x528) (and (= (time-to-state (+ time 1)) _124) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2756 (= ?x529 _123)))
 (let (($x2761 (and $x2756 $x545)))
 (=> $x2761 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2774 (= ?x529 _124)))
 (=> (and $x2774 $x528) (and (= (time-to-state (+ time 1)) _125) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2774 (= ?x529 _124)))
 (let (($x2779 (and $x2774 $x545)))
 (=> $x2779 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2792 (= ?x529 _125)))
 (=> (and $x2792 $x528) (and (= (time-to-state (+ time 1)) _126) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2792 (= ?x529 _125)))
 (let (($x2797 (and $x2792 $x545)))
 (=> $x2797 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2810 (= ?x529 _126)))
 (=> (and $x2810 $x528) (and (= (time-to-state (+ time 1)) _127) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2810 (= ?x529 _126)))
 (let (($x2815 (and $x2810 $x545)))
 (=> $x2815 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2828 (= ?x529 _127)))
 (=> (and $x2828 $x528) (and (= (time-to-state (+ time 1)) _128) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2828 (= ?x529 _127)))
 (let (($x2833 (and $x2828 $x545)))
 (=> $x2833 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2846 (= ?x529 _128)))
 (=> (and $x2846 $x528) (and (= (time-to-state (+ time 1)) _129) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2846 (= ?x529 _128)))
 (let (($x2851 (and $x2846 $x545)))
 (=> $x2851 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2864 (= ?x529 _129)))
 (=> (and $x2864 $x528) (and (= (time-to-state (+ time 1)) _130) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2864 (= ?x529 _129)))
 (let (($x2869 (and $x2864 $x545)))
 (=> $x2869 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2882 (= ?x529 _130)))
 (=> (and $x2882 $x528) (and (= (time-to-state (+ time 1)) _131) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2882 (= ?x529 _130)))
 (let (($x2887 (and $x2882 $x545)))
 (=> $x2887 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2900 (= ?x529 _131)))
 (=> (and $x2900 $x528) (and (= (time-to-state (+ time 1)) _132) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2900 (= ?x529 _131)))
 (let (($x2905 (and $x2900 $x545)))
 (=> $x2905 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2918 (= ?x529 _132)))
 (=> (and $x2918 $x528) (and (= (time-to-state (+ time 1)) _133) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2918 (= ?x529 _132)))
 (let (($x2923 (and $x2918 $x545)))
 (=> $x2923 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2936 (= ?x529 _133)))
 (=> (and $x2936 $x528) (and (= (time-to-state (+ time 1)) _134) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2936 (= ?x529 _133)))
 (let (($x2941 (and $x2936 $x545)))
 (=> $x2941 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2954 (= ?x529 _134)))
 (=> (and $x2954 $x528) (and (= (time-to-state (+ time 1)) _135) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2954 (= ?x529 _134)))
 (let (($x2959 (and $x2954 $x545)))
 (=> $x2959 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2972 (= ?x529 _135)))
 (=> (and $x2972 $x528) (and (= (time-to-state (+ time 1)) _136) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2972 (= ?x529 _135)))
 (let (($x2977 (and $x2972 $x545)))
 (=> $x2977 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x2990 (= ?x529 _136)))
 (=> (and $x2990 $x528) (and (= (time-to-state (+ time 1)) _137) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x2990 (= ?x529 _136)))
 (let (($x2995 (and $x2990 $x545)))
 (=> $x2995 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3008 (= ?x529 _137)))
 (=> (and $x3008 $x528) (and (= (time-to-state (+ time 1)) _138) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3008 (= ?x529 _137)))
 (let (($x3013 (and $x3008 $x545)))
 (=> $x3013 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3026 (= ?x529 _138)))
 (=> (and $x3026 $x528) (and (= (time-to-state (+ time 1)) _139) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3026 (= ?x529 _138)))
 (let (($x3031 (and $x3026 $x545)))
 (=> $x3031 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3044 (= ?x529 _139)))
 (=> (and $x3044 $x528) (and (= (time-to-state (+ time 1)) _140) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3044 (= ?x529 _139)))
 (let (($x3049 (and $x3044 $x545)))
 (=> $x3049 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3062 (= ?x529 _140)))
 (=> (and $x3062 $x528) (and (= (time-to-state (+ time 1)) _141) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3062 (= ?x529 _140)))
 (let (($x3067 (and $x3062 $x545)))
 (=> $x3067 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3080 (= ?x529 _141)))
 (=> (and $x3080 $x528) (and (= (time-to-state (+ time 1)) _142) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3080 (= ?x529 _141)))
 (let (($x3085 (and $x3080 $x545)))
 (=> $x3085 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3098 (= ?x529 _142)))
 (=> (and $x3098 $x528) (and (= (time-to-state (+ time 1)) _143) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3098 (= ?x529 _142)))
 (let (($x3103 (and $x3098 $x545)))
 (=> $x3103 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3116 (= ?x529 _143)))
 (=> (and $x3116 $x528) (and (= (time-to-state (+ time 1)) _144) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3116 (= ?x529 _143)))
 (let (($x3121 (and $x3116 $x545)))
 (=> $x3121 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3134 (= ?x529 _144)))
 (=> (and $x3134 $x528) (and (= (time-to-state (+ time 1)) _145) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3134 (= ?x529 _144)))
 (let (($x3139 (and $x3134 $x545)))
 (=> $x3139 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3152 (= ?x529 _145)))
 (=> (and $x3152 $x528) (and (= (time-to-state (+ time 1)) _146) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3152 (= ?x529 _145)))
 (let (($x3157 (and $x3152 $x545)))
 (=> $x3157 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3170 (= ?x529 _146)))
 (=> (and $x3170 $x528) (and (= (time-to-state (+ time 1)) _147) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3170 (= ?x529 _146)))
 (let (($x3175 (and $x3170 $x545)))
 (=> $x3175 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3188 (= ?x529 _147)))
 (=> (and $x3188 $x528) (and (= (time-to-state (+ time 1)) _148) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3188 (= ?x529 _147)))
 (let (($x3193 (and $x3188 $x545)))
 (=> $x3193 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3206 (= ?x529 _148)))
 (=> (and $x3206 $x528) (and (= (time-to-state (+ time 1)) _149) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3206 (= ?x529 _148)))
 (let (($x3211 (and $x3206 $x545)))
 (=> $x3211 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3224 (= ?x529 _149)))
 (=> (and $x3224 $x528) (and (= (time-to-state (+ time 1)) _150) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3224 (= ?x529 _149)))
 (let (($x3229 (and $x3224 $x545)))
 (=> $x3229 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3242 (= ?x529 _150)))
 (=> (and $x3242 $x528) (and (= (time-to-state (+ time 1)) _151) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3242 (= ?x529 _150)))
 (let (($x3247 (and $x3242 $x545)))
 (=> $x3247 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3260 (= ?x529 _151)))
 (=> (and $x3260 $x528) (and (= (time-to-state (+ time 1)) _152) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3260 (= ?x529 _151)))
 (let (($x3265 (and $x3260 $x545)))
 (=> $x3265 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3278 (= ?x529 _152)))
 (=> (and $x3278 $x528) (and (= (time-to-state (+ time 1)) _153) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3278 (= ?x529 _152)))
 (let (($x3283 (and $x3278 $x545)))
 (=> $x3283 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3296 (= ?x529 _153)))
 (=> (and $x3296 $x528) (and (= (time-to-state (+ time 1)) _154) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3296 (= ?x529 _153)))
 (let (($x3301 (and $x3296 $x545)))
 (=> $x3301 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3314 (= ?x529 _154)))
 (=> (and $x3314 $x528) (and (= (time-to-state (+ time 1)) _155) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3314 (= ?x529 _154)))
 (let (($x3319 (and $x3314 $x545)))
 (=> $x3319 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3332 (= ?x529 _155)))
 (=> (and $x3332 $x528) (and (= (time-to-state (+ time 1)) _156) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3332 (= ?x529 _155)))
 (let (($x3337 (and $x3332 $x545)))
 (=> $x3337 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3350 (= ?x529 _156)))
 (=> (and $x3350 $x528) (and (= (time-to-state (+ time 1)) _157) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3350 (= ?x529 _156)))
 (let (($x3355 (and $x3350 $x545)))
 (=> $x3355 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3368 (= ?x529 _157)))
 (=> (and $x3368 $x528) (and (= (time-to-state (+ time 1)) _158) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3368 (= ?x529 _157)))
 (let (($x3373 (and $x3368 $x545)))
 (=> $x3373 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3386 (= ?x529 _158)))
 (=> (and $x3386 $x528) (and (= (time-to-state (+ time 1)) _159) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3386 (= ?x529 _158)))
 (let (($x3391 (and $x3386 $x545)))
 (=> $x3391 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3404 (= ?x529 _159)))
 (=> (and $x3404 $x528) (and (= (time-to-state (+ time 1)) _160) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3404 (= ?x529 _159)))
 (let (($x3409 (and $x3404 $x545)))
 (=> $x3409 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3422 (= ?x529 _160)))
 (=> (and $x3422 $x528) (and (= (time-to-state (+ time 1)) _161) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3422 (= ?x529 _160)))
 (let (($x3427 (and $x3422 $x545)))
 (=> $x3427 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3440 (= ?x529 _161)))
 (=> (and $x3440 $x528) (and (= (time-to-state (+ time 1)) _162) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3440 (= ?x529 _161)))
 (let (($x3445 (and $x3440 $x545)))
 (=> $x3445 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3458 (= ?x529 _162)))
 (=> (and $x3458 $x528) (and (= (time-to-state (+ time 1)) _163) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3458 (= ?x529 _162)))
 (let (($x3463 (and $x3458 $x545)))
 (=> $x3463 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3476 (= ?x529 _163)))
 (=> (and $x3476 $x528) (and (= (time-to-state (+ time 1)) _164) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3476 (= ?x529 _163)))
 (let (($x3481 (and $x3476 $x545)))
 (=> $x3481 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3494 (= ?x529 _164)))
 (=> (and $x3494 $x528) (and (= (time-to-state (+ time 1)) _165) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3494 (= ?x529 _164)))
 (let (($x3499 (and $x3494 $x545)))
 (=> $x3499 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3512 (= ?x529 _165)))
 (=> (and $x3512 $x528) (and (= (time-to-state (+ time 1)) _166) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3512 (= ?x529 _165)))
 (let (($x3517 (and $x3512 $x545)))
 (=> $x3517 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3530 (= ?x529 _166)))
 (=> (and $x3530 $x528) (and (= (time-to-state (+ time 1)) _167) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3530 (= ?x529 _166)))
 (let (($x3535 (and $x3530 $x545)))
 (=> $x3535 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3548 (= ?x529 _167)))
 (=> (and $x3548 $x528) (and (= (time-to-state (+ time 1)) _168) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3548 (= ?x529 _167)))
 (let (($x3553 (and $x3548 $x545)))
 (=> $x3553 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3566 (= ?x529 _168)))
 (=> (and $x3566 $x528) (and (= (time-to-state (+ time 1)) _169) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3566 (= ?x529 _168)))
 (let (($x3571 (and $x3566 $x545)))
 (=> $x3571 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3584 (= ?x529 _169)))
 (=> (and $x3584 $x528) (and (= (time-to-state (+ time 1)) _170) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3584 (= ?x529 _169)))
 (let (($x3589 (and $x3584 $x545)))
 (=> $x3589 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3602 (= ?x529 _170)))
 (=> (and $x3602 $x528) (and (= (time-to-state (+ time 1)) _171) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3602 (= ?x529 _170)))
 (let (($x3607 (and $x3602 $x545)))
 (=> $x3607 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3620 (= ?x529 _171)))
 (=> (and $x3620 $x528) (and (= (time-to-state (+ time 1)) _172) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3620 (= ?x529 _171)))
 (let (($x3625 (and $x3620 $x545)))
 (=> $x3625 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3638 (= ?x529 _172)))
 (=> (and $x3638 $x528) (and (= (time-to-state (+ time 1)) _173) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3638 (= ?x529 _172)))
 (let (($x3643 (and $x3638 $x545)))
 (=> $x3643 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3656 (= ?x529 _173)))
 (=> (and $x3656 $x528) (and (= (time-to-state (+ time 1)) _174) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3656 (= ?x529 _173)))
 (let (($x3661 (and $x3656 $x545)))
 (=> $x3661 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3674 (= ?x529 _174)))
 (=> (and $x3674 $x528) (and (= (time-to-state (+ time 1)) _175) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3674 (= ?x529 _174)))
 (let (($x3679 (and $x3674 $x545)))
 (=> $x3679 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3692 (= ?x529 _175)))
 (=> (and $x3692 $x528) (and (= (time-to-state (+ time 1)) _176) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3692 (= ?x529 _175)))
 (let (($x3697 (and $x3692 $x545)))
 (=> $x3697 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3710 (= ?x529 _176)))
 (=> (and $x3710 $x528) (and (= (time-to-state (+ time 1)) _177) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3710 (= ?x529 _176)))
 (let (($x3715 (and $x3710 $x545)))
 (=> $x3715 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3728 (= ?x529 _177)))
 (=> (and $x3728 $x528) (and (= (time-to-state (+ time 1)) _178) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3728 (= ?x529 _177)))
 (let (($x3733 (and $x3728 $x545)))
 (=> $x3733 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3746 (= ?x529 _178)))
 (=> (and $x3746 $x528) (and (= (time-to-state (+ time 1)) _179) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3746 (= ?x529 _178)))
 (let (($x3751 (and $x3746 $x545)))
 (=> $x3751 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3764 (= ?x529 _179)))
 (=> (and $x3764 $x528) (and (= (time-to-state (+ time 1)) _180) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3764 (= ?x529 _179)))
 (let (($x3769 (and $x3764 $x545)))
 (=> $x3769 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3782 (= ?x529 _180)))
 (=> (and $x3782 $x528) (and (= (time-to-state (+ time 1)) _181) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3782 (= ?x529 _180)))
 (let (($x3787 (and $x3782 $x545)))
 (=> $x3787 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3800 (= ?x529 _181)))
 (=> (and $x3800 $x528) (and (= (time-to-state (+ time 1)) _182) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3800 (= ?x529 _181)))
 (let (($x3805 (and $x3800 $x545)))
 (=> $x3805 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3818 (= ?x529 _182)))
 (=> (and $x3818 $x528) (and (= (time-to-state (+ time 1)) _183) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3818 (= ?x529 _182)))
 (let (($x3823 (and $x3818 $x545)))
 (=> $x3823 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3836 (= ?x529 _183)))
 (=> (and $x3836 $x528) (and (= (time-to-state (+ time 1)) _184) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3836 (= ?x529 _183)))
 (let (($x3841 (and $x3836 $x545)))
 (=> $x3841 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3854 (= ?x529 _184)))
 (=> (and $x3854 $x528) (and (= (time-to-state (+ time 1)) _185) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3854 (= ?x529 _184)))
 (let (($x3859 (and $x3854 $x545)))
 (=> $x3859 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3872 (= ?x529 _185)))
 (=> (and $x3872 $x528) (and (= (time-to-state (+ time 1)) _186) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3872 (= ?x529 _185)))
 (let (($x3877 (and $x3872 $x545)))
 (=> $x3877 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3890 (= ?x529 _186)))
 (=> (and $x3890 $x528) (and (= (time-to-state (+ time 1)) _187) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3890 (= ?x529 _186)))
 (let (($x3895 (and $x3890 $x545)))
 (=> $x3895 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3908 (= ?x529 _187)))
 (=> (and $x3908 $x528) (and (= (time-to-state (+ time 1)) _188) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3908 (= ?x529 _187)))
 (let (($x3913 (and $x3908 $x545)))
 (=> $x3913 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3926 (= ?x529 _188)))
 (=> (and $x3926 $x528) (and (= (time-to-state (+ time 1)) _189) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3926 (= ?x529 _188)))
 (let (($x3931 (and $x3926 $x545)))
 (=> $x3931 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3944 (= ?x529 _189)))
 (=> (and $x3944 $x528) (and (= (time-to-state (+ time 1)) _190) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3944 (= ?x529 _189)))
 (let (($x3949 (and $x3944 $x545)))
 (=> $x3949 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3962 (= ?x529 _190)))
 (=> (and $x3962 $x528) (and (= (time-to-state (+ time 1)) _191) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3962 (= ?x529 _190)))
 (let (($x3967 (and $x3962 $x545)))
 (=> $x3967 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3980 (= ?x529 _191)))
 (=> (and $x3980 $x528) (and (= (time-to-state (+ time 1)) _192) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3980 (= ?x529 _191)))
 (let (($x3985 (and $x3980 $x545)))
 (=> $x3985 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x3998 (= ?x529 _192)))
 (=> (and $x3998 $x528) (and (= (time-to-state (+ time 1)) _193) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x3998 (= ?x529 _192)))
 (let (($x4003 (and $x3998 $x545)))
 (=> $x4003 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4016 (= ?x529 _193)))
 (=> (and $x4016 $x528) (and (= (time-to-state (+ time 1)) _194) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4016 (= ?x529 _193)))
 (let (($x4021 (and $x4016 $x545)))
 (=> $x4021 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4034 (= ?x529 _194)))
 (=> (and $x4034 $x528) (and (= (time-to-state (+ time 1)) _195) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4034 (= ?x529 _194)))
 (let (($x4039 (and $x4034 $x545)))
 (=> $x4039 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4052 (= ?x529 _195)))
 (=> (and $x4052 $x528) (and (= (time-to-state (+ time 1)) _196) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4052 (= ?x529 _195)))
 (let (($x4057 (and $x4052 $x545)))
 (=> $x4057 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4070 (= ?x529 _196)))
 (=> (and $x4070 $x528) (and (= (time-to-state (+ time 1)) _197) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4070 (= ?x529 _196)))
 (let (($x4075 (and $x4070 $x545)))
 (=> $x4075 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4088 (= ?x529 _197)))
 (=> (and $x4088 $x528) (and (= (time-to-state (+ time 1)) _198) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4088 (= ?x529 _197)))
 (let (($x4093 (and $x4088 $x545)))
 (=> $x4093 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4106 (= ?x529 _198)))
 (=> (and $x4106 $x528) (and (= (time-to-state (+ time 1)) _199) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4106 (= ?x529 _198)))
 (let (($x4111 (and $x4106 $x545)))
 (=> $x4111 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4124 (= ?x529 _199)))
 (=> (and $x4124 $x528) (and (= (time-to-state (+ time 1)) _200) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4124 (= ?x529 _199)))
 (let (($x4129 (and $x4124 $x545)))
 (=> $x4129 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4142 (= ?x529 _200)))
 (=> (and $x4142 $x528) (and (= (time-to-state (+ time 1)) _201) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4142 (= ?x529 _200)))
 (let (($x4147 (and $x4142 $x545)))
 (=> $x4147 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4160 (= ?x529 _201)))
 (=> (and $x4160 $x528) (and (= (time-to-state (+ time 1)) _202) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4160 (= ?x529 _201)))
 (let (($x4165 (and $x4160 $x545)))
 (=> $x4165 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4178 (= ?x529 _202)))
 (=> (and $x4178 $x528) (and (= (time-to-state (+ time 1)) _203) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4178 (= ?x529 _202)))
 (let (($x4183 (and $x4178 $x545)))
 (=> $x4183 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4196 (= ?x529 _203)))
 (=> (and $x4196 $x528) (and (= (time-to-state (+ time 1)) _204) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4196 (= ?x529 _203)))
 (let (($x4201 (and $x4196 $x545)))
 (=> $x4201 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4214 (= ?x529 _204)))
 (=> (and $x4214 $x528) (and (= (time-to-state (+ time 1)) _205) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4214 (= ?x529 _204)))
 (let (($x4219 (and $x4214 $x545)))
 (=> $x4219 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4232 (= ?x529 _205)))
 (=> (and $x4232 $x528) (and (= (time-to-state (+ time 1)) _206) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4232 (= ?x529 _205)))
 (let (($x4237 (and $x4232 $x545)))
 (=> $x4237 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4250 (= ?x529 _206)))
 (=> (and $x4250 $x528) (and (= (time-to-state (+ time 1)) _207) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4250 (= ?x529 _206)))
 (let (($x4255 (and $x4250 $x545)))
 (=> $x4255 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4268 (= ?x529 _207)))
 (=> (and $x4268 $x528) (and (= (time-to-state (+ time 1)) _208) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4268 (= ?x529 _207)))
 (let (($x4273 (and $x4268 $x545)))
 (=> $x4273 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4286 (= ?x529 _208)))
 (=> (and $x4286 $x528) (and (= (time-to-state (+ time 1)) _209) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4286 (= ?x529 _208)))
 (let (($x4291 (and $x4286 $x545)))
 (=> $x4291 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4304 (= ?x529 _209)))
 (=> (and $x4304 $x528) (and (= (time-to-state (+ time 1)) _210) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4304 (= ?x529 _209)))
 (let (($x4309 (and $x4304 $x545)))
 (=> $x4309 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4322 (= ?x529 _210)))
 (=> (and $x4322 $x528) (and (= (time-to-state (+ time 1)) _211) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4322 (= ?x529 _210)))
 (let (($x4327 (and $x4322 $x545)))
 (=> $x4327 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4340 (= ?x529 _211)))
 (=> (and $x4340 $x528) (and (= (time-to-state (+ time 1)) _212) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4340 (= ?x529 _211)))
 (let (($x4345 (and $x4340 $x545)))
 (=> $x4345 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4358 (= ?x529 _212)))
 (=> (and $x4358 $x528) (and (= (time-to-state (+ time 1)) _213) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4358 (= ?x529 _212)))
 (let (($x4363 (and $x4358 $x545)))
 (=> $x4363 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4376 (= ?x529 _213)))
 (=> (and $x4376 $x528) (and (= (time-to-state (+ time 1)) _214) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4376 (= ?x529 _213)))
 (let (($x4381 (and $x4376 $x545)))
 (=> $x4381 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4394 (= ?x529 _214)))
 (=> (and $x4394 $x528) (and (= (time-to-state (+ time 1)) _215) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4394 (= ?x529 _214)))
 (let (($x4399 (and $x4394 $x545)))
 (=> $x4399 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4412 (= ?x529 _215)))
 (=> (and $x4412 $x528) (and (= (time-to-state (+ time 1)) _216) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4412 (= ?x529 _215)))
 (let (($x4417 (and $x4412 $x545)))
 (=> $x4417 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4430 (= ?x529 _216)))
 (=> (and $x4430 $x528) (and (= (time-to-state (+ time 1)) _217) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4430 (= ?x529 _216)))
 (let (($x4435 (and $x4430 $x545)))
 (=> $x4435 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4448 (= ?x529 _217)))
 (=> (and $x4448 $x528) (and (= (time-to-state (+ time 1)) _218) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4448 (= ?x529 _217)))
 (let (($x4453 (and $x4448 $x545)))
 (=> $x4453 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4466 (= ?x529 _218)))
 (=> (and $x4466 $x528) (and (= (time-to-state (+ time 1)) _219) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4466 (= ?x529 _218)))
 (let (($x4471 (and $x4466 $x545)))
 (=> $x4471 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4484 (= ?x529 _219)))
 (=> (and $x4484 $x528) (and (= (time-to-state (+ time 1)) _220) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4484 (= ?x529 _219)))
 (let (($x4489 (and $x4484 $x545)))
 (=> $x4489 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4502 (= ?x529 _220)))
 (=> (and $x4502 $x528) (and (= (time-to-state (+ time 1)) _221) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4502 (= ?x529 _220)))
 (let (($x4507 (and $x4502 $x545)))
 (=> $x4507 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4520 (= ?x529 _221)))
 (=> (and $x4520 $x528) (and (= (time-to-state (+ time 1)) _222) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4520 (= ?x529 _221)))
 (let (($x4525 (and $x4520 $x545)))
 (=> $x4525 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4538 (= ?x529 _222)))
 (=> (and $x4538 $x528) (and (= (time-to-state (+ time 1)) _223) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4538 (= ?x529 _222)))
 (let (($x4543 (and $x4538 $x545)))
 (=> $x4543 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4556 (= ?x529 _223)))
 (=> (and $x4556 $x528) (and (= (time-to-state (+ time 1)) _224) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4556 (= ?x529 _223)))
 (let (($x4561 (and $x4556 $x545)))
 (=> $x4561 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4574 (= ?x529 _224)))
 (=> (and $x4574 $x528) (and (= (time-to-state (+ time 1)) _225) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4574 (= ?x529 _224)))
 (let (($x4579 (and $x4574 $x545)))
 (=> $x4579 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4592 (= ?x529 _225)))
 (=> (and $x4592 $x528) (and (= (time-to-state (+ time 1)) _226) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4592 (= ?x529 _225)))
 (let (($x4597 (and $x4592 $x545)))
 (=> $x4597 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4610 (= ?x529 _226)))
 (=> (and $x4610 $x528) (and (= (time-to-state (+ time 1)) _227) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4610 (= ?x529 _226)))
 (let (($x4615 (and $x4610 $x545)))
 (=> $x4615 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4628 (= ?x529 _227)))
 (=> (and $x4628 $x528) (and (= (time-to-state (+ time 1)) _228) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4628 (= ?x529 _227)))
 (let (($x4633 (and $x4628 $x545)))
 (=> $x4633 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4646 (= ?x529 _228)))
 (=> (and $x4646 $x528) (and (= (time-to-state (+ time 1)) _229) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4646 (= ?x529 _228)))
 (let (($x4651 (and $x4646 $x545)))
 (=> $x4651 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4664 (= ?x529 _229)))
 (=> (and $x4664 $x528) (and (= (time-to-state (+ time 1)) _230) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4664 (= ?x529 _229)))
 (let (($x4669 (and $x4664 $x545)))
 (=> $x4669 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4682 (= ?x529 _230)))
 (=> (and $x4682 $x528) (and (= (time-to-state (+ time 1)) _231) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4682 (= ?x529 _230)))
 (let (($x4687 (and $x4682 $x545)))
 (=> $x4687 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4700 (= ?x529 _231)))
 (=> (and $x4700 $x528) (and (= (time-to-state (+ time 1)) _232) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4700 (= ?x529 _231)))
 (let (($x4705 (and $x4700 $x545)))
 (=> $x4705 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4718 (= ?x529 _232)))
 (=> (and $x4718 $x528) (and (= (time-to-state (+ time 1)) _233) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4718 (= ?x529 _232)))
 (let (($x4723 (and $x4718 $x545)))
 (=> $x4723 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4736 (= ?x529 _233)))
 (=> (and $x4736 $x528) (and (= (time-to-state (+ time 1)) _234) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4736 (= ?x529 _233)))
 (let (($x4741 (and $x4736 $x545)))
 (=> $x4741 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4754 (= ?x529 _234)))
 (=> (and $x4754 $x528) (and (= (time-to-state (+ time 1)) _235) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4754 (= ?x529 _234)))
 (let (($x4759 (and $x4754 $x545)))
 (=> $x4759 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4772 (= ?x529 _235)))
 (=> (and $x4772 $x528) (and (= (time-to-state (+ time 1)) _236) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4772 (= ?x529 _235)))
 (let (($x4777 (and $x4772 $x545)))
 (=> $x4777 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4790 (= ?x529 _236)))
 (=> (and $x4790 $x528) (and (= (time-to-state (+ time 1)) _237) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4790 (= ?x529 _236)))
 (let (($x4795 (and $x4790 $x545)))
 (=> $x4795 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4808 (= ?x529 _237)))
 (=> (and $x4808 $x528) (and (= (time-to-state (+ time 1)) _238) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4808 (= ?x529 _237)))
 (let (($x4813 (and $x4808 $x545)))
 (=> $x4813 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4826 (= ?x529 _238)))
 (=> (and $x4826 $x528) (and (= (time-to-state (+ time 1)) _239) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4826 (= ?x529 _238)))
 (let (($x4831 (and $x4826 $x545)))
 (=> $x4831 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4844 (= ?x529 _239)))
 (=> (and $x4844 $x528) (and (= (time-to-state (+ time 1)) _240) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4844 (= ?x529 _239)))
 (let (($x4849 (and $x4844 $x545)))
 (=> $x4849 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4862 (= ?x529 _240)))
 (=> (and $x4862 $x528) (and (= (time-to-state (+ time 1)) _241) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4862 (= ?x529 _240)))
 (let (($x4867 (and $x4862 $x545)))
 (=> $x4867 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4880 (= ?x529 _241)))
 (=> (and $x4880 $x528) (and (= (time-to-state (+ time 1)) _242) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4880 (= ?x529 _241)))
 (let (($x4885 (and $x4880 $x545)))
 (=> $x4885 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4898 (= ?x529 _242)))
 (=> (and $x4898 $x528) (and (= (time-to-state (+ time 1)) _243) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4898 (= ?x529 _242)))
 (let (($x4903 (and $x4898 $x545)))
 (=> $x4903 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4916 (= ?x529 _243)))
 (=> (and $x4916 $x528) (and (= (time-to-state (+ time 1)) _244) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4916 (= ?x529 _243)))
 (let (($x4921 (and $x4916 $x545)))
 (=> $x4921 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4934 (= ?x529 _244)))
 (=> (and $x4934 $x528) (and (= (time-to-state (+ time 1)) _245) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4934 (= ?x529 _244)))
 (let (($x4939 (and $x4934 $x545)))
 (=> $x4939 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4952 (= ?x529 _245)))
 (=> (and $x4952 $x528) (and (= (time-to-state (+ time 1)) _246) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4952 (= ?x529 _245)))
 (let (($x4957 (and $x4952 $x545)))
 (=> $x4957 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4970 (= ?x529 _246)))
 (=> (and $x4970 $x528) (and (= (time-to-state (+ time 1)) _247) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4970 (= ?x529 _246)))
 (let (($x4975 (and $x4970 $x545)))
 (=> $x4975 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x4988 (= ?x529 _247)))
 (=> (and $x4988 $x528) (and (= (time-to-state (+ time 1)) _248) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x4988 (= ?x529 _247)))
 (let (($x4993 (and $x4988 $x545)))
 (=> $x4993 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5006 (= ?x529 _248)))
 (=> (and $x5006 $x528) (and (= (time-to-state (+ time 1)) _249) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5006 (= ?x529 _248)))
 (let (($x5011 (and $x5006 $x545)))
 (=> $x5011 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5024 (= ?x529 _249)))
 (=> (and $x5024 $x528) (and (= (time-to-state (+ time 1)) _250) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5024 (= ?x529 _249)))
 (let (($x5029 (and $x5024 $x545)))
 (=> $x5029 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5042 (= ?x529 _250)))
 (=> (and $x5042 $x528) (and (= (time-to-state (+ time 1)) _251) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5042 (= ?x529 _250)))
 (let (($x5047 (and $x5042 $x545)))
 (=> $x5047 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5060 (= ?x529 _251)))
 (=> (and $x5060 $x528) (and (= (time-to-state (+ time 1)) _252) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5060 (= ?x529 _251)))
 (let (($x5065 (and $x5060 $x545)))
 (=> $x5065 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5078 (= ?x529 _252)))
 (=> (and $x5078 $x528) (and (= (time-to-state (+ time 1)) _253) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5078 (= ?x529 _252)))
 (let (($x5083 (and $x5078 $x545)))
 (=> $x5083 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5096 (= ?x529 _253)))
 (=> (and $x5096 $x528) (and (= (time-to-state (+ time 1)) _254) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5096 (= ?x529 _253)))
 (let (($x5101 (and $x5096 $x545)))
 (=> $x5101 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5114 (= ?x529 _254)))
 (=> (and $x5114 $x528) (and (= (time-to-state (+ time 1)) _255) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5114 (= ?x529 _254)))
 (let (($x5119 (and $x5114 $x545)))
 (=> $x5119 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5132 (= ?x529 _255)))
 (=> (and $x5132 $x528) (and (= (time-to-state (+ time 1)) _256) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5132 (= ?x529 _255)))
 (let (($x5137 (and $x5132 $x545)))
 (=> $x5137 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5150 (= ?x529 _256)))
 (=> (and $x5150 $x528) (and (= (time-to-state (+ time 1)) _257) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5150 (= ?x529 _256)))
 (let (($x5155 (and $x5150 $x545)))
 (=> $x5155 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5168 (= ?x529 _257)))
 (=> (and $x5168 $x528) (and (= (time-to-state (+ time 1)) _258) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5168 (= ?x529 _257)))
 (let (($x5173 (and $x5168 $x545)))
 (=> $x5173 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5186 (= ?x529 _258)))
 (=> (and $x5186 $x528) (and (= (time-to-state (+ time 1)) _259) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5186 (= ?x529 _258)))
 (let (($x5191 (and $x5186 $x545)))
 (=> $x5191 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5204 (= ?x529 _259)))
 (=> (and $x5204 $x528) (and (= (time-to-state (+ time 1)) _260) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5204 (= ?x529 _259)))
 (let (($x5209 (and $x5204 $x545)))
 (=> $x5209 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5222 (= ?x529 _260)))
 (=> (and $x5222 $x528) (and (= (time-to-state (+ time 1)) _261) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5222 (= ?x529 _260)))
 (let (($x5227 (and $x5222 $x545)))
 (=> $x5227 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5240 (= ?x529 _261)))
 (=> (and $x5240 $x528) (and (= (time-to-state (+ time 1)) _262) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5240 (= ?x529 _261)))
 (let (($x5245 (and $x5240 $x545)))
 (=> $x5245 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5258 (= ?x529 _262)))
 (=> (and $x5258 $x528) (and (= (time-to-state (+ time 1)) _263) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5258 (= ?x529 _262)))
 (let (($x5263 (and $x5258 $x545)))
 (=> $x5263 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5276 (= ?x529 _263)))
 (=> (and $x5276 $x528) (and (= (time-to-state (+ time 1)) _264) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5276 (= ?x529 _263)))
 (let (($x5281 (and $x5276 $x545)))
 (=> $x5281 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5294 (= ?x529 _264)))
 (=> (and $x5294 $x528) (and (= (time-to-state (+ time 1)) _265) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5294 (= ?x529 _264)))
 (let (($x5299 (and $x5294 $x545)))
 (=> $x5299 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5312 (= ?x529 _265)))
 (=> (and $x5312 $x528) (and (= (time-to-state (+ time 1)) _266) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5312 (= ?x529 _265)))
 (let (($x5317 (and $x5312 $x545)))
 (=> $x5317 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5330 (= ?x529 _266)))
 (=> (and $x5330 $x528) (and (= (time-to-state (+ time 1)) _267) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5330 (= ?x529 _266)))
 (let (($x5335 (and $x5330 $x545)))
 (=> $x5335 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5348 (= ?x529 _267)))
 (=> (and $x5348 $x528) (and (= (time-to-state (+ time 1)) _268) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5348 (= ?x529 _267)))
 (let (($x5353 (and $x5348 $x545)))
 (=> $x5353 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5366 (= ?x529 _268)))
 (=> (and $x5366 $x528) (and (= (time-to-state (+ time 1)) _269) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5366 (= ?x529 _268)))
 (let (($x5371 (and $x5366 $x545)))
 (=> $x5371 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5384 (= ?x529 _269)))
 (=> (and $x5384 $x528) (and (= (time-to-state (+ time 1)) _270) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5384 (= ?x529 _269)))
 (let (($x5389 (and $x5384 $x545)))
 (=> $x5389 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5402 (= ?x529 _270)))
 (=> (and $x5402 $x528) (and (= (time-to-state (+ time 1)) _271) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5402 (= ?x529 _270)))
 (let (($x5407 (and $x5402 $x545)))
 (=> $x5407 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5420 (= ?x529 _271)))
 (=> (and $x5420 $x528) (and (= (time-to-state (+ time 1)) _272) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5420 (= ?x529 _271)))
 (let (($x5425 (and $x5420 $x545)))
 (=> $x5425 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5438 (= ?x529 _272)))
 (=> (and $x5438 $x528) (and (= (time-to-state (+ time 1)) _273) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5438 (= ?x529 _272)))
 (let (($x5443 (and $x5438 $x545)))
 (=> $x5443 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5456 (= ?x529 _273)))
 (=> (and $x5456 $x528) (and (= (time-to-state (+ time 1)) _274) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5456 (= ?x529 _273)))
 (let (($x5461 (and $x5456 $x545)))
 (=> $x5461 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5474 (= ?x529 _274)))
 (=> (and $x5474 $x528) (and (= (time-to-state (+ time 1)) _275) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5474 (= ?x529 _274)))
 (let (($x5479 (and $x5474 $x545)))
 (=> $x5479 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5492 (= ?x529 _275)))
 (=> (and $x5492 $x528) (and (= (time-to-state (+ time 1)) _276) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5492 (= ?x529 _275)))
 (let (($x5497 (and $x5492 $x545)))
 (=> $x5497 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5510 (= ?x529 _276)))
 (=> (and $x5510 $x528) (and (= (time-to-state (+ time 1)) _277) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5510 (= ?x529 _276)))
 (let (($x5515 (and $x5510 $x545)))
 (=> $x5515 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5528 (= ?x529 _277)))
 (=> (and $x5528 $x528) (and (= (time-to-state (+ time 1)) _278) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5528 (= ?x529 _277)))
 (let (($x5533 (and $x5528 $x545)))
 (=> $x5533 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5546 (= ?x529 _278)))
 (=> (and $x5546 $x528) (and (= (time-to-state (+ time 1)) _279) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5546 (= ?x529 _278)))
 (let (($x5551 (and $x5546 $x545)))
 (=> $x5551 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5564 (= ?x529 _279)))
 (=> (and $x5564 $x528) (and (= (time-to-state (+ time 1)) _280) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5564 (= ?x529 _279)))
 (let (($x5569 (and $x5564 $x545)))
 (=> $x5569 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5582 (= ?x529 _280)))
 (=> (and $x5582 $x528) (and (= (time-to-state (+ time 1)) _281) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5582 (= ?x529 _280)))
 (let (($x5587 (and $x5582 $x545)))
 (=> $x5587 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5600 (= ?x529 _281)))
 (=> (and $x5600 $x528) (and (= (time-to-state (+ time 1)) _282) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5600 (= ?x529 _281)))
 (let (($x5605 (and $x5600 $x545)))
 (=> $x5605 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5618 (= ?x529 _282)))
 (=> (and $x5618 $x528) (and (= (time-to-state (+ time 1)) _283) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5618 (= ?x529 _282)))
 (let (($x5623 (and $x5618 $x545)))
 (=> $x5623 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5636 (= ?x529 _283)))
 (=> (and $x5636 $x528) (and (= (time-to-state (+ time 1)) _284) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5636 (= ?x529 _283)))
 (let (($x5641 (and $x5636 $x545)))
 (=> $x5641 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5654 (= ?x529 _284)))
 (=> (and $x5654 $x528) (and (= (time-to-state (+ time 1)) _285) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5654 (= ?x529 _284)))
 (let (($x5659 (and $x5654 $x545)))
 (=> $x5659 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5672 (= ?x529 _285)))
 (=> (and $x5672 $x528) (and (= (time-to-state (+ time 1)) _286) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5672 (= ?x529 _285)))
 (let (($x5677 (and $x5672 $x545)))
 (=> $x5677 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5690 (= ?x529 _286)))
 (=> (and $x5690 $x528) (and (= (time-to-state (+ time 1)) _287) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5690 (= ?x529 _286)))
 (let (($x5695 (and $x5690 $x545)))
 (=> $x5695 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5708 (= ?x529 _287)))
 (=> (and $x5708 $x528) (and (= (time-to-state (+ time 1)) _288) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5708 (= ?x529 _287)))
 (let (($x5713 (and $x5708 $x545)))
 (=> $x5713 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5726 (= ?x529 _288)))
 (=> (and $x5726 $x528) (and (= (time-to-state (+ time 1)) _289) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5726 (= ?x529 _288)))
 (let (($x5731 (and $x5726 $x545)))
 (=> $x5731 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5744 (= ?x529 _289)))
 (=> (and $x5744 $x528) (and (= (time-to-state (+ time 1)) _290) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5744 (= ?x529 _289)))
 (let (($x5749 (and $x5744 $x545)))
 (=> $x5749 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5762 (= ?x529 _290)))
 (=> (and $x5762 $x528) (and (= (time-to-state (+ time 1)) _291) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5762 (= ?x529 _290)))
 (let (($x5767 (and $x5762 $x545)))
 (=> $x5767 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5780 (= ?x529 _291)))
 (=> (and $x5780 $x528) (and (= (time-to-state (+ time 1)) _292) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5780 (= ?x529 _291)))
 (let (($x5785 (and $x5780 $x545)))
 (=> $x5785 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5798 (= ?x529 _292)))
 (=> (and $x5798 $x528) (and (= (time-to-state (+ time 1)) _293) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5798 (= ?x529 _292)))
 (let (($x5803 (and $x5798 $x545)))
 (=> $x5803 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5816 (= ?x529 _293)))
 (=> (and $x5816 $x528) (and (= (time-to-state (+ time 1)) _294) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5816 (= ?x529 _293)))
 (let (($x5821 (and $x5816 $x545)))
 (=> $x5821 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5834 (= ?x529 _294)))
 (=> (and $x5834 $x528) (and (= (time-to-state (+ time 1)) _295) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5834 (= ?x529 _294)))
 (let (($x5839 (and $x5834 $x545)))
 (=> $x5839 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5852 (= ?x529 _295)))
 (=> (and $x5852 $x528) (and (= (time-to-state (+ time 1)) _296) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5852 (= ?x529 _295)))
 (let (($x5857 (and $x5852 $x545)))
 (=> $x5857 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5870 (= ?x529 _296)))
 (=> (and $x5870 $x528) (and (= (time-to-state (+ time 1)) _297) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5870 (= ?x529 _296)))
 (let (($x5875 (and $x5870 $x545)))
 (=> $x5875 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5888 (= ?x529 _297)))
 (=> (and $x5888 $x528) (and (= (time-to-state (+ time 1)) _298) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5888 (= ?x529 _297)))
 (let (($x5893 (and $x5888 $x545)))
 (=> $x5893 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5906 (= ?x529 _298)))
 (=> (and $x5906 $x528) (and (= (time-to-state (+ time 1)) _299) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5906 (= ?x529 _298)))
 (let (($x5911 (and $x5906 $x545)))
 (=> $x5911 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5924 (= ?x529 _299)))
 (=> (and $x5924 $x528) (and (= (time-to-state (+ time 1)) _300) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5924 (= ?x529 _299)))
 (let (($x5929 (and $x5924 $x545)))
 (=> $x5929 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5942 (= ?x529 _300)))
 (=> (and $x5942 $x528) (and (= (time-to-state (+ time 1)) _301) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5942 (= ?x529 _300)))
 (let (($x5947 (and $x5942 $x545)))
 (=> $x5947 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5960 (= ?x529 _301)))
 (=> (and $x5960 $x528) (and (= (time-to-state (+ time 1)) _302) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5960 (= ?x529 _301)))
 (let (($x5965 (and $x5960 $x545)))
 (=> $x5965 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5978 (= ?x529 _302)))
 (=> (and $x5978 $x528) (and (= (time-to-state (+ time 1)) _303) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5978 (= ?x529 _302)))
 (let (($x5983 (and $x5978 $x545)))
 (=> $x5983 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x5996 (= ?x529 _303)))
 (=> (and $x5996 $x528) (and (= (time-to-state (+ time 1)) _304) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x5996 (= ?x529 _303)))
 (let (($x6001 (and $x5996 $x545)))
 (=> $x6001 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6014 (= ?x529 _304)))
 (=> (and $x6014 $x528) (and (= (time-to-state (+ time 1)) _305) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6014 (= ?x529 _304)))
 (let (($x6019 (and $x6014 $x545)))
 (=> $x6019 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6032 (= ?x529 _305)))
 (=> (and $x6032 $x528) (and (= (time-to-state (+ time 1)) _306) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6032 (= ?x529 _305)))
 (let (($x6037 (and $x6032 $x545)))
 (=> $x6037 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6050 (= ?x529 _306)))
 (=> (and $x6050 $x528) (and (= (time-to-state (+ time 1)) _307) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6050 (= ?x529 _306)))
 (let (($x6055 (and $x6050 $x545)))
 (=> $x6055 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6068 (= ?x529 _307)))
 (=> (and $x6068 $x528) (and (= (time-to-state (+ time 1)) _308) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6068 (= ?x529 _307)))
 (let (($x6073 (and $x6068 $x545)))
 (=> $x6073 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6086 (= ?x529 _308)))
 (=> (and $x6086 $x528) (and (= (time-to-state (+ time 1)) _309) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6086 (= ?x529 _308)))
 (let (($x6091 (and $x6086 $x545)))
 (=> $x6091 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6104 (= ?x529 _309)))
 (=> (and $x6104 $x528) (and (= (time-to-state (+ time 1)) _310) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6104 (= ?x529 _309)))
 (let (($x6109 (and $x6104 $x545)))
 (=> $x6109 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6122 (= ?x529 _310)))
 (=> (and $x6122 $x528) (and (= (time-to-state (+ time 1)) _311) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6122 (= ?x529 _310)))
 (let (($x6127 (and $x6122 $x545)))
 (=> $x6127 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6140 (= ?x529 _311)))
 (=> (and $x6140 $x528) (and (= (time-to-state (+ time 1)) _312) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6140 (= ?x529 _311)))
 (let (($x6145 (and $x6140 $x545)))
 (=> $x6145 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6158 (= ?x529 _312)))
 (=> (and $x6158 $x528) (and (= (time-to-state (+ time 1)) _313) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6158 (= ?x529 _312)))
 (let (($x6163 (and $x6158 $x545)))
 (=> $x6163 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6176 (= ?x529 _313)))
 (=> (and $x6176 $x528) (and (= (time-to-state (+ time 1)) _314) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6176 (= ?x529 _313)))
 (let (($x6181 (and $x6176 $x545)))
 (=> $x6181 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6194 (= ?x529 _314)))
 (=> (and $x6194 $x528) (and (= (time-to-state (+ time 1)) _315) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6194 (= ?x529 _314)))
 (let (($x6199 (and $x6194 $x545)))
 (=> $x6199 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6212 (= ?x529 _315)))
 (=> (and $x6212 $x528) (and (= (time-to-state (+ time 1)) _316) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6212 (= ?x529 _315)))
 (let (($x6217 (and $x6212 $x545)))
 (=> $x6217 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6230 (= ?x529 _316)))
 (=> (and $x6230 $x528) (and (= (time-to-state (+ time 1)) _317) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6230 (= ?x529 _316)))
 (let (($x6235 (and $x6230 $x545)))
 (=> $x6235 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6248 (= ?x529 _317)))
 (=> (and $x6248 $x528) (and (= (time-to-state (+ time 1)) _318) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6248 (= ?x529 _317)))
 (let (($x6253 (and $x6248 $x545)))
 (=> $x6253 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6266 (= ?x529 _318)))
 (=> (and $x6266 $x528) (and (= (time-to-state (+ time 1)) _319) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6266 (= ?x529 _318)))
 (let (($x6271 (and $x6266 $x545)))
 (=> $x6271 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6284 (= ?x529 _319)))
 (=> (and $x6284 $x528) (and (= (time-to-state (+ time 1)) _320) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6284 (= ?x529 _319)))
 (let (($x6289 (and $x6284 $x545)))
 (=> $x6289 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6302 (= ?x529 _320)))
 (=> (and $x6302 $x528) (and (= (time-to-state (+ time 1)) _321) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6302 (= ?x529 _320)))
 (let (($x6307 (and $x6302 $x545)))
 (=> $x6307 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6320 (= ?x529 _321)))
 (=> (and $x6320 $x528) (and (= (time-to-state (+ time 1)) _322) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6320 (= ?x529 _321)))
 (let (($x6325 (and $x6320 $x545)))
 (=> $x6325 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6338 (= ?x529 _322)))
 (=> (and $x6338 $x528) (and (= (time-to-state (+ time 1)) _323) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6338 (= ?x529 _322)))
 (let (($x6343 (and $x6338 $x545)))
 (=> $x6343 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6356 (= ?x529 _323)))
 (=> (and $x6356 $x528) (and (= (time-to-state (+ time 1)) _324) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6356 (= ?x529 _323)))
 (let (($x6361 (and $x6356 $x545)))
 (=> $x6361 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6374 (= ?x529 _324)))
 (=> (and $x6374 $x528) (and (= (time-to-state (+ time 1)) _325) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6374 (= ?x529 _324)))
 (let (($x6379 (and $x6374 $x545)))
 (=> $x6379 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6392 (= ?x529 _325)))
 (=> (and $x6392 $x528) (and (= (time-to-state (+ time 1)) _326) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6392 (= ?x529 _325)))
 (let (($x6397 (and $x6392 $x545)))
 (=> $x6397 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6410 (= ?x529 _326)))
 (=> (and $x6410 $x528) (and (= (time-to-state (+ time 1)) _327) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6410 (= ?x529 _326)))
 (let (($x6415 (and $x6410 $x545)))
 (=> $x6415 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6428 (= ?x529 _327)))
 (=> (and $x6428 $x528) (and (= (time-to-state (+ time 1)) _328) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6428 (= ?x529 _327)))
 (let (($x6433 (and $x6428 $x545)))
 (=> $x6433 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6446 (= ?x529 _328)))
 (=> (and $x6446 $x528) (and (= (time-to-state (+ time 1)) _329) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6446 (= ?x529 _328)))
 (let (($x6451 (and $x6446 $x545)))
 (=> $x6451 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6464 (= ?x529 _329)))
 (=> (and $x6464 $x528) (and (= (time-to-state (+ time 1)) _330) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6464 (= ?x529 _329)))
 (let (($x6469 (and $x6464 $x545)))
 (=> $x6469 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6482 (= ?x529 _330)))
 (=> (and $x6482 $x528) (and (= (time-to-state (+ time 1)) _331) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6482 (= ?x529 _330)))
 (let (($x6487 (and $x6482 $x545)))
 (=> $x6487 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6500 (= ?x529 _331)))
 (=> (and $x6500 $x528) (and (= (time-to-state (+ time 1)) _332) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6500 (= ?x529 _331)))
 (let (($x6505 (and $x6500 $x545)))
 (=> $x6505 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6518 (= ?x529 _332)))
 (=> (and $x6518 $x528) (and (= (time-to-state (+ time 1)) _333) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6518 (= ?x529 _332)))
 (let (($x6523 (and $x6518 $x545)))
 (=> $x6523 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6536 (= ?x529 _333)))
 (=> (and $x6536 $x528) (and (= (time-to-state (+ time 1)) _334) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6536 (= ?x529 _333)))
 (let (($x6541 (and $x6536 $x545)))
 (=> $x6541 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6554 (= ?x529 _334)))
 (=> (and $x6554 $x528) (and (= (time-to-state (+ time 1)) _335) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6554 (= ?x529 _334)))
 (let (($x6559 (and $x6554 $x545)))
 (=> $x6559 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6572 (= ?x529 _335)))
 (=> (and $x6572 $x528) (and (= (time-to-state (+ time 1)) _336) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6572 (= ?x529 _335)))
 (let (($x6577 (and $x6572 $x545)))
 (=> $x6577 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6590 (= ?x529 _336)))
 (=> (and $x6590 $x528) (and (= (time-to-state (+ time 1)) _337) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6590 (= ?x529 _336)))
 (let (($x6595 (and $x6590 $x545)))
 (=> $x6595 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6608 (= ?x529 _337)))
 (=> (and $x6608 $x528) (and (= (time-to-state (+ time 1)) _338) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6608 (= ?x529 _337)))
 (let (($x6613 (and $x6608 $x545)))
 (=> $x6613 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6626 (= ?x529 _338)))
 (=> (and $x6626 $x528) (and (= (time-to-state (+ time 1)) _339) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6626 (= ?x529 _338)))
 (let (($x6631 (and $x6626 $x545)))
 (=> $x6631 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6644 (= ?x529 _339)))
 (=> (and $x6644 $x528) (and (= (time-to-state (+ time 1)) _340) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6644 (= ?x529 _339)))
 (let (($x6649 (and $x6644 $x545)))
 (=> $x6649 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6662 (= ?x529 _340)))
 (=> (and $x6662 $x528) (and (= (time-to-state (+ time 1)) _341) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6662 (= ?x529 _340)))
 (let (($x6667 (and $x6662 $x545)))
 (=> $x6667 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6680 (= ?x529 _341)))
 (=> (and $x6680 $x528) (and (= (time-to-state (+ time 1)) _342) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6680 (= ?x529 _341)))
 (let (($x6685 (and $x6680 $x545)))
 (=> $x6685 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6698 (= ?x529 _342)))
 (=> (and $x6698 $x528) (and (= (time-to-state (+ time 1)) _343) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6698 (= ?x529 _342)))
 (let (($x6703 (and $x6698 $x545)))
 (=> $x6703 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6716 (= ?x529 _343)))
 (=> (and $x6716 $x528) (and (= (time-to-state (+ time 1)) _344) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6716 (= ?x529 _343)))
 (let (($x6721 (and $x6716 $x545)))
 (=> $x6721 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6734 (= ?x529 _344)))
 (=> (and $x6734 $x528) (and (= (time-to-state (+ time 1)) _345) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6734 (= ?x529 _344)))
 (let (($x6739 (and $x6734 $x545)))
 (=> $x6739 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6752 (= ?x529 _345)))
 (=> (and $x6752 $x528) (and (= (time-to-state (+ time 1)) _346) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6752 (= ?x529 _345)))
 (let (($x6757 (and $x6752 $x545)))
 (=> $x6757 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6770 (= ?x529 _346)))
 (=> (and $x6770 $x528) (and (= (time-to-state (+ time 1)) _347) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6770 (= ?x529 _346)))
 (let (($x6775 (and $x6770 $x545)))
 (=> $x6775 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6788 (= ?x529 _347)))
 (=> (and $x6788 $x528) (and (= (time-to-state (+ time 1)) _348) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6788 (= ?x529 _347)))
 (let (($x6793 (and $x6788 $x545)))
 (=> $x6793 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6806 (= ?x529 _348)))
 (=> (and $x6806 $x528) (and (= (time-to-state (+ time 1)) _349) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6806 (= ?x529 _348)))
 (let (($x6811 (and $x6806 $x545)))
 (=> $x6811 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6824 (= ?x529 _349)))
 (=> (and $x6824 $x528) (and (= (time-to-state (+ time 1)) _350) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6824 (= ?x529 _349)))
 (let (($x6829 (and $x6824 $x545)))
 (=> $x6829 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6842 (= ?x529 _350)))
 (=> (and $x6842 $x528) (and (= (time-to-state (+ time 1)) _351) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6842 (= ?x529 _350)))
 (let (($x6847 (and $x6842 $x545)))
 (=> $x6847 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6860 (= ?x529 _351)))
 (=> (and $x6860 $x528) (and (= (time-to-state (+ time 1)) _352) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6860 (= ?x529 _351)))
 (let (($x6865 (and $x6860 $x545)))
 (=> $x6865 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6878 (= ?x529 _352)))
 (=> (and $x6878 $x528) (and (= (time-to-state (+ time 1)) _353) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6878 (= ?x529 _352)))
 (let (($x6883 (and $x6878 $x545)))
 (=> $x6883 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6896 (= ?x529 _353)))
 (=> (and $x6896 $x528) (and (= (time-to-state (+ time 1)) _354) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6896 (= ?x529 _353)))
 (let (($x6901 (and $x6896 $x545)))
 (=> $x6901 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6914 (= ?x529 _354)))
 (=> (and $x6914 $x528) (and (= (time-to-state (+ time 1)) _355) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6914 (= ?x529 _354)))
 (let (($x6919 (and $x6914 $x545)))
 (=> $x6919 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6932 (= ?x529 _355)))
 (=> (and $x6932 $x528) (and (= (time-to-state (+ time 1)) _356) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6932 (= ?x529 _355)))
 (let (($x6937 (and $x6932 $x545)))
 (=> $x6937 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6950 (= ?x529 _356)))
 (=> (and $x6950 $x528) (and (= (time-to-state (+ time 1)) _357) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6950 (= ?x529 _356)))
 (let (($x6955 (and $x6950 $x545)))
 (=> $x6955 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6968 (= ?x529 _357)))
 (=> (and $x6968 $x528) (and (= (time-to-state (+ time 1)) _358) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6968 (= ?x529 _357)))
 (let (($x6973 (and $x6968 $x545)))
 (=> $x6973 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x6986 (= ?x529 _358)))
 (=> (and $x6986 $x528) (and (= (time-to-state (+ time 1)) _359) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x6986 (= ?x529 _358)))
 (let (($x6991 (and $x6986 $x545)))
 (=> $x6991 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7004 (= ?x529 _359)))
 (=> (and $x7004 $x528) (and (= (time-to-state (+ time 1)) _360) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7004 (= ?x529 _359)))
 (let (($x7009 (and $x7004 $x545)))
 (=> $x7009 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7022 (= ?x529 _360)))
 (=> (and $x7022 $x528) (and (= (time-to-state (+ time 1)) _361) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7022 (= ?x529 _360)))
 (let (($x7027 (and $x7022 $x545)))
 (=> $x7027 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7040 (= ?x529 _361)))
 (=> (and $x7040 $x528) (and (= (time-to-state (+ time 1)) _362) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7040 (= ?x529 _361)))
 (let (($x7045 (and $x7040 $x545)))
 (=> $x7045 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7058 (= ?x529 _362)))
 (=> (and $x7058 $x528) (and (= (time-to-state (+ time 1)) _363) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7058 (= ?x529 _362)))
 (let (($x7063 (and $x7058 $x545)))
 (=> $x7063 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7076 (= ?x529 _363)))
 (=> (and $x7076 $x528) (and (= (time-to-state (+ time 1)) _364) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7076 (= ?x529 _363)))
 (let (($x7081 (and $x7076 $x545)))
 (=> $x7081 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7094 (= ?x529 _364)))
 (=> (and $x7094 $x528) (and (= (time-to-state (+ time 1)) _365) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7094 (= ?x529 _364)))
 (let (($x7099 (and $x7094 $x545)))
 (=> $x7099 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7112 (= ?x529 _365)))
 (=> (and $x7112 $x528) (and (= (time-to-state (+ time 1)) _366) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7112 (= ?x529 _365)))
 (let (($x7117 (and $x7112 $x545)))
 (=> $x7117 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7130 (= ?x529 _366)))
 (=> (and $x7130 $x528) (and (= (time-to-state (+ time 1)) _367) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7130 (= ?x529 _366)))
 (let (($x7135 (and $x7130 $x545)))
 (=> $x7135 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7148 (= ?x529 _367)))
 (=> (and $x7148 $x528) (and (= (time-to-state (+ time 1)) _368) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7148 (= ?x529 _367)))
 (let (($x7153 (and $x7148 $x545)))
 (=> $x7153 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7166 (= ?x529 _368)))
 (=> (and $x7166 $x528) (and (= (time-to-state (+ time 1)) _369) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7166 (= ?x529 _368)))
 (let (($x7171 (and $x7166 $x545)))
 (=> $x7171 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7184 (= ?x529 _369)))
 (=> (and $x7184 $x528) (and (= (time-to-state (+ time 1)) _370) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7184 (= ?x529 _369)))
 (let (($x7189 (and $x7184 $x545)))
 (=> $x7189 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7202 (= ?x529 _370)))
 (=> (and $x7202 $x528) (and (= (time-to-state (+ time 1)) _371) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7202 (= ?x529 _370)))
 (let (($x7207 (and $x7202 $x545)))
 (=> $x7207 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7220 (= ?x529 _371)))
 (=> (and $x7220 $x528) (and (= (time-to-state (+ time 1)) _372) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7220 (= ?x529 _371)))
 (let (($x7225 (and $x7220 $x545)))
 (=> $x7225 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7238 (= ?x529 _372)))
 (=> (and $x7238 $x528) (and (= (time-to-state (+ time 1)) _373) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7238 (= ?x529 _372)))
 (let (($x7243 (and $x7238 $x545)))
 (=> $x7243 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7256 (= ?x529 _373)))
 (=> (and $x7256 $x528) (and (= (time-to-state (+ time 1)) _374) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7256 (= ?x529 _373)))
 (let (($x7261 (and $x7256 $x545)))
 (=> $x7261 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7274 (= ?x529 _374)))
 (=> (and $x7274 $x528) (and (= (time-to-state (+ time 1)) _375) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7274 (= ?x529 _374)))
 (let (($x7279 (and $x7274 $x545)))
 (=> $x7279 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7292 (= ?x529 _375)))
 (=> (and $x7292 $x528) (and (= (time-to-state (+ time 1)) _376) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7292 (= ?x529 _375)))
 (let (($x7297 (and $x7292 $x545)))
 (=> $x7297 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7310 (= ?x529 _376)))
 (=> (and $x7310 $x528) (and (= (time-to-state (+ time 1)) _377) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7310 (= ?x529 _376)))
 (let (($x7315 (and $x7310 $x545)))
 (=> $x7315 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7328 (= ?x529 _377)))
 (=> (and $x7328 $x528) (and (= (time-to-state (+ time 1)) _378) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7328 (= ?x529 _377)))
 (let (($x7333 (and $x7328 $x545)))
 (=> $x7333 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7346 (= ?x529 _378)))
 (=> (and $x7346 $x528) (and (= (time-to-state (+ time 1)) _379) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7346 (= ?x529 _378)))
 (let (($x7351 (and $x7346 $x545)))
 (=> $x7351 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7364 (= ?x529 _379)))
 (=> (and $x7364 $x528) (and (= (time-to-state (+ time 1)) _380) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7364 (= ?x529 _379)))
 (let (($x7369 (and $x7364 $x545)))
 (=> $x7369 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7382 (= ?x529 _380)))
 (=> (and $x7382 $x528) (and (= (time-to-state (+ time 1)) _381) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7382 (= ?x529 _380)))
 (let (($x7387 (and $x7382 $x545)))
 (=> $x7387 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7400 (= ?x529 _381)))
 (=> (and $x7400 $x528) (and (= (time-to-state (+ time 1)) _382) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7400 (= ?x529 _381)))
 (let (($x7405 (and $x7400 $x545)))
 (=> $x7405 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7418 (= ?x529 _382)))
 (=> (and $x7418 $x528) (and (= (time-to-state (+ time 1)) _383) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7418 (= ?x529 _382)))
 (let (($x7423 (and $x7418 $x545)))
 (=> $x7423 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7436 (= ?x529 _383)))
 (=> (and $x7436 $x528) (and (= (time-to-state (+ time 1)) _384) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7436 (= ?x529 _383)))
 (let (($x7441 (and $x7436 $x545)))
 (=> $x7441 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7454 (= ?x529 _384)))
 (=> (and $x7454 $x528) (and (= (time-to-state (+ time 1)) _385) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7454 (= ?x529 _384)))
 (let (($x7459 (and $x7454 $x545)))
 (=> $x7459 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7472 (= ?x529 _385)))
 (=> (and $x7472 $x528) (and (= (time-to-state (+ time 1)) _386) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7472 (= ?x529 _385)))
 (let (($x7477 (and $x7472 $x545)))
 (=> $x7477 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7490 (= ?x529 _386)))
 (=> (and $x7490 $x528) (and (= (time-to-state (+ time 1)) _387) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7490 (= ?x529 _386)))
 (let (($x7495 (and $x7490 $x545)))
 (=> $x7495 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7508 (= ?x529 _387)))
 (=> (and $x7508 $x528) (and (= (time-to-state (+ time 1)) _388) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7508 (= ?x529 _387)))
 (let (($x7513 (and $x7508 $x545)))
 (=> $x7513 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7526 (= ?x529 _388)))
 (=> (and $x7526 $x528) (and (= (time-to-state (+ time 1)) _389) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7526 (= ?x529 _388)))
 (let (($x7531 (and $x7526 $x545)))
 (=> $x7531 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7544 (= ?x529 _389)))
 (=> (and $x7544 $x528) (and (= (time-to-state (+ time 1)) _390) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7544 (= ?x529 _389)))
 (let (($x7549 (and $x7544 $x545)))
 (=> $x7549 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7562 (= ?x529 _390)))
 (=> (and $x7562 $x528) (and (= (time-to-state (+ time 1)) _391) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7562 (= ?x529 _390)))
 (let (($x7567 (and $x7562 $x545)))
 (=> $x7567 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7580 (= ?x529 _391)))
 (=> (and $x7580 $x528) (and (= (time-to-state (+ time 1)) _392) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7580 (= ?x529 _391)))
 (let (($x7585 (and $x7580 $x545)))
 (=> $x7585 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7598 (= ?x529 _392)))
 (=> (and $x7598 $x528) (and (= (time-to-state (+ time 1)) _393) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7598 (= ?x529 _392)))
 (let (($x7603 (and $x7598 $x545)))
 (=> $x7603 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7616 (= ?x529 _393)))
 (=> (and $x7616 $x528) (and (= (time-to-state (+ time 1)) _394) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7616 (= ?x529 _393)))
 (let (($x7621 (and $x7616 $x545)))
 (=> $x7621 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7634 (= ?x529 _394)))
 (=> (and $x7634 $x528) (and (= (time-to-state (+ time 1)) _395) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7634 (= ?x529 _394)))
 (let (($x7639 (and $x7634 $x545)))
 (=> $x7639 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7652 (= ?x529 _395)))
 (=> (and $x7652 $x528) (and (= (time-to-state (+ time 1)) _396) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7652 (= ?x529 _395)))
 (let (($x7657 (and $x7652 $x545)))
 (=> $x7657 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7670 (= ?x529 _396)))
 (=> (and $x7670 $x528) (and (= (time-to-state (+ time 1)) _397) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7670 (= ?x529 _396)))
 (let (($x7675 (and $x7670 $x545)))
 (=> $x7675 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7688 (= ?x529 _397)))
 (=> (and $x7688 $x528) (and (= (time-to-state (+ time 1)) _398) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7688 (= ?x529 _397)))
 (let (($x7693 (and $x7688 $x545)))
 (=> $x7693 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7706 (= ?x529 _398)))
 (=> (and $x7706 $x528) (and (= (time-to-state (+ time 1)) _399) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7706 (= ?x529 _398)))
 (let (($x7711 (and $x7706 $x545)))
 (=> $x7711 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7724 (= ?x529 _399)))
 (=> (and $x7724 $x528) (and (= (time-to-state (+ time 1)) _400) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7724 (= ?x529 _399)))
 (let (($x7729 (and $x7724 $x545)))
 (=> $x7729 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7742 (= ?x529 _400)))
 (=> (and $x7742 $x528) (and (= (time-to-state (+ time 1)) _401) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7742 (= ?x529 _400)))
 (let (($x7747 (and $x7742 $x545)))
 (=> $x7747 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7760 (= ?x529 _401)))
 (=> (and $x7760 $x528) (and (= (time-to-state (+ time 1)) _402) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7760 (= ?x529 _401)))
 (let (($x7765 (and $x7760 $x545)))
 (=> $x7765 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7778 (= ?x529 _402)))
 (=> (and $x7778 $x528) (and (= (time-to-state (+ time 1)) _403) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7778 (= ?x529 _402)))
 (let (($x7783 (and $x7778 $x545)))
 (=> $x7783 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7796 (= ?x529 _403)))
 (=> (and $x7796 $x528) (and (= (time-to-state (+ time 1)) _404) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7796 (= ?x529 _403)))
 (let (($x7801 (and $x7796 $x545)))
 (=> $x7801 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7814 (= ?x529 _404)))
 (=> (and $x7814 $x528) (and (= (time-to-state (+ time 1)) _405) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7814 (= ?x529 _404)))
 (let (($x7819 (and $x7814 $x545)))
 (=> $x7819 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7832 (= ?x529 _405)))
 (=> (and $x7832 $x528) (and (= (time-to-state (+ time 1)) _406) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7832 (= ?x529 _405)))
 (let (($x7837 (and $x7832 $x545)))
 (=> $x7837 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7850 (= ?x529 _406)))
 (=> (and $x7850 $x528) (and (= (time-to-state (+ time 1)) _407) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7850 (= ?x529 _406)))
 (let (($x7855 (and $x7850 $x545)))
 (=> $x7855 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7868 (= ?x529 _407)))
 (=> (and $x7868 $x528) (and (= (time-to-state (+ time 1)) _408) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7868 (= ?x529 _407)))
 (let (($x7873 (and $x7868 $x545)))
 (=> $x7873 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7886 (= ?x529 _408)))
 (=> (and $x7886 $x528) (and (= (time-to-state (+ time 1)) _409) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7886 (= ?x529 _408)))
 (let (($x7891 (and $x7886 $x545)))
 (=> $x7891 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7904 (= ?x529 _409)))
 (=> (and $x7904 $x528) (and (= (time-to-state (+ time 1)) _410) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7904 (= ?x529 _409)))
 (let (($x7909 (and $x7904 $x545)))
 (=> $x7909 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7922 (= ?x529 _410)))
 (=> (and $x7922 $x528) (and (= (time-to-state (+ time 1)) _411) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7922 (= ?x529 _410)))
 (let (($x7927 (and $x7922 $x545)))
 (=> $x7927 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7940 (= ?x529 _411)))
 (=> (and $x7940 $x528) (and (= (time-to-state (+ time 1)) _412) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7940 (= ?x529 _411)))
 (let (($x7945 (and $x7940 $x545)))
 (=> $x7945 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7958 (= ?x529 _412)))
 (=> (and $x7958 $x528) (and (= (time-to-state (+ time 1)) _413) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7958 (= ?x529 _412)))
 (let (($x7963 (and $x7958 $x545)))
 (=> $x7963 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7976 (= ?x529 _413)))
 (=> (and $x7976 $x528) (and (= (time-to-state (+ time 1)) _414) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7976 (= ?x529 _413)))
 (let (($x7981 (and $x7976 $x545)))
 (=> $x7981 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x7994 (= ?x529 _414)))
 (=> (and $x7994 $x528) (and (= (time-to-state (+ time 1)) _415) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x7994 (= ?x529 _414)))
 (let (($x7999 (and $x7994 $x545)))
 (=> $x7999 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8012 (= ?x529 _415)))
 (=> (and $x8012 $x528) (and (= (time-to-state (+ time 1)) _416) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8012 (= ?x529 _415)))
 (let (($x8017 (and $x8012 $x545)))
 (=> $x8017 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8030 (= ?x529 _416)))
 (=> (and $x8030 $x528) (and (= (time-to-state (+ time 1)) _417) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8030 (= ?x529 _416)))
 (let (($x8035 (and $x8030 $x545)))
 (=> $x8035 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8048 (= ?x529 _417)))
 (=> (and $x8048 $x528) (and (= (time-to-state (+ time 1)) _418) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8048 (= ?x529 _417)))
 (let (($x8053 (and $x8048 $x545)))
 (=> $x8053 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8066 (= ?x529 _418)))
 (=> (and $x8066 $x528) (and (= (time-to-state (+ time 1)) _419) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8066 (= ?x529 _418)))
 (let (($x8071 (and $x8066 $x545)))
 (=> $x8071 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8084 (= ?x529 _419)))
 (=> (and $x8084 $x528) (and (= (time-to-state (+ time 1)) _420) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8084 (= ?x529 _419)))
 (let (($x8089 (and $x8084 $x545)))
 (=> $x8089 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8102 (= ?x529 _420)))
 (=> (and $x8102 $x528) (and (= (time-to-state (+ time 1)) _421) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8102 (= ?x529 _420)))
 (let (($x8107 (and $x8102 $x545)))
 (=> $x8107 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8120 (= ?x529 _421)))
 (=> (and $x8120 $x528) (and (= (time-to-state (+ time 1)) _422) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8120 (= ?x529 _421)))
 (let (($x8125 (and $x8120 $x545)))
 (=> $x8125 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8138 (= ?x529 _422)))
 (=> (and $x8138 $x528) (and (= (time-to-state (+ time 1)) _423) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8138 (= ?x529 _422)))
 (let (($x8143 (and $x8138 $x545)))
 (=> $x8143 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8156 (= ?x529 _423)))
 (=> (and $x8156 $x528) (and (= (time-to-state (+ time 1)) _424) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8156 (= ?x529 _423)))
 (let (($x8161 (and $x8156 $x545)))
 (=> $x8161 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8174 (= ?x529 _424)))
 (=> (and $x8174 $x528) (and (= (time-to-state (+ time 1)) _425) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8174 (= ?x529 _424)))
 (let (($x8179 (and $x8174 $x545)))
 (=> $x8179 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8192 (= ?x529 _425)))
 (=> (and $x8192 $x528) (and (= (time-to-state (+ time 1)) _426) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8192 (= ?x529 _425)))
 (let (($x8197 (and $x8192 $x545)))
 (=> $x8197 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8210 (= ?x529 _426)))
 (=> (and $x8210 $x528) (and (= (time-to-state (+ time 1)) _427) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8210 (= ?x529 _426)))
 (let (($x8215 (and $x8210 $x545)))
 (=> $x8215 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8228 (= ?x529 _427)))
 (=> (and $x8228 $x528) (and (= (time-to-state (+ time 1)) _428) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8228 (= ?x529 _427)))
 (let (($x8233 (and $x8228 $x545)))
 (=> $x8233 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8246 (= ?x529 _428)))
 (=> (and $x8246 $x528) (and (= (time-to-state (+ time 1)) _429) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8246 (= ?x529 _428)))
 (let (($x8251 (and $x8246 $x545)))
 (=> $x8251 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8264 (= ?x529 _429)))
 (=> (and $x8264 $x528) (and (= (time-to-state (+ time 1)) _430) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8264 (= ?x529 _429)))
 (let (($x8269 (and $x8264 $x545)))
 (=> $x8269 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8282 (= ?x529 _430)))
 (=> (and $x8282 $x528) (and (= (time-to-state (+ time 1)) _431) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8282 (= ?x529 _430)))
 (let (($x8287 (and $x8282 $x545)))
 (=> $x8287 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8300 (= ?x529 _431)))
 (=> (and $x8300 $x528) (and (= (time-to-state (+ time 1)) _432) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8300 (= ?x529 _431)))
 (let (($x8305 (and $x8300 $x545)))
 (=> $x8305 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8318 (= ?x529 _432)))
 (=> (and $x8318 $x528) (and (= (time-to-state (+ time 1)) _433) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8318 (= ?x529 _432)))
 (let (($x8323 (and $x8318 $x545)))
 (=> $x8323 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8336 (= ?x529 _433)))
 (=> (and $x8336 $x528) (and (= (time-to-state (+ time 1)) _434) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8336 (= ?x529 _433)))
 (let (($x8341 (and $x8336 $x545)))
 (=> $x8341 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8354 (= ?x529 _434)))
 (=> (and $x8354 $x528) (and (= (time-to-state (+ time 1)) _435) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8354 (= ?x529 _434)))
 (let (($x8359 (and $x8354 $x545)))
 (=> $x8359 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8372 (= ?x529 _435)))
 (=> (and $x8372 $x528) (and (= (time-to-state (+ time 1)) _436) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8372 (= ?x529 _435)))
 (let (($x8377 (and $x8372 $x545)))
 (=> $x8377 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8390 (= ?x529 _436)))
 (=> (and $x8390 $x528) (and (= (time-to-state (+ time 1)) _437) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8390 (= ?x529 _436)))
 (let (($x8395 (and $x8390 $x545)))
 (=> $x8395 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8408 (= ?x529 _437)))
 (=> (and $x8408 $x528) (and (= (time-to-state (+ time 1)) _438) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8408 (= ?x529 _437)))
 (let (($x8413 (and $x8408 $x545)))
 (=> $x8413 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8426 (= ?x529 _438)))
 (=> (and $x8426 $x528) (and (= (time-to-state (+ time 1)) _439) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8426 (= ?x529 _438)))
 (let (($x8431 (and $x8426 $x545)))
 (=> $x8431 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8444 (= ?x529 _439)))
 (=> (and $x8444 $x528) (and (= (time-to-state (+ time 1)) _440) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8444 (= ?x529 _439)))
 (let (($x8449 (and $x8444 $x545)))
 (=> $x8449 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8462 (= ?x529 _440)))
 (=> (and $x8462 $x528) (and (= (time-to-state (+ time 1)) _441) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8462 (= ?x529 _440)))
 (let (($x8467 (and $x8462 $x545)))
 (=> $x8467 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8480 (= ?x529 _441)))
 (=> (and $x8480 $x528) (and (= (time-to-state (+ time 1)) _442) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8480 (= ?x529 _441)))
 (let (($x8485 (and $x8480 $x545)))
 (=> $x8485 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8498 (= ?x529 _442)))
 (=> (and $x8498 $x528) (and (= (time-to-state (+ time 1)) _443) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8498 (= ?x529 _442)))
 (let (($x8503 (and $x8498 $x545)))
 (=> $x8503 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8516 (= ?x529 _443)))
 (=> (and $x8516 $x528) (and (= (time-to-state (+ time 1)) _444) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8516 (= ?x529 _443)))
 (let (($x8521 (and $x8516 $x545)))
 (=> $x8521 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8534 (= ?x529 _444)))
 (=> (and $x8534 $x528) (and (= (time-to-state (+ time 1)) _445) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8534 (= ?x529 _444)))
 (let (($x8539 (and $x8534 $x545)))
 (=> $x8539 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8552 (= ?x529 _445)))
 (=> (and $x8552 $x528) (and (= (time-to-state (+ time 1)) _446) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8552 (= ?x529 _445)))
 (let (($x8557 (and $x8552 $x545)))
 (=> $x8557 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8570 (= ?x529 _446)))
 (=> (and $x8570 $x528) (and (= (time-to-state (+ time 1)) _447) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8570 (= ?x529 _446)))
 (let (($x8575 (and $x8570 $x545)))
 (=> $x8575 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8588 (= ?x529 _447)))
 (=> (and $x8588 $x528) (and (= (time-to-state (+ time 1)) _448) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8588 (= ?x529 _447)))
 (let (($x8593 (and $x8588 $x545)))
 (=> $x8593 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8606 (= ?x529 _448)))
 (=> (and $x8606 $x528) (and (= (time-to-state (+ time 1)) _449) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8606 (= ?x529 _448)))
 (let (($x8611 (and $x8606 $x545)))
 (=> $x8611 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8624 (= ?x529 _449)))
 (=> (and $x8624 $x528) (and (= (time-to-state (+ time 1)) _450) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8624 (= ?x529 _449)))
 (let (($x8629 (and $x8624 $x545)))
 (=> $x8629 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8642 (= ?x529 _450)))
 (=> (and $x8642 $x528) (and (= (time-to-state (+ time 1)) _451) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8642 (= ?x529 _450)))
 (let (($x8647 (and $x8642 $x545)))
 (=> $x8647 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8660 (= ?x529 _451)))
 (=> (and $x8660 $x528) (and (= (time-to-state (+ time 1)) _452) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8660 (= ?x529 _451)))
 (let (($x8665 (and $x8660 $x545)))
 (=> $x8665 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8678 (= ?x529 _452)))
 (=> (and $x8678 $x528) (and (= (time-to-state (+ time 1)) _453) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8678 (= ?x529 _452)))
 (let (($x8683 (and $x8678 $x545)))
 (=> $x8683 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8696 (= ?x529 _453)))
 (=> (and $x8696 $x528) (and (= (time-to-state (+ time 1)) _454) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8696 (= ?x529 _453)))
 (let (($x8701 (and $x8696 $x545)))
 (=> $x8701 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8714 (= ?x529 _454)))
 (=> (and $x8714 $x528) (and (= (time-to-state (+ time 1)) _455) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8714 (= ?x529 _454)))
 (let (($x8719 (and $x8714 $x545)))
 (=> $x8719 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8732 (= ?x529 _455)))
 (=> (and $x8732 $x528) (and (= (time-to-state (+ time 1)) _456) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8732 (= ?x529 _455)))
 (let (($x8737 (and $x8732 $x545)))
 (=> $x8737 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8750 (= ?x529 _456)))
 (=> (and $x8750 $x528) (and (= (time-to-state (+ time 1)) _457) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8750 (= ?x529 _456)))
 (let (($x8755 (and $x8750 $x545)))
 (=> $x8755 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8768 (= ?x529 _457)))
 (=> (and $x8768 $x528) (and (= (time-to-state (+ time 1)) _458) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8768 (= ?x529 _457)))
 (let (($x8773 (and $x8768 $x545)))
 (=> $x8773 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8786 (= ?x529 _458)))
 (=> (and $x8786 $x528) (and (= (time-to-state (+ time 1)) _459) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8786 (= ?x529 _458)))
 (let (($x8791 (and $x8786 $x545)))
 (=> $x8791 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8804 (= ?x529 _459)))
 (=> (and $x8804 $x528) (and (= (time-to-state (+ time 1)) _460) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8804 (= ?x529 _459)))
 (let (($x8809 (and $x8804 $x545)))
 (=> $x8809 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8822 (= ?x529 _460)))
 (=> (and $x8822 $x528) (and (= (time-to-state (+ time 1)) _461) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8822 (= ?x529 _460)))
 (let (($x8827 (and $x8822 $x545)))
 (=> $x8827 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8840 (= ?x529 _461)))
 (=> (and $x8840 $x528) (and (= (time-to-state (+ time 1)) _462) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8840 (= ?x529 _461)))
 (let (($x8845 (and $x8840 $x545)))
 (=> $x8845 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8858 (= ?x529 _462)))
 (=> (and $x8858 $x528) (and (= (time-to-state (+ time 1)) _463) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8858 (= ?x529 _462)))
 (let (($x8863 (and $x8858 $x545)))
 (=> $x8863 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8876 (= ?x529 _463)))
 (=> (and $x8876 $x528) (and (= (time-to-state (+ time 1)) _464) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8876 (= ?x529 _463)))
 (let (($x8881 (and $x8876 $x545)))
 (=> $x8881 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8894 (= ?x529 _464)))
 (=> (and $x8894 $x528) (and (= (time-to-state (+ time 1)) _465) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8894 (= ?x529 _464)))
 (let (($x8899 (and $x8894 $x545)))
 (=> $x8899 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8912 (= ?x529 _465)))
 (=> (and $x8912 $x528) (and (= (time-to-state (+ time 1)) _466) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8912 (= ?x529 _465)))
 (let (($x8917 (and $x8912 $x545)))
 (=> $x8917 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8930 (= ?x529 _466)))
 (=> (and $x8930 $x528) (and (= (time-to-state (+ time 1)) _467) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8930 (= ?x529 _466)))
 (let (($x8935 (and $x8930 $x545)))
 (=> $x8935 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8948 (= ?x529 _467)))
 (=> (and $x8948 $x528) (and (= (time-to-state (+ time 1)) _468) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8948 (= ?x529 _467)))
 (let (($x8953 (and $x8948 $x545)))
 (=> $x8953 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8966 (= ?x529 _468)))
 (=> (and $x8966 $x528) (and (= (time-to-state (+ time 1)) _469) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8966 (= ?x529 _468)))
 (let (($x8971 (and $x8966 $x545)))
 (=> $x8971 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let (($x523 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x527 (input-arg0 time)))
 (let (($x528 (and (distinct ?x527 0) true)))
 (let ((?x529 (time-to-state time)))
 (let (($x8984 (= ?x529 _469)))
 (=> (and $x8984 $x528) (and (= (time-to-state (+ time 1)) _470) $x523))))))))
 )
(assert
 (forall ((time Int) )(let ((?x521 (+ time 1)))
 (let ((?x524 (time-to-state ?x521)))
 (let (($x544 (= ?x524 ERR)))
 (let ((?x527 (input-arg0 time)))
 (let (($x545 (= ?x527 1)))
 (let ((?x529 (time-to-state time)))
 (let (($x8984 (= ?x529 _469)))
 (let (($x8989 (and $x8984 $x545)))
 (=> $x8989 $x544))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x529 (time-to-state time)))
 (let (($x8992 (= ?x529 ERR)))
 (and $x8992 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370 _371 _372 _373 _374 _375 _376 _377 _378 _379 _380 _381 _382 _383 _384 _385 _386 _387 _388 _389 _390 _391 _392 _393 _394 _395 _396 _397 _398 _399 _400 _401 _402 _403 _404 _405 _406 _407 _408 _409 _410 _411 _412 _413 _414 _415 _416 _417 _418 _419 _420 _421 _422 _423 _424 _425 _426 _427 _428 _429 _430 _431 _432 _433 _434 _435 _436 _437 _438 _439 _440 _441 _442 _443 _444 _445 _446 _447 _448 _449 _450 _451 _452 _453 _454 _455 _456 _457 _458 _459 _460 _461 _462 _463 _464 _465 _466 _467 _468 _469 _470) true))
(check-sat)
