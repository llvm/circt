; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(assert
 (let ((?x299 (time-to-state 0)))
 (= ?x299 _0)))
(assert
 (let ((?x319 (input-arg0 0)))
 (= ?x319 0)))
(assert
 (let ((?x321 (var1_0 0)))
 (= ?x321 0)))
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x350 (= ?x349 _0)))
 (let (($x366 (and $x350 $x365)))
 (=> $x366 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x380 (= ?x349 _1)))
 (let (($x385 (and $x380 $x365)))
 (=> $x385 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x398 (= ?x349 _2)))
 (let (($x403 (and $x398 $x365)))
 (=> $x403 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x416 (= ?x349 _3)))
 (let (($x421 (and $x416 $x365)))
 (=> $x421 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x434 (= ?x349 _4)))
 (let (($x439 (and $x434 $x365)))
 (=> $x439 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x452 (= ?x349 _5)))
 (let (($x457 (and $x452 $x365)))
 (=> $x457 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x470 (= ?x349 _6)))
 (let (($x475 (and $x470 $x365)))
 (=> $x475 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x488 (= ?x349 _7)))
 (let (($x493 (and $x488 $x365)))
 (=> $x493 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x506 (= ?x349 _8)))
 (let (($x511 (and $x506 $x365)))
 (=> $x511 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x524 (= ?x349 _9)))
 (let (($x529 (and $x524 $x365)))
 (=> $x529 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x542 (= ?x349 _10)))
 (let (($x547 (and $x542 $x365)))
 (=> $x547 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x560 (= ?x349 _11)))
 (let (($x565 (and $x560 $x365)))
 (=> $x565 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x578 (= ?x349 _12)))
 (let (($x583 (and $x578 $x365)))
 (=> $x583 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x596 (= ?x349 _13)))
 (let (($x601 (and $x596 $x365)))
 (=> $x601 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x614 (= ?x349 _14)))
 (let (($x619 (and $x614 $x365)))
 (=> $x619 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x632 (= ?x349 _15)))
 (let (($x637 (and $x632 $x365)))
 (=> $x637 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x650 (= ?x349 _16)))
 (let (($x655 (and $x650 $x365)))
 (=> $x655 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x668 (= ?x349 _17)))
 (let (($x673 (and $x668 $x365)))
 (=> $x673 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x686 (= ?x349 _18)))
 (let (($x691 (and $x686 $x365)))
 (=> $x691 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x704 (= ?x349 _19)))
 (let (($x709 (and $x704 $x365)))
 (=> $x709 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x722 (= ?x349 _20)))
 (let (($x727 (and $x722 $x365)))
 (=> $x727 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x740 (= ?x349 _21)))
 (let (($x745 (and $x740 $x365)))
 (=> $x745 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x758 (= ?x349 _22)))
 (let (($x763 (and $x758 $x365)))
 (=> $x763 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x776 (= ?x349 _23)))
 (let (($x781 (and $x776 $x365)))
 (=> $x781 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x794 (= ?x349 _24)))
 (let (($x799 (and $x794 $x365)))
 (=> $x799 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x812 (= ?x349 _25)))
 (let (($x817 (and $x812 $x365)))
 (=> $x817 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x830 (= ?x349 _26)))
 (let (($x835 (and $x830 $x365)))
 (=> $x835 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x848 (= ?x349 _27)))
 (let (($x853 (and $x848 $x365)))
 (=> $x853 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x866 (= ?x349 _28)))
 (let (($x871 (and $x866 $x365)))
 (=> $x871 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x884 (= ?x349 _29)))
 (let (($x889 (and $x884 $x365)))
 (=> $x889 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x902 (= ?x349 _30)))
 (let (($x907 (and $x902 $x365)))
 (=> $x907 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x920 (= ?x349 _31)))
 (let (($x925 (and $x920 $x365)))
 (=> $x925 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x938 (= ?x349 _32)))
 (let (($x943 (and $x938 $x365)))
 (=> $x943 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x956 (= ?x349 _33)))
 (let (($x961 (and $x956 $x365)))
 (=> $x961 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x974 (= ?x349 _34)))
 (let (($x979 (and $x974 $x365)))
 (=> $x979 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x992 (= ?x349 _35)))
 (let (($x997 (and $x992 $x365)))
 (=> $x997 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1010 (= ?x349 _36)))
 (let (($x1015 (and $x1010 $x365)))
 (=> $x1015 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1028 (= ?x349 _37)))
 (let (($x1033 (and $x1028 $x365)))
 (=> $x1033 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1046 (= ?x349 _38)))
 (let (($x1051 (and $x1046 $x365)))
 (=> $x1051 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1064 (= ?x349 _39)))
 (let (($x1069 (and $x1064 $x365)))
 (=> $x1069 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1082 (= ?x349 _40)))
 (let (($x1087 (and $x1082 $x365)))
 (=> $x1087 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1100 (= ?x349 _41)))
 (let (($x1105 (and $x1100 $x365)))
 (=> $x1105 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1118 (= ?x349 _42)))
 (let (($x1123 (and $x1118 $x365)))
 (=> $x1123 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1136 (= ?x349 _43)))
 (let (($x1141 (and $x1136 $x365)))
 (=> $x1141 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1154 (= ?x349 _44)))
 (let (($x1159 (and $x1154 $x365)))
 (=> $x1159 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1172 (= ?x349 _45)))
 (let (($x1177 (and $x1172 $x365)))
 (=> $x1177 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1190 (= ?x349 _46)))
 (let (($x1195 (and $x1190 $x365)))
 (=> $x1195 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1208 (= ?x349 _47)))
 (let (($x1213 (and $x1208 $x365)))
 (=> $x1213 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1226 (= ?x349 _48)))
 (let (($x1231 (and $x1226 $x365)))
 (=> $x1231 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1244 (= ?x349 _49)))
 (let (($x1249 (and $x1244 $x365)))
 (=> $x1249 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1262 (= ?x349 _50)))
 (let (($x1267 (and $x1262 $x365)))
 (=> $x1267 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1280 (= ?x349 _51)))
 (let (($x1285 (and $x1280 $x365)))
 (=> $x1285 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1298 (= ?x349 _52)))
 (let (($x1303 (and $x1298 $x365)))
 (=> $x1303 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1316 (= ?x349 _53)))
 (let (($x1321 (and $x1316 $x365)))
 (=> $x1321 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1334 (= ?x349 _54)))
 (let (($x1339 (and $x1334 $x365)))
 (=> $x1339 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1352 (= ?x349 _55)))
 (let (($x1357 (and $x1352 $x365)))
 (=> $x1357 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1370 (= ?x349 _56)))
 (let (($x1375 (and $x1370 $x365)))
 (=> $x1375 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1388 (= ?x349 _57)))
 (let (($x1393 (and $x1388 $x365)))
 (=> $x1393 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1406 (= ?x349 _58)))
 (let (($x1411 (and $x1406 $x365)))
 (=> $x1411 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1424 (= ?x349 _59)))
 (let (($x1429 (and $x1424 $x365)))
 (=> $x1429 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1442 (= ?x349 _60)))
 (let (($x1447 (and $x1442 $x365)))
 (=> $x1447 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1460 (= ?x349 _61)))
 (let (($x1465 (and $x1460 $x365)))
 (=> $x1465 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1478 (= ?x349 _62)))
 (let (($x1483 (and $x1478 $x365)))
 (=> $x1483 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1496 (= ?x349 _63)))
 (let (($x1501 (and $x1496 $x365)))
 (=> $x1501 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1514 (= ?x349 _64)))
 (let (($x1519 (and $x1514 $x365)))
 (=> $x1519 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1532 (= ?x349 _65)))
 (let (($x1537 (and $x1532 $x365)))
 (=> $x1537 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1550 (= ?x349 _66)))
 (let (($x1555 (and $x1550 $x365)))
 (=> $x1555 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1568 (= ?x349 _67)))
 (let (($x1573 (and $x1568 $x365)))
 (=> $x1573 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1586 (= ?x349 _68)))
 (let (($x1591 (and $x1586 $x365)))
 (=> $x1591 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1604 (= ?x349 _69)))
 (let (($x1609 (and $x1604 $x365)))
 (=> $x1609 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1622 (= ?x349 _70)))
 (let (($x1627 (and $x1622 $x365)))
 (=> $x1627 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1640 (= ?x349 _71)))
 (let (($x1645 (and $x1640 $x365)))
 (=> $x1645 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1658 (= ?x349 _72)))
 (let (($x1663 (and $x1658 $x365)))
 (=> $x1663 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1676 (= ?x349 _73)))
 (let (($x1681 (and $x1676 $x365)))
 (=> $x1681 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1694 (= ?x349 _74)))
 (let (($x1699 (and $x1694 $x365)))
 (=> $x1699 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1712 (= ?x349 _75)))
 (let (($x1717 (and $x1712 $x365)))
 (=> $x1717 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1730 (= ?x349 _76)))
 (let (($x1735 (and $x1730 $x365)))
 (=> $x1735 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1748 (= ?x349 _77)))
 (let (($x1753 (and $x1748 $x365)))
 (=> $x1753 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1766 (= ?x349 _78)))
 (let (($x1771 (and $x1766 $x365)))
 (=> $x1771 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1784 (= ?x349 _79)))
 (let (($x1789 (and $x1784 $x365)))
 (=> $x1789 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1802 (= ?x349 _80)))
 (let (($x1807 (and $x1802 $x365)))
 (=> $x1807 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1820 (= ?x349 _81)))
 (let (($x1825 (and $x1820 $x365)))
 (=> $x1825 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1838 (= ?x349 _82)))
 (let (($x1843 (and $x1838 $x365)))
 (=> $x1843 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1856 (= ?x349 _83)))
 (let (($x1861 (and $x1856 $x365)))
 (=> $x1861 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1874 (= ?x349 _84)))
 (let (($x1879 (and $x1874 $x365)))
 (=> $x1879 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1892 (= ?x349 _85)))
 (let (($x1897 (and $x1892 $x365)))
 (=> $x1897 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1910 (= ?x349 _86)))
 (let (($x1915 (and $x1910 $x365)))
 (=> $x1915 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1928 (= ?x349 _87)))
 (let (($x1933 (and $x1928 $x365)))
 (=> $x1933 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1946 (= ?x349 _88)))
 (let (($x1951 (and $x1946 $x365)))
 (=> $x1951 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1964 (= ?x349 _89)))
 (let (($x1969 (and $x1964 $x365)))
 (=> $x1969 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x1982 (= ?x349 _90)))
 (let (($x1987 (and $x1982 $x365)))
 (=> $x1987 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2000 (= ?x349 _91)))
 (let (($x2005 (and $x2000 $x365)))
 (=> $x2005 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2018 (= ?x349 _92)))
 (let (($x2023 (and $x2018 $x365)))
 (=> $x2023 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2036 (= ?x349 _93)))
 (let (($x2041 (and $x2036 $x365)))
 (=> $x2041 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2054 (= ?x349 _94)))
 (let (($x2059 (and $x2054 $x365)))
 (=> $x2059 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2072 (= ?x349 _95)))
 (let (($x2077 (and $x2072 $x365)))
 (=> $x2077 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2090 (= ?x349 _96)))
 (let (($x2095 (and $x2090 $x365)))
 (=> $x2095 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2108 (= ?x349 _97)))
 (let (($x2113 (and $x2108 $x365)))
 (=> $x2113 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2126 (= ?x349 _98)))
 (let (($x2131 (and $x2126 $x365)))
 (=> $x2131 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x343))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2144 (= ?x349 _99)))
 (let (($x2149 (and $x2144 $x365)))
 (=> $x2149 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2162 (= ?x349 _100)))
 (=> (and $x2162 $x348) (and (= (time-to-state (+ time 1)) _101) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2162 (= ?x349 _100)))
 (let (($x2167 (and $x2162 $x365)))
 (=> $x2167 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2180 (= ?x349 _101)))
 (=> (and $x2180 $x348) (and (= (time-to-state (+ time 1)) _102) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2180 (= ?x349 _101)))
 (let (($x2185 (and $x2180 $x365)))
 (=> $x2185 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2198 (= ?x349 _102)))
 (=> (and $x2198 $x348) (and (= (time-to-state (+ time 1)) _103) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2198 (= ?x349 _102)))
 (let (($x2203 (and $x2198 $x365)))
 (=> $x2203 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2216 (= ?x349 _103)))
 (=> (and $x2216 $x348) (and (= (time-to-state (+ time 1)) _104) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2216 (= ?x349 _103)))
 (let (($x2221 (and $x2216 $x365)))
 (=> $x2221 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2234 (= ?x349 _104)))
 (=> (and $x2234 $x348) (and (= (time-to-state (+ time 1)) _105) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2234 (= ?x349 _104)))
 (let (($x2239 (and $x2234 $x365)))
 (=> $x2239 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2252 (= ?x349 _105)))
 (=> (and $x2252 $x348) (and (= (time-to-state (+ time 1)) _106) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2252 (= ?x349 _105)))
 (let (($x2257 (and $x2252 $x365)))
 (=> $x2257 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2270 (= ?x349 _106)))
 (=> (and $x2270 $x348) (and (= (time-to-state (+ time 1)) _107) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2270 (= ?x349 _106)))
 (let (($x2275 (and $x2270 $x365)))
 (=> $x2275 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2288 (= ?x349 _107)))
 (=> (and $x2288 $x348) (and (= (time-to-state (+ time 1)) _108) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2288 (= ?x349 _107)))
 (let (($x2293 (and $x2288 $x365)))
 (=> $x2293 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2306 (= ?x349 _108)))
 (=> (and $x2306 $x348) (and (= (time-to-state (+ time 1)) _109) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2306 (= ?x349 _108)))
 (let (($x2311 (and $x2306 $x365)))
 (=> $x2311 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2324 (= ?x349 _109)))
 (=> (and $x2324 $x348) (and (= (time-to-state (+ time 1)) _110) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2324 (= ?x349 _109)))
 (let (($x2329 (and $x2324 $x365)))
 (=> $x2329 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2342 (= ?x349 _110)))
 (=> (and $x2342 $x348) (and (= (time-to-state (+ time 1)) _111) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2342 (= ?x349 _110)))
 (let (($x2347 (and $x2342 $x365)))
 (=> $x2347 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2360 (= ?x349 _111)))
 (=> (and $x2360 $x348) (and (= (time-to-state (+ time 1)) _112) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2360 (= ?x349 _111)))
 (let (($x2365 (and $x2360 $x365)))
 (=> $x2365 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2378 (= ?x349 _112)))
 (=> (and $x2378 $x348) (and (= (time-to-state (+ time 1)) _113) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2378 (= ?x349 _112)))
 (let (($x2383 (and $x2378 $x365)))
 (=> $x2383 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2396 (= ?x349 _113)))
 (=> (and $x2396 $x348) (and (= (time-to-state (+ time 1)) _114) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2396 (= ?x349 _113)))
 (let (($x2401 (and $x2396 $x365)))
 (=> $x2401 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2414 (= ?x349 _114)))
 (=> (and $x2414 $x348) (and (= (time-to-state (+ time 1)) _115) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2414 (= ?x349 _114)))
 (let (($x2419 (and $x2414 $x365)))
 (=> $x2419 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2432 (= ?x349 _115)))
 (=> (and $x2432 $x348) (and (= (time-to-state (+ time 1)) _116) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2432 (= ?x349 _115)))
 (let (($x2437 (and $x2432 $x365)))
 (=> $x2437 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2450 (= ?x349 _116)))
 (=> (and $x2450 $x348) (and (= (time-to-state (+ time 1)) _117) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2450 (= ?x349 _116)))
 (let (($x2455 (and $x2450 $x365)))
 (=> $x2455 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2468 (= ?x349 _117)))
 (=> (and $x2468 $x348) (and (= (time-to-state (+ time 1)) _118) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2468 (= ?x349 _117)))
 (let (($x2473 (and $x2468 $x365)))
 (=> $x2473 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2486 (= ?x349 _118)))
 (=> (and $x2486 $x348) (and (= (time-to-state (+ time 1)) _119) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2486 (= ?x349 _118)))
 (let (($x2491 (and $x2486 $x365)))
 (=> $x2491 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2504 (= ?x349 _119)))
 (=> (and $x2504 $x348) (and (= (time-to-state (+ time 1)) _120) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2504 (= ?x349 _119)))
 (let (($x2509 (and $x2504 $x365)))
 (=> $x2509 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2522 (= ?x349 _120)))
 (=> (and $x2522 $x348) (and (= (time-to-state (+ time 1)) _121) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2522 (= ?x349 _120)))
 (let (($x2527 (and $x2522 $x365)))
 (=> $x2527 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2540 (= ?x349 _121)))
 (=> (and $x2540 $x348) (and (= (time-to-state (+ time 1)) _122) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2540 (= ?x349 _121)))
 (let (($x2545 (and $x2540 $x365)))
 (=> $x2545 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2558 (= ?x349 _122)))
 (=> (and $x2558 $x348) (and (= (time-to-state (+ time 1)) _123) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2558 (= ?x349 _122)))
 (let (($x2563 (and $x2558 $x365)))
 (=> $x2563 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2576 (= ?x349 _123)))
 (=> (and $x2576 $x348) (and (= (time-to-state (+ time 1)) _124) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2576 (= ?x349 _123)))
 (let (($x2581 (and $x2576 $x365)))
 (=> $x2581 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2594 (= ?x349 _124)))
 (=> (and $x2594 $x348) (and (= (time-to-state (+ time 1)) _125) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2594 (= ?x349 _124)))
 (let (($x2599 (and $x2594 $x365)))
 (=> $x2599 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2612 (= ?x349 _125)))
 (=> (and $x2612 $x348) (and (= (time-to-state (+ time 1)) _126) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2612 (= ?x349 _125)))
 (let (($x2617 (and $x2612 $x365)))
 (=> $x2617 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2630 (= ?x349 _126)))
 (=> (and $x2630 $x348) (and (= (time-to-state (+ time 1)) _127) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2630 (= ?x349 _126)))
 (let (($x2635 (and $x2630 $x365)))
 (=> $x2635 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2648 (= ?x349 _127)))
 (=> (and $x2648 $x348) (and (= (time-to-state (+ time 1)) _128) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2648 (= ?x349 _127)))
 (let (($x2653 (and $x2648 $x365)))
 (=> $x2653 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2666 (= ?x349 _128)))
 (=> (and $x2666 $x348) (and (= (time-to-state (+ time 1)) _129) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2666 (= ?x349 _128)))
 (let (($x2671 (and $x2666 $x365)))
 (=> $x2671 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2684 (= ?x349 _129)))
 (=> (and $x2684 $x348) (and (= (time-to-state (+ time 1)) _130) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2684 (= ?x349 _129)))
 (let (($x2689 (and $x2684 $x365)))
 (=> $x2689 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2702 (= ?x349 _130)))
 (=> (and $x2702 $x348) (and (= (time-to-state (+ time 1)) _131) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2702 (= ?x349 _130)))
 (let (($x2707 (and $x2702 $x365)))
 (=> $x2707 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2720 (= ?x349 _131)))
 (=> (and $x2720 $x348) (and (= (time-to-state (+ time 1)) _132) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2720 (= ?x349 _131)))
 (let (($x2725 (and $x2720 $x365)))
 (=> $x2725 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2738 (= ?x349 _132)))
 (=> (and $x2738 $x348) (and (= (time-to-state (+ time 1)) _133) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2738 (= ?x349 _132)))
 (let (($x2743 (and $x2738 $x365)))
 (=> $x2743 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2756 (= ?x349 _133)))
 (=> (and $x2756 $x348) (and (= (time-to-state (+ time 1)) _134) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2756 (= ?x349 _133)))
 (let (($x2761 (and $x2756 $x365)))
 (=> $x2761 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2774 (= ?x349 _134)))
 (=> (and $x2774 $x348) (and (= (time-to-state (+ time 1)) _135) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2774 (= ?x349 _134)))
 (let (($x2779 (and $x2774 $x365)))
 (=> $x2779 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2792 (= ?x349 _135)))
 (=> (and $x2792 $x348) (and (= (time-to-state (+ time 1)) _136) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2792 (= ?x349 _135)))
 (let (($x2797 (and $x2792 $x365)))
 (=> $x2797 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2810 (= ?x349 _136)))
 (=> (and $x2810 $x348) (and (= (time-to-state (+ time 1)) _137) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2810 (= ?x349 _136)))
 (let (($x2815 (and $x2810 $x365)))
 (=> $x2815 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2828 (= ?x349 _137)))
 (=> (and $x2828 $x348) (and (= (time-to-state (+ time 1)) _138) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2828 (= ?x349 _137)))
 (let (($x2833 (and $x2828 $x365)))
 (=> $x2833 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2846 (= ?x349 _138)))
 (=> (and $x2846 $x348) (and (= (time-to-state (+ time 1)) _139) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2846 (= ?x349 _138)))
 (let (($x2851 (and $x2846 $x365)))
 (=> $x2851 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2864 (= ?x349 _139)))
 (=> (and $x2864 $x348) (and (= (time-to-state (+ time 1)) _140) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2864 (= ?x349 _139)))
 (let (($x2869 (and $x2864 $x365)))
 (=> $x2869 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2882 (= ?x349 _140)))
 (=> (and $x2882 $x348) (and (= (time-to-state (+ time 1)) _141) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2882 (= ?x349 _140)))
 (let (($x2887 (and $x2882 $x365)))
 (=> $x2887 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2900 (= ?x349 _141)))
 (=> (and $x2900 $x348) (and (= (time-to-state (+ time 1)) _142) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2900 (= ?x349 _141)))
 (let (($x2905 (and $x2900 $x365)))
 (=> $x2905 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2918 (= ?x349 _142)))
 (=> (and $x2918 $x348) (and (= (time-to-state (+ time 1)) _143) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2918 (= ?x349 _142)))
 (let (($x2923 (and $x2918 $x365)))
 (=> $x2923 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2936 (= ?x349 _143)))
 (=> (and $x2936 $x348) (and (= (time-to-state (+ time 1)) _144) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2936 (= ?x349 _143)))
 (let (($x2941 (and $x2936 $x365)))
 (=> $x2941 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2954 (= ?x349 _144)))
 (=> (and $x2954 $x348) (and (= (time-to-state (+ time 1)) _145) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2954 (= ?x349 _144)))
 (let (($x2959 (and $x2954 $x365)))
 (=> $x2959 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2972 (= ?x349 _145)))
 (=> (and $x2972 $x348) (and (= (time-to-state (+ time 1)) _146) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2972 (= ?x349 _145)))
 (let (($x2977 (and $x2972 $x365)))
 (=> $x2977 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x2990 (= ?x349 _146)))
 (=> (and $x2990 $x348) (and (= (time-to-state (+ time 1)) _147) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x2990 (= ?x349 _146)))
 (let (($x2995 (and $x2990 $x365)))
 (=> $x2995 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3008 (= ?x349 _147)))
 (=> (and $x3008 $x348) (and (= (time-to-state (+ time 1)) _148) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3008 (= ?x349 _147)))
 (let (($x3013 (and $x3008 $x365)))
 (=> $x3013 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3026 (= ?x349 _148)))
 (=> (and $x3026 $x348) (and (= (time-to-state (+ time 1)) _149) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3026 (= ?x349 _148)))
 (let (($x3031 (and $x3026 $x365)))
 (=> $x3031 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3044 (= ?x349 _149)))
 (=> (and $x3044 $x348) (and (= (time-to-state (+ time 1)) _150) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3044 (= ?x349 _149)))
 (let (($x3049 (and $x3044 $x365)))
 (=> $x3049 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3062 (= ?x349 _150)))
 (=> (and $x3062 $x348) (and (= (time-to-state (+ time 1)) _151) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3062 (= ?x349 _150)))
 (let (($x3067 (and $x3062 $x365)))
 (=> $x3067 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3080 (= ?x349 _151)))
 (=> (and $x3080 $x348) (and (= (time-to-state (+ time 1)) _152) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3080 (= ?x349 _151)))
 (let (($x3085 (and $x3080 $x365)))
 (=> $x3085 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3098 (= ?x349 _152)))
 (=> (and $x3098 $x348) (and (= (time-to-state (+ time 1)) _153) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3098 (= ?x349 _152)))
 (let (($x3103 (and $x3098 $x365)))
 (=> $x3103 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3116 (= ?x349 _153)))
 (=> (and $x3116 $x348) (and (= (time-to-state (+ time 1)) _154) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3116 (= ?x349 _153)))
 (let (($x3121 (and $x3116 $x365)))
 (=> $x3121 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3134 (= ?x349 _154)))
 (=> (and $x3134 $x348) (and (= (time-to-state (+ time 1)) _155) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3134 (= ?x349 _154)))
 (let (($x3139 (and $x3134 $x365)))
 (=> $x3139 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3152 (= ?x349 _155)))
 (=> (and $x3152 $x348) (and (= (time-to-state (+ time 1)) _156) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3152 (= ?x349 _155)))
 (let (($x3157 (and $x3152 $x365)))
 (=> $x3157 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3170 (= ?x349 _156)))
 (=> (and $x3170 $x348) (and (= (time-to-state (+ time 1)) _157) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3170 (= ?x349 _156)))
 (let (($x3175 (and $x3170 $x365)))
 (=> $x3175 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3188 (= ?x349 _157)))
 (=> (and $x3188 $x348) (and (= (time-to-state (+ time 1)) _158) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3188 (= ?x349 _157)))
 (let (($x3193 (and $x3188 $x365)))
 (=> $x3193 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3206 (= ?x349 _158)))
 (=> (and $x3206 $x348) (and (= (time-to-state (+ time 1)) _159) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3206 (= ?x349 _158)))
 (let (($x3211 (and $x3206 $x365)))
 (=> $x3211 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3224 (= ?x349 _159)))
 (=> (and $x3224 $x348) (and (= (time-to-state (+ time 1)) _160) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3224 (= ?x349 _159)))
 (let (($x3229 (and $x3224 $x365)))
 (=> $x3229 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3242 (= ?x349 _160)))
 (=> (and $x3242 $x348) (and (= (time-to-state (+ time 1)) _161) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3242 (= ?x349 _160)))
 (let (($x3247 (and $x3242 $x365)))
 (=> $x3247 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3260 (= ?x349 _161)))
 (=> (and $x3260 $x348) (and (= (time-to-state (+ time 1)) _162) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3260 (= ?x349 _161)))
 (let (($x3265 (and $x3260 $x365)))
 (=> $x3265 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3278 (= ?x349 _162)))
 (=> (and $x3278 $x348) (and (= (time-to-state (+ time 1)) _163) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3278 (= ?x349 _162)))
 (let (($x3283 (and $x3278 $x365)))
 (=> $x3283 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3296 (= ?x349 _163)))
 (=> (and $x3296 $x348) (and (= (time-to-state (+ time 1)) _164) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3296 (= ?x349 _163)))
 (let (($x3301 (and $x3296 $x365)))
 (=> $x3301 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3314 (= ?x349 _164)))
 (=> (and $x3314 $x348) (and (= (time-to-state (+ time 1)) _165) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3314 (= ?x349 _164)))
 (let (($x3319 (and $x3314 $x365)))
 (=> $x3319 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3332 (= ?x349 _165)))
 (=> (and $x3332 $x348) (and (= (time-to-state (+ time 1)) _166) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3332 (= ?x349 _165)))
 (let (($x3337 (and $x3332 $x365)))
 (=> $x3337 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3350 (= ?x349 _166)))
 (=> (and $x3350 $x348) (and (= (time-to-state (+ time 1)) _167) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3350 (= ?x349 _166)))
 (let (($x3355 (and $x3350 $x365)))
 (=> $x3355 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3368 (= ?x349 _167)))
 (=> (and $x3368 $x348) (and (= (time-to-state (+ time 1)) _168) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3368 (= ?x349 _167)))
 (let (($x3373 (and $x3368 $x365)))
 (=> $x3373 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3386 (= ?x349 _168)))
 (=> (and $x3386 $x348) (and (= (time-to-state (+ time 1)) _169) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3386 (= ?x349 _168)))
 (let (($x3391 (and $x3386 $x365)))
 (=> $x3391 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3404 (= ?x349 _169)))
 (=> (and $x3404 $x348) (and (= (time-to-state (+ time 1)) _170) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3404 (= ?x349 _169)))
 (let (($x3409 (and $x3404 $x365)))
 (=> $x3409 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3422 (= ?x349 _170)))
 (=> (and $x3422 $x348) (and (= (time-to-state (+ time 1)) _171) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3422 (= ?x349 _170)))
 (let (($x3427 (and $x3422 $x365)))
 (=> $x3427 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3440 (= ?x349 _171)))
 (=> (and $x3440 $x348) (and (= (time-to-state (+ time 1)) _172) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3440 (= ?x349 _171)))
 (let (($x3445 (and $x3440 $x365)))
 (=> $x3445 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3458 (= ?x349 _172)))
 (=> (and $x3458 $x348) (and (= (time-to-state (+ time 1)) _173) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3458 (= ?x349 _172)))
 (let (($x3463 (and $x3458 $x365)))
 (=> $x3463 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3476 (= ?x349 _173)))
 (=> (and $x3476 $x348) (and (= (time-to-state (+ time 1)) _174) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3476 (= ?x349 _173)))
 (let (($x3481 (and $x3476 $x365)))
 (=> $x3481 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3494 (= ?x349 _174)))
 (=> (and $x3494 $x348) (and (= (time-to-state (+ time 1)) _175) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3494 (= ?x349 _174)))
 (let (($x3499 (and $x3494 $x365)))
 (=> $x3499 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3512 (= ?x349 _175)))
 (=> (and $x3512 $x348) (and (= (time-to-state (+ time 1)) _176) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3512 (= ?x349 _175)))
 (let (($x3517 (and $x3512 $x365)))
 (=> $x3517 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3530 (= ?x349 _176)))
 (=> (and $x3530 $x348) (and (= (time-to-state (+ time 1)) _177) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3530 (= ?x349 _176)))
 (let (($x3535 (and $x3530 $x365)))
 (=> $x3535 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3548 (= ?x349 _177)))
 (=> (and $x3548 $x348) (and (= (time-to-state (+ time 1)) _178) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3548 (= ?x349 _177)))
 (let (($x3553 (and $x3548 $x365)))
 (=> $x3553 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3566 (= ?x349 _178)))
 (=> (and $x3566 $x348) (and (= (time-to-state (+ time 1)) _179) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3566 (= ?x349 _178)))
 (let (($x3571 (and $x3566 $x365)))
 (=> $x3571 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3584 (= ?x349 _179)))
 (=> (and $x3584 $x348) (and (= (time-to-state (+ time 1)) _180) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3584 (= ?x349 _179)))
 (let (($x3589 (and $x3584 $x365)))
 (=> $x3589 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3602 (= ?x349 _180)))
 (=> (and $x3602 $x348) (and (= (time-to-state (+ time 1)) _181) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3602 (= ?x349 _180)))
 (let (($x3607 (and $x3602 $x365)))
 (=> $x3607 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3620 (= ?x349 _181)))
 (=> (and $x3620 $x348) (and (= (time-to-state (+ time 1)) _182) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3620 (= ?x349 _181)))
 (let (($x3625 (and $x3620 $x365)))
 (=> $x3625 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3638 (= ?x349 _182)))
 (=> (and $x3638 $x348) (and (= (time-to-state (+ time 1)) _183) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3638 (= ?x349 _182)))
 (let (($x3643 (and $x3638 $x365)))
 (=> $x3643 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3656 (= ?x349 _183)))
 (=> (and $x3656 $x348) (and (= (time-to-state (+ time 1)) _184) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3656 (= ?x349 _183)))
 (let (($x3661 (and $x3656 $x365)))
 (=> $x3661 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3674 (= ?x349 _184)))
 (=> (and $x3674 $x348) (and (= (time-to-state (+ time 1)) _185) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3674 (= ?x349 _184)))
 (let (($x3679 (and $x3674 $x365)))
 (=> $x3679 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3692 (= ?x349 _185)))
 (=> (and $x3692 $x348) (and (= (time-to-state (+ time 1)) _186) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3692 (= ?x349 _185)))
 (let (($x3697 (and $x3692 $x365)))
 (=> $x3697 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3710 (= ?x349 _186)))
 (=> (and $x3710 $x348) (and (= (time-to-state (+ time 1)) _187) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3710 (= ?x349 _186)))
 (let (($x3715 (and $x3710 $x365)))
 (=> $x3715 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3728 (= ?x349 _187)))
 (=> (and $x3728 $x348) (and (= (time-to-state (+ time 1)) _188) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3728 (= ?x349 _187)))
 (let (($x3733 (and $x3728 $x365)))
 (=> $x3733 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3746 (= ?x349 _188)))
 (=> (and $x3746 $x348) (and (= (time-to-state (+ time 1)) _189) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3746 (= ?x349 _188)))
 (let (($x3751 (and $x3746 $x365)))
 (=> $x3751 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3764 (= ?x349 _189)))
 (=> (and $x3764 $x348) (and (= (time-to-state (+ time 1)) _190) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3764 (= ?x349 _189)))
 (let (($x3769 (and $x3764 $x365)))
 (=> $x3769 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3782 (= ?x349 _190)))
 (=> (and $x3782 $x348) (and (= (time-to-state (+ time 1)) _191) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3782 (= ?x349 _190)))
 (let (($x3787 (and $x3782 $x365)))
 (=> $x3787 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3800 (= ?x349 _191)))
 (=> (and $x3800 $x348) (and (= (time-to-state (+ time 1)) _192) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3800 (= ?x349 _191)))
 (let (($x3805 (and $x3800 $x365)))
 (=> $x3805 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3818 (= ?x349 _192)))
 (=> (and $x3818 $x348) (and (= (time-to-state (+ time 1)) _193) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3818 (= ?x349 _192)))
 (let (($x3823 (and $x3818 $x365)))
 (=> $x3823 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3836 (= ?x349 _193)))
 (=> (and $x3836 $x348) (and (= (time-to-state (+ time 1)) _194) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3836 (= ?x349 _193)))
 (let (($x3841 (and $x3836 $x365)))
 (=> $x3841 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3854 (= ?x349 _194)))
 (=> (and $x3854 $x348) (and (= (time-to-state (+ time 1)) _195) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3854 (= ?x349 _194)))
 (let (($x3859 (and $x3854 $x365)))
 (=> $x3859 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3872 (= ?x349 _195)))
 (=> (and $x3872 $x348) (and (= (time-to-state (+ time 1)) _196) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3872 (= ?x349 _195)))
 (let (($x3877 (and $x3872 $x365)))
 (=> $x3877 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3890 (= ?x349 _196)))
 (=> (and $x3890 $x348) (and (= (time-to-state (+ time 1)) _197) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3890 (= ?x349 _196)))
 (let (($x3895 (and $x3890 $x365)))
 (=> $x3895 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3908 (= ?x349 _197)))
 (=> (and $x3908 $x348) (and (= (time-to-state (+ time 1)) _198) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3908 (= ?x349 _197)))
 (let (($x3913 (and $x3908 $x365)))
 (=> $x3913 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3926 (= ?x349 _198)))
 (=> (and $x3926 $x348) (and (= (time-to-state (+ time 1)) _199) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3926 (= ?x349 _198)))
 (let (($x3931 (and $x3926 $x365)))
 (=> $x3931 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3944 (= ?x349 _199)))
 (=> (and $x3944 $x348) (and (= (time-to-state (+ time 1)) _200) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3944 (= ?x349 _199)))
 (let (($x3949 (and $x3944 $x365)))
 (=> $x3949 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3962 (= ?x349 _200)))
 (=> (and $x3962 $x348) (and (= (time-to-state (+ time 1)) _201) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3962 (= ?x349 _200)))
 (let (($x3967 (and $x3962 $x365)))
 (=> $x3967 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3980 (= ?x349 _201)))
 (=> (and $x3980 $x348) (and (= (time-to-state (+ time 1)) _202) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3980 (= ?x349 _201)))
 (let (($x3985 (and $x3980 $x365)))
 (=> $x3985 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x3998 (= ?x349 _202)))
 (=> (and $x3998 $x348) (and (= (time-to-state (+ time 1)) _203) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x3998 (= ?x349 _202)))
 (let (($x4003 (and $x3998 $x365)))
 (=> $x4003 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4016 (= ?x349 _203)))
 (=> (and $x4016 $x348) (and (= (time-to-state (+ time 1)) _204) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4016 (= ?x349 _203)))
 (let (($x4021 (and $x4016 $x365)))
 (=> $x4021 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4034 (= ?x349 _204)))
 (=> (and $x4034 $x348) (and (= (time-to-state (+ time 1)) _205) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4034 (= ?x349 _204)))
 (let (($x4039 (and $x4034 $x365)))
 (=> $x4039 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4052 (= ?x349 _205)))
 (=> (and $x4052 $x348) (and (= (time-to-state (+ time 1)) _206) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4052 (= ?x349 _205)))
 (let (($x4057 (and $x4052 $x365)))
 (=> $x4057 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4070 (= ?x349 _206)))
 (=> (and $x4070 $x348) (and (= (time-to-state (+ time 1)) _207) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4070 (= ?x349 _206)))
 (let (($x4075 (and $x4070 $x365)))
 (=> $x4075 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4088 (= ?x349 _207)))
 (=> (and $x4088 $x348) (and (= (time-to-state (+ time 1)) _208) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4088 (= ?x349 _207)))
 (let (($x4093 (and $x4088 $x365)))
 (=> $x4093 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4106 (= ?x349 _208)))
 (=> (and $x4106 $x348) (and (= (time-to-state (+ time 1)) _209) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4106 (= ?x349 _208)))
 (let (($x4111 (and $x4106 $x365)))
 (=> $x4111 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4124 (= ?x349 _209)))
 (=> (and $x4124 $x348) (and (= (time-to-state (+ time 1)) _210) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4124 (= ?x349 _209)))
 (let (($x4129 (and $x4124 $x365)))
 (=> $x4129 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4142 (= ?x349 _210)))
 (=> (and $x4142 $x348) (and (= (time-to-state (+ time 1)) _211) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4142 (= ?x349 _210)))
 (let (($x4147 (and $x4142 $x365)))
 (=> $x4147 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4160 (= ?x349 _211)))
 (=> (and $x4160 $x348) (and (= (time-to-state (+ time 1)) _212) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4160 (= ?x349 _211)))
 (let (($x4165 (and $x4160 $x365)))
 (=> $x4165 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4178 (= ?x349 _212)))
 (=> (and $x4178 $x348) (and (= (time-to-state (+ time 1)) _213) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4178 (= ?x349 _212)))
 (let (($x4183 (and $x4178 $x365)))
 (=> $x4183 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4196 (= ?x349 _213)))
 (=> (and $x4196 $x348) (and (= (time-to-state (+ time 1)) _214) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4196 (= ?x349 _213)))
 (let (($x4201 (and $x4196 $x365)))
 (=> $x4201 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4214 (= ?x349 _214)))
 (=> (and $x4214 $x348) (and (= (time-to-state (+ time 1)) _215) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4214 (= ?x349 _214)))
 (let (($x4219 (and $x4214 $x365)))
 (=> $x4219 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4232 (= ?x349 _215)))
 (=> (and $x4232 $x348) (and (= (time-to-state (+ time 1)) _216) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4232 (= ?x349 _215)))
 (let (($x4237 (and $x4232 $x365)))
 (=> $x4237 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4250 (= ?x349 _216)))
 (=> (and $x4250 $x348) (and (= (time-to-state (+ time 1)) _217) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4250 (= ?x349 _216)))
 (let (($x4255 (and $x4250 $x365)))
 (=> $x4255 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4268 (= ?x349 _217)))
 (=> (and $x4268 $x348) (and (= (time-to-state (+ time 1)) _218) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4268 (= ?x349 _217)))
 (let (($x4273 (and $x4268 $x365)))
 (=> $x4273 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4286 (= ?x349 _218)))
 (=> (and $x4286 $x348) (and (= (time-to-state (+ time 1)) _219) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4286 (= ?x349 _218)))
 (let (($x4291 (and $x4286 $x365)))
 (=> $x4291 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4304 (= ?x349 _219)))
 (=> (and $x4304 $x348) (and (= (time-to-state (+ time 1)) _220) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4304 (= ?x349 _219)))
 (let (($x4309 (and $x4304 $x365)))
 (=> $x4309 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4322 (= ?x349 _220)))
 (=> (and $x4322 $x348) (and (= (time-to-state (+ time 1)) _221) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4322 (= ?x349 _220)))
 (let (($x4327 (and $x4322 $x365)))
 (=> $x4327 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4340 (= ?x349 _221)))
 (=> (and $x4340 $x348) (and (= (time-to-state (+ time 1)) _222) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4340 (= ?x349 _221)))
 (let (($x4345 (and $x4340 $x365)))
 (=> $x4345 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4358 (= ?x349 _222)))
 (=> (and $x4358 $x348) (and (= (time-to-state (+ time 1)) _223) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4358 (= ?x349 _222)))
 (let (($x4363 (and $x4358 $x365)))
 (=> $x4363 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4376 (= ?x349 _223)))
 (=> (and $x4376 $x348) (and (= (time-to-state (+ time 1)) _224) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4376 (= ?x349 _223)))
 (let (($x4381 (and $x4376 $x365)))
 (=> $x4381 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4394 (= ?x349 _224)))
 (=> (and $x4394 $x348) (and (= (time-to-state (+ time 1)) _225) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4394 (= ?x349 _224)))
 (let (($x4399 (and $x4394 $x365)))
 (=> $x4399 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4412 (= ?x349 _225)))
 (=> (and $x4412 $x348) (and (= (time-to-state (+ time 1)) _226) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4412 (= ?x349 _225)))
 (let (($x4417 (and $x4412 $x365)))
 (=> $x4417 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4430 (= ?x349 _226)))
 (=> (and $x4430 $x348) (and (= (time-to-state (+ time 1)) _227) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4430 (= ?x349 _226)))
 (let (($x4435 (and $x4430 $x365)))
 (=> $x4435 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4448 (= ?x349 _227)))
 (=> (and $x4448 $x348) (and (= (time-to-state (+ time 1)) _228) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4448 (= ?x349 _227)))
 (let (($x4453 (and $x4448 $x365)))
 (=> $x4453 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4466 (= ?x349 _228)))
 (=> (and $x4466 $x348) (and (= (time-to-state (+ time 1)) _229) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4466 (= ?x349 _228)))
 (let (($x4471 (and $x4466 $x365)))
 (=> $x4471 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4484 (= ?x349 _229)))
 (=> (and $x4484 $x348) (and (= (time-to-state (+ time 1)) _230) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4484 (= ?x349 _229)))
 (let (($x4489 (and $x4484 $x365)))
 (=> $x4489 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4502 (= ?x349 _230)))
 (=> (and $x4502 $x348) (and (= (time-to-state (+ time 1)) _231) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4502 (= ?x349 _230)))
 (let (($x4507 (and $x4502 $x365)))
 (=> $x4507 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4520 (= ?x349 _231)))
 (=> (and $x4520 $x348) (and (= (time-to-state (+ time 1)) _232) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4520 (= ?x349 _231)))
 (let (($x4525 (and $x4520 $x365)))
 (=> $x4525 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4538 (= ?x349 _232)))
 (=> (and $x4538 $x348) (and (= (time-to-state (+ time 1)) _233) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4538 (= ?x349 _232)))
 (let (($x4543 (and $x4538 $x365)))
 (=> $x4543 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4556 (= ?x349 _233)))
 (=> (and $x4556 $x348) (and (= (time-to-state (+ time 1)) _234) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4556 (= ?x349 _233)))
 (let (($x4561 (and $x4556 $x365)))
 (=> $x4561 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4574 (= ?x349 _234)))
 (=> (and $x4574 $x348) (and (= (time-to-state (+ time 1)) _235) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4574 (= ?x349 _234)))
 (let (($x4579 (and $x4574 $x365)))
 (=> $x4579 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4592 (= ?x349 _235)))
 (=> (and $x4592 $x348) (and (= (time-to-state (+ time 1)) _236) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4592 (= ?x349 _235)))
 (let (($x4597 (and $x4592 $x365)))
 (=> $x4597 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4610 (= ?x349 _236)))
 (=> (and $x4610 $x348) (and (= (time-to-state (+ time 1)) _237) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4610 (= ?x349 _236)))
 (let (($x4615 (and $x4610 $x365)))
 (=> $x4615 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4628 (= ?x349 _237)))
 (=> (and $x4628 $x348) (and (= (time-to-state (+ time 1)) _238) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4628 (= ?x349 _237)))
 (let (($x4633 (and $x4628 $x365)))
 (=> $x4633 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4646 (= ?x349 _238)))
 (=> (and $x4646 $x348) (and (= (time-to-state (+ time 1)) _239) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4646 (= ?x349 _238)))
 (let (($x4651 (and $x4646 $x365)))
 (=> $x4651 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4664 (= ?x349 _239)))
 (=> (and $x4664 $x348) (and (= (time-to-state (+ time 1)) _240) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4664 (= ?x349 _239)))
 (let (($x4669 (and $x4664 $x365)))
 (=> $x4669 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4682 (= ?x349 _240)))
 (=> (and $x4682 $x348) (and (= (time-to-state (+ time 1)) _241) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4682 (= ?x349 _240)))
 (let (($x4687 (and $x4682 $x365)))
 (=> $x4687 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4700 (= ?x349 _241)))
 (=> (and $x4700 $x348) (and (= (time-to-state (+ time 1)) _242) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4700 (= ?x349 _241)))
 (let (($x4705 (and $x4700 $x365)))
 (=> $x4705 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4718 (= ?x349 _242)))
 (=> (and $x4718 $x348) (and (= (time-to-state (+ time 1)) _243) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4718 (= ?x349 _242)))
 (let (($x4723 (and $x4718 $x365)))
 (=> $x4723 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4736 (= ?x349 _243)))
 (=> (and $x4736 $x348) (and (= (time-to-state (+ time 1)) _244) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4736 (= ?x349 _243)))
 (let (($x4741 (and $x4736 $x365)))
 (=> $x4741 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4754 (= ?x349 _244)))
 (=> (and $x4754 $x348) (and (= (time-to-state (+ time 1)) _245) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4754 (= ?x349 _244)))
 (let (($x4759 (and $x4754 $x365)))
 (=> $x4759 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4772 (= ?x349 _245)))
 (=> (and $x4772 $x348) (and (= (time-to-state (+ time 1)) _246) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4772 (= ?x349 _245)))
 (let (($x4777 (and $x4772 $x365)))
 (=> $x4777 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4790 (= ?x349 _246)))
 (=> (and $x4790 $x348) (and (= (time-to-state (+ time 1)) _247) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4790 (= ?x349 _246)))
 (let (($x4795 (and $x4790 $x365)))
 (=> $x4795 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4808 (= ?x349 _247)))
 (=> (and $x4808 $x348) (and (= (time-to-state (+ time 1)) _248) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4808 (= ?x349 _247)))
 (let (($x4813 (and $x4808 $x365)))
 (=> $x4813 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4826 (= ?x349 _248)))
 (=> (and $x4826 $x348) (and (= (time-to-state (+ time 1)) _249) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4826 (= ?x349 _248)))
 (let (($x4831 (and $x4826 $x365)))
 (=> $x4831 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4844 (= ?x349 _249)))
 (=> (and $x4844 $x348) (and (= (time-to-state (+ time 1)) _250) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4844 (= ?x349 _249)))
 (let (($x4849 (and $x4844 $x365)))
 (=> $x4849 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4862 (= ?x349 _250)))
 (=> (and $x4862 $x348) (and (= (time-to-state (+ time 1)) _251) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4862 (= ?x349 _250)))
 (let (($x4867 (and $x4862 $x365)))
 (=> $x4867 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4880 (= ?x349 _251)))
 (=> (and $x4880 $x348) (and (= (time-to-state (+ time 1)) _252) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4880 (= ?x349 _251)))
 (let (($x4885 (and $x4880 $x365)))
 (=> $x4885 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4898 (= ?x349 _252)))
 (=> (and $x4898 $x348) (and (= (time-to-state (+ time 1)) _253) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4898 (= ?x349 _252)))
 (let (($x4903 (and $x4898 $x365)))
 (=> $x4903 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4916 (= ?x349 _253)))
 (=> (and $x4916 $x348) (and (= (time-to-state (+ time 1)) _254) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4916 (= ?x349 _253)))
 (let (($x4921 (and $x4916 $x365)))
 (=> $x4921 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4934 (= ?x349 _254)))
 (=> (and $x4934 $x348) (and (= (time-to-state (+ time 1)) _255) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4934 (= ?x349 _254)))
 (let (($x4939 (and $x4934 $x365)))
 (=> $x4939 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4952 (= ?x349 _255)))
 (=> (and $x4952 $x348) (and (= (time-to-state (+ time 1)) _256) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4952 (= ?x349 _255)))
 (let (($x4957 (and $x4952 $x365)))
 (=> $x4957 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4970 (= ?x349 _256)))
 (=> (and $x4970 $x348) (and (= (time-to-state (+ time 1)) _257) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4970 (= ?x349 _256)))
 (let (($x4975 (and $x4970 $x365)))
 (=> $x4975 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x4988 (= ?x349 _257)))
 (=> (and $x4988 $x348) (and (= (time-to-state (+ time 1)) _258) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x4988 (= ?x349 _257)))
 (let (($x4993 (and $x4988 $x365)))
 (=> $x4993 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5006 (= ?x349 _258)))
 (=> (and $x5006 $x348) (and (= (time-to-state (+ time 1)) _259) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5006 (= ?x349 _258)))
 (let (($x5011 (and $x5006 $x365)))
 (=> $x5011 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5024 (= ?x349 _259)))
 (=> (and $x5024 $x348) (and (= (time-to-state (+ time 1)) _260) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5024 (= ?x349 _259)))
 (let (($x5029 (and $x5024 $x365)))
 (=> $x5029 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5042 (= ?x349 _260)))
 (=> (and $x5042 $x348) (and (= (time-to-state (+ time 1)) _261) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5042 (= ?x349 _260)))
 (let (($x5047 (and $x5042 $x365)))
 (=> $x5047 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5060 (= ?x349 _261)))
 (=> (and $x5060 $x348) (and (= (time-to-state (+ time 1)) _262) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5060 (= ?x349 _261)))
 (let (($x5065 (and $x5060 $x365)))
 (=> $x5065 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5078 (= ?x349 _262)))
 (=> (and $x5078 $x348) (and (= (time-to-state (+ time 1)) _263) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5078 (= ?x349 _262)))
 (let (($x5083 (and $x5078 $x365)))
 (=> $x5083 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5096 (= ?x349 _263)))
 (=> (and $x5096 $x348) (and (= (time-to-state (+ time 1)) _264) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5096 (= ?x349 _263)))
 (let (($x5101 (and $x5096 $x365)))
 (=> $x5101 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5114 (= ?x349 _264)))
 (=> (and $x5114 $x348) (and (= (time-to-state (+ time 1)) _265) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5114 (= ?x349 _264)))
 (let (($x5119 (and $x5114 $x365)))
 (=> $x5119 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5132 (= ?x349 _265)))
 (=> (and $x5132 $x348) (and (= (time-to-state (+ time 1)) _266) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5132 (= ?x349 _265)))
 (let (($x5137 (and $x5132 $x365)))
 (=> $x5137 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5150 (= ?x349 _266)))
 (=> (and $x5150 $x348) (and (= (time-to-state (+ time 1)) _267) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5150 (= ?x349 _266)))
 (let (($x5155 (and $x5150 $x365)))
 (=> $x5155 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5168 (= ?x349 _267)))
 (=> (and $x5168 $x348) (and (= (time-to-state (+ time 1)) _268) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5168 (= ?x349 _267)))
 (let (($x5173 (and $x5168 $x365)))
 (=> $x5173 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5186 (= ?x349 _268)))
 (=> (and $x5186 $x348) (and (= (time-to-state (+ time 1)) _269) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5186 (= ?x349 _268)))
 (let (($x5191 (and $x5186 $x365)))
 (=> $x5191 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5204 (= ?x349 _269)))
 (=> (and $x5204 $x348) (and (= (time-to-state (+ time 1)) _270) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5204 (= ?x349 _269)))
 (let (($x5209 (and $x5204 $x365)))
 (=> $x5209 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5222 (= ?x349 _270)))
 (=> (and $x5222 $x348) (and (= (time-to-state (+ time 1)) _271) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5222 (= ?x349 _270)))
 (let (($x5227 (and $x5222 $x365)))
 (=> $x5227 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5240 (= ?x349 _271)))
 (=> (and $x5240 $x348) (and (= (time-to-state (+ time 1)) _272) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5240 (= ?x349 _271)))
 (let (($x5245 (and $x5240 $x365)))
 (=> $x5245 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5258 (= ?x349 _272)))
 (=> (and $x5258 $x348) (and (= (time-to-state (+ time 1)) _273) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5258 (= ?x349 _272)))
 (let (($x5263 (and $x5258 $x365)))
 (=> $x5263 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5276 (= ?x349 _273)))
 (=> (and $x5276 $x348) (and (= (time-to-state (+ time 1)) _274) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5276 (= ?x349 _273)))
 (let (($x5281 (and $x5276 $x365)))
 (=> $x5281 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5294 (= ?x349 _274)))
 (=> (and $x5294 $x348) (and (= (time-to-state (+ time 1)) _275) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5294 (= ?x349 _274)))
 (let (($x5299 (and $x5294 $x365)))
 (=> $x5299 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5312 (= ?x349 _275)))
 (=> (and $x5312 $x348) (and (= (time-to-state (+ time 1)) _276) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5312 (= ?x349 _275)))
 (let (($x5317 (and $x5312 $x365)))
 (=> $x5317 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5330 (= ?x349 _276)))
 (=> (and $x5330 $x348) (and (= (time-to-state (+ time 1)) _277) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5330 (= ?x349 _276)))
 (let (($x5335 (and $x5330 $x365)))
 (=> $x5335 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5348 (= ?x349 _277)))
 (=> (and $x5348 $x348) (and (= (time-to-state (+ time 1)) _278) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5348 (= ?x349 _277)))
 (let (($x5353 (and $x5348 $x365)))
 (=> $x5353 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5366 (= ?x349 _278)))
 (=> (and $x5366 $x348) (and (= (time-to-state (+ time 1)) _279) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5366 (= ?x349 _278)))
 (let (($x5371 (and $x5366 $x365)))
 (=> $x5371 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5384 (= ?x349 _279)))
 (=> (and $x5384 $x348) (and (= (time-to-state (+ time 1)) _280) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5384 (= ?x349 _279)))
 (let (($x5389 (and $x5384 $x365)))
 (=> $x5389 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5402 (= ?x349 _280)))
 (=> (and $x5402 $x348) (and (= (time-to-state (+ time 1)) _281) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5402 (= ?x349 _280)))
 (let (($x5407 (and $x5402 $x365)))
 (=> $x5407 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5420 (= ?x349 _281)))
 (=> (and $x5420 $x348) (and (= (time-to-state (+ time 1)) _282) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5420 (= ?x349 _281)))
 (let (($x5425 (and $x5420 $x365)))
 (=> $x5425 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5438 (= ?x349 _282)))
 (=> (and $x5438 $x348) (and (= (time-to-state (+ time 1)) _283) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5438 (= ?x349 _282)))
 (let (($x5443 (and $x5438 $x365)))
 (=> $x5443 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5456 (= ?x349 _283)))
 (=> (and $x5456 $x348) (and (= (time-to-state (+ time 1)) _284) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5456 (= ?x349 _283)))
 (let (($x5461 (and $x5456 $x365)))
 (=> $x5461 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5474 (= ?x349 _284)))
 (=> (and $x5474 $x348) (and (= (time-to-state (+ time 1)) _285) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5474 (= ?x349 _284)))
 (let (($x5479 (and $x5474 $x365)))
 (=> $x5479 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5492 (= ?x349 _285)))
 (=> (and $x5492 $x348) (and (= (time-to-state (+ time 1)) _286) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5492 (= ?x349 _285)))
 (let (($x5497 (and $x5492 $x365)))
 (=> $x5497 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5510 (= ?x349 _286)))
 (=> (and $x5510 $x348) (and (= (time-to-state (+ time 1)) _287) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5510 (= ?x349 _286)))
 (let (($x5515 (and $x5510 $x365)))
 (=> $x5515 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5528 (= ?x349 _287)))
 (=> (and $x5528 $x348) (and (= (time-to-state (+ time 1)) _288) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5528 (= ?x349 _287)))
 (let (($x5533 (and $x5528 $x365)))
 (=> $x5533 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5546 (= ?x349 _288)))
 (=> (and $x5546 $x348) (and (= (time-to-state (+ time 1)) _289) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5546 (= ?x349 _288)))
 (let (($x5551 (and $x5546 $x365)))
 (=> $x5551 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let (($x343 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x347 (input-arg0 time)))
 (let (($x348 (and (distinct ?x347 0) true)))
 (let ((?x349 (time-to-state time)))
 (let (($x5564 (= ?x349 _289)))
 (=> (and $x5564 $x348) (and (= (time-to-state (+ time 1)) _290) $x343))))))))
 )
(assert
 (forall ((time Int) )(let ((?x341 (+ time 1)))
 (let ((?x344 (time-to-state ?x341)))
 (let (($x364 (= ?x344 ERR)))
 (let ((?x347 (input-arg0 time)))
 (let (($x365 (= ?x347 1)))
 (let ((?x349 (time-to-state time)))
 (let (($x5564 (= ?x349 _289)))
 (let (($x5569 (and $x5564 $x365)))
 (=> $x5569 $x364))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x349 (time-to-state time)))
 (let (($x5572 (= ?x349 ERR)))
 (and $x5572 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290) true))
(check-sat)
