; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(declare-fun _371 () STATE)
(declare-fun _372 () STATE)
(declare-fun _373 () STATE)
(declare-fun _374 () STATE)
(declare-fun _375 () STATE)
(declare-fun _376 () STATE)
(declare-fun _377 () STATE)
(declare-fun _378 () STATE)
(declare-fun _379 () STATE)
(declare-fun _380 () STATE)
(declare-fun _381 () STATE)
(declare-fun _382 () STATE)
(declare-fun _383 () STATE)
(declare-fun _384 () STATE)
(declare-fun _385 () STATE)
(declare-fun _386 () STATE)
(declare-fun _387 () STATE)
(declare-fun _388 () STATE)
(declare-fun _389 () STATE)
(declare-fun _390 () STATE)
(declare-fun _391 () STATE)
(declare-fun _392 () STATE)
(declare-fun _393 () STATE)
(declare-fun _394 () STATE)
(declare-fun _395 () STATE)
(declare-fun _396 () STATE)
(declare-fun _397 () STATE)
(declare-fun _398 () STATE)
(declare-fun _399 () STATE)
(declare-fun _400 () STATE)
(declare-fun _401 () STATE)
(declare-fun _402 () STATE)
(declare-fun _403 () STATE)
(declare-fun _404 () STATE)
(declare-fun _405 () STATE)
(declare-fun _406 () STATE)
(declare-fun _407 () STATE)
(declare-fun _408 () STATE)
(declare-fun _409 () STATE)
(declare-fun _410 () STATE)
(declare-fun _411 () STATE)
(declare-fun _412 () STATE)
(declare-fun _413 () STATE)
(declare-fun _414 () STATE)
(declare-fun _415 () STATE)
(declare-fun _416 () STATE)
(declare-fun _417 () STATE)
(declare-fun _418 () STATE)
(declare-fun _419 () STATE)
(declare-fun _420 () STATE)
(assert
 (let ((?x429 (time-to-state 0)))
 (= ?x429 _0)))
(assert
 (let ((?x449 (input-arg0 0)))
 (= ?x449 0)))
(assert
 (let ((?x451 (var1_0 0)))
 (= ?x451 0)))
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x480 (= ?x479 _0)))
 (let (($x496 (and $x480 $x495)))
 (=> $x496 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x510 (= ?x479 _1)))
 (let (($x515 (and $x510 $x495)))
 (=> $x515 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x528 (= ?x479 _2)))
 (let (($x533 (and $x528 $x495)))
 (=> $x533 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x546 (= ?x479 _3)))
 (let (($x551 (and $x546 $x495)))
 (=> $x551 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x564 (= ?x479 _4)))
 (let (($x569 (and $x564 $x495)))
 (=> $x569 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x582 (= ?x479 _5)))
 (let (($x587 (and $x582 $x495)))
 (=> $x587 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x600 (= ?x479 _6)))
 (let (($x605 (and $x600 $x495)))
 (=> $x605 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x618 (= ?x479 _7)))
 (let (($x623 (and $x618 $x495)))
 (=> $x623 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x636 (= ?x479 _8)))
 (let (($x641 (and $x636 $x495)))
 (=> $x641 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x654 (= ?x479 _9)))
 (let (($x659 (and $x654 $x495)))
 (=> $x659 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x672 (= ?x479 _10)))
 (let (($x677 (and $x672 $x495)))
 (=> $x677 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x690 (= ?x479 _11)))
 (let (($x695 (and $x690 $x495)))
 (=> $x695 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x708 (= ?x479 _12)))
 (let (($x713 (and $x708 $x495)))
 (=> $x713 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x726 (= ?x479 _13)))
 (let (($x731 (and $x726 $x495)))
 (=> $x731 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x744 (= ?x479 _14)))
 (let (($x749 (and $x744 $x495)))
 (=> $x749 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x762 (= ?x479 _15)))
 (let (($x767 (and $x762 $x495)))
 (=> $x767 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x780 (= ?x479 _16)))
 (let (($x785 (and $x780 $x495)))
 (=> $x785 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x798 (= ?x479 _17)))
 (let (($x803 (and $x798 $x495)))
 (=> $x803 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x816 (= ?x479 _18)))
 (let (($x821 (and $x816 $x495)))
 (=> $x821 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x834 (= ?x479 _19)))
 (let (($x839 (and $x834 $x495)))
 (=> $x839 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x852 (= ?x479 _20)))
 (let (($x857 (and $x852 $x495)))
 (=> $x857 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x870 (= ?x479 _21)))
 (let (($x875 (and $x870 $x495)))
 (=> $x875 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x888 (= ?x479 _22)))
 (let (($x893 (and $x888 $x495)))
 (=> $x893 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x906 (= ?x479 _23)))
 (let (($x911 (and $x906 $x495)))
 (=> $x911 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x924 (= ?x479 _24)))
 (let (($x929 (and $x924 $x495)))
 (=> $x929 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x942 (= ?x479 _25)))
 (let (($x947 (and $x942 $x495)))
 (=> $x947 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x960 (= ?x479 _26)))
 (let (($x965 (and $x960 $x495)))
 (=> $x965 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x978 (= ?x479 _27)))
 (let (($x983 (and $x978 $x495)))
 (=> $x983 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x996 (= ?x479 _28)))
 (let (($x1001 (and $x996 $x495)))
 (=> $x1001 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1014 (= ?x479 _29)))
 (let (($x1019 (and $x1014 $x495)))
 (=> $x1019 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1032 (= ?x479 _30)))
 (let (($x1037 (and $x1032 $x495)))
 (=> $x1037 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1050 (= ?x479 _31)))
 (let (($x1055 (and $x1050 $x495)))
 (=> $x1055 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1068 (= ?x479 _32)))
 (let (($x1073 (and $x1068 $x495)))
 (=> $x1073 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1086 (= ?x479 _33)))
 (let (($x1091 (and $x1086 $x495)))
 (=> $x1091 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1104 (= ?x479 _34)))
 (let (($x1109 (and $x1104 $x495)))
 (=> $x1109 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1122 (= ?x479 _35)))
 (let (($x1127 (and $x1122 $x495)))
 (=> $x1127 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1140 (= ?x479 _36)))
 (let (($x1145 (and $x1140 $x495)))
 (=> $x1145 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1158 (= ?x479 _37)))
 (let (($x1163 (and $x1158 $x495)))
 (=> $x1163 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1176 (= ?x479 _38)))
 (let (($x1181 (and $x1176 $x495)))
 (=> $x1181 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1194 (= ?x479 _39)))
 (let (($x1199 (and $x1194 $x495)))
 (=> $x1199 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1212 (= ?x479 _40)))
 (let (($x1217 (and $x1212 $x495)))
 (=> $x1217 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1230 (= ?x479 _41)))
 (let (($x1235 (and $x1230 $x495)))
 (=> $x1235 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1248 (= ?x479 _42)))
 (let (($x1253 (and $x1248 $x495)))
 (=> $x1253 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1266 (= ?x479 _43)))
 (let (($x1271 (and $x1266 $x495)))
 (=> $x1271 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1284 (= ?x479 _44)))
 (let (($x1289 (and $x1284 $x495)))
 (=> $x1289 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1302 (= ?x479 _45)))
 (let (($x1307 (and $x1302 $x495)))
 (=> $x1307 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1320 (= ?x479 _46)))
 (let (($x1325 (and $x1320 $x495)))
 (=> $x1325 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1338 (= ?x479 _47)))
 (let (($x1343 (and $x1338 $x495)))
 (=> $x1343 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1356 (= ?x479 _48)))
 (let (($x1361 (and $x1356 $x495)))
 (=> $x1361 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1374 (= ?x479 _49)))
 (let (($x1379 (and $x1374 $x495)))
 (=> $x1379 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1392 (= ?x479 _50)))
 (let (($x1397 (and $x1392 $x495)))
 (=> $x1397 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1410 (= ?x479 _51)))
 (let (($x1415 (and $x1410 $x495)))
 (=> $x1415 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1428 (= ?x479 _52)))
 (let (($x1433 (and $x1428 $x495)))
 (=> $x1433 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1446 (= ?x479 _53)))
 (let (($x1451 (and $x1446 $x495)))
 (=> $x1451 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1464 (= ?x479 _54)))
 (let (($x1469 (and $x1464 $x495)))
 (=> $x1469 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1482 (= ?x479 _55)))
 (let (($x1487 (and $x1482 $x495)))
 (=> $x1487 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1500 (= ?x479 _56)))
 (let (($x1505 (and $x1500 $x495)))
 (=> $x1505 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1518 (= ?x479 _57)))
 (let (($x1523 (and $x1518 $x495)))
 (=> $x1523 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1536 (= ?x479 _58)))
 (let (($x1541 (and $x1536 $x495)))
 (=> $x1541 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1554 (= ?x479 _59)))
 (let (($x1559 (and $x1554 $x495)))
 (=> $x1559 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1572 (= ?x479 _60)))
 (let (($x1577 (and $x1572 $x495)))
 (=> $x1577 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1590 (= ?x479 _61)))
 (let (($x1595 (and $x1590 $x495)))
 (=> $x1595 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1608 (= ?x479 _62)))
 (let (($x1613 (and $x1608 $x495)))
 (=> $x1613 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1626 (= ?x479 _63)))
 (let (($x1631 (and $x1626 $x495)))
 (=> $x1631 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1644 (= ?x479 _64)))
 (let (($x1649 (and $x1644 $x495)))
 (=> $x1649 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1662 (= ?x479 _65)))
 (let (($x1667 (and $x1662 $x495)))
 (=> $x1667 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1680 (= ?x479 _66)))
 (let (($x1685 (and $x1680 $x495)))
 (=> $x1685 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1698 (= ?x479 _67)))
 (let (($x1703 (and $x1698 $x495)))
 (=> $x1703 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1716 (= ?x479 _68)))
 (let (($x1721 (and $x1716 $x495)))
 (=> $x1721 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1734 (= ?x479 _69)))
 (let (($x1739 (and $x1734 $x495)))
 (=> $x1739 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1752 (= ?x479 _70)))
 (let (($x1757 (and $x1752 $x495)))
 (=> $x1757 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1770 (= ?x479 _71)))
 (let (($x1775 (and $x1770 $x495)))
 (=> $x1775 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1788 (= ?x479 _72)))
 (let (($x1793 (and $x1788 $x495)))
 (=> $x1793 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1806 (= ?x479 _73)))
 (let (($x1811 (and $x1806 $x495)))
 (=> $x1811 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1824 (= ?x479 _74)))
 (let (($x1829 (and $x1824 $x495)))
 (=> $x1829 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1842 (= ?x479 _75)))
 (let (($x1847 (and $x1842 $x495)))
 (=> $x1847 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1860 (= ?x479 _76)))
 (let (($x1865 (and $x1860 $x495)))
 (=> $x1865 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1878 (= ?x479 _77)))
 (let (($x1883 (and $x1878 $x495)))
 (=> $x1883 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1896 (= ?x479 _78)))
 (let (($x1901 (and $x1896 $x495)))
 (=> $x1901 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1914 (= ?x479 _79)))
 (let (($x1919 (and $x1914 $x495)))
 (=> $x1919 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1932 (= ?x479 _80)))
 (let (($x1937 (and $x1932 $x495)))
 (=> $x1937 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1950 (= ?x479 _81)))
 (let (($x1955 (and $x1950 $x495)))
 (=> $x1955 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1968 (= ?x479 _82)))
 (let (($x1973 (and $x1968 $x495)))
 (=> $x1973 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x1986 (= ?x479 _83)))
 (let (($x1991 (and $x1986 $x495)))
 (=> $x1991 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2004 (= ?x479 _84)))
 (let (($x2009 (and $x2004 $x495)))
 (=> $x2009 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2022 (= ?x479 _85)))
 (let (($x2027 (and $x2022 $x495)))
 (=> $x2027 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2040 (= ?x479 _86)))
 (let (($x2045 (and $x2040 $x495)))
 (=> $x2045 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2058 (= ?x479 _87)))
 (let (($x2063 (and $x2058 $x495)))
 (=> $x2063 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2076 (= ?x479 _88)))
 (let (($x2081 (and $x2076 $x495)))
 (=> $x2081 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2094 (= ?x479 _89)))
 (let (($x2099 (and $x2094 $x495)))
 (=> $x2099 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2112 (= ?x479 _90)))
 (let (($x2117 (and $x2112 $x495)))
 (=> $x2117 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2130 (= ?x479 _91)))
 (let (($x2135 (and $x2130 $x495)))
 (=> $x2135 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2148 (= ?x479 _92)))
 (let (($x2153 (and $x2148 $x495)))
 (=> $x2153 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2166 (= ?x479 _93)))
 (let (($x2171 (and $x2166 $x495)))
 (=> $x2171 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2184 (= ?x479 _94)))
 (let (($x2189 (and $x2184 $x495)))
 (=> $x2189 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2202 (= ?x479 _95)))
 (let (($x2207 (and $x2202 $x495)))
 (=> $x2207 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2220 (= ?x479 _96)))
 (let (($x2225 (and $x2220 $x495)))
 (=> $x2225 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2238 (= ?x479 _97)))
 (let (($x2243 (and $x2238 $x495)))
 (=> $x2243 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2256 (= ?x479 _98)))
 (let (($x2261 (and $x2256 $x495)))
 (=> $x2261 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x473))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2274 (= ?x479 _99)))
 (let (($x2279 (and $x2274 $x495)))
 (=> $x2279 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2292 (= ?x479 _100)))
 (=> (and $x2292 $x478) (and (= (time-to-state (+ time 1)) _101) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2292 (= ?x479 _100)))
 (let (($x2297 (and $x2292 $x495)))
 (=> $x2297 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2310 (= ?x479 _101)))
 (=> (and $x2310 $x478) (and (= (time-to-state (+ time 1)) _102) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2310 (= ?x479 _101)))
 (let (($x2315 (and $x2310 $x495)))
 (=> $x2315 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2328 (= ?x479 _102)))
 (=> (and $x2328 $x478) (and (= (time-to-state (+ time 1)) _103) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2328 (= ?x479 _102)))
 (let (($x2333 (and $x2328 $x495)))
 (=> $x2333 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2346 (= ?x479 _103)))
 (=> (and $x2346 $x478) (and (= (time-to-state (+ time 1)) _104) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2346 (= ?x479 _103)))
 (let (($x2351 (and $x2346 $x495)))
 (=> $x2351 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2364 (= ?x479 _104)))
 (=> (and $x2364 $x478) (and (= (time-to-state (+ time 1)) _105) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2364 (= ?x479 _104)))
 (let (($x2369 (and $x2364 $x495)))
 (=> $x2369 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2382 (= ?x479 _105)))
 (=> (and $x2382 $x478) (and (= (time-to-state (+ time 1)) _106) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2382 (= ?x479 _105)))
 (let (($x2387 (and $x2382 $x495)))
 (=> $x2387 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2400 (= ?x479 _106)))
 (=> (and $x2400 $x478) (and (= (time-to-state (+ time 1)) _107) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2400 (= ?x479 _106)))
 (let (($x2405 (and $x2400 $x495)))
 (=> $x2405 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2418 (= ?x479 _107)))
 (=> (and $x2418 $x478) (and (= (time-to-state (+ time 1)) _108) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2418 (= ?x479 _107)))
 (let (($x2423 (and $x2418 $x495)))
 (=> $x2423 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2436 (= ?x479 _108)))
 (=> (and $x2436 $x478) (and (= (time-to-state (+ time 1)) _109) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2436 (= ?x479 _108)))
 (let (($x2441 (and $x2436 $x495)))
 (=> $x2441 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2454 (= ?x479 _109)))
 (=> (and $x2454 $x478) (and (= (time-to-state (+ time 1)) _110) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2454 (= ?x479 _109)))
 (let (($x2459 (and $x2454 $x495)))
 (=> $x2459 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2472 (= ?x479 _110)))
 (=> (and $x2472 $x478) (and (= (time-to-state (+ time 1)) _111) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2472 (= ?x479 _110)))
 (let (($x2477 (and $x2472 $x495)))
 (=> $x2477 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2490 (= ?x479 _111)))
 (=> (and $x2490 $x478) (and (= (time-to-state (+ time 1)) _112) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2490 (= ?x479 _111)))
 (let (($x2495 (and $x2490 $x495)))
 (=> $x2495 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2508 (= ?x479 _112)))
 (=> (and $x2508 $x478) (and (= (time-to-state (+ time 1)) _113) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2508 (= ?x479 _112)))
 (let (($x2513 (and $x2508 $x495)))
 (=> $x2513 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2526 (= ?x479 _113)))
 (=> (and $x2526 $x478) (and (= (time-to-state (+ time 1)) _114) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2526 (= ?x479 _113)))
 (let (($x2531 (and $x2526 $x495)))
 (=> $x2531 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2544 (= ?x479 _114)))
 (=> (and $x2544 $x478) (and (= (time-to-state (+ time 1)) _115) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2544 (= ?x479 _114)))
 (let (($x2549 (and $x2544 $x495)))
 (=> $x2549 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2562 (= ?x479 _115)))
 (=> (and $x2562 $x478) (and (= (time-to-state (+ time 1)) _116) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2562 (= ?x479 _115)))
 (let (($x2567 (and $x2562 $x495)))
 (=> $x2567 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2580 (= ?x479 _116)))
 (=> (and $x2580 $x478) (and (= (time-to-state (+ time 1)) _117) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2580 (= ?x479 _116)))
 (let (($x2585 (and $x2580 $x495)))
 (=> $x2585 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2598 (= ?x479 _117)))
 (=> (and $x2598 $x478) (and (= (time-to-state (+ time 1)) _118) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2598 (= ?x479 _117)))
 (let (($x2603 (and $x2598 $x495)))
 (=> $x2603 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2616 (= ?x479 _118)))
 (=> (and $x2616 $x478) (and (= (time-to-state (+ time 1)) _119) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2616 (= ?x479 _118)))
 (let (($x2621 (and $x2616 $x495)))
 (=> $x2621 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2634 (= ?x479 _119)))
 (=> (and $x2634 $x478) (and (= (time-to-state (+ time 1)) _120) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2634 (= ?x479 _119)))
 (let (($x2639 (and $x2634 $x495)))
 (=> $x2639 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2652 (= ?x479 _120)))
 (=> (and $x2652 $x478) (and (= (time-to-state (+ time 1)) _121) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2652 (= ?x479 _120)))
 (let (($x2657 (and $x2652 $x495)))
 (=> $x2657 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2670 (= ?x479 _121)))
 (=> (and $x2670 $x478) (and (= (time-to-state (+ time 1)) _122) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2670 (= ?x479 _121)))
 (let (($x2675 (and $x2670 $x495)))
 (=> $x2675 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2688 (= ?x479 _122)))
 (=> (and $x2688 $x478) (and (= (time-to-state (+ time 1)) _123) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2688 (= ?x479 _122)))
 (let (($x2693 (and $x2688 $x495)))
 (=> $x2693 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2706 (= ?x479 _123)))
 (=> (and $x2706 $x478) (and (= (time-to-state (+ time 1)) _124) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2706 (= ?x479 _123)))
 (let (($x2711 (and $x2706 $x495)))
 (=> $x2711 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2724 (= ?x479 _124)))
 (=> (and $x2724 $x478) (and (= (time-to-state (+ time 1)) _125) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2724 (= ?x479 _124)))
 (let (($x2729 (and $x2724 $x495)))
 (=> $x2729 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2742 (= ?x479 _125)))
 (=> (and $x2742 $x478) (and (= (time-to-state (+ time 1)) _126) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2742 (= ?x479 _125)))
 (let (($x2747 (and $x2742 $x495)))
 (=> $x2747 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2760 (= ?x479 _126)))
 (=> (and $x2760 $x478) (and (= (time-to-state (+ time 1)) _127) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2760 (= ?x479 _126)))
 (let (($x2765 (and $x2760 $x495)))
 (=> $x2765 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2778 (= ?x479 _127)))
 (=> (and $x2778 $x478) (and (= (time-to-state (+ time 1)) _128) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2778 (= ?x479 _127)))
 (let (($x2783 (and $x2778 $x495)))
 (=> $x2783 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2796 (= ?x479 _128)))
 (=> (and $x2796 $x478) (and (= (time-to-state (+ time 1)) _129) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2796 (= ?x479 _128)))
 (let (($x2801 (and $x2796 $x495)))
 (=> $x2801 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2814 (= ?x479 _129)))
 (=> (and $x2814 $x478) (and (= (time-to-state (+ time 1)) _130) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2814 (= ?x479 _129)))
 (let (($x2819 (and $x2814 $x495)))
 (=> $x2819 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2832 (= ?x479 _130)))
 (=> (and $x2832 $x478) (and (= (time-to-state (+ time 1)) _131) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2832 (= ?x479 _130)))
 (let (($x2837 (and $x2832 $x495)))
 (=> $x2837 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2850 (= ?x479 _131)))
 (=> (and $x2850 $x478) (and (= (time-to-state (+ time 1)) _132) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2850 (= ?x479 _131)))
 (let (($x2855 (and $x2850 $x495)))
 (=> $x2855 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2868 (= ?x479 _132)))
 (=> (and $x2868 $x478) (and (= (time-to-state (+ time 1)) _133) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2868 (= ?x479 _132)))
 (let (($x2873 (and $x2868 $x495)))
 (=> $x2873 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2886 (= ?x479 _133)))
 (=> (and $x2886 $x478) (and (= (time-to-state (+ time 1)) _134) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2886 (= ?x479 _133)))
 (let (($x2891 (and $x2886 $x495)))
 (=> $x2891 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2904 (= ?x479 _134)))
 (=> (and $x2904 $x478) (and (= (time-to-state (+ time 1)) _135) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2904 (= ?x479 _134)))
 (let (($x2909 (and $x2904 $x495)))
 (=> $x2909 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2922 (= ?x479 _135)))
 (=> (and $x2922 $x478) (and (= (time-to-state (+ time 1)) _136) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2922 (= ?x479 _135)))
 (let (($x2927 (and $x2922 $x495)))
 (=> $x2927 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2940 (= ?x479 _136)))
 (=> (and $x2940 $x478) (and (= (time-to-state (+ time 1)) _137) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2940 (= ?x479 _136)))
 (let (($x2945 (and $x2940 $x495)))
 (=> $x2945 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2958 (= ?x479 _137)))
 (=> (and $x2958 $x478) (and (= (time-to-state (+ time 1)) _138) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2958 (= ?x479 _137)))
 (let (($x2963 (and $x2958 $x495)))
 (=> $x2963 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2976 (= ?x479 _138)))
 (=> (and $x2976 $x478) (and (= (time-to-state (+ time 1)) _139) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2976 (= ?x479 _138)))
 (let (($x2981 (and $x2976 $x495)))
 (=> $x2981 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x2994 (= ?x479 _139)))
 (=> (and $x2994 $x478) (and (= (time-to-state (+ time 1)) _140) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x2994 (= ?x479 _139)))
 (let (($x2999 (and $x2994 $x495)))
 (=> $x2999 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3012 (= ?x479 _140)))
 (=> (and $x3012 $x478) (and (= (time-to-state (+ time 1)) _141) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3012 (= ?x479 _140)))
 (let (($x3017 (and $x3012 $x495)))
 (=> $x3017 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3030 (= ?x479 _141)))
 (=> (and $x3030 $x478) (and (= (time-to-state (+ time 1)) _142) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3030 (= ?x479 _141)))
 (let (($x3035 (and $x3030 $x495)))
 (=> $x3035 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3048 (= ?x479 _142)))
 (=> (and $x3048 $x478) (and (= (time-to-state (+ time 1)) _143) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3048 (= ?x479 _142)))
 (let (($x3053 (and $x3048 $x495)))
 (=> $x3053 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3066 (= ?x479 _143)))
 (=> (and $x3066 $x478) (and (= (time-to-state (+ time 1)) _144) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3066 (= ?x479 _143)))
 (let (($x3071 (and $x3066 $x495)))
 (=> $x3071 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3084 (= ?x479 _144)))
 (=> (and $x3084 $x478) (and (= (time-to-state (+ time 1)) _145) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3084 (= ?x479 _144)))
 (let (($x3089 (and $x3084 $x495)))
 (=> $x3089 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3102 (= ?x479 _145)))
 (=> (and $x3102 $x478) (and (= (time-to-state (+ time 1)) _146) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3102 (= ?x479 _145)))
 (let (($x3107 (and $x3102 $x495)))
 (=> $x3107 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3120 (= ?x479 _146)))
 (=> (and $x3120 $x478) (and (= (time-to-state (+ time 1)) _147) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3120 (= ?x479 _146)))
 (let (($x3125 (and $x3120 $x495)))
 (=> $x3125 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3138 (= ?x479 _147)))
 (=> (and $x3138 $x478) (and (= (time-to-state (+ time 1)) _148) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3138 (= ?x479 _147)))
 (let (($x3143 (and $x3138 $x495)))
 (=> $x3143 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3156 (= ?x479 _148)))
 (=> (and $x3156 $x478) (and (= (time-to-state (+ time 1)) _149) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3156 (= ?x479 _148)))
 (let (($x3161 (and $x3156 $x495)))
 (=> $x3161 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3174 (= ?x479 _149)))
 (=> (and $x3174 $x478) (and (= (time-to-state (+ time 1)) _150) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3174 (= ?x479 _149)))
 (let (($x3179 (and $x3174 $x495)))
 (=> $x3179 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3192 (= ?x479 _150)))
 (=> (and $x3192 $x478) (and (= (time-to-state (+ time 1)) _151) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3192 (= ?x479 _150)))
 (let (($x3197 (and $x3192 $x495)))
 (=> $x3197 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3210 (= ?x479 _151)))
 (=> (and $x3210 $x478) (and (= (time-to-state (+ time 1)) _152) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3210 (= ?x479 _151)))
 (let (($x3215 (and $x3210 $x495)))
 (=> $x3215 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3228 (= ?x479 _152)))
 (=> (and $x3228 $x478) (and (= (time-to-state (+ time 1)) _153) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3228 (= ?x479 _152)))
 (let (($x3233 (and $x3228 $x495)))
 (=> $x3233 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3246 (= ?x479 _153)))
 (=> (and $x3246 $x478) (and (= (time-to-state (+ time 1)) _154) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3246 (= ?x479 _153)))
 (let (($x3251 (and $x3246 $x495)))
 (=> $x3251 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3264 (= ?x479 _154)))
 (=> (and $x3264 $x478) (and (= (time-to-state (+ time 1)) _155) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3264 (= ?x479 _154)))
 (let (($x3269 (and $x3264 $x495)))
 (=> $x3269 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3282 (= ?x479 _155)))
 (=> (and $x3282 $x478) (and (= (time-to-state (+ time 1)) _156) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3282 (= ?x479 _155)))
 (let (($x3287 (and $x3282 $x495)))
 (=> $x3287 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3300 (= ?x479 _156)))
 (=> (and $x3300 $x478) (and (= (time-to-state (+ time 1)) _157) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3300 (= ?x479 _156)))
 (let (($x3305 (and $x3300 $x495)))
 (=> $x3305 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3318 (= ?x479 _157)))
 (=> (and $x3318 $x478) (and (= (time-to-state (+ time 1)) _158) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3318 (= ?x479 _157)))
 (let (($x3323 (and $x3318 $x495)))
 (=> $x3323 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3336 (= ?x479 _158)))
 (=> (and $x3336 $x478) (and (= (time-to-state (+ time 1)) _159) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3336 (= ?x479 _158)))
 (let (($x3341 (and $x3336 $x495)))
 (=> $x3341 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3354 (= ?x479 _159)))
 (=> (and $x3354 $x478) (and (= (time-to-state (+ time 1)) _160) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3354 (= ?x479 _159)))
 (let (($x3359 (and $x3354 $x495)))
 (=> $x3359 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3372 (= ?x479 _160)))
 (=> (and $x3372 $x478) (and (= (time-to-state (+ time 1)) _161) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3372 (= ?x479 _160)))
 (let (($x3377 (and $x3372 $x495)))
 (=> $x3377 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3390 (= ?x479 _161)))
 (=> (and $x3390 $x478) (and (= (time-to-state (+ time 1)) _162) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3390 (= ?x479 _161)))
 (let (($x3395 (and $x3390 $x495)))
 (=> $x3395 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3408 (= ?x479 _162)))
 (=> (and $x3408 $x478) (and (= (time-to-state (+ time 1)) _163) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3408 (= ?x479 _162)))
 (let (($x3413 (and $x3408 $x495)))
 (=> $x3413 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3426 (= ?x479 _163)))
 (=> (and $x3426 $x478) (and (= (time-to-state (+ time 1)) _164) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3426 (= ?x479 _163)))
 (let (($x3431 (and $x3426 $x495)))
 (=> $x3431 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3444 (= ?x479 _164)))
 (=> (and $x3444 $x478) (and (= (time-to-state (+ time 1)) _165) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3444 (= ?x479 _164)))
 (let (($x3449 (and $x3444 $x495)))
 (=> $x3449 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3462 (= ?x479 _165)))
 (=> (and $x3462 $x478) (and (= (time-to-state (+ time 1)) _166) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3462 (= ?x479 _165)))
 (let (($x3467 (and $x3462 $x495)))
 (=> $x3467 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3480 (= ?x479 _166)))
 (=> (and $x3480 $x478) (and (= (time-to-state (+ time 1)) _167) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3480 (= ?x479 _166)))
 (let (($x3485 (and $x3480 $x495)))
 (=> $x3485 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3498 (= ?x479 _167)))
 (=> (and $x3498 $x478) (and (= (time-to-state (+ time 1)) _168) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3498 (= ?x479 _167)))
 (let (($x3503 (and $x3498 $x495)))
 (=> $x3503 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3516 (= ?x479 _168)))
 (=> (and $x3516 $x478) (and (= (time-to-state (+ time 1)) _169) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3516 (= ?x479 _168)))
 (let (($x3521 (and $x3516 $x495)))
 (=> $x3521 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3534 (= ?x479 _169)))
 (=> (and $x3534 $x478) (and (= (time-to-state (+ time 1)) _170) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3534 (= ?x479 _169)))
 (let (($x3539 (and $x3534 $x495)))
 (=> $x3539 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3552 (= ?x479 _170)))
 (=> (and $x3552 $x478) (and (= (time-to-state (+ time 1)) _171) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3552 (= ?x479 _170)))
 (let (($x3557 (and $x3552 $x495)))
 (=> $x3557 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3570 (= ?x479 _171)))
 (=> (and $x3570 $x478) (and (= (time-to-state (+ time 1)) _172) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3570 (= ?x479 _171)))
 (let (($x3575 (and $x3570 $x495)))
 (=> $x3575 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3588 (= ?x479 _172)))
 (=> (and $x3588 $x478) (and (= (time-to-state (+ time 1)) _173) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3588 (= ?x479 _172)))
 (let (($x3593 (and $x3588 $x495)))
 (=> $x3593 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3606 (= ?x479 _173)))
 (=> (and $x3606 $x478) (and (= (time-to-state (+ time 1)) _174) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3606 (= ?x479 _173)))
 (let (($x3611 (and $x3606 $x495)))
 (=> $x3611 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3624 (= ?x479 _174)))
 (=> (and $x3624 $x478) (and (= (time-to-state (+ time 1)) _175) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3624 (= ?x479 _174)))
 (let (($x3629 (and $x3624 $x495)))
 (=> $x3629 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3642 (= ?x479 _175)))
 (=> (and $x3642 $x478) (and (= (time-to-state (+ time 1)) _176) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3642 (= ?x479 _175)))
 (let (($x3647 (and $x3642 $x495)))
 (=> $x3647 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3660 (= ?x479 _176)))
 (=> (and $x3660 $x478) (and (= (time-to-state (+ time 1)) _177) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3660 (= ?x479 _176)))
 (let (($x3665 (and $x3660 $x495)))
 (=> $x3665 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3678 (= ?x479 _177)))
 (=> (and $x3678 $x478) (and (= (time-to-state (+ time 1)) _178) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3678 (= ?x479 _177)))
 (let (($x3683 (and $x3678 $x495)))
 (=> $x3683 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3696 (= ?x479 _178)))
 (=> (and $x3696 $x478) (and (= (time-to-state (+ time 1)) _179) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3696 (= ?x479 _178)))
 (let (($x3701 (and $x3696 $x495)))
 (=> $x3701 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3714 (= ?x479 _179)))
 (=> (and $x3714 $x478) (and (= (time-to-state (+ time 1)) _180) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3714 (= ?x479 _179)))
 (let (($x3719 (and $x3714 $x495)))
 (=> $x3719 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3732 (= ?x479 _180)))
 (=> (and $x3732 $x478) (and (= (time-to-state (+ time 1)) _181) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3732 (= ?x479 _180)))
 (let (($x3737 (and $x3732 $x495)))
 (=> $x3737 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3750 (= ?x479 _181)))
 (=> (and $x3750 $x478) (and (= (time-to-state (+ time 1)) _182) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3750 (= ?x479 _181)))
 (let (($x3755 (and $x3750 $x495)))
 (=> $x3755 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3768 (= ?x479 _182)))
 (=> (and $x3768 $x478) (and (= (time-to-state (+ time 1)) _183) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3768 (= ?x479 _182)))
 (let (($x3773 (and $x3768 $x495)))
 (=> $x3773 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3786 (= ?x479 _183)))
 (=> (and $x3786 $x478) (and (= (time-to-state (+ time 1)) _184) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3786 (= ?x479 _183)))
 (let (($x3791 (and $x3786 $x495)))
 (=> $x3791 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3804 (= ?x479 _184)))
 (=> (and $x3804 $x478) (and (= (time-to-state (+ time 1)) _185) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3804 (= ?x479 _184)))
 (let (($x3809 (and $x3804 $x495)))
 (=> $x3809 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3822 (= ?x479 _185)))
 (=> (and $x3822 $x478) (and (= (time-to-state (+ time 1)) _186) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3822 (= ?x479 _185)))
 (let (($x3827 (and $x3822 $x495)))
 (=> $x3827 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3840 (= ?x479 _186)))
 (=> (and $x3840 $x478) (and (= (time-to-state (+ time 1)) _187) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3840 (= ?x479 _186)))
 (let (($x3845 (and $x3840 $x495)))
 (=> $x3845 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3858 (= ?x479 _187)))
 (=> (and $x3858 $x478) (and (= (time-to-state (+ time 1)) _188) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3858 (= ?x479 _187)))
 (let (($x3863 (and $x3858 $x495)))
 (=> $x3863 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3876 (= ?x479 _188)))
 (=> (and $x3876 $x478) (and (= (time-to-state (+ time 1)) _189) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3876 (= ?x479 _188)))
 (let (($x3881 (and $x3876 $x495)))
 (=> $x3881 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3894 (= ?x479 _189)))
 (=> (and $x3894 $x478) (and (= (time-to-state (+ time 1)) _190) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3894 (= ?x479 _189)))
 (let (($x3899 (and $x3894 $x495)))
 (=> $x3899 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3912 (= ?x479 _190)))
 (=> (and $x3912 $x478) (and (= (time-to-state (+ time 1)) _191) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3912 (= ?x479 _190)))
 (let (($x3917 (and $x3912 $x495)))
 (=> $x3917 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3930 (= ?x479 _191)))
 (=> (and $x3930 $x478) (and (= (time-to-state (+ time 1)) _192) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3930 (= ?x479 _191)))
 (let (($x3935 (and $x3930 $x495)))
 (=> $x3935 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3948 (= ?x479 _192)))
 (=> (and $x3948 $x478) (and (= (time-to-state (+ time 1)) _193) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3948 (= ?x479 _192)))
 (let (($x3953 (and $x3948 $x495)))
 (=> $x3953 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3966 (= ?x479 _193)))
 (=> (and $x3966 $x478) (and (= (time-to-state (+ time 1)) _194) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3966 (= ?x479 _193)))
 (let (($x3971 (and $x3966 $x495)))
 (=> $x3971 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x3984 (= ?x479 _194)))
 (=> (and $x3984 $x478) (and (= (time-to-state (+ time 1)) _195) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x3984 (= ?x479 _194)))
 (let (($x3989 (and $x3984 $x495)))
 (=> $x3989 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4002 (= ?x479 _195)))
 (=> (and $x4002 $x478) (and (= (time-to-state (+ time 1)) _196) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4002 (= ?x479 _195)))
 (let (($x4007 (and $x4002 $x495)))
 (=> $x4007 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4020 (= ?x479 _196)))
 (=> (and $x4020 $x478) (and (= (time-to-state (+ time 1)) _197) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4020 (= ?x479 _196)))
 (let (($x4025 (and $x4020 $x495)))
 (=> $x4025 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4038 (= ?x479 _197)))
 (=> (and $x4038 $x478) (and (= (time-to-state (+ time 1)) _198) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4038 (= ?x479 _197)))
 (let (($x4043 (and $x4038 $x495)))
 (=> $x4043 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4056 (= ?x479 _198)))
 (=> (and $x4056 $x478) (and (= (time-to-state (+ time 1)) _199) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4056 (= ?x479 _198)))
 (let (($x4061 (and $x4056 $x495)))
 (=> $x4061 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4074 (= ?x479 _199)))
 (=> (and $x4074 $x478) (and (= (time-to-state (+ time 1)) _200) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4074 (= ?x479 _199)))
 (let (($x4079 (and $x4074 $x495)))
 (=> $x4079 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4092 (= ?x479 _200)))
 (=> (and $x4092 $x478) (and (= (time-to-state (+ time 1)) _201) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4092 (= ?x479 _200)))
 (let (($x4097 (and $x4092 $x495)))
 (=> $x4097 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4110 (= ?x479 _201)))
 (=> (and $x4110 $x478) (and (= (time-to-state (+ time 1)) _202) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4110 (= ?x479 _201)))
 (let (($x4115 (and $x4110 $x495)))
 (=> $x4115 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4128 (= ?x479 _202)))
 (=> (and $x4128 $x478) (and (= (time-to-state (+ time 1)) _203) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4128 (= ?x479 _202)))
 (let (($x4133 (and $x4128 $x495)))
 (=> $x4133 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4146 (= ?x479 _203)))
 (=> (and $x4146 $x478) (and (= (time-to-state (+ time 1)) _204) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4146 (= ?x479 _203)))
 (let (($x4151 (and $x4146 $x495)))
 (=> $x4151 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4164 (= ?x479 _204)))
 (=> (and $x4164 $x478) (and (= (time-to-state (+ time 1)) _205) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4164 (= ?x479 _204)))
 (let (($x4169 (and $x4164 $x495)))
 (=> $x4169 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4182 (= ?x479 _205)))
 (=> (and $x4182 $x478) (and (= (time-to-state (+ time 1)) _206) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4182 (= ?x479 _205)))
 (let (($x4187 (and $x4182 $x495)))
 (=> $x4187 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4200 (= ?x479 _206)))
 (=> (and $x4200 $x478) (and (= (time-to-state (+ time 1)) _207) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4200 (= ?x479 _206)))
 (let (($x4205 (and $x4200 $x495)))
 (=> $x4205 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4218 (= ?x479 _207)))
 (=> (and $x4218 $x478) (and (= (time-to-state (+ time 1)) _208) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4218 (= ?x479 _207)))
 (let (($x4223 (and $x4218 $x495)))
 (=> $x4223 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4236 (= ?x479 _208)))
 (=> (and $x4236 $x478) (and (= (time-to-state (+ time 1)) _209) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4236 (= ?x479 _208)))
 (let (($x4241 (and $x4236 $x495)))
 (=> $x4241 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4254 (= ?x479 _209)))
 (=> (and $x4254 $x478) (and (= (time-to-state (+ time 1)) _210) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4254 (= ?x479 _209)))
 (let (($x4259 (and $x4254 $x495)))
 (=> $x4259 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4272 (= ?x479 _210)))
 (=> (and $x4272 $x478) (and (= (time-to-state (+ time 1)) _211) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4272 (= ?x479 _210)))
 (let (($x4277 (and $x4272 $x495)))
 (=> $x4277 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4290 (= ?x479 _211)))
 (=> (and $x4290 $x478) (and (= (time-to-state (+ time 1)) _212) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4290 (= ?x479 _211)))
 (let (($x4295 (and $x4290 $x495)))
 (=> $x4295 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4308 (= ?x479 _212)))
 (=> (and $x4308 $x478) (and (= (time-to-state (+ time 1)) _213) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4308 (= ?x479 _212)))
 (let (($x4313 (and $x4308 $x495)))
 (=> $x4313 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4326 (= ?x479 _213)))
 (=> (and $x4326 $x478) (and (= (time-to-state (+ time 1)) _214) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4326 (= ?x479 _213)))
 (let (($x4331 (and $x4326 $x495)))
 (=> $x4331 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4344 (= ?x479 _214)))
 (=> (and $x4344 $x478) (and (= (time-to-state (+ time 1)) _215) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4344 (= ?x479 _214)))
 (let (($x4349 (and $x4344 $x495)))
 (=> $x4349 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4362 (= ?x479 _215)))
 (=> (and $x4362 $x478) (and (= (time-to-state (+ time 1)) _216) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4362 (= ?x479 _215)))
 (let (($x4367 (and $x4362 $x495)))
 (=> $x4367 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4380 (= ?x479 _216)))
 (=> (and $x4380 $x478) (and (= (time-to-state (+ time 1)) _217) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4380 (= ?x479 _216)))
 (let (($x4385 (and $x4380 $x495)))
 (=> $x4385 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4398 (= ?x479 _217)))
 (=> (and $x4398 $x478) (and (= (time-to-state (+ time 1)) _218) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4398 (= ?x479 _217)))
 (let (($x4403 (and $x4398 $x495)))
 (=> $x4403 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4416 (= ?x479 _218)))
 (=> (and $x4416 $x478) (and (= (time-to-state (+ time 1)) _219) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4416 (= ?x479 _218)))
 (let (($x4421 (and $x4416 $x495)))
 (=> $x4421 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4434 (= ?x479 _219)))
 (=> (and $x4434 $x478) (and (= (time-to-state (+ time 1)) _220) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4434 (= ?x479 _219)))
 (let (($x4439 (and $x4434 $x495)))
 (=> $x4439 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4452 (= ?x479 _220)))
 (=> (and $x4452 $x478) (and (= (time-to-state (+ time 1)) _221) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4452 (= ?x479 _220)))
 (let (($x4457 (and $x4452 $x495)))
 (=> $x4457 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4470 (= ?x479 _221)))
 (=> (and $x4470 $x478) (and (= (time-to-state (+ time 1)) _222) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4470 (= ?x479 _221)))
 (let (($x4475 (and $x4470 $x495)))
 (=> $x4475 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4488 (= ?x479 _222)))
 (=> (and $x4488 $x478) (and (= (time-to-state (+ time 1)) _223) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4488 (= ?x479 _222)))
 (let (($x4493 (and $x4488 $x495)))
 (=> $x4493 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4506 (= ?x479 _223)))
 (=> (and $x4506 $x478) (and (= (time-to-state (+ time 1)) _224) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4506 (= ?x479 _223)))
 (let (($x4511 (and $x4506 $x495)))
 (=> $x4511 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4524 (= ?x479 _224)))
 (=> (and $x4524 $x478) (and (= (time-to-state (+ time 1)) _225) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4524 (= ?x479 _224)))
 (let (($x4529 (and $x4524 $x495)))
 (=> $x4529 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4542 (= ?x479 _225)))
 (=> (and $x4542 $x478) (and (= (time-to-state (+ time 1)) _226) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4542 (= ?x479 _225)))
 (let (($x4547 (and $x4542 $x495)))
 (=> $x4547 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4560 (= ?x479 _226)))
 (=> (and $x4560 $x478) (and (= (time-to-state (+ time 1)) _227) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4560 (= ?x479 _226)))
 (let (($x4565 (and $x4560 $x495)))
 (=> $x4565 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4578 (= ?x479 _227)))
 (=> (and $x4578 $x478) (and (= (time-to-state (+ time 1)) _228) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4578 (= ?x479 _227)))
 (let (($x4583 (and $x4578 $x495)))
 (=> $x4583 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4596 (= ?x479 _228)))
 (=> (and $x4596 $x478) (and (= (time-to-state (+ time 1)) _229) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4596 (= ?x479 _228)))
 (let (($x4601 (and $x4596 $x495)))
 (=> $x4601 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4614 (= ?x479 _229)))
 (=> (and $x4614 $x478) (and (= (time-to-state (+ time 1)) _230) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4614 (= ?x479 _229)))
 (let (($x4619 (and $x4614 $x495)))
 (=> $x4619 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4632 (= ?x479 _230)))
 (=> (and $x4632 $x478) (and (= (time-to-state (+ time 1)) _231) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4632 (= ?x479 _230)))
 (let (($x4637 (and $x4632 $x495)))
 (=> $x4637 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4650 (= ?x479 _231)))
 (=> (and $x4650 $x478) (and (= (time-to-state (+ time 1)) _232) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4650 (= ?x479 _231)))
 (let (($x4655 (and $x4650 $x495)))
 (=> $x4655 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4668 (= ?x479 _232)))
 (=> (and $x4668 $x478) (and (= (time-to-state (+ time 1)) _233) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4668 (= ?x479 _232)))
 (let (($x4673 (and $x4668 $x495)))
 (=> $x4673 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4686 (= ?x479 _233)))
 (=> (and $x4686 $x478) (and (= (time-to-state (+ time 1)) _234) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4686 (= ?x479 _233)))
 (let (($x4691 (and $x4686 $x495)))
 (=> $x4691 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4704 (= ?x479 _234)))
 (=> (and $x4704 $x478) (and (= (time-to-state (+ time 1)) _235) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4704 (= ?x479 _234)))
 (let (($x4709 (and $x4704 $x495)))
 (=> $x4709 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4722 (= ?x479 _235)))
 (=> (and $x4722 $x478) (and (= (time-to-state (+ time 1)) _236) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4722 (= ?x479 _235)))
 (let (($x4727 (and $x4722 $x495)))
 (=> $x4727 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4740 (= ?x479 _236)))
 (=> (and $x4740 $x478) (and (= (time-to-state (+ time 1)) _237) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4740 (= ?x479 _236)))
 (let (($x4745 (and $x4740 $x495)))
 (=> $x4745 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4758 (= ?x479 _237)))
 (=> (and $x4758 $x478) (and (= (time-to-state (+ time 1)) _238) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4758 (= ?x479 _237)))
 (let (($x4763 (and $x4758 $x495)))
 (=> $x4763 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4776 (= ?x479 _238)))
 (=> (and $x4776 $x478) (and (= (time-to-state (+ time 1)) _239) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4776 (= ?x479 _238)))
 (let (($x4781 (and $x4776 $x495)))
 (=> $x4781 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4794 (= ?x479 _239)))
 (=> (and $x4794 $x478) (and (= (time-to-state (+ time 1)) _240) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4794 (= ?x479 _239)))
 (let (($x4799 (and $x4794 $x495)))
 (=> $x4799 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4812 (= ?x479 _240)))
 (=> (and $x4812 $x478) (and (= (time-to-state (+ time 1)) _241) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4812 (= ?x479 _240)))
 (let (($x4817 (and $x4812 $x495)))
 (=> $x4817 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4830 (= ?x479 _241)))
 (=> (and $x4830 $x478) (and (= (time-to-state (+ time 1)) _242) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4830 (= ?x479 _241)))
 (let (($x4835 (and $x4830 $x495)))
 (=> $x4835 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4848 (= ?x479 _242)))
 (=> (and $x4848 $x478) (and (= (time-to-state (+ time 1)) _243) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4848 (= ?x479 _242)))
 (let (($x4853 (and $x4848 $x495)))
 (=> $x4853 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4866 (= ?x479 _243)))
 (=> (and $x4866 $x478) (and (= (time-to-state (+ time 1)) _244) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4866 (= ?x479 _243)))
 (let (($x4871 (and $x4866 $x495)))
 (=> $x4871 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4884 (= ?x479 _244)))
 (=> (and $x4884 $x478) (and (= (time-to-state (+ time 1)) _245) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4884 (= ?x479 _244)))
 (let (($x4889 (and $x4884 $x495)))
 (=> $x4889 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4902 (= ?x479 _245)))
 (=> (and $x4902 $x478) (and (= (time-to-state (+ time 1)) _246) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4902 (= ?x479 _245)))
 (let (($x4907 (and $x4902 $x495)))
 (=> $x4907 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4920 (= ?x479 _246)))
 (=> (and $x4920 $x478) (and (= (time-to-state (+ time 1)) _247) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4920 (= ?x479 _246)))
 (let (($x4925 (and $x4920 $x495)))
 (=> $x4925 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4938 (= ?x479 _247)))
 (=> (and $x4938 $x478) (and (= (time-to-state (+ time 1)) _248) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4938 (= ?x479 _247)))
 (let (($x4943 (and $x4938 $x495)))
 (=> $x4943 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4956 (= ?x479 _248)))
 (=> (and $x4956 $x478) (and (= (time-to-state (+ time 1)) _249) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4956 (= ?x479 _248)))
 (let (($x4961 (and $x4956 $x495)))
 (=> $x4961 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4974 (= ?x479 _249)))
 (=> (and $x4974 $x478) (and (= (time-to-state (+ time 1)) _250) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4974 (= ?x479 _249)))
 (let (($x4979 (and $x4974 $x495)))
 (=> $x4979 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x4992 (= ?x479 _250)))
 (=> (and $x4992 $x478) (and (= (time-to-state (+ time 1)) _251) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x4992 (= ?x479 _250)))
 (let (($x4997 (and $x4992 $x495)))
 (=> $x4997 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5010 (= ?x479 _251)))
 (=> (and $x5010 $x478) (and (= (time-to-state (+ time 1)) _252) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5010 (= ?x479 _251)))
 (let (($x5015 (and $x5010 $x495)))
 (=> $x5015 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5028 (= ?x479 _252)))
 (=> (and $x5028 $x478) (and (= (time-to-state (+ time 1)) _253) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5028 (= ?x479 _252)))
 (let (($x5033 (and $x5028 $x495)))
 (=> $x5033 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5046 (= ?x479 _253)))
 (=> (and $x5046 $x478) (and (= (time-to-state (+ time 1)) _254) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5046 (= ?x479 _253)))
 (let (($x5051 (and $x5046 $x495)))
 (=> $x5051 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5064 (= ?x479 _254)))
 (=> (and $x5064 $x478) (and (= (time-to-state (+ time 1)) _255) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5064 (= ?x479 _254)))
 (let (($x5069 (and $x5064 $x495)))
 (=> $x5069 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5082 (= ?x479 _255)))
 (=> (and $x5082 $x478) (and (= (time-to-state (+ time 1)) _256) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5082 (= ?x479 _255)))
 (let (($x5087 (and $x5082 $x495)))
 (=> $x5087 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5100 (= ?x479 _256)))
 (=> (and $x5100 $x478) (and (= (time-to-state (+ time 1)) _257) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5100 (= ?x479 _256)))
 (let (($x5105 (and $x5100 $x495)))
 (=> $x5105 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5118 (= ?x479 _257)))
 (=> (and $x5118 $x478) (and (= (time-to-state (+ time 1)) _258) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5118 (= ?x479 _257)))
 (let (($x5123 (and $x5118 $x495)))
 (=> $x5123 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5136 (= ?x479 _258)))
 (=> (and $x5136 $x478) (and (= (time-to-state (+ time 1)) _259) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5136 (= ?x479 _258)))
 (let (($x5141 (and $x5136 $x495)))
 (=> $x5141 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5154 (= ?x479 _259)))
 (=> (and $x5154 $x478) (and (= (time-to-state (+ time 1)) _260) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5154 (= ?x479 _259)))
 (let (($x5159 (and $x5154 $x495)))
 (=> $x5159 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5172 (= ?x479 _260)))
 (=> (and $x5172 $x478) (and (= (time-to-state (+ time 1)) _261) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5172 (= ?x479 _260)))
 (let (($x5177 (and $x5172 $x495)))
 (=> $x5177 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5190 (= ?x479 _261)))
 (=> (and $x5190 $x478) (and (= (time-to-state (+ time 1)) _262) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5190 (= ?x479 _261)))
 (let (($x5195 (and $x5190 $x495)))
 (=> $x5195 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5208 (= ?x479 _262)))
 (=> (and $x5208 $x478) (and (= (time-to-state (+ time 1)) _263) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5208 (= ?x479 _262)))
 (let (($x5213 (and $x5208 $x495)))
 (=> $x5213 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5226 (= ?x479 _263)))
 (=> (and $x5226 $x478) (and (= (time-to-state (+ time 1)) _264) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5226 (= ?x479 _263)))
 (let (($x5231 (and $x5226 $x495)))
 (=> $x5231 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5244 (= ?x479 _264)))
 (=> (and $x5244 $x478) (and (= (time-to-state (+ time 1)) _265) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5244 (= ?x479 _264)))
 (let (($x5249 (and $x5244 $x495)))
 (=> $x5249 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5262 (= ?x479 _265)))
 (=> (and $x5262 $x478) (and (= (time-to-state (+ time 1)) _266) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5262 (= ?x479 _265)))
 (let (($x5267 (and $x5262 $x495)))
 (=> $x5267 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5280 (= ?x479 _266)))
 (=> (and $x5280 $x478) (and (= (time-to-state (+ time 1)) _267) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5280 (= ?x479 _266)))
 (let (($x5285 (and $x5280 $x495)))
 (=> $x5285 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5298 (= ?x479 _267)))
 (=> (and $x5298 $x478) (and (= (time-to-state (+ time 1)) _268) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5298 (= ?x479 _267)))
 (let (($x5303 (and $x5298 $x495)))
 (=> $x5303 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5316 (= ?x479 _268)))
 (=> (and $x5316 $x478) (and (= (time-to-state (+ time 1)) _269) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5316 (= ?x479 _268)))
 (let (($x5321 (and $x5316 $x495)))
 (=> $x5321 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5334 (= ?x479 _269)))
 (=> (and $x5334 $x478) (and (= (time-to-state (+ time 1)) _270) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5334 (= ?x479 _269)))
 (let (($x5339 (and $x5334 $x495)))
 (=> $x5339 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5352 (= ?x479 _270)))
 (=> (and $x5352 $x478) (and (= (time-to-state (+ time 1)) _271) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5352 (= ?x479 _270)))
 (let (($x5357 (and $x5352 $x495)))
 (=> $x5357 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5370 (= ?x479 _271)))
 (=> (and $x5370 $x478) (and (= (time-to-state (+ time 1)) _272) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5370 (= ?x479 _271)))
 (let (($x5375 (and $x5370 $x495)))
 (=> $x5375 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5388 (= ?x479 _272)))
 (=> (and $x5388 $x478) (and (= (time-to-state (+ time 1)) _273) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5388 (= ?x479 _272)))
 (let (($x5393 (and $x5388 $x495)))
 (=> $x5393 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5406 (= ?x479 _273)))
 (=> (and $x5406 $x478) (and (= (time-to-state (+ time 1)) _274) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5406 (= ?x479 _273)))
 (let (($x5411 (and $x5406 $x495)))
 (=> $x5411 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5424 (= ?x479 _274)))
 (=> (and $x5424 $x478) (and (= (time-to-state (+ time 1)) _275) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5424 (= ?x479 _274)))
 (let (($x5429 (and $x5424 $x495)))
 (=> $x5429 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5442 (= ?x479 _275)))
 (=> (and $x5442 $x478) (and (= (time-to-state (+ time 1)) _276) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5442 (= ?x479 _275)))
 (let (($x5447 (and $x5442 $x495)))
 (=> $x5447 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5460 (= ?x479 _276)))
 (=> (and $x5460 $x478) (and (= (time-to-state (+ time 1)) _277) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5460 (= ?x479 _276)))
 (let (($x5465 (and $x5460 $x495)))
 (=> $x5465 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5478 (= ?x479 _277)))
 (=> (and $x5478 $x478) (and (= (time-to-state (+ time 1)) _278) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5478 (= ?x479 _277)))
 (let (($x5483 (and $x5478 $x495)))
 (=> $x5483 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5496 (= ?x479 _278)))
 (=> (and $x5496 $x478) (and (= (time-to-state (+ time 1)) _279) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5496 (= ?x479 _278)))
 (let (($x5501 (and $x5496 $x495)))
 (=> $x5501 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5514 (= ?x479 _279)))
 (=> (and $x5514 $x478) (and (= (time-to-state (+ time 1)) _280) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5514 (= ?x479 _279)))
 (let (($x5519 (and $x5514 $x495)))
 (=> $x5519 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5532 (= ?x479 _280)))
 (=> (and $x5532 $x478) (and (= (time-to-state (+ time 1)) _281) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5532 (= ?x479 _280)))
 (let (($x5537 (and $x5532 $x495)))
 (=> $x5537 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5550 (= ?x479 _281)))
 (=> (and $x5550 $x478) (and (= (time-to-state (+ time 1)) _282) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5550 (= ?x479 _281)))
 (let (($x5555 (and $x5550 $x495)))
 (=> $x5555 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5568 (= ?x479 _282)))
 (=> (and $x5568 $x478) (and (= (time-to-state (+ time 1)) _283) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5568 (= ?x479 _282)))
 (let (($x5573 (and $x5568 $x495)))
 (=> $x5573 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5586 (= ?x479 _283)))
 (=> (and $x5586 $x478) (and (= (time-to-state (+ time 1)) _284) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5586 (= ?x479 _283)))
 (let (($x5591 (and $x5586 $x495)))
 (=> $x5591 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5604 (= ?x479 _284)))
 (=> (and $x5604 $x478) (and (= (time-to-state (+ time 1)) _285) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5604 (= ?x479 _284)))
 (let (($x5609 (and $x5604 $x495)))
 (=> $x5609 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5622 (= ?x479 _285)))
 (=> (and $x5622 $x478) (and (= (time-to-state (+ time 1)) _286) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5622 (= ?x479 _285)))
 (let (($x5627 (and $x5622 $x495)))
 (=> $x5627 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5640 (= ?x479 _286)))
 (=> (and $x5640 $x478) (and (= (time-to-state (+ time 1)) _287) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5640 (= ?x479 _286)))
 (let (($x5645 (and $x5640 $x495)))
 (=> $x5645 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5658 (= ?x479 _287)))
 (=> (and $x5658 $x478) (and (= (time-to-state (+ time 1)) _288) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5658 (= ?x479 _287)))
 (let (($x5663 (and $x5658 $x495)))
 (=> $x5663 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5676 (= ?x479 _288)))
 (=> (and $x5676 $x478) (and (= (time-to-state (+ time 1)) _289) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5676 (= ?x479 _288)))
 (let (($x5681 (and $x5676 $x495)))
 (=> $x5681 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5694 (= ?x479 _289)))
 (=> (and $x5694 $x478) (and (= (time-to-state (+ time 1)) _290) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5694 (= ?x479 _289)))
 (let (($x5699 (and $x5694 $x495)))
 (=> $x5699 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5712 (= ?x479 _290)))
 (=> (and $x5712 $x478) (and (= (time-to-state (+ time 1)) _291) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5712 (= ?x479 _290)))
 (let (($x5717 (and $x5712 $x495)))
 (=> $x5717 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5730 (= ?x479 _291)))
 (=> (and $x5730 $x478) (and (= (time-to-state (+ time 1)) _292) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5730 (= ?x479 _291)))
 (let (($x5735 (and $x5730 $x495)))
 (=> $x5735 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5748 (= ?x479 _292)))
 (=> (and $x5748 $x478) (and (= (time-to-state (+ time 1)) _293) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5748 (= ?x479 _292)))
 (let (($x5753 (and $x5748 $x495)))
 (=> $x5753 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5766 (= ?x479 _293)))
 (=> (and $x5766 $x478) (and (= (time-to-state (+ time 1)) _294) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5766 (= ?x479 _293)))
 (let (($x5771 (and $x5766 $x495)))
 (=> $x5771 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5784 (= ?x479 _294)))
 (=> (and $x5784 $x478) (and (= (time-to-state (+ time 1)) _295) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5784 (= ?x479 _294)))
 (let (($x5789 (and $x5784 $x495)))
 (=> $x5789 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5802 (= ?x479 _295)))
 (=> (and $x5802 $x478) (and (= (time-to-state (+ time 1)) _296) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5802 (= ?x479 _295)))
 (let (($x5807 (and $x5802 $x495)))
 (=> $x5807 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5820 (= ?x479 _296)))
 (=> (and $x5820 $x478) (and (= (time-to-state (+ time 1)) _297) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5820 (= ?x479 _296)))
 (let (($x5825 (and $x5820 $x495)))
 (=> $x5825 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5838 (= ?x479 _297)))
 (=> (and $x5838 $x478) (and (= (time-to-state (+ time 1)) _298) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5838 (= ?x479 _297)))
 (let (($x5843 (and $x5838 $x495)))
 (=> $x5843 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5856 (= ?x479 _298)))
 (=> (and $x5856 $x478) (and (= (time-to-state (+ time 1)) _299) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5856 (= ?x479 _298)))
 (let (($x5861 (and $x5856 $x495)))
 (=> $x5861 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5874 (= ?x479 _299)))
 (=> (and $x5874 $x478) (and (= (time-to-state (+ time 1)) _300) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5874 (= ?x479 _299)))
 (let (($x5879 (and $x5874 $x495)))
 (=> $x5879 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5892 (= ?x479 _300)))
 (=> (and $x5892 $x478) (and (= (time-to-state (+ time 1)) _301) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5892 (= ?x479 _300)))
 (let (($x5897 (and $x5892 $x495)))
 (=> $x5897 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5910 (= ?x479 _301)))
 (=> (and $x5910 $x478) (and (= (time-to-state (+ time 1)) _302) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5910 (= ?x479 _301)))
 (let (($x5915 (and $x5910 $x495)))
 (=> $x5915 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5928 (= ?x479 _302)))
 (=> (and $x5928 $x478) (and (= (time-to-state (+ time 1)) _303) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5928 (= ?x479 _302)))
 (let (($x5933 (and $x5928 $x495)))
 (=> $x5933 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5946 (= ?x479 _303)))
 (=> (and $x5946 $x478) (and (= (time-to-state (+ time 1)) _304) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5946 (= ?x479 _303)))
 (let (($x5951 (and $x5946 $x495)))
 (=> $x5951 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5964 (= ?x479 _304)))
 (=> (and $x5964 $x478) (and (= (time-to-state (+ time 1)) _305) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5964 (= ?x479 _304)))
 (let (($x5969 (and $x5964 $x495)))
 (=> $x5969 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x5982 (= ?x479 _305)))
 (=> (and $x5982 $x478) (and (= (time-to-state (+ time 1)) _306) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x5982 (= ?x479 _305)))
 (let (($x5987 (and $x5982 $x495)))
 (=> $x5987 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6000 (= ?x479 _306)))
 (=> (and $x6000 $x478) (and (= (time-to-state (+ time 1)) _307) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6000 (= ?x479 _306)))
 (let (($x6005 (and $x6000 $x495)))
 (=> $x6005 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6018 (= ?x479 _307)))
 (=> (and $x6018 $x478) (and (= (time-to-state (+ time 1)) _308) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6018 (= ?x479 _307)))
 (let (($x6023 (and $x6018 $x495)))
 (=> $x6023 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6036 (= ?x479 _308)))
 (=> (and $x6036 $x478) (and (= (time-to-state (+ time 1)) _309) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6036 (= ?x479 _308)))
 (let (($x6041 (and $x6036 $x495)))
 (=> $x6041 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6054 (= ?x479 _309)))
 (=> (and $x6054 $x478) (and (= (time-to-state (+ time 1)) _310) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6054 (= ?x479 _309)))
 (let (($x6059 (and $x6054 $x495)))
 (=> $x6059 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6072 (= ?x479 _310)))
 (=> (and $x6072 $x478) (and (= (time-to-state (+ time 1)) _311) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6072 (= ?x479 _310)))
 (let (($x6077 (and $x6072 $x495)))
 (=> $x6077 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6090 (= ?x479 _311)))
 (=> (and $x6090 $x478) (and (= (time-to-state (+ time 1)) _312) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6090 (= ?x479 _311)))
 (let (($x6095 (and $x6090 $x495)))
 (=> $x6095 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6108 (= ?x479 _312)))
 (=> (and $x6108 $x478) (and (= (time-to-state (+ time 1)) _313) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6108 (= ?x479 _312)))
 (let (($x6113 (and $x6108 $x495)))
 (=> $x6113 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6126 (= ?x479 _313)))
 (=> (and $x6126 $x478) (and (= (time-to-state (+ time 1)) _314) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6126 (= ?x479 _313)))
 (let (($x6131 (and $x6126 $x495)))
 (=> $x6131 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6144 (= ?x479 _314)))
 (=> (and $x6144 $x478) (and (= (time-to-state (+ time 1)) _315) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6144 (= ?x479 _314)))
 (let (($x6149 (and $x6144 $x495)))
 (=> $x6149 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6162 (= ?x479 _315)))
 (=> (and $x6162 $x478) (and (= (time-to-state (+ time 1)) _316) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6162 (= ?x479 _315)))
 (let (($x6167 (and $x6162 $x495)))
 (=> $x6167 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6180 (= ?x479 _316)))
 (=> (and $x6180 $x478) (and (= (time-to-state (+ time 1)) _317) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6180 (= ?x479 _316)))
 (let (($x6185 (and $x6180 $x495)))
 (=> $x6185 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6198 (= ?x479 _317)))
 (=> (and $x6198 $x478) (and (= (time-to-state (+ time 1)) _318) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6198 (= ?x479 _317)))
 (let (($x6203 (and $x6198 $x495)))
 (=> $x6203 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6216 (= ?x479 _318)))
 (=> (and $x6216 $x478) (and (= (time-to-state (+ time 1)) _319) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6216 (= ?x479 _318)))
 (let (($x6221 (and $x6216 $x495)))
 (=> $x6221 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6234 (= ?x479 _319)))
 (=> (and $x6234 $x478) (and (= (time-to-state (+ time 1)) _320) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6234 (= ?x479 _319)))
 (let (($x6239 (and $x6234 $x495)))
 (=> $x6239 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6252 (= ?x479 _320)))
 (=> (and $x6252 $x478) (and (= (time-to-state (+ time 1)) _321) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6252 (= ?x479 _320)))
 (let (($x6257 (and $x6252 $x495)))
 (=> $x6257 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6270 (= ?x479 _321)))
 (=> (and $x6270 $x478) (and (= (time-to-state (+ time 1)) _322) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6270 (= ?x479 _321)))
 (let (($x6275 (and $x6270 $x495)))
 (=> $x6275 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6288 (= ?x479 _322)))
 (=> (and $x6288 $x478) (and (= (time-to-state (+ time 1)) _323) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6288 (= ?x479 _322)))
 (let (($x6293 (and $x6288 $x495)))
 (=> $x6293 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6306 (= ?x479 _323)))
 (=> (and $x6306 $x478) (and (= (time-to-state (+ time 1)) _324) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6306 (= ?x479 _323)))
 (let (($x6311 (and $x6306 $x495)))
 (=> $x6311 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6324 (= ?x479 _324)))
 (=> (and $x6324 $x478) (and (= (time-to-state (+ time 1)) _325) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6324 (= ?x479 _324)))
 (let (($x6329 (and $x6324 $x495)))
 (=> $x6329 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6342 (= ?x479 _325)))
 (=> (and $x6342 $x478) (and (= (time-to-state (+ time 1)) _326) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6342 (= ?x479 _325)))
 (let (($x6347 (and $x6342 $x495)))
 (=> $x6347 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6360 (= ?x479 _326)))
 (=> (and $x6360 $x478) (and (= (time-to-state (+ time 1)) _327) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6360 (= ?x479 _326)))
 (let (($x6365 (and $x6360 $x495)))
 (=> $x6365 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6378 (= ?x479 _327)))
 (=> (and $x6378 $x478) (and (= (time-to-state (+ time 1)) _328) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6378 (= ?x479 _327)))
 (let (($x6383 (and $x6378 $x495)))
 (=> $x6383 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6396 (= ?x479 _328)))
 (=> (and $x6396 $x478) (and (= (time-to-state (+ time 1)) _329) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6396 (= ?x479 _328)))
 (let (($x6401 (and $x6396 $x495)))
 (=> $x6401 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6414 (= ?x479 _329)))
 (=> (and $x6414 $x478) (and (= (time-to-state (+ time 1)) _330) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6414 (= ?x479 _329)))
 (let (($x6419 (and $x6414 $x495)))
 (=> $x6419 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6432 (= ?x479 _330)))
 (=> (and $x6432 $x478) (and (= (time-to-state (+ time 1)) _331) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6432 (= ?x479 _330)))
 (let (($x6437 (and $x6432 $x495)))
 (=> $x6437 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6450 (= ?x479 _331)))
 (=> (and $x6450 $x478) (and (= (time-to-state (+ time 1)) _332) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6450 (= ?x479 _331)))
 (let (($x6455 (and $x6450 $x495)))
 (=> $x6455 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6468 (= ?x479 _332)))
 (=> (and $x6468 $x478) (and (= (time-to-state (+ time 1)) _333) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6468 (= ?x479 _332)))
 (let (($x6473 (and $x6468 $x495)))
 (=> $x6473 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6486 (= ?x479 _333)))
 (=> (and $x6486 $x478) (and (= (time-to-state (+ time 1)) _334) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6486 (= ?x479 _333)))
 (let (($x6491 (and $x6486 $x495)))
 (=> $x6491 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6504 (= ?x479 _334)))
 (=> (and $x6504 $x478) (and (= (time-to-state (+ time 1)) _335) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6504 (= ?x479 _334)))
 (let (($x6509 (and $x6504 $x495)))
 (=> $x6509 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6522 (= ?x479 _335)))
 (=> (and $x6522 $x478) (and (= (time-to-state (+ time 1)) _336) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6522 (= ?x479 _335)))
 (let (($x6527 (and $x6522 $x495)))
 (=> $x6527 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6540 (= ?x479 _336)))
 (=> (and $x6540 $x478) (and (= (time-to-state (+ time 1)) _337) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6540 (= ?x479 _336)))
 (let (($x6545 (and $x6540 $x495)))
 (=> $x6545 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6558 (= ?x479 _337)))
 (=> (and $x6558 $x478) (and (= (time-to-state (+ time 1)) _338) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6558 (= ?x479 _337)))
 (let (($x6563 (and $x6558 $x495)))
 (=> $x6563 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6576 (= ?x479 _338)))
 (=> (and $x6576 $x478) (and (= (time-to-state (+ time 1)) _339) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6576 (= ?x479 _338)))
 (let (($x6581 (and $x6576 $x495)))
 (=> $x6581 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6594 (= ?x479 _339)))
 (=> (and $x6594 $x478) (and (= (time-to-state (+ time 1)) _340) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6594 (= ?x479 _339)))
 (let (($x6599 (and $x6594 $x495)))
 (=> $x6599 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6612 (= ?x479 _340)))
 (=> (and $x6612 $x478) (and (= (time-to-state (+ time 1)) _341) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6612 (= ?x479 _340)))
 (let (($x6617 (and $x6612 $x495)))
 (=> $x6617 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6630 (= ?x479 _341)))
 (=> (and $x6630 $x478) (and (= (time-to-state (+ time 1)) _342) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6630 (= ?x479 _341)))
 (let (($x6635 (and $x6630 $x495)))
 (=> $x6635 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6648 (= ?x479 _342)))
 (=> (and $x6648 $x478) (and (= (time-to-state (+ time 1)) _343) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6648 (= ?x479 _342)))
 (let (($x6653 (and $x6648 $x495)))
 (=> $x6653 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6666 (= ?x479 _343)))
 (=> (and $x6666 $x478) (and (= (time-to-state (+ time 1)) _344) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6666 (= ?x479 _343)))
 (let (($x6671 (and $x6666 $x495)))
 (=> $x6671 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6684 (= ?x479 _344)))
 (=> (and $x6684 $x478) (and (= (time-to-state (+ time 1)) _345) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6684 (= ?x479 _344)))
 (let (($x6689 (and $x6684 $x495)))
 (=> $x6689 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6702 (= ?x479 _345)))
 (=> (and $x6702 $x478) (and (= (time-to-state (+ time 1)) _346) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6702 (= ?x479 _345)))
 (let (($x6707 (and $x6702 $x495)))
 (=> $x6707 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6720 (= ?x479 _346)))
 (=> (and $x6720 $x478) (and (= (time-to-state (+ time 1)) _347) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6720 (= ?x479 _346)))
 (let (($x6725 (and $x6720 $x495)))
 (=> $x6725 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6738 (= ?x479 _347)))
 (=> (and $x6738 $x478) (and (= (time-to-state (+ time 1)) _348) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6738 (= ?x479 _347)))
 (let (($x6743 (and $x6738 $x495)))
 (=> $x6743 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6756 (= ?x479 _348)))
 (=> (and $x6756 $x478) (and (= (time-to-state (+ time 1)) _349) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6756 (= ?x479 _348)))
 (let (($x6761 (and $x6756 $x495)))
 (=> $x6761 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6774 (= ?x479 _349)))
 (=> (and $x6774 $x478) (and (= (time-to-state (+ time 1)) _350) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6774 (= ?x479 _349)))
 (let (($x6779 (and $x6774 $x495)))
 (=> $x6779 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6792 (= ?x479 _350)))
 (=> (and $x6792 $x478) (and (= (time-to-state (+ time 1)) _351) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6792 (= ?x479 _350)))
 (let (($x6797 (and $x6792 $x495)))
 (=> $x6797 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6810 (= ?x479 _351)))
 (=> (and $x6810 $x478) (and (= (time-to-state (+ time 1)) _352) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6810 (= ?x479 _351)))
 (let (($x6815 (and $x6810 $x495)))
 (=> $x6815 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6828 (= ?x479 _352)))
 (=> (and $x6828 $x478) (and (= (time-to-state (+ time 1)) _353) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6828 (= ?x479 _352)))
 (let (($x6833 (and $x6828 $x495)))
 (=> $x6833 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6846 (= ?x479 _353)))
 (=> (and $x6846 $x478) (and (= (time-to-state (+ time 1)) _354) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6846 (= ?x479 _353)))
 (let (($x6851 (and $x6846 $x495)))
 (=> $x6851 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6864 (= ?x479 _354)))
 (=> (and $x6864 $x478) (and (= (time-to-state (+ time 1)) _355) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6864 (= ?x479 _354)))
 (let (($x6869 (and $x6864 $x495)))
 (=> $x6869 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6882 (= ?x479 _355)))
 (=> (and $x6882 $x478) (and (= (time-to-state (+ time 1)) _356) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6882 (= ?x479 _355)))
 (let (($x6887 (and $x6882 $x495)))
 (=> $x6887 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6900 (= ?x479 _356)))
 (=> (and $x6900 $x478) (and (= (time-to-state (+ time 1)) _357) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6900 (= ?x479 _356)))
 (let (($x6905 (and $x6900 $x495)))
 (=> $x6905 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6918 (= ?x479 _357)))
 (=> (and $x6918 $x478) (and (= (time-to-state (+ time 1)) _358) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6918 (= ?x479 _357)))
 (let (($x6923 (and $x6918 $x495)))
 (=> $x6923 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6936 (= ?x479 _358)))
 (=> (and $x6936 $x478) (and (= (time-to-state (+ time 1)) _359) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6936 (= ?x479 _358)))
 (let (($x6941 (and $x6936 $x495)))
 (=> $x6941 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6954 (= ?x479 _359)))
 (=> (and $x6954 $x478) (and (= (time-to-state (+ time 1)) _360) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6954 (= ?x479 _359)))
 (let (($x6959 (and $x6954 $x495)))
 (=> $x6959 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6972 (= ?x479 _360)))
 (=> (and $x6972 $x478) (and (= (time-to-state (+ time 1)) _361) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6972 (= ?x479 _360)))
 (let (($x6977 (and $x6972 $x495)))
 (=> $x6977 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x6990 (= ?x479 _361)))
 (=> (and $x6990 $x478) (and (= (time-to-state (+ time 1)) _362) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x6990 (= ?x479 _361)))
 (let (($x6995 (and $x6990 $x495)))
 (=> $x6995 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7008 (= ?x479 _362)))
 (=> (and $x7008 $x478) (and (= (time-to-state (+ time 1)) _363) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7008 (= ?x479 _362)))
 (let (($x7013 (and $x7008 $x495)))
 (=> $x7013 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7026 (= ?x479 _363)))
 (=> (and $x7026 $x478) (and (= (time-to-state (+ time 1)) _364) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7026 (= ?x479 _363)))
 (let (($x7031 (and $x7026 $x495)))
 (=> $x7031 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7044 (= ?x479 _364)))
 (=> (and $x7044 $x478) (and (= (time-to-state (+ time 1)) _365) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7044 (= ?x479 _364)))
 (let (($x7049 (and $x7044 $x495)))
 (=> $x7049 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7062 (= ?x479 _365)))
 (=> (and $x7062 $x478) (and (= (time-to-state (+ time 1)) _366) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7062 (= ?x479 _365)))
 (let (($x7067 (and $x7062 $x495)))
 (=> $x7067 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7080 (= ?x479 _366)))
 (=> (and $x7080 $x478) (and (= (time-to-state (+ time 1)) _367) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7080 (= ?x479 _366)))
 (let (($x7085 (and $x7080 $x495)))
 (=> $x7085 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7098 (= ?x479 _367)))
 (=> (and $x7098 $x478) (and (= (time-to-state (+ time 1)) _368) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7098 (= ?x479 _367)))
 (let (($x7103 (and $x7098 $x495)))
 (=> $x7103 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7116 (= ?x479 _368)))
 (=> (and $x7116 $x478) (and (= (time-to-state (+ time 1)) _369) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7116 (= ?x479 _368)))
 (let (($x7121 (and $x7116 $x495)))
 (=> $x7121 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7134 (= ?x479 _369)))
 (=> (and $x7134 $x478) (and (= (time-to-state (+ time 1)) _370) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7134 (= ?x479 _369)))
 (let (($x7139 (and $x7134 $x495)))
 (=> $x7139 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7152 (= ?x479 _370)))
 (=> (and $x7152 $x478) (and (= (time-to-state (+ time 1)) _371) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7152 (= ?x479 _370)))
 (let (($x7157 (and $x7152 $x495)))
 (=> $x7157 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7170 (= ?x479 _371)))
 (=> (and $x7170 $x478) (and (= (time-to-state (+ time 1)) _372) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7170 (= ?x479 _371)))
 (let (($x7175 (and $x7170 $x495)))
 (=> $x7175 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7188 (= ?x479 _372)))
 (=> (and $x7188 $x478) (and (= (time-to-state (+ time 1)) _373) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7188 (= ?x479 _372)))
 (let (($x7193 (and $x7188 $x495)))
 (=> $x7193 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7206 (= ?x479 _373)))
 (=> (and $x7206 $x478) (and (= (time-to-state (+ time 1)) _374) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7206 (= ?x479 _373)))
 (let (($x7211 (and $x7206 $x495)))
 (=> $x7211 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7224 (= ?x479 _374)))
 (=> (and $x7224 $x478) (and (= (time-to-state (+ time 1)) _375) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7224 (= ?x479 _374)))
 (let (($x7229 (and $x7224 $x495)))
 (=> $x7229 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7242 (= ?x479 _375)))
 (=> (and $x7242 $x478) (and (= (time-to-state (+ time 1)) _376) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7242 (= ?x479 _375)))
 (let (($x7247 (and $x7242 $x495)))
 (=> $x7247 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7260 (= ?x479 _376)))
 (=> (and $x7260 $x478) (and (= (time-to-state (+ time 1)) _377) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7260 (= ?x479 _376)))
 (let (($x7265 (and $x7260 $x495)))
 (=> $x7265 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7278 (= ?x479 _377)))
 (=> (and $x7278 $x478) (and (= (time-to-state (+ time 1)) _378) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7278 (= ?x479 _377)))
 (let (($x7283 (and $x7278 $x495)))
 (=> $x7283 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7296 (= ?x479 _378)))
 (=> (and $x7296 $x478) (and (= (time-to-state (+ time 1)) _379) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7296 (= ?x479 _378)))
 (let (($x7301 (and $x7296 $x495)))
 (=> $x7301 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7314 (= ?x479 _379)))
 (=> (and $x7314 $x478) (and (= (time-to-state (+ time 1)) _380) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7314 (= ?x479 _379)))
 (let (($x7319 (and $x7314 $x495)))
 (=> $x7319 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7332 (= ?x479 _380)))
 (=> (and $x7332 $x478) (and (= (time-to-state (+ time 1)) _381) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7332 (= ?x479 _380)))
 (let (($x7337 (and $x7332 $x495)))
 (=> $x7337 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7350 (= ?x479 _381)))
 (=> (and $x7350 $x478) (and (= (time-to-state (+ time 1)) _382) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7350 (= ?x479 _381)))
 (let (($x7355 (and $x7350 $x495)))
 (=> $x7355 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7368 (= ?x479 _382)))
 (=> (and $x7368 $x478) (and (= (time-to-state (+ time 1)) _383) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7368 (= ?x479 _382)))
 (let (($x7373 (and $x7368 $x495)))
 (=> $x7373 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7386 (= ?x479 _383)))
 (=> (and $x7386 $x478) (and (= (time-to-state (+ time 1)) _384) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7386 (= ?x479 _383)))
 (let (($x7391 (and $x7386 $x495)))
 (=> $x7391 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7404 (= ?x479 _384)))
 (=> (and $x7404 $x478) (and (= (time-to-state (+ time 1)) _385) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7404 (= ?x479 _384)))
 (let (($x7409 (and $x7404 $x495)))
 (=> $x7409 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7422 (= ?x479 _385)))
 (=> (and $x7422 $x478) (and (= (time-to-state (+ time 1)) _386) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7422 (= ?x479 _385)))
 (let (($x7427 (and $x7422 $x495)))
 (=> $x7427 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7440 (= ?x479 _386)))
 (=> (and $x7440 $x478) (and (= (time-to-state (+ time 1)) _387) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7440 (= ?x479 _386)))
 (let (($x7445 (and $x7440 $x495)))
 (=> $x7445 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7458 (= ?x479 _387)))
 (=> (and $x7458 $x478) (and (= (time-to-state (+ time 1)) _388) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7458 (= ?x479 _387)))
 (let (($x7463 (and $x7458 $x495)))
 (=> $x7463 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7476 (= ?x479 _388)))
 (=> (and $x7476 $x478) (and (= (time-to-state (+ time 1)) _389) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7476 (= ?x479 _388)))
 (let (($x7481 (and $x7476 $x495)))
 (=> $x7481 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7494 (= ?x479 _389)))
 (=> (and $x7494 $x478) (and (= (time-to-state (+ time 1)) _390) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7494 (= ?x479 _389)))
 (let (($x7499 (and $x7494 $x495)))
 (=> $x7499 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7512 (= ?x479 _390)))
 (=> (and $x7512 $x478) (and (= (time-to-state (+ time 1)) _391) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7512 (= ?x479 _390)))
 (let (($x7517 (and $x7512 $x495)))
 (=> $x7517 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7530 (= ?x479 _391)))
 (=> (and $x7530 $x478) (and (= (time-to-state (+ time 1)) _392) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7530 (= ?x479 _391)))
 (let (($x7535 (and $x7530 $x495)))
 (=> $x7535 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7548 (= ?x479 _392)))
 (=> (and $x7548 $x478) (and (= (time-to-state (+ time 1)) _393) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7548 (= ?x479 _392)))
 (let (($x7553 (and $x7548 $x495)))
 (=> $x7553 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7566 (= ?x479 _393)))
 (=> (and $x7566 $x478) (and (= (time-to-state (+ time 1)) _394) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7566 (= ?x479 _393)))
 (let (($x7571 (and $x7566 $x495)))
 (=> $x7571 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7584 (= ?x479 _394)))
 (=> (and $x7584 $x478) (and (= (time-to-state (+ time 1)) _395) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7584 (= ?x479 _394)))
 (let (($x7589 (and $x7584 $x495)))
 (=> $x7589 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7602 (= ?x479 _395)))
 (=> (and $x7602 $x478) (and (= (time-to-state (+ time 1)) _396) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7602 (= ?x479 _395)))
 (let (($x7607 (and $x7602 $x495)))
 (=> $x7607 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7620 (= ?x479 _396)))
 (=> (and $x7620 $x478) (and (= (time-to-state (+ time 1)) _397) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7620 (= ?x479 _396)))
 (let (($x7625 (and $x7620 $x495)))
 (=> $x7625 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7638 (= ?x479 _397)))
 (=> (and $x7638 $x478) (and (= (time-to-state (+ time 1)) _398) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7638 (= ?x479 _397)))
 (let (($x7643 (and $x7638 $x495)))
 (=> $x7643 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7656 (= ?x479 _398)))
 (=> (and $x7656 $x478) (and (= (time-to-state (+ time 1)) _399) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7656 (= ?x479 _398)))
 (let (($x7661 (and $x7656 $x495)))
 (=> $x7661 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7674 (= ?x479 _399)))
 (=> (and $x7674 $x478) (and (= (time-to-state (+ time 1)) _400) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7674 (= ?x479 _399)))
 (let (($x7679 (and $x7674 $x495)))
 (=> $x7679 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7692 (= ?x479 _400)))
 (=> (and $x7692 $x478) (and (= (time-to-state (+ time 1)) _401) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7692 (= ?x479 _400)))
 (let (($x7697 (and $x7692 $x495)))
 (=> $x7697 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7710 (= ?x479 _401)))
 (=> (and $x7710 $x478) (and (= (time-to-state (+ time 1)) _402) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7710 (= ?x479 _401)))
 (let (($x7715 (and $x7710 $x495)))
 (=> $x7715 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7728 (= ?x479 _402)))
 (=> (and $x7728 $x478) (and (= (time-to-state (+ time 1)) _403) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7728 (= ?x479 _402)))
 (let (($x7733 (and $x7728 $x495)))
 (=> $x7733 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7746 (= ?x479 _403)))
 (=> (and $x7746 $x478) (and (= (time-to-state (+ time 1)) _404) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7746 (= ?x479 _403)))
 (let (($x7751 (and $x7746 $x495)))
 (=> $x7751 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7764 (= ?x479 _404)))
 (=> (and $x7764 $x478) (and (= (time-to-state (+ time 1)) _405) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7764 (= ?x479 _404)))
 (let (($x7769 (and $x7764 $x495)))
 (=> $x7769 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7782 (= ?x479 _405)))
 (=> (and $x7782 $x478) (and (= (time-to-state (+ time 1)) _406) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7782 (= ?x479 _405)))
 (let (($x7787 (and $x7782 $x495)))
 (=> $x7787 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7800 (= ?x479 _406)))
 (=> (and $x7800 $x478) (and (= (time-to-state (+ time 1)) _407) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7800 (= ?x479 _406)))
 (let (($x7805 (and $x7800 $x495)))
 (=> $x7805 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7818 (= ?x479 _407)))
 (=> (and $x7818 $x478) (and (= (time-to-state (+ time 1)) _408) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7818 (= ?x479 _407)))
 (let (($x7823 (and $x7818 $x495)))
 (=> $x7823 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7836 (= ?x479 _408)))
 (=> (and $x7836 $x478) (and (= (time-to-state (+ time 1)) _409) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7836 (= ?x479 _408)))
 (let (($x7841 (and $x7836 $x495)))
 (=> $x7841 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7854 (= ?x479 _409)))
 (=> (and $x7854 $x478) (and (= (time-to-state (+ time 1)) _410) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7854 (= ?x479 _409)))
 (let (($x7859 (and $x7854 $x495)))
 (=> $x7859 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7872 (= ?x479 _410)))
 (=> (and $x7872 $x478) (and (= (time-to-state (+ time 1)) _411) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7872 (= ?x479 _410)))
 (let (($x7877 (and $x7872 $x495)))
 (=> $x7877 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7890 (= ?x479 _411)))
 (=> (and $x7890 $x478) (and (= (time-to-state (+ time 1)) _412) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7890 (= ?x479 _411)))
 (let (($x7895 (and $x7890 $x495)))
 (=> $x7895 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7908 (= ?x479 _412)))
 (=> (and $x7908 $x478) (and (= (time-to-state (+ time 1)) _413) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7908 (= ?x479 _412)))
 (let (($x7913 (and $x7908 $x495)))
 (=> $x7913 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7926 (= ?x479 _413)))
 (=> (and $x7926 $x478) (and (= (time-to-state (+ time 1)) _414) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7926 (= ?x479 _413)))
 (let (($x7931 (and $x7926 $x495)))
 (=> $x7931 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7944 (= ?x479 _414)))
 (=> (and $x7944 $x478) (and (= (time-to-state (+ time 1)) _415) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7944 (= ?x479 _414)))
 (let (($x7949 (and $x7944 $x495)))
 (=> $x7949 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7962 (= ?x479 _415)))
 (=> (and $x7962 $x478) (and (= (time-to-state (+ time 1)) _416) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7962 (= ?x479 _415)))
 (let (($x7967 (and $x7962 $x495)))
 (=> $x7967 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7980 (= ?x479 _416)))
 (=> (and $x7980 $x478) (and (= (time-to-state (+ time 1)) _417) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7980 (= ?x479 _416)))
 (let (($x7985 (and $x7980 $x495)))
 (=> $x7985 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x7998 (= ?x479 _417)))
 (=> (and $x7998 $x478) (and (= (time-to-state (+ time 1)) _418) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x7998 (= ?x479 _417)))
 (let (($x8003 (and $x7998 $x495)))
 (=> $x8003 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x8016 (= ?x479 _418)))
 (=> (and $x8016 $x478) (and (= (time-to-state (+ time 1)) _419) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x8016 (= ?x479 _418)))
 (let (($x8021 (and $x8016 $x495)))
 (=> $x8021 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let (($x473 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x477 (input-arg0 time)))
 (let (($x478 (and (distinct ?x477 0) true)))
 (let ((?x479 (time-to-state time)))
 (let (($x8034 (= ?x479 _419)))
 (=> (and $x8034 $x478) (and (= (time-to-state (+ time 1)) _420) $x473))))))))
 )
(assert
 (forall ((time Int) )(let ((?x471 (+ time 1)))
 (let ((?x474 (time-to-state ?x471)))
 (let (($x494 (= ?x474 ERR)))
 (let ((?x477 (input-arg0 time)))
 (let (($x495 (= ?x477 1)))
 (let ((?x479 (time-to-state time)))
 (let (($x8034 (= ?x479 _419)))
 (let (($x8039 (and $x8034 $x495)))
 (=> $x8039 $x494))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x479 (time-to-state time)))
 (let (($x8042 (= ?x479 ERR)))
 (and $x8042 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370 _371 _372 _373 _374 _375 _376 _377 _378 _379 _380 _381 _382 _383 _384 _385 _386 _387 _388 _389 _390 _391 _392 _393 _394 _395 _396 _397 _398 _399 _400 _401 _402 _403 _404 _405 _406 _407 _408 _409 _410 _411 _412 _413 _414 _415 _416 _417 _418 _419 _420) true))
(check-sat)
