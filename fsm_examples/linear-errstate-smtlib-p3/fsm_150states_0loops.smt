; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(assert
 (let ((?x159 (time-to-state 0)))
 (= ?x159 _0)))
(assert
 (let ((?x179 (input-arg0 0)))
 (= ?x179 0)))
(assert
 (let ((?x181 (var1_0 0)))
 (= ?x181 0)))
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x210 (= ?x209 _0)))
 (let (($x226 (and $x210 $x225)))
 (=> $x226 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x240 (= ?x209 _1)))
 (let (($x245 (and $x240 $x225)))
 (=> $x245 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x258 (= ?x209 _2)))
 (let (($x263 (and $x258 $x225)))
 (=> $x263 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x276 (= ?x209 _3)))
 (let (($x281 (and $x276 $x225)))
 (=> $x281 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x294 (= ?x209 _4)))
 (let (($x299 (and $x294 $x225)))
 (=> $x299 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x312 (= ?x209 _5)))
 (let (($x317 (and $x312 $x225)))
 (=> $x317 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x330 (= ?x209 _6)))
 (let (($x335 (and $x330 $x225)))
 (=> $x335 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x348 (= ?x209 _7)))
 (let (($x353 (and $x348 $x225)))
 (=> $x353 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x366 (= ?x209 _8)))
 (let (($x371 (and $x366 $x225)))
 (=> $x371 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x384 (= ?x209 _9)))
 (let (($x389 (and $x384 $x225)))
 (=> $x389 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x402 (= ?x209 _10)))
 (let (($x407 (and $x402 $x225)))
 (=> $x407 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x420 (= ?x209 _11)))
 (let (($x425 (and $x420 $x225)))
 (=> $x425 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x438 (= ?x209 _12)))
 (let (($x443 (and $x438 $x225)))
 (=> $x443 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x456 (= ?x209 _13)))
 (let (($x461 (and $x456 $x225)))
 (=> $x461 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x474 (= ?x209 _14)))
 (let (($x479 (and $x474 $x225)))
 (=> $x479 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x492 (= ?x209 _15)))
 (let (($x497 (and $x492 $x225)))
 (=> $x497 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x510 (= ?x209 _16)))
 (let (($x515 (and $x510 $x225)))
 (=> $x515 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x528 (= ?x209 _17)))
 (let (($x533 (and $x528 $x225)))
 (=> $x533 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x546 (= ?x209 _18)))
 (let (($x551 (and $x546 $x225)))
 (=> $x551 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x564 (= ?x209 _19)))
 (let (($x569 (and $x564 $x225)))
 (=> $x569 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x582 (= ?x209 _20)))
 (let (($x587 (and $x582 $x225)))
 (=> $x587 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x600 (= ?x209 _21)))
 (let (($x605 (and $x600 $x225)))
 (=> $x605 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x618 (= ?x209 _22)))
 (let (($x623 (and $x618 $x225)))
 (=> $x623 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x636 (= ?x209 _23)))
 (let (($x641 (and $x636 $x225)))
 (=> $x641 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x654 (= ?x209 _24)))
 (let (($x659 (and $x654 $x225)))
 (=> $x659 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x672 (= ?x209 _25)))
 (let (($x677 (and $x672 $x225)))
 (=> $x677 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x690 (= ?x209 _26)))
 (let (($x695 (and $x690 $x225)))
 (=> $x695 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x708 (= ?x209 _27)))
 (let (($x713 (and $x708 $x225)))
 (=> $x713 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x726 (= ?x209 _28)))
 (let (($x731 (and $x726 $x225)))
 (=> $x731 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x744 (= ?x209 _29)))
 (let (($x749 (and $x744 $x225)))
 (=> $x749 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x762 (= ?x209 _30)))
 (let (($x767 (and $x762 $x225)))
 (=> $x767 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x780 (= ?x209 _31)))
 (let (($x785 (and $x780 $x225)))
 (=> $x785 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x798 (= ?x209 _32)))
 (let (($x803 (and $x798 $x225)))
 (=> $x803 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x816 (= ?x209 _33)))
 (let (($x821 (and $x816 $x225)))
 (=> $x821 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x834 (= ?x209 _34)))
 (let (($x839 (and $x834 $x225)))
 (=> $x839 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x852 (= ?x209 _35)))
 (let (($x857 (and $x852 $x225)))
 (=> $x857 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x870 (= ?x209 _36)))
 (let (($x875 (and $x870 $x225)))
 (=> $x875 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x888 (= ?x209 _37)))
 (let (($x893 (and $x888 $x225)))
 (=> $x893 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x906 (= ?x209 _38)))
 (let (($x911 (and $x906 $x225)))
 (=> $x911 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x924 (= ?x209 _39)))
 (let (($x929 (and $x924 $x225)))
 (=> $x929 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x942 (= ?x209 _40)))
 (let (($x947 (and $x942 $x225)))
 (=> $x947 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x960 (= ?x209 _41)))
 (let (($x965 (and $x960 $x225)))
 (=> $x965 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x978 (= ?x209 _42)))
 (let (($x983 (and $x978 $x225)))
 (=> $x983 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x996 (= ?x209 _43)))
 (let (($x1001 (and $x996 $x225)))
 (=> $x1001 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1014 (= ?x209 _44)))
 (let (($x1019 (and $x1014 $x225)))
 (=> $x1019 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1032 (= ?x209 _45)))
 (let (($x1037 (and $x1032 $x225)))
 (=> $x1037 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1050 (= ?x209 _46)))
 (let (($x1055 (and $x1050 $x225)))
 (=> $x1055 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1068 (= ?x209 _47)))
 (let (($x1073 (and $x1068 $x225)))
 (=> $x1073 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1086 (= ?x209 _48)))
 (let (($x1091 (and $x1086 $x225)))
 (=> $x1091 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1104 (= ?x209 _49)))
 (let (($x1109 (and $x1104 $x225)))
 (=> $x1109 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1122 (= ?x209 _50)))
 (let (($x1127 (and $x1122 $x225)))
 (=> $x1127 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1140 (= ?x209 _51)))
 (let (($x1145 (and $x1140 $x225)))
 (=> $x1145 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1158 (= ?x209 _52)))
 (let (($x1163 (and $x1158 $x225)))
 (=> $x1163 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1176 (= ?x209 _53)))
 (let (($x1181 (and $x1176 $x225)))
 (=> $x1181 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1194 (= ?x209 _54)))
 (let (($x1199 (and $x1194 $x225)))
 (=> $x1199 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1212 (= ?x209 _55)))
 (let (($x1217 (and $x1212 $x225)))
 (=> $x1217 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1230 (= ?x209 _56)))
 (let (($x1235 (and $x1230 $x225)))
 (=> $x1235 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1248 (= ?x209 _57)))
 (let (($x1253 (and $x1248 $x225)))
 (=> $x1253 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1266 (= ?x209 _58)))
 (let (($x1271 (and $x1266 $x225)))
 (=> $x1271 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1284 (= ?x209 _59)))
 (let (($x1289 (and $x1284 $x225)))
 (=> $x1289 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1302 (= ?x209 _60)))
 (let (($x1307 (and $x1302 $x225)))
 (=> $x1307 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1320 (= ?x209 _61)))
 (let (($x1325 (and $x1320 $x225)))
 (=> $x1325 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1338 (= ?x209 _62)))
 (let (($x1343 (and $x1338 $x225)))
 (=> $x1343 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1356 (= ?x209 _63)))
 (let (($x1361 (and $x1356 $x225)))
 (=> $x1361 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1374 (= ?x209 _64)))
 (let (($x1379 (and $x1374 $x225)))
 (=> $x1379 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1392 (= ?x209 _65)))
 (let (($x1397 (and $x1392 $x225)))
 (=> $x1397 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1410 (= ?x209 _66)))
 (let (($x1415 (and $x1410 $x225)))
 (=> $x1415 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1428 (= ?x209 _67)))
 (let (($x1433 (and $x1428 $x225)))
 (=> $x1433 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1446 (= ?x209 _68)))
 (let (($x1451 (and $x1446 $x225)))
 (=> $x1451 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1464 (= ?x209 _69)))
 (let (($x1469 (and $x1464 $x225)))
 (=> $x1469 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1482 (= ?x209 _70)))
 (let (($x1487 (and $x1482 $x225)))
 (=> $x1487 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1500 (= ?x209 _71)))
 (let (($x1505 (and $x1500 $x225)))
 (=> $x1505 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1518 (= ?x209 _72)))
 (let (($x1523 (and $x1518 $x225)))
 (=> $x1523 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1536 (= ?x209 _73)))
 (let (($x1541 (and $x1536 $x225)))
 (=> $x1541 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1554 (= ?x209 _74)))
 (let (($x1559 (and $x1554 $x225)))
 (=> $x1559 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1572 (= ?x209 _75)))
 (let (($x1577 (and $x1572 $x225)))
 (=> $x1577 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1590 (= ?x209 _76)))
 (let (($x1595 (and $x1590 $x225)))
 (=> $x1595 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1608 (= ?x209 _77)))
 (let (($x1613 (and $x1608 $x225)))
 (=> $x1613 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1626 (= ?x209 _78)))
 (let (($x1631 (and $x1626 $x225)))
 (=> $x1631 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1644 (= ?x209 _79)))
 (let (($x1649 (and $x1644 $x225)))
 (=> $x1649 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1662 (= ?x209 _80)))
 (let (($x1667 (and $x1662 $x225)))
 (=> $x1667 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1680 (= ?x209 _81)))
 (let (($x1685 (and $x1680 $x225)))
 (=> $x1685 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1698 (= ?x209 _82)))
 (let (($x1703 (and $x1698 $x225)))
 (=> $x1703 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1716 (= ?x209 _83)))
 (let (($x1721 (and $x1716 $x225)))
 (=> $x1721 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1734 (= ?x209 _84)))
 (let (($x1739 (and $x1734 $x225)))
 (=> $x1739 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1752 (= ?x209 _85)))
 (let (($x1757 (and $x1752 $x225)))
 (=> $x1757 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1770 (= ?x209 _86)))
 (let (($x1775 (and $x1770 $x225)))
 (=> $x1775 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1788 (= ?x209 _87)))
 (let (($x1793 (and $x1788 $x225)))
 (=> $x1793 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1806 (= ?x209 _88)))
 (let (($x1811 (and $x1806 $x225)))
 (=> $x1811 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1824 (= ?x209 _89)))
 (let (($x1829 (and $x1824 $x225)))
 (=> $x1829 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1842 (= ?x209 _90)))
 (let (($x1847 (and $x1842 $x225)))
 (=> $x1847 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1860 (= ?x209 _91)))
 (let (($x1865 (and $x1860 $x225)))
 (=> $x1865 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1878 (= ?x209 _92)))
 (let (($x1883 (and $x1878 $x225)))
 (=> $x1883 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1896 (= ?x209 _93)))
 (let (($x1901 (and $x1896 $x225)))
 (=> $x1901 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1914 (= ?x209 _94)))
 (let (($x1919 (and $x1914 $x225)))
 (=> $x1919 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1932 (= ?x209 _95)))
 (let (($x1937 (and $x1932 $x225)))
 (=> $x1937 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1950 (= ?x209 _96)))
 (let (($x1955 (and $x1950 $x225)))
 (=> $x1955 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1968 (= ?x209 _97)))
 (let (($x1973 (and $x1968 $x225)))
 (=> $x1973 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x1986 (= ?x209 _98)))
 (let (($x1991 (and $x1986 $x225)))
 (=> $x1991 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x203))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2004 (= ?x209 _99)))
 (let (($x2009 (and $x2004 $x225)))
 (=> $x2009 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2022 (= ?x209 _100)))
 (=> (and $x2022 $x208) (and (= (time-to-state (+ time 1)) _101) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2022 (= ?x209 _100)))
 (let (($x2027 (and $x2022 $x225)))
 (=> $x2027 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2040 (= ?x209 _101)))
 (=> (and $x2040 $x208) (and (= (time-to-state (+ time 1)) _102) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2040 (= ?x209 _101)))
 (let (($x2045 (and $x2040 $x225)))
 (=> $x2045 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2058 (= ?x209 _102)))
 (=> (and $x2058 $x208) (and (= (time-to-state (+ time 1)) _103) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2058 (= ?x209 _102)))
 (let (($x2063 (and $x2058 $x225)))
 (=> $x2063 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2076 (= ?x209 _103)))
 (=> (and $x2076 $x208) (and (= (time-to-state (+ time 1)) _104) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2076 (= ?x209 _103)))
 (let (($x2081 (and $x2076 $x225)))
 (=> $x2081 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2094 (= ?x209 _104)))
 (=> (and $x2094 $x208) (and (= (time-to-state (+ time 1)) _105) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2094 (= ?x209 _104)))
 (let (($x2099 (and $x2094 $x225)))
 (=> $x2099 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2112 (= ?x209 _105)))
 (=> (and $x2112 $x208) (and (= (time-to-state (+ time 1)) _106) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2112 (= ?x209 _105)))
 (let (($x2117 (and $x2112 $x225)))
 (=> $x2117 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2130 (= ?x209 _106)))
 (=> (and $x2130 $x208) (and (= (time-to-state (+ time 1)) _107) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2130 (= ?x209 _106)))
 (let (($x2135 (and $x2130 $x225)))
 (=> $x2135 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2148 (= ?x209 _107)))
 (=> (and $x2148 $x208) (and (= (time-to-state (+ time 1)) _108) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2148 (= ?x209 _107)))
 (let (($x2153 (and $x2148 $x225)))
 (=> $x2153 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2166 (= ?x209 _108)))
 (=> (and $x2166 $x208) (and (= (time-to-state (+ time 1)) _109) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2166 (= ?x209 _108)))
 (let (($x2171 (and $x2166 $x225)))
 (=> $x2171 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2184 (= ?x209 _109)))
 (=> (and $x2184 $x208) (and (= (time-to-state (+ time 1)) _110) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2184 (= ?x209 _109)))
 (let (($x2189 (and $x2184 $x225)))
 (=> $x2189 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2202 (= ?x209 _110)))
 (=> (and $x2202 $x208) (and (= (time-to-state (+ time 1)) _111) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2202 (= ?x209 _110)))
 (let (($x2207 (and $x2202 $x225)))
 (=> $x2207 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2220 (= ?x209 _111)))
 (=> (and $x2220 $x208) (and (= (time-to-state (+ time 1)) _112) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2220 (= ?x209 _111)))
 (let (($x2225 (and $x2220 $x225)))
 (=> $x2225 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2238 (= ?x209 _112)))
 (=> (and $x2238 $x208) (and (= (time-to-state (+ time 1)) _113) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2238 (= ?x209 _112)))
 (let (($x2243 (and $x2238 $x225)))
 (=> $x2243 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2256 (= ?x209 _113)))
 (=> (and $x2256 $x208) (and (= (time-to-state (+ time 1)) _114) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2256 (= ?x209 _113)))
 (let (($x2261 (and $x2256 $x225)))
 (=> $x2261 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2274 (= ?x209 _114)))
 (=> (and $x2274 $x208) (and (= (time-to-state (+ time 1)) _115) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2274 (= ?x209 _114)))
 (let (($x2279 (and $x2274 $x225)))
 (=> $x2279 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2292 (= ?x209 _115)))
 (=> (and $x2292 $x208) (and (= (time-to-state (+ time 1)) _116) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2292 (= ?x209 _115)))
 (let (($x2297 (and $x2292 $x225)))
 (=> $x2297 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2310 (= ?x209 _116)))
 (=> (and $x2310 $x208) (and (= (time-to-state (+ time 1)) _117) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2310 (= ?x209 _116)))
 (let (($x2315 (and $x2310 $x225)))
 (=> $x2315 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2328 (= ?x209 _117)))
 (=> (and $x2328 $x208) (and (= (time-to-state (+ time 1)) _118) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2328 (= ?x209 _117)))
 (let (($x2333 (and $x2328 $x225)))
 (=> $x2333 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2346 (= ?x209 _118)))
 (=> (and $x2346 $x208) (and (= (time-to-state (+ time 1)) _119) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2346 (= ?x209 _118)))
 (let (($x2351 (and $x2346 $x225)))
 (=> $x2351 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2364 (= ?x209 _119)))
 (=> (and $x2364 $x208) (and (= (time-to-state (+ time 1)) _120) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2364 (= ?x209 _119)))
 (let (($x2369 (and $x2364 $x225)))
 (=> $x2369 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2382 (= ?x209 _120)))
 (=> (and $x2382 $x208) (and (= (time-to-state (+ time 1)) _121) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2382 (= ?x209 _120)))
 (let (($x2387 (and $x2382 $x225)))
 (=> $x2387 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2400 (= ?x209 _121)))
 (=> (and $x2400 $x208) (and (= (time-to-state (+ time 1)) _122) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2400 (= ?x209 _121)))
 (let (($x2405 (and $x2400 $x225)))
 (=> $x2405 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2418 (= ?x209 _122)))
 (=> (and $x2418 $x208) (and (= (time-to-state (+ time 1)) _123) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2418 (= ?x209 _122)))
 (let (($x2423 (and $x2418 $x225)))
 (=> $x2423 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2436 (= ?x209 _123)))
 (=> (and $x2436 $x208) (and (= (time-to-state (+ time 1)) _124) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2436 (= ?x209 _123)))
 (let (($x2441 (and $x2436 $x225)))
 (=> $x2441 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2454 (= ?x209 _124)))
 (=> (and $x2454 $x208) (and (= (time-to-state (+ time 1)) _125) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2454 (= ?x209 _124)))
 (let (($x2459 (and $x2454 $x225)))
 (=> $x2459 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2472 (= ?x209 _125)))
 (=> (and $x2472 $x208) (and (= (time-to-state (+ time 1)) _126) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2472 (= ?x209 _125)))
 (let (($x2477 (and $x2472 $x225)))
 (=> $x2477 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2490 (= ?x209 _126)))
 (=> (and $x2490 $x208) (and (= (time-to-state (+ time 1)) _127) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2490 (= ?x209 _126)))
 (let (($x2495 (and $x2490 $x225)))
 (=> $x2495 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2508 (= ?x209 _127)))
 (=> (and $x2508 $x208) (and (= (time-to-state (+ time 1)) _128) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2508 (= ?x209 _127)))
 (let (($x2513 (and $x2508 $x225)))
 (=> $x2513 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2526 (= ?x209 _128)))
 (=> (and $x2526 $x208) (and (= (time-to-state (+ time 1)) _129) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2526 (= ?x209 _128)))
 (let (($x2531 (and $x2526 $x225)))
 (=> $x2531 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2544 (= ?x209 _129)))
 (=> (and $x2544 $x208) (and (= (time-to-state (+ time 1)) _130) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2544 (= ?x209 _129)))
 (let (($x2549 (and $x2544 $x225)))
 (=> $x2549 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2562 (= ?x209 _130)))
 (=> (and $x2562 $x208) (and (= (time-to-state (+ time 1)) _131) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2562 (= ?x209 _130)))
 (let (($x2567 (and $x2562 $x225)))
 (=> $x2567 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2580 (= ?x209 _131)))
 (=> (and $x2580 $x208) (and (= (time-to-state (+ time 1)) _132) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2580 (= ?x209 _131)))
 (let (($x2585 (and $x2580 $x225)))
 (=> $x2585 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2598 (= ?x209 _132)))
 (=> (and $x2598 $x208) (and (= (time-to-state (+ time 1)) _133) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2598 (= ?x209 _132)))
 (let (($x2603 (and $x2598 $x225)))
 (=> $x2603 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2616 (= ?x209 _133)))
 (=> (and $x2616 $x208) (and (= (time-to-state (+ time 1)) _134) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2616 (= ?x209 _133)))
 (let (($x2621 (and $x2616 $x225)))
 (=> $x2621 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2634 (= ?x209 _134)))
 (=> (and $x2634 $x208) (and (= (time-to-state (+ time 1)) _135) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2634 (= ?x209 _134)))
 (let (($x2639 (and $x2634 $x225)))
 (=> $x2639 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2652 (= ?x209 _135)))
 (=> (and $x2652 $x208) (and (= (time-to-state (+ time 1)) _136) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2652 (= ?x209 _135)))
 (let (($x2657 (and $x2652 $x225)))
 (=> $x2657 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2670 (= ?x209 _136)))
 (=> (and $x2670 $x208) (and (= (time-to-state (+ time 1)) _137) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2670 (= ?x209 _136)))
 (let (($x2675 (and $x2670 $x225)))
 (=> $x2675 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2688 (= ?x209 _137)))
 (=> (and $x2688 $x208) (and (= (time-to-state (+ time 1)) _138) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2688 (= ?x209 _137)))
 (let (($x2693 (and $x2688 $x225)))
 (=> $x2693 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2706 (= ?x209 _138)))
 (=> (and $x2706 $x208) (and (= (time-to-state (+ time 1)) _139) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2706 (= ?x209 _138)))
 (let (($x2711 (and $x2706 $x225)))
 (=> $x2711 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2724 (= ?x209 _139)))
 (=> (and $x2724 $x208) (and (= (time-to-state (+ time 1)) _140) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2724 (= ?x209 _139)))
 (let (($x2729 (and $x2724 $x225)))
 (=> $x2729 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2742 (= ?x209 _140)))
 (=> (and $x2742 $x208) (and (= (time-to-state (+ time 1)) _141) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2742 (= ?x209 _140)))
 (let (($x2747 (and $x2742 $x225)))
 (=> $x2747 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2760 (= ?x209 _141)))
 (=> (and $x2760 $x208) (and (= (time-to-state (+ time 1)) _142) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2760 (= ?x209 _141)))
 (let (($x2765 (and $x2760 $x225)))
 (=> $x2765 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2778 (= ?x209 _142)))
 (=> (and $x2778 $x208) (and (= (time-to-state (+ time 1)) _143) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2778 (= ?x209 _142)))
 (let (($x2783 (and $x2778 $x225)))
 (=> $x2783 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2796 (= ?x209 _143)))
 (=> (and $x2796 $x208) (and (= (time-to-state (+ time 1)) _144) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2796 (= ?x209 _143)))
 (let (($x2801 (and $x2796 $x225)))
 (=> $x2801 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2814 (= ?x209 _144)))
 (=> (and $x2814 $x208) (and (= (time-to-state (+ time 1)) _145) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2814 (= ?x209 _144)))
 (let (($x2819 (and $x2814 $x225)))
 (=> $x2819 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2832 (= ?x209 _145)))
 (=> (and $x2832 $x208) (and (= (time-to-state (+ time 1)) _146) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2832 (= ?x209 _145)))
 (let (($x2837 (and $x2832 $x225)))
 (=> $x2837 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2850 (= ?x209 _146)))
 (=> (and $x2850 $x208) (and (= (time-to-state (+ time 1)) _147) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2850 (= ?x209 _146)))
 (let (($x2855 (and $x2850 $x225)))
 (=> $x2855 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2868 (= ?x209 _147)))
 (=> (and $x2868 $x208) (and (= (time-to-state (+ time 1)) _148) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2868 (= ?x209 _147)))
 (let (($x2873 (and $x2868 $x225)))
 (=> $x2873 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2886 (= ?x209 _148)))
 (=> (and $x2886 $x208) (and (= (time-to-state (+ time 1)) _149) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2886 (= ?x209 _148)))
 (let (($x2891 (and $x2886 $x225)))
 (=> $x2891 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let (($x203 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x207 (input-arg0 time)))
 (let (($x208 (and (distinct ?x207 0) true)))
 (let ((?x209 (time-to-state time)))
 (let (($x2904 (= ?x209 _149)))
 (=> (and $x2904 $x208) (and (= (time-to-state (+ time 1)) _150) $x203))))))))
 )
(assert
 (forall ((time Int) )(let ((?x201 (+ time 1)))
 (let ((?x204 (time-to-state ?x201)))
 (let (($x224 (= ?x204 ERR)))
 (let ((?x207 (input-arg0 time)))
 (let (($x225 (= ?x207 1)))
 (let ((?x209 (time-to-state time)))
 (let (($x2904 (= ?x209 _149)))
 (let (($x2909 (and $x2904 $x225)))
 (=> $x2909 $x224))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x209 (time-to-state time)))
 (let (($x2912 (= ?x209 ERR)))
 (and $x2912 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150) true))
(check-sat)
