; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(assert
 (let ((?x269 (time-to-state 0)))
 (= ?x269 _0)))
(assert
 (let ((?x289 (input-arg0 0)))
 (= ?x289 0)))
(assert
 (let ((?x291 (var1_0 0)))
 (= ?x291 0)))
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x320 (= ?x319 _0)))
 (let (($x336 (and $x320 $x335)))
 (=> $x336 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x350 (= ?x319 _1)))
 (let (($x355 (and $x350 $x335)))
 (=> $x355 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x368 (= ?x319 _2)))
 (let (($x373 (and $x368 $x335)))
 (=> $x373 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x386 (= ?x319 _3)))
 (let (($x391 (and $x386 $x335)))
 (=> $x391 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x404 (= ?x319 _4)))
 (let (($x409 (and $x404 $x335)))
 (=> $x409 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x422 (= ?x319 _5)))
 (let (($x427 (and $x422 $x335)))
 (=> $x427 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x440 (= ?x319 _6)))
 (let (($x445 (and $x440 $x335)))
 (=> $x445 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x458 (= ?x319 _7)))
 (let (($x463 (and $x458 $x335)))
 (=> $x463 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x476 (= ?x319 _8)))
 (let (($x481 (and $x476 $x335)))
 (=> $x481 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x494 (= ?x319 _9)))
 (let (($x499 (and $x494 $x335)))
 (=> $x499 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x512 (= ?x319 _10)))
 (let (($x517 (and $x512 $x335)))
 (=> $x517 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x530 (= ?x319 _11)))
 (let (($x535 (and $x530 $x335)))
 (=> $x535 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x548 (= ?x319 _12)))
 (let (($x553 (and $x548 $x335)))
 (=> $x553 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x566 (= ?x319 _13)))
 (let (($x571 (and $x566 $x335)))
 (=> $x571 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x584 (= ?x319 _14)))
 (let (($x589 (and $x584 $x335)))
 (=> $x589 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x602 (= ?x319 _15)))
 (let (($x607 (and $x602 $x335)))
 (=> $x607 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x620 (= ?x319 _16)))
 (let (($x625 (and $x620 $x335)))
 (=> $x625 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x638 (= ?x319 _17)))
 (let (($x643 (and $x638 $x335)))
 (=> $x643 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x656 (= ?x319 _18)))
 (let (($x661 (and $x656 $x335)))
 (=> $x661 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x674 (= ?x319 _19)))
 (let (($x679 (and $x674 $x335)))
 (=> $x679 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x692 (= ?x319 _20)))
 (let (($x697 (and $x692 $x335)))
 (=> $x697 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x710 (= ?x319 _21)))
 (let (($x715 (and $x710 $x335)))
 (=> $x715 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x728 (= ?x319 _22)))
 (let (($x733 (and $x728 $x335)))
 (=> $x733 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x746 (= ?x319 _23)))
 (let (($x751 (and $x746 $x335)))
 (=> $x751 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x764 (= ?x319 _24)))
 (let (($x769 (and $x764 $x335)))
 (=> $x769 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x782 (= ?x319 _25)))
 (let (($x787 (and $x782 $x335)))
 (=> $x787 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x800 (= ?x319 _26)))
 (let (($x805 (and $x800 $x335)))
 (=> $x805 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x818 (= ?x319 _27)))
 (let (($x823 (and $x818 $x335)))
 (=> $x823 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x836 (= ?x319 _28)))
 (let (($x841 (and $x836 $x335)))
 (=> $x841 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x854 (= ?x319 _29)))
 (let (($x859 (and $x854 $x335)))
 (=> $x859 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x872 (= ?x319 _30)))
 (let (($x877 (and $x872 $x335)))
 (=> $x877 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x890 (= ?x319 _31)))
 (let (($x895 (and $x890 $x335)))
 (=> $x895 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x908 (= ?x319 _32)))
 (let (($x913 (and $x908 $x335)))
 (=> $x913 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x926 (= ?x319 _33)))
 (let (($x931 (and $x926 $x335)))
 (=> $x931 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x944 (= ?x319 _34)))
 (let (($x949 (and $x944 $x335)))
 (=> $x949 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x962 (= ?x319 _35)))
 (let (($x967 (and $x962 $x335)))
 (=> $x967 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x980 (= ?x319 _36)))
 (let (($x985 (and $x980 $x335)))
 (=> $x985 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x998 (= ?x319 _37)))
 (let (($x1003 (and $x998 $x335)))
 (=> $x1003 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1016 (= ?x319 _38)))
 (let (($x1021 (and $x1016 $x335)))
 (=> $x1021 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1034 (= ?x319 _39)))
 (let (($x1039 (and $x1034 $x335)))
 (=> $x1039 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1052 (= ?x319 _40)))
 (let (($x1057 (and $x1052 $x335)))
 (=> $x1057 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1070 (= ?x319 _41)))
 (let (($x1075 (and $x1070 $x335)))
 (=> $x1075 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1088 (= ?x319 _42)))
 (let (($x1093 (and $x1088 $x335)))
 (=> $x1093 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1106 (= ?x319 _43)))
 (let (($x1111 (and $x1106 $x335)))
 (=> $x1111 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1124 (= ?x319 _44)))
 (let (($x1129 (and $x1124 $x335)))
 (=> $x1129 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1142 (= ?x319 _45)))
 (let (($x1147 (and $x1142 $x335)))
 (=> $x1147 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1160 (= ?x319 _46)))
 (let (($x1165 (and $x1160 $x335)))
 (=> $x1165 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1178 (= ?x319 _47)))
 (let (($x1183 (and $x1178 $x335)))
 (=> $x1183 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1196 (= ?x319 _48)))
 (let (($x1201 (and $x1196 $x335)))
 (=> $x1201 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1214 (= ?x319 _49)))
 (let (($x1219 (and $x1214 $x335)))
 (=> $x1219 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1232 (= ?x319 _50)))
 (let (($x1237 (and $x1232 $x335)))
 (=> $x1237 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1250 (= ?x319 _51)))
 (let (($x1255 (and $x1250 $x335)))
 (=> $x1255 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1268 (= ?x319 _52)))
 (let (($x1273 (and $x1268 $x335)))
 (=> $x1273 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1286 (= ?x319 _53)))
 (let (($x1291 (and $x1286 $x335)))
 (=> $x1291 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1304 (= ?x319 _54)))
 (let (($x1309 (and $x1304 $x335)))
 (=> $x1309 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1322 (= ?x319 _55)))
 (let (($x1327 (and $x1322 $x335)))
 (=> $x1327 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1340 (= ?x319 _56)))
 (let (($x1345 (and $x1340 $x335)))
 (=> $x1345 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1358 (= ?x319 _57)))
 (let (($x1363 (and $x1358 $x335)))
 (=> $x1363 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1376 (= ?x319 _58)))
 (let (($x1381 (and $x1376 $x335)))
 (=> $x1381 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1394 (= ?x319 _59)))
 (let (($x1399 (and $x1394 $x335)))
 (=> $x1399 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1412 (= ?x319 _60)))
 (let (($x1417 (and $x1412 $x335)))
 (=> $x1417 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1430 (= ?x319 _61)))
 (let (($x1435 (and $x1430 $x335)))
 (=> $x1435 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1448 (= ?x319 _62)))
 (let (($x1453 (and $x1448 $x335)))
 (=> $x1453 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1466 (= ?x319 _63)))
 (let (($x1471 (and $x1466 $x335)))
 (=> $x1471 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1484 (= ?x319 _64)))
 (let (($x1489 (and $x1484 $x335)))
 (=> $x1489 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1502 (= ?x319 _65)))
 (let (($x1507 (and $x1502 $x335)))
 (=> $x1507 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1520 (= ?x319 _66)))
 (let (($x1525 (and $x1520 $x335)))
 (=> $x1525 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1538 (= ?x319 _67)))
 (let (($x1543 (and $x1538 $x335)))
 (=> $x1543 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1556 (= ?x319 _68)))
 (let (($x1561 (and $x1556 $x335)))
 (=> $x1561 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1574 (= ?x319 _69)))
 (let (($x1579 (and $x1574 $x335)))
 (=> $x1579 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1592 (= ?x319 _70)))
 (let (($x1597 (and $x1592 $x335)))
 (=> $x1597 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1610 (= ?x319 _71)))
 (let (($x1615 (and $x1610 $x335)))
 (=> $x1615 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1628 (= ?x319 _72)))
 (let (($x1633 (and $x1628 $x335)))
 (=> $x1633 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1646 (= ?x319 _73)))
 (let (($x1651 (and $x1646 $x335)))
 (=> $x1651 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1664 (= ?x319 _74)))
 (let (($x1669 (and $x1664 $x335)))
 (=> $x1669 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1682 (= ?x319 _75)))
 (let (($x1687 (and $x1682 $x335)))
 (=> $x1687 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1700 (= ?x319 _76)))
 (let (($x1705 (and $x1700 $x335)))
 (=> $x1705 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1718 (= ?x319 _77)))
 (let (($x1723 (and $x1718 $x335)))
 (=> $x1723 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1736 (= ?x319 _78)))
 (let (($x1741 (and $x1736 $x335)))
 (=> $x1741 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1754 (= ?x319 _79)))
 (let (($x1759 (and $x1754 $x335)))
 (=> $x1759 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1772 (= ?x319 _80)))
 (let (($x1777 (and $x1772 $x335)))
 (=> $x1777 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1790 (= ?x319 _81)))
 (let (($x1795 (and $x1790 $x335)))
 (=> $x1795 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1808 (= ?x319 _82)))
 (let (($x1813 (and $x1808 $x335)))
 (=> $x1813 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1826 (= ?x319 _83)))
 (let (($x1831 (and $x1826 $x335)))
 (=> $x1831 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1844 (= ?x319 _84)))
 (let (($x1849 (and $x1844 $x335)))
 (=> $x1849 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1862 (= ?x319 _85)))
 (let (($x1867 (and $x1862 $x335)))
 (=> $x1867 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1880 (= ?x319 _86)))
 (let (($x1885 (and $x1880 $x335)))
 (=> $x1885 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1898 (= ?x319 _87)))
 (let (($x1903 (and $x1898 $x335)))
 (=> $x1903 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1916 (= ?x319 _88)))
 (let (($x1921 (and $x1916 $x335)))
 (=> $x1921 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1934 (= ?x319 _89)))
 (let (($x1939 (and $x1934 $x335)))
 (=> $x1939 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1952 (= ?x319 _90)))
 (let (($x1957 (and $x1952 $x335)))
 (=> $x1957 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1970 (= ?x319 _91)))
 (let (($x1975 (and $x1970 $x335)))
 (=> $x1975 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x1988 (= ?x319 _92)))
 (let (($x1993 (and $x1988 $x335)))
 (=> $x1993 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2006 (= ?x319 _93)))
 (let (($x2011 (and $x2006 $x335)))
 (=> $x2011 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2024 (= ?x319 _94)))
 (let (($x2029 (and $x2024 $x335)))
 (=> $x2029 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2042 (= ?x319 _95)))
 (let (($x2047 (and $x2042 $x335)))
 (=> $x2047 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2060 (= ?x319 _96)))
 (let (($x2065 (and $x2060 $x335)))
 (=> $x2065 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2078 (= ?x319 _97)))
 (let (($x2083 (and $x2078 $x335)))
 (=> $x2083 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2096 (= ?x319 _98)))
 (let (($x2101 (and $x2096 $x335)))
 (=> $x2101 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x313))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2114 (= ?x319 _99)))
 (let (($x2119 (and $x2114 $x335)))
 (=> $x2119 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2132 (= ?x319 _100)))
 (=> (and $x2132 $x318) (and (= (time-to-state (+ time 1)) _101) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2132 (= ?x319 _100)))
 (let (($x2137 (and $x2132 $x335)))
 (=> $x2137 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2150 (= ?x319 _101)))
 (=> (and $x2150 $x318) (and (= (time-to-state (+ time 1)) _102) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2150 (= ?x319 _101)))
 (let (($x2155 (and $x2150 $x335)))
 (=> $x2155 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2168 (= ?x319 _102)))
 (=> (and $x2168 $x318) (and (= (time-to-state (+ time 1)) _103) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2168 (= ?x319 _102)))
 (let (($x2173 (and $x2168 $x335)))
 (=> $x2173 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2186 (= ?x319 _103)))
 (=> (and $x2186 $x318) (and (= (time-to-state (+ time 1)) _104) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2186 (= ?x319 _103)))
 (let (($x2191 (and $x2186 $x335)))
 (=> $x2191 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2204 (= ?x319 _104)))
 (=> (and $x2204 $x318) (and (= (time-to-state (+ time 1)) _105) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2204 (= ?x319 _104)))
 (let (($x2209 (and $x2204 $x335)))
 (=> $x2209 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2222 (= ?x319 _105)))
 (=> (and $x2222 $x318) (and (= (time-to-state (+ time 1)) _106) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2222 (= ?x319 _105)))
 (let (($x2227 (and $x2222 $x335)))
 (=> $x2227 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2240 (= ?x319 _106)))
 (=> (and $x2240 $x318) (and (= (time-to-state (+ time 1)) _107) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2240 (= ?x319 _106)))
 (let (($x2245 (and $x2240 $x335)))
 (=> $x2245 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2258 (= ?x319 _107)))
 (=> (and $x2258 $x318) (and (= (time-to-state (+ time 1)) _108) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2258 (= ?x319 _107)))
 (let (($x2263 (and $x2258 $x335)))
 (=> $x2263 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2276 (= ?x319 _108)))
 (=> (and $x2276 $x318) (and (= (time-to-state (+ time 1)) _109) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2276 (= ?x319 _108)))
 (let (($x2281 (and $x2276 $x335)))
 (=> $x2281 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2294 (= ?x319 _109)))
 (=> (and $x2294 $x318) (and (= (time-to-state (+ time 1)) _110) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2294 (= ?x319 _109)))
 (let (($x2299 (and $x2294 $x335)))
 (=> $x2299 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2312 (= ?x319 _110)))
 (=> (and $x2312 $x318) (and (= (time-to-state (+ time 1)) _111) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2312 (= ?x319 _110)))
 (let (($x2317 (and $x2312 $x335)))
 (=> $x2317 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2330 (= ?x319 _111)))
 (=> (and $x2330 $x318) (and (= (time-to-state (+ time 1)) _112) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2330 (= ?x319 _111)))
 (let (($x2335 (and $x2330 $x335)))
 (=> $x2335 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2348 (= ?x319 _112)))
 (=> (and $x2348 $x318) (and (= (time-to-state (+ time 1)) _113) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2348 (= ?x319 _112)))
 (let (($x2353 (and $x2348 $x335)))
 (=> $x2353 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2366 (= ?x319 _113)))
 (=> (and $x2366 $x318) (and (= (time-to-state (+ time 1)) _114) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2366 (= ?x319 _113)))
 (let (($x2371 (and $x2366 $x335)))
 (=> $x2371 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2384 (= ?x319 _114)))
 (=> (and $x2384 $x318) (and (= (time-to-state (+ time 1)) _115) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2384 (= ?x319 _114)))
 (let (($x2389 (and $x2384 $x335)))
 (=> $x2389 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2402 (= ?x319 _115)))
 (=> (and $x2402 $x318) (and (= (time-to-state (+ time 1)) _116) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2402 (= ?x319 _115)))
 (let (($x2407 (and $x2402 $x335)))
 (=> $x2407 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2420 (= ?x319 _116)))
 (=> (and $x2420 $x318) (and (= (time-to-state (+ time 1)) _117) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2420 (= ?x319 _116)))
 (let (($x2425 (and $x2420 $x335)))
 (=> $x2425 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2438 (= ?x319 _117)))
 (=> (and $x2438 $x318) (and (= (time-to-state (+ time 1)) _118) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2438 (= ?x319 _117)))
 (let (($x2443 (and $x2438 $x335)))
 (=> $x2443 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2456 (= ?x319 _118)))
 (=> (and $x2456 $x318) (and (= (time-to-state (+ time 1)) _119) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2456 (= ?x319 _118)))
 (let (($x2461 (and $x2456 $x335)))
 (=> $x2461 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2474 (= ?x319 _119)))
 (=> (and $x2474 $x318) (and (= (time-to-state (+ time 1)) _120) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2474 (= ?x319 _119)))
 (let (($x2479 (and $x2474 $x335)))
 (=> $x2479 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2492 (= ?x319 _120)))
 (=> (and $x2492 $x318) (and (= (time-to-state (+ time 1)) _121) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2492 (= ?x319 _120)))
 (let (($x2497 (and $x2492 $x335)))
 (=> $x2497 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2510 (= ?x319 _121)))
 (=> (and $x2510 $x318) (and (= (time-to-state (+ time 1)) _122) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2510 (= ?x319 _121)))
 (let (($x2515 (and $x2510 $x335)))
 (=> $x2515 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2528 (= ?x319 _122)))
 (=> (and $x2528 $x318) (and (= (time-to-state (+ time 1)) _123) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2528 (= ?x319 _122)))
 (let (($x2533 (and $x2528 $x335)))
 (=> $x2533 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2546 (= ?x319 _123)))
 (=> (and $x2546 $x318) (and (= (time-to-state (+ time 1)) _124) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2546 (= ?x319 _123)))
 (let (($x2551 (and $x2546 $x335)))
 (=> $x2551 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2564 (= ?x319 _124)))
 (=> (and $x2564 $x318) (and (= (time-to-state (+ time 1)) _125) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2564 (= ?x319 _124)))
 (let (($x2569 (and $x2564 $x335)))
 (=> $x2569 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2582 (= ?x319 _125)))
 (=> (and $x2582 $x318) (and (= (time-to-state (+ time 1)) _126) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2582 (= ?x319 _125)))
 (let (($x2587 (and $x2582 $x335)))
 (=> $x2587 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2600 (= ?x319 _126)))
 (=> (and $x2600 $x318) (and (= (time-to-state (+ time 1)) _127) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2600 (= ?x319 _126)))
 (let (($x2605 (and $x2600 $x335)))
 (=> $x2605 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2618 (= ?x319 _127)))
 (=> (and $x2618 $x318) (and (= (time-to-state (+ time 1)) _128) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2618 (= ?x319 _127)))
 (let (($x2623 (and $x2618 $x335)))
 (=> $x2623 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2636 (= ?x319 _128)))
 (=> (and $x2636 $x318) (and (= (time-to-state (+ time 1)) _129) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2636 (= ?x319 _128)))
 (let (($x2641 (and $x2636 $x335)))
 (=> $x2641 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2654 (= ?x319 _129)))
 (=> (and $x2654 $x318) (and (= (time-to-state (+ time 1)) _130) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2654 (= ?x319 _129)))
 (let (($x2659 (and $x2654 $x335)))
 (=> $x2659 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2672 (= ?x319 _130)))
 (=> (and $x2672 $x318) (and (= (time-to-state (+ time 1)) _131) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2672 (= ?x319 _130)))
 (let (($x2677 (and $x2672 $x335)))
 (=> $x2677 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2690 (= ?x319 _131)))
 (=> (and $x2690 $x318) (and (= (time-to-state (+ time 1)) _132) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2690 (= ?x319 _131)))
 (let (($x2695 (and $x2690 $x335)))
 (=> $x2695 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2708 (= ?x319 _132)))
 (=> (and $x2708 $x318) (and (= (time-to-state (+ time 1)) _133) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2708 (= ?x319 _132)))
 (let (($x2713 (and $x2708 $x335)))
 (=> $x2713 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2726 (= ?x319 _133)))
 (=> (and $x2726 $x318) (and (= (time-to-state (+ time 1)) _134) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2726 (= ?x319 _133)))
 (let (($x2731 (and $x2726 $x335)))
 (=> $x2731 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2744 (= ?x319 _134)))
 (=> (and $x2744 $x318) (and (= (time-to-state (+ time 1)) _135) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2744 (= ?x319 _134)))
 (let (($x2749 (and $x2744 $x335)))
 (=> $x2749 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2762 (= ?x319 _135)))
 (=> (and $x2762 $x318) (and (= (time-to-state (+ time 1)) _136) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2762 (= ?x319 _135)))
 (let (($x2767 (and $x2762 $x335)))
 (=> $x2767 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2780 (= ?x319 _136)))
 (=> (and $x2780 $x318) (and (= (time-to-state (+ time 1)) _137) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2780 (= ?x319 _136)))
 (let (($x2785 (and $x2780 $x335)))
 (=> $x2785 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2798 (= ?x319 _137)))
 (=> (and $x2798 $x318) (and (= (time-to-state (+ time 1)) _138) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2798 (= ?x319 _137)))
 (let (($x2803 (and $x2798 $x335)))
 (=> $x2803 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2816 (= ?x319 _138)))
 (=> (and $x2816 $x318) (and (= (time-to-state (+ time 1)) _139) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2816 (= ?x319 _138)))
 (let (($x2821 (and $x2816 $x335)))
 (=> $x2821 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2834 (= ?x319 _139)))
 (=> (and $x2834 $x318) (and (= (time-to-state (+ time 1)) _140) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2834 (= ?x319 _139)))
 (let (($x2839 (and $x2834 $x335)))
 (=> $x2839 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2852 (= ?x319 _140)))
 (=> (and $x2852 $x318) (and (= (time-to-state (+ time 1)) _141) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2852 (= ?x319 _140)))
 (let (($x2857 (and $x2852 $x335)))
 (=> $x2857 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2870 (= ?x319 _141)))
 (=> (and $x2870 $x318) (and (= (time-to-state (+ time 1)) _142) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2870 (= ?x319 _141)))
 (let (($x2875 (and $x2870 $x335)))
 (=> $x2875 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2888 (= ?x319 _142)))
 (=> (and $x2888 $x318) (and (= (time-to-state (+ time 1)) _143) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2888 (= ?x319 _142)))
 (let (($x2893 (and $x2888 $x335)))
 (=> $x2893 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2906 (= ?x319 _143)))
 (=> (and $x2906 $x318) (and (= (time-to-state (+ time 1)) _144) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2906 (= ?x319 _143)))
 (let (($x2911 (and $x2906 $x335)))
 (=> $x2911 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2924 (= ?x319 _144)))
 (=> (and $x2924 $x318) (and (= (time-to-state (+ time 1)) _145) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2924 (= ?x319 _144)))
 (let (($x2929 (and $x2924 $x335)))
 (=> $x2929 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2942 (= ?x319 _145)))
 (=> (and $x2942 $x318) (and (= (time-to-state (+ time 1)) _146) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2942 (= ?x319 _145)))
 (let (($x2947 (and $x2942 $x335)))
 (=> $x2947 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2960 (= ?x319 _146)))
 (=> (and $x2960 $x318) (and (= (time-to-state (+ time 1)) _147) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2960 (= ?x319 _146)))
 (let (($x2965 (and $x2960 $x335)))
 (=> $x2965 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2978 (= ?x319 _147)))
 (=> (and $x2978 $x318) (and (= (time-to-state (+ time 1)) _148) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2978 (= ?x319 _147)))
 (let (($x2983 (and $x2978 $x335)))
 (=> $x2983 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x2996 (= ?x319 _148)))
 (=> (and $x2996 $x318) (and (= (time-to-state (+ time 1)) _149) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x2996 (= ?x319 _148)))
 (let (($x3001 (and $x2996 $x335)))
 (=> $x3001 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3014 (= ?x319 _149)))
 (=> (and $x3014 $x318) (and (= (time-to-state (+ time 1)) _150) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3014 (= ?x319 _149)))
 (let (($x3019 (and $x3014 $x335)))
 (=> $x3019 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3032 (= ?x319 _150)))
 (=> (and $x3032 $x318) (and (= (time-to-state (+ time 1)) _151) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3032 (= ?x319 _150)))
 (let (($x3037 (and $x3032 $x335)))
 (=> $x3037 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3050 (= ?x319 _151)))
 (=> (and $x3050 $x318) (and (= (time-to-state (+ time 1)) _152) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3050 (= ?x319 _151)))
 (let (($x3055 (and $x3050 $x335)))
 (=> $x3055 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3068 (= ?x319 _152)))
 (=> (and $x3068 $x318) (and (= (time-to-state (+ time 1)) _153) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3068 (= ?x319 _152)))
 (let (($x3073 (and $x3068 $x335)))
 (=> $x3073 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3086 (= ?x319 _153)))
 (=> (and $x3086 $x318) (and (= (time-to-state (+ time 1)) _154) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3086 (= ?x319 _153)))
 (let (($x3091 (and $x3086 $x335)))
 (=> $x3091 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3104 (= ?x319 _154)))
 (=> (and $x3104 $x318) (and (= (time-to-state (+ time 1)) _155) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3104 (= ?x319 _154)))
 (let (($x3109 (and $x3104 $x335)))
 (=> $x3109 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3122 (= ?x319 _155)))
 (=> (and $x3122 $x318) (and (= (time-to-state (+ time 1)) _156) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3122 (= ?x319 _155)))
 (let (($x3127 (and $x3122 $x335)))
 (=> $x3127 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3140 (= ?x319 _156)))
 (=> (and $x3140 $x318) (and (= (time-to-state (+ time 1)) _157) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3140 (= ?x319 _156)))
 (let (($x3145 (and $x3140 $x335)))
 (=> $x3145 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3158 (= ?x319 _157)))
 (=> (and $x3158 $x318) (and (= (time-to-state (+ time 1)) _158) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3158 (= ?x319 _157)))
 (let (($x3163 (and $x3158 $x335)))
 (=> $x3163 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3176 (= ?x319 _158)))
 (=> (and $x3176 $x318) (and (= (time-to-state (+ time 1)) _159) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3176 (= ?x319 _158)))
 (let (($x3181 (and $x3176 $x335)))
 (=> $x3181 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3194 (= ?x319 _159)))
 (=> (and $x3194 $x318) (and (= (time-to-state (+ time 1)) _160) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3194 (= ?x319 _159)))
 (let (($x3199 (and $x3194 $x335)))
 (=> $x3199 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3212 (= ?x319 _160)))
 (=> (and $x3212 $x318) (and (= (time-to-state (+ time 1)) _161) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3212 (= ?x319 _160)))
 (let (($x3217 (and $x3212 $x335)))
 (=> $x3217 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3230 (= ?x319 _161)))
 (=> (and $x3230 $x318) (and (= (time-to-state (+ time 1)) _162) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3230 (= ?x319 _161)))
 (let (($x3235 (and $x3230 $x335)))
 (=> $x3235 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3248 (= ?x319 _162)))
 (=> (and $x3248 $x318) (and (= (time-to-state (+ time 1)) _163) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3248 (= ?x319 _162)))
 (let (($x3253 (and $x3248 $x335)))
 (=> $x3253 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3266 (= ?x319 _163)))
 (=> (and $x3266 $x318) (and (= (time-to-state (+ time 1)) _164) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3266 (= ?x319 _163)))
 (let (($x3271 (and $x3266 $x335)))
 (=> $x3271 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3284 (= ?x319 _164)))
 (=> (and $x3284 $x318) (and (= (time-to-state (+ time 1)) _165) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3284 (= ?x319 _164)))
 (let (($x3289 (and $x3284 $x335)))
 (=> $x3289 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3302 (= ?x319 _165)))
 (=> (and $x3302 $x318) (and (= (time-to-state (+ time 1)) _166) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3302 (= ?x319 _165)))
 (let (($x3307 (and $x3302 $x335)))
 (=> $x3307 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3320 (= ?x319 _166)))
 (=> (and $x3320 $x318) (and (= (time-to-state (+ time 1)) _167) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3320 (= ?x319 _166)))
 (let (($x3325 (and $x3320 $x335)))
 (=> $x3325 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3338 (= ?x319 _167)))
 (=> (and $x3338 $x318) (and (= (time-to-state (+ time 1)) _168) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3338 (= ?x319 _167)))
 (let (($x3343 (and $x3338 $x335)))
 (=> $x3343 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3356 (= ?x319 _168)))
 (=> (and $x3356 $x318) (and (= (time-to-state (+ time 1)) _169) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3356 (= ?x319 _168)))
 (let (($x3361 (and $x3356 $x335)))
 (=> $x3361 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3374 (= ?x319 _169)))
 (=> (and $x3374 $x318) (and (= (time-to-state (+ time 1)) _170) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3374 (= ?x319 _169)))
 (let (($x3379 (and $x3374 $x335)))
 (=> $x3379 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3392 (= ?x319 _170)))
 (=> (and $x3392 $x318) (and (= (time-to-state (+ time 1)) _171) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3392 (= ?x319 _170)))
 (let (($x3397 (and $x3392 $x335)))
 (=> $x3397 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3410 (= ?x319 _171)))
 (=> (and $x3410 $x318) (and (= (time-to-state (+ time 1)) _172) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3410 (= ?x319 _171)))
 (let (($x3415 (and $x3410 $x335)))
 (=> $x3415 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3428 (= ?x319 _172)))
 (=> (and $x3428 $x318) (and (= (time-to-state (+ time 1)) _173) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3428 (= ?x319 _172)))
 (let (($x3433 (and $x3428 $x335)))
 (=> $x3433 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3446 (= ?x319 _173)))
 (=> (and $x3446 $x318) (and (= (time-to-state (+ time 1)) _174) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3446 (= ?x319 _173)))
 (let (($x3451 (and $x3446 $x335)))
 (=> $x3451 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3464 (= ?x319 _174)))
 (=> (and $x3464 $x318) (and (= (time-to-state (+ time 1)) _175) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3464 (= ?x319 _174)))
 (let (($x3469 (and $x3464 $x335)))
 (=> $x3469 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3482 (= ?x319 _175)))
 (=> (and $x3482 $x318) (and (= (time-to-state (+ time 1)) _176) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3482 (= ?x319 _175)))
 (let (($x3487 (and $x3482 $x335)))
 (=> $x3487 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3500 (= ?x319 _176)))
 (=> (and $x3500 $x318) (and (= (time-to-state (+ time 1)) _177) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3500 (= ?x319 _176)))
 (let (($x3505 (and $x3500 $x335)))
 (=> $x3505 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3518 (= ?x319 _177)))
 (=> (and $x3518 $x318) (and (= (time-to-state (+ time 1)) _178) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3518 (= ?x319 _177)))
 (let (($x3523 (and $x3518 $x335)))
 (=> $x3523 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3536 (= ?x319 _178)))
 (=> (and $x3536 $x318) (and (= (time-to-state (+ time 1)) _179) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3536 (= ?x319 _178)))
 (let (($x3541 (and $x3536 $x335)))
 (=> $x3541 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3554 (= ?x319 _179)))
 (=> (and $x3554 $x318) (and (= (time-to-state (+ time 1)) _180) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3554 (= ?x319 _179)))
 (let (($x3559 (and $x3554 $x335)))
 (=> $x3559 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3572 (= ?x319 _180)))
 (=> (and $x3572 $x318) (and (= (time-to-state (+ time 1)) _181) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3572 (= ?x319 _180)))
 (let (($x3577 (and $x3572 $x335)))
 (=> $x3577 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3590 (= ?x319 _181)))
 (=> (and $x3590 $x318) (and (= (time-to-state (+ time 1)) _182) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3590 (= ?x319 _181)))
 (let (($x3595 (and $x3590 $x335)))
 (=> $x3595 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3608 (= ?x319 _182)))
 (=> (and $x3608 $x318) (and (= (time-to-state (+ time 1)) _183) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3608 (= ?x319 _182)))
 (let (($x3613 (and $x3608 $x335)))
 (=> $x3613 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3626 (= ?x319 _183)))
 (=> (and $x3626 $x318) (and (= (time-to-state (+ time 1)) _184) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3626 (= ?x319 _183)))
 (let (($x3631 (and $x3626 $x335)))
 (=> $x3631 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3644 (= ?x319 _184)))
 (=> (and $x3644 $x318) (and (= (time-to-state (+ time 1)) _185) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3644 (= ?x319 _184)))
 (let (($x3649 (and $x3644 $x335)))
 (=> $x3649 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3662 (= ?x319 _185)))
 (=> (and $x3662 $x318) (and (= (time-to-state (+ time 1)) _186) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3662 (= ?x319 _185)))
 (let (($x3667 (and $x3662 $x335)))
 (=> $x3667 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3680 (= ?x319 _186)))
 (=> (and $x3680 $x318) (and (= (time-to-state (+ time 1)) _187) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3680 (= ?x319 _186)))
 (let (($x3685 (and $x3680 $x335)))
 (=> $x3685 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3698 (= ?x319 _187)))
 (=> (and $x3698 $x318) (and (= (time-to-state (+ time 1)) _188) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3698 (= ?x319 _187)))
 (let (($x3703 (and $x3698 $x335)))
 (=> $x3703 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3716 (= ?x319 _188)))
 (=> (and $x3716 $x318) (and (= (time-to-state (+ time 1)) _189) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3716 (= ?x319 _188)))
 (let (($x3721 (and $x3716 $x335)))
 (=> $x3721 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3734 (= ?x319 _189)))
 (=> (and $x3734 $x318) (and (= (time-to-state (+ time 1)) _190) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3734 (= ?x319 _189)))
 (let (($x3739 (and $x3734 $x335)))
 (=> $x3739 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3752 (= ?x319 _190)))
 (=> (and $x3752 $x318) (and (= (time-to-state (+ time 1)) _191) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3752 (= ?x319 _190)))
 (let (($x3757 (and $x3752 $x335)))
 (=> $x3757 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3770 (= ?x319 _191)))
 (=> (and $x3770 $x318) (and (= (time-to-state (+ time 1)) _192) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3770 (= ?x319 _191)))
 (let (($x3775 (and $x3770 $x335)))
 (=> $x3775 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3788 (= ?x319 _192)))
 (=> (and $x3788 $x318) (and (= (time-to-state (+ time 1)) _193) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3788 (= ?x319 _192)))
 (let (($x3793 (and $x3788 $x335)))
 (=> $x3793 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3806 (= ?x319 _193)))
 (=> (and $x3806 $x318) (and (= (time-to-state (+ time 1)) _194) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3806 (= ?x319 _193)))
 (let (($x3811 (and $x3806 $x335)))
 (=> $x3811 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3824 (= ?x319 _194)))
 (=> (and $x3824 $x318) (and (= (time-to-state (+ time 1)) _195) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3824 (= ?x319 _194)))
 (let (($x3829 (and $x3824 $x335)))
 (=> $x3829 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3842 (= ?x319 _195)))
 (=> (and $x3842 $x318) (and (= (time-to-state (+ time 1)) _196) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3842 (= ?x319 _195)))
 (let (($x3847 (and $x3842 $x335)))
 (=> $x3847 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3860 (= ?x319 _196)))
 (=> (and $x3860 $x318) (and (= (time-to-state (+ time 1)) _197) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3860 (= ?x319 _196)))
 (let (($x3865 (and $x3860 $x335)))
 (=> $x3865 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3878 (= ?x319 _197)))
 (=> (and $x3878 $x318) (and (= (time-to-state (+ time 1)) _198) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3878 (= ?x319 _197)))
 (let (($x3883 (and $x3878 $x335)))
 (=> $x3883 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3896 (= ?x319 _198)))
 (=> (and $x3896 $x318) (and (= (time-to-state (+ time 1)) _199) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3896 (= ?x319 _198)))
 (let (($x3901 (and $x3896 $x335)))
 (=> $x3901 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3914 (= ?x319 _199)))
 (=> (and $x3914 $x318) (and (= (time-to-state (+ time 1)) _200) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3914 (= ?x319 _199)))
 (let (($x3919 (and $x3914 $x335)))
 (=> $x3919 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3932 (= ?x319 _200)))
 (=> (and $x3932 $x318) (and (= (time-to-state (+ time 1)) _201) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3932 (= ?x319 _200)))
 (let (($x3937 (and $x3932 $x335)))
 (=> $x3937 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3950 (= ?x319 _201)))
 (=> (and $x3950 $x318) (and (= (time-to-state (+ time 1)) _202) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3950 (= ?x319 _201)))
 (let (($x3955 (and $x3950 $x335)))
 (=> $x3955 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3968 (= ?x319 _202)))
 (=> (and $x3968 $x318) (and (= (time-to-state (+ time 1)) _203) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3968 (= ?x319 _202)))
 (let (($x3973 (and $x3968 $x335)))
 (=> $x3973 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x3986 (= ?x319 _203)))
 (=> (and $x3986 $x318) (and (= (time-to-state (+ time 1)) _204) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x3986 (= ?x319 _203)))
 (let (($x3991 (and $x3986 $x335)))
 (=> $x3991 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4004 (= ?x319 _204)))
 (=> (and $x4004 $x318) (and (= (time-to-state (+ time 1)) _205) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4004 (= ?x319 _204)))
 (let (($x4009 (and $x4004 $x335)))
 (=> $x4009 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4022 (= ?x319 _205)))
 (=> (and $x4022 $x318) (and (= (time-to-state (+ time 1)) _206) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4022 (= ?x319 _205)))
 (let (($x4027 (and $x4022 $x335)))
 (=> $x4027 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4040 (= ?x319 _206)))
 (=> (and $x4040 $x318) (and (= (time-to-state (+ time 1)) _207) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4040 (= ?x319 _206)))
 (let (($x4045 (and $x4040 $x335)))
 (=> $x4045 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4058 (= ?x319 _207)))
 (=> (and $x4058 $x318) (and (= (time-to-state (+ time 1)) _208) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4058 (= ?x319 _207)))
 (let (($x4063 (and $x4058 $x335)))
 (=> $x4063 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4076 (= ?x319 _208)))
 (=> (and $x4076 $x318) (and (= (time-to-state (+ time 1)) _209) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4076 (= ?x319 _208)))
 (let (($x4081 (and $x4076 $x335)))
 (=> $x4081 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4094 (= ?x319 _209)))
 (=> (and $x4094 $x318) (and (= (time-to-state (+ time 1)) _210) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4094 (= ?x319 _209)))
 (let (($x4099 (and $x4094 $x335)))
 (=> $x4099 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4112 (= ?x319 _210)))
 (=> (and $x4112 $x318) (and (= (time-to-state (+ time 1)) _211) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4112 (= ?x319 _210)))
 (let (($x4117 (and $x4112 $x335)))
 (=> $x4117 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4130 (= ?x319 _211)))
 (=> (and $x4130 $x318) (and (= (time-to-state (+ time 1)) _212) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4130 (= ?x319 _211)))
 (let (($x4135 (and $x4130 $x335)))
 (=> $x4135 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4148 (= ?x319 _212)))
 (=> (and $x4148 $x318) (and (= (time-to-state (+ time 1)) _213) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4148 (= ?x319 _212)))
 (let (($x4153 (and $x4148 $x335)))
 (=> $x4153 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4166 (= ?x319 _213)))
 (=> (and $x4166 $x318) (and (= (time-to-state (+ time 1)) _214) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4166 (= ?x319 _213)))
 (let (($x4171 (and $x4166 $x335)))
 (=> $x4171 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4184 (= ?x319 _214)))
 (=> (and $x4184 $x318) (and (= (time-to-state (+ time 1)) _215) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4184 (= ?x319 _214)))
 (let (($x4189 (and $x4184 $x335)))
 (=> $x4189 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4202 (= ?x319 _215)))
 (=> (and $x4202 $x318) (and (= (time-to-state (+ time 1)) _216) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4202 (= ?x319 _215)))
 (let (($x4207 (and $x4202 $x335)))
 (=> $x4207 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4220 (= ?x319 _216)))
 (=> (and $x4220 $x318) (and (= (time-to-state (+ time 1)) _217) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4220 (= ?x319 _216)))
 (let (($x4225 (and $x4220 $x335)))
 (=> $x4225 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4238 (= ?x319 _217)))
 (=> (and $x4238 $x318) (and (= (time-to-state (+ time 1)) _218) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4238 (= ?x319 _217)))
 (let (($x4243 (and $x4238 $x335)))
 (=> $x4243 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4256 (= ?x319 _218)))
 (=> (and $x4256 $x318) (and (= (time-to-state (+ time 1)) _219) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4256 (= ?x319 _218)))
 (let (($x4261 (and $x4256 $x335)))
 (=> $x4261 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4274 (= ?x319 _219)))
 (=> (and $x4274 $x318) (and (= (time-to-state (+ time 1)) _220) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4274 (= ?x319 _219)))
 (let (($x4279 (and $x4274 $x335)))
 (=> $x4279 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4292 (= ?x319 _220)))
 (=> (and $x4292 $x318) (and (= (time-to-state (+ time 1)) _221) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4292 (= ?x319 _220)))
 (let (($x4297 (and $x4292 $x335)))
 (=> $x4297 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4310 (= ?x319 _221)))
 (=> (and $x4310 $x318) (and (= (time-to-state (+ time 1)) _222) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4310 (= ?x319 _221)))
 (let (($x4315 (and $x4310 $x335)))
 (=> $x4315 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4328 (= ?x319 _222)))
 (=> (and $x4328 $x318) (and (= (time-to-state (+ time 1)) _223) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4328 (= ?x319 _222)))
 (let (($x4333 (and $x4328 $x335)))
 (=> $x4333 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4346 (= ?x319 _223)))
 (=> (and $x4346 $x318) (and (= (time-to-state (+ time 1)) _224) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4346 (= ?x319 _223)))
 (let (($x4351 (and $x4346 $x335)))
 (=> $x4351 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4364 (= ?x319 _224)))
 (=> (and $x4364 $x318) (and (= (time-to-state (+ time 1)) _225) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4364 (= ?x319 _224)))
 (let (($x4369 (and $x4364 $x335)))
 (=> $x4369 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4382 (= ?x319 _225)))
 (=> (and $x4382 $x318) (and (= (time-to-state (+ time 1)) _226) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4382 (= ?x319 _225)))
 (let (($x4387 (and $x4382 $x335)))
 (=> $x4387 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4400 (= ?x319 _226)))
 (=> (and $x4400 $x318) (and (= (time-to-state (+ time 1)) _227) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4400 (= ?x319 _226)))
 (let (($x4405 (and $x4400 $x335)))
 (=> $x4405 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4418 (= ?x319 _227)))
 (=> (and $x4418 $x318) (and (= (time-to-state (+ time 1)) _228) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4418 (= ?x319 _227)))
 (let (($x4423 (and $x4418 $x335)))
 (=> $x4423 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4436 (= ?x319 _228)))
 (=> (and $x4436 $x318) (and (= (time-to-state (+ time 1)) _229) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4436 (= ?x319 _228)))
 (let (($x4441 (and $x4436 $x335)))
 (=> $x4441 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4454 (= ?x319 _229)))
 (=> (and $x4454 $x318) (and (= (time-to-state (+ time 1)) _230) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4454 (= ?x319 _229)))
 (let (($x4459 (and $x4454 $x335)))
 (=> $x4459 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4472 (= ?x319 _230)))
 (=> (and $x4472 $x318) (and (= (time-to-state (+ time 1)) _231) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4472 (= ?x319 _230)))
 (let (($x4477 (and $x4472 $x335)))
 (=> $x4477 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4490 (= ?x319 _231)))
 (=> (and $x4490 $x318) (and (= (time-to-state (+ time 1)) _232) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4490 (= ?x319 _231)))
 (let (($x4495 (and $x4490 $x335)))
 (=> $x4495 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4508 (= ?x319 _232)))
 (=> (and $x4508 $x318) (and (= (time-to-state (+ time 1)) _233) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4508 (= ?x319 _232)))
 (let (($x4513 (and $x4508 $x335)))
 (=> $x4513 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4526 (= ?x319 _233)))
 (=> (and $x4526 $x318) (and (= (time-to-state (+ time 1)) _234) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4526 (= ?x319 _233)))
 (let (($x4531 (and $x4526 $x335)))
 (=> $x4531 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4544 (= ?x319 _234)))
 (=> (and $x4544 $x318) (and (= (time-to-state (+ time 1)) _235) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4544 (= ?x319 _234)))
 (let (($x4549 (and $x4544 $x335)))
 (=> $x4549 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4562 (= ?x319 _235)))
 (=> (and $x4562 $x318) (and (= (time-to-state (+ time 1)) _236) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4562 (= ?x319 _235)))
 (let (($x4567 (and $x4562 $x335)))
 (=> $x4567 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4580 (= ?x319 _236)))
 (=> (and $x4580 $x318) (and (= (time-to-state (+ time 1)) _237) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4580 (= ?x319 _236)))
 (let (($x4585 (and $x4580 $x335)))
 (=> $x4585 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4598 (= ?x319 _237)))
 (=> (and $x4598 $x318) (and (= (time-to-state (+ time 1)) _238) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4598 (= ?x319 _237)))
 (let (($x4603 (and $x4598 $x335)))
 (=> $x4603 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4616 (= ?x319 _238)))
 (=> (and $x4616 $x318) (and (= (time-to-state (+ time 1)) _239) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4616 (= ?x319 _238)))
 (let (($x4621 (and $x4616 $x335)))
 (=> $x4621 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4634 (= ?x319 _239)))
 (=> (and $x4634 $x318) (and (= (time-to-state (+ time 1)) _240) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4634 (= ?x319 _239)))
 (let (($x4639 (and $x4634 $x335)))
 (=> $x4639 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4652 (= ?x319 _240)))
 (=> (and $x4652 $x318) (and (= (time-to-state (+ time 1)) _241) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4652 (= ?x319 _240)))
 (let (($x4657 (and $x4652 $x335)))
 (=> $x4657 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4670 (= ?x319 _241)))
 (=> (and $x4670 $x318) (and (= (time-to-state (+ time 1)) _242) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4670 (= ?x319 _241)))
 (let (($x4675 (and $x4670 $x335)))
 (=> $x4675 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4688 (= ?x319 _242)))
 (=> (and $x4688 $x318) (and (= (time-to-state (+ time 1)) _243) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4688 (= ?x319 _242)))
 (let (($x4693 (and $x4688 $x335)))
 (=> $x4693 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4706 (= ?x319 _243)))
 (=> (and $x4706 $x318) (and (= (time-to-state (+ time 1)) _244) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4706 (= ?x319 _243)))
 (let (($x4711 (and $x4706 $x335)))
 (=> $x4711 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4724 (= ?x319 _244)))
 (=> (and $x4724 $x318) (and (= (time-to-state (+ time 1)) _245) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4724 (= ?x319 _244)))
 (let (($x4729 (and $x4724 $x335)))
 (=> $x4729 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4742 (= ?x319 _245)))
 (=> (and $x4742 $x318) (and (= (time-to-state (+ time 1)) _246) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4742 (= ?x319 _245)))
 (let (($x4747 (and $x4742 $x335)))
 (=> $x4747 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4760 (= ?x319 _246)))
 (=> (and $x4760 $x318) (and (= (time-to-state (+ time 1)) _247) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4760 (= ?x319 _246)))
 (let (($x4765 (and $x4760 $x335)))
 (=> $x4765 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4778 (= ?x319 _247)))
 (=> (and $x4778 $x318) (and (= (time-to-state (+ time 1)) _248) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4778 (= ?x319 _247)))
 (let (($x4783 (and $x4778 $x335)))
 (=> $x4783 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4796 (= ?x319 _248)))
 (=> (and $x4796 $x318) (and (= (time-to-state (+ time 1)) _249) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4796 (= ?x319 _248)))
 (let (($x4801 (and $x4796 $x335)))
 (=> $x4801 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4814 (= ?x319 _249)))
 (=> (and $x4814 $x318) (and (= (time-to-state (+ time 1)) _250) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4814 (= ?x319 _249)))
 (let (($x4819 (and $x4814 $x335)))
 (=> $x4819 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4832 (= ?x319 _250)))
 (=> (and $x4832 $x318) (and (= (time-to-state (+ time 1)) _251) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4832 (= ?x319 _250)))
 (let (($x4837 (and $x4832 $x335)))
 (=> $x4837 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4850 (= ?x319 _251)))
 (=> (and $x4850 $x318) (and (= (time-to-state (+ time 1)) _252) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4850 (= ?x319 _251)))
 (let (($x4855 (and $x4850 $x335)))
 (=> $x4855 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4868 (= ?x319 _252)))
 (=> (and $x4868 $x318) (and (= (time-to-state (+ time 1)) _253) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4868 (= ?x319 _252)))
 (let (($x4873 (and $x4868 $x335)))
 (=> $x4873 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4886 (= ?x319 _253)))
 (=> (and $x4886 $x318) (and (= (time-to-state (+ time 1)) _254) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4886 (= ?x319 _253)))
 (let (($x4891 (and $x4886 $x335)))
 (=> $x4891 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4904 (= ?x319 _254)))
 (=> (and $x4904 $x318) (and (= (time-to-state (+ time 1)) _255) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4904 (= ?x319 _254)))
 (let (($x4909 (and $x4904 $x335)))
 (=> $x4909 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4922 (= ?x319 _255)))
 (=> (and $x4922 $x318) (and (= (time-to-state (+ time 1)) _256) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4922 (= ?x319 _255)))
 (let (($x4927 (and $x4922 $x335)))
 (=> $x4927 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4940 (= ?x319 _256)))
 (=> (and $x4940 $x318) (and (= (time-to-state (+ time 1)) _257) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4940 (= ?x319 _256)))
 (let (($x4945 (and $x4940 $x335)))
 (=> $x4945 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4958 (= ?x319 _257)))
 (=> (and $x4958 $x318) (and (= (time-to-state (+ time 1)) _258) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4958 (= ?x319 _257)))
 (let (($x4963 (and $x4958 $x335)))
 (=> $x4963 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4976 (= ?x319 _258)))
 (=> (and $x4976 $x318) (and (= (time-to-state (+ time 1)) _259) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4976 (= ?x319 _258)))
 (let (($x4981 (and $x4976 $x335)))
 (=> $x4981 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let (($x313 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x317 (input-arg0 time)))
 (let (($x318 (and (distinct ?x317 0) true)))
 (let ((?x319 (time-to-state time)))
 (let (($x4994 (= ?x319 _259)))
 (=> (and $x4994 $x318) (and (= (time-to-state (+ time 1)) _260) $x313))))))))
 )
(assert
 (forall ((time Int) )(let ((?x311 (+ time 1)))
 (let ((?x314 (time-to-state ?x311)))
 (let (($x334 (= ?x314 ERR)))
 (let ((?x317 (input-arg0 time)))
 (let (($x335 (= ?x317 1)))
 (let ((?x319 (time-to-state time)))
 (let (($x4994 (= ?x319 _259)))
 (let (($x4999 (and $x4994 $x335)))
 (=> $x4999 $x334))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x319 (time-to-state time)))
 (let (($x5002 (= ?x319 ERR)))
 (and $x5002 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260) true))
(check-sat)
