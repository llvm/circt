; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(assert
 (let ((?x69 (time-to-state 0)))
 (= ?x69 _0)))
(assert
 (let ((?x89 (input-arg0 0)))
 (= ?x89 0)))
(assert
 (let ((?x91 (var1_0 0)))
 (= ?x91 0)))
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x120 (= ?x119 _0)))
 (let (($x136 (and $x120 $x135)))
 (=> $x136 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x150 (= ?x119 _1)))
 (let (($x155 (and $x150 $x135)))
 (=> $x155 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x168 (= ?x119 _2)))
 (let (($x173 (and $x168 $x135)))
 (=> $x173 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x186 (= ?x119 _3)))
 (let (($x191 (and $x186 $x135)))
 (=> $x191 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x204 (= ?x119 _4)))
 (let (($x209 (and $x204 $x135)))
 (=> $x209 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x222 (= ?x119 _5)))
 (let (($x227 (and $x222 $x135)))
 (=> $x227 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x240 (= ?x119 _6)))
 (let (($x245 (and $x240 $x135)))
 (=> $x245 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x258 (= ?x119 _7)))
 (let (($x263 (and $x258 $x135)))
 (=> $x263 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x276 (= ?x119 _8)))
 (let (($x281 (and $x276 $x135)))
 (=> $x281 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x294 (= ?x119 _9)))
 (let (($x299 (and $x294 $x135)))
 (=> $x299 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x312 (= ?x119 _10)))
 (let (($x317 (and $x312 $x135)))
 (=> $x317 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x330 (= ?x119 _11)))
 (let (($x335 (and $x330 $x135)))
 (=> $x335 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x348 (= ?x119 _12)))
 (let (($x353 (and $x348 $x135)))
 (=> $x353 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x366 (= ?x119 _13)))
 (let (($x371 (and $x366 $x135)))
 (=> $x371 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x384 (= ?x119 _14)))
 (let (($x389 (and $x384 $x135)))
 (=> $x389 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x402 (= ?x119 _15)))
 (let (($x407 (and $x402 $x135)))
 (=> $x407 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x420 (= ?x119 _16)))
 (let (($x425 (and $x420 $x135)))
 (=> $x425 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x438 (= ?x119 _17)))
 (let (($x443 (and $x438 $x135)))
 (=> $x443 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x456 (= ?x119 _18)))
 (let (($x461 (and $x456 $x135)))
 (=> $x461 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x474 (= ?x119 _19)))
 (let (($x479 (and $x474 $x135)))
 (=> $x479 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x492 (= ?x119 _20)))
 (let (($x497 (and $x492 $x135)))
 (=> $x497 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x510 (= ?x119 _21)))
 (let (($x515 (and $x510 $x135)))
 (=> $x515 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x528 (= ?x119 _22)))
 (let (($x533 (and $x528 $x135)))
 (=> $x533 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x546 (= ?x119 _23)))
 (let (($x551 (and $x546 $x135)))
 (=> $x551 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x564 (= ?x119 _24)))
 (let (($x569 (and $x564 $x135)))
 (=> $x569 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x582 (= ?x119 _25)))
 (let (($x587 (and $x582 $x135)))
 (=> $x587 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x600 (= ?x119 _26)))
 (let (($x605 (and $x600 $x135)))
 (=> $x605 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x618 (= ?x119 _27)))
 (let (($x623 (and $x618 $x135)))
 (=> $x623 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x636 (= ?x119 _28)))
 (let (($x641 (and $x636 $x135)))
 (=> $x641 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x654 (= ?x119 _29)))
 (let (($x659 (and $x654 $x135)))
 (=> $x659 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x672 (= ?x119 _30)))
 (let (($x677 (and $x672 $x135)))
 (=> $x677 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x690 (= ?x119 _31)))
 (let (($x695 (and $x690 $x135)))
 (=> $x695 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x708 (= ?x119 _32)))
 (let (($x713 (and $x708 $x135)))
 (=> $x713 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x726 (= ?x119 _33)))
 (let (($x731 (and $x726 $x135)))
 (=> $x731 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x744 (= ?x119 _34)))
 (let (($x749 (and $x744 $x135)))
 (=> $x749 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x762 (= ?x119 _35)))
 (let (($x767 (and $x762 $x135)))
 (=> $x767 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x780 (= ?x119 _36)))
 (let (($x785 (and $x780 $x135)))
 (=> $x785 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x798 (= ?x119 _37)))
 (let (($x803 (and $x798 $x135)))
 (=> $x803 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x816 (= ?x119 _38)))
 (let (($x821 (and $x816 $x135)))
 (=> $x821 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x834 (= ?x119 _39)))
 (let (($x839 (and $x834 $x135)))
 (=> $x839 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x852 (= ?x119 _40)))
 (let (($x857 (and $x852 $x135)))
 (=> $x857 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x870 (= ?x119 _41)))
 (let (($x875 (and $x870 $x135)))
 (=> $x875 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x888 (= ?x119 _42)))
 (let (($x893 (and $x888 $x135)))
 (=> $x893 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x906 (= ?x119 _43)))
 (let (($x911 (and $x906 $x135)))
 (=> $x911 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x924 (= ?x119 _44)))
 (let (($x929 (and $x924 $x135)))
 (=> $x929 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x942 (= ?x119 _45)))
 (let (($x947 (and $x942 $x135)))
 (=> $x947 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x960 (= ?x119 _46)))
 (let (($x965 (and $x960 $x135)))
 (=> $x965 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x978 (= ?x119 _47)))
 (let (($x983 (and $x978 $x135)))
 (=> $x983 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x996 (= ?x119 _48)))
 (let (($x1001 (and $x996 $x135)))
 (=> $x1001 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1014 (= ?x119 _49)))
 (let (($x1019 (and $x1014 $x135)))
 (=> $x1019 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1032 (= ?x119 _50)))
 (let (($x1037 (and $x1032 $x135)))
 (=> $x1037 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1050 (= ?x119 _51)))
 (let (($x1055 (and $x1050 $x135)))
 (=> $x1055 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1068 (= ?x119 _52)))
 (let (($x1073 (and $x1068 $x135)))
 (=> $x1073 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1086 (= ?x119 _53)))
 (let (($x1091 (and $x1086 $x135)))
 (=> $x1091 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1104 (= ?x119 _54)))
 (let (($x1109 (and $x1104 $x135)))
 (=> $x1109 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1122 (= ?x119 _55)))
 (let (($x1127 (and $x1122 $x135)))
 (=> $x1127 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1140 (= ?x119 _56)))
 (let (($x1145 (and $x1140 $x135)))
 (=> $x1145 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1158 (= ?x119 _57)))
 (let (($x1163 (and $x1158 $x135)))
 (=> $x1163 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1176 (= ?x119 _58)))
 (let (($x1181 (and $x1176 $x135)))
 (=> $x1181 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let (($x113 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x113))))
 )
(assert
 (forall ((time Int) )(let ((?x111 (+ time 1)))
 (let ((?x114 (time-to-state ?x111)))
 (let (($x134 (= ?x114 ERR)))
 (let ((?x117 (input-arg0 time)))
 (let (($x135 (= ?x117 1)))
 (let ((?x119 (time-to-state time)))
 (let (($x1194 (= ?x119 _59)))
 (let (($x1199 (and $x1194 $x135)))
 (=> $x1199 $x134))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x119 (time-to-state time)))
 (let (($x1202 (= ?x119 ERR)))
 (and $x1202 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60) true))
(check-sat)
