; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(declare-fun _356 () STATE)
(declare-fun _357 () STATE)
(declare-fun _358 () STATE)
(declare-fun _359 () STATE)
(declare-fun _360 () STATE)
(declare-fun _361 () STATE)
(declare-fun _362 () STATE)
(declare-fun _363 () STATE)
(declare-fun _364 () STATE)
(declare-fun _365 () STATE)
(declare-fun _366 () STATE)
(declare-fun _367 () STATE)
(declare-fun _368 () STATE)
(declare-fun _369 () STATE)
(declare-fun _370 () STATE)
(declare-fun _371 () STATE)
(declare-fun _372 () STATE)
(declare-fun _373 () STATE)
(declare-fun _374 () STATE)
(declare-fun _375 () STATE)
(declare-fun _376 () STATE)
(declare-fun _377 () STATE)
(declare-fun _378 () STATE)
(declare-fun _379 () STATE)
(declare-fun _380 () STATE)
(declare-fun _381 () STATE)
(declare-fun _382 () STATE)
(declare-fun _383 () STATE)
(declare-fun _384 () STATE)
(declare-fun _385 () STATE)
(declare-fun _386 () STATE)
(declare-fun _387 () STATE)
(declare-fun _388 () STATE)
(declare-fun _389 () STATE)
(declare-fun _390 () STATE)
(declare-fun _391 () STATE)
(declare-fun _392 () STATE)
(declare-fun _393 () STATE)
(declare-fun _394 () STATE)
(declare-fun _395 () STATE)
(declare-fun _396 () STATE)
(declare-fun _397 () STATE)
(declare-fun _398 () STATE)
(declare-fun _399 () STATE)
(declare-fun _400 () STATE)
(declare-fun _401 () STATE)
(declare-fun _402 () STATE)
(declare-fun _403 () STATE)
(declare-fun _404 () STATE)
(declare-fun _405 () STATE)
(declare-fun _406 () STATE)
(declare-fun _407 () STATE)
(declare-fun _408 () STATE)
(declare-fun _409 () STATE)
(declare-fun _410 () STATE)
(declare-fun _411 () STATE)
(declare-fun _412 () STATE)
(declare-fun _413 () STATE)
(declare-fun _414 () STATE)
(declare-fun _415 () STATE)
(declare-fun _416 () STATE)
(declare-fun _417 () STATE)
(declare-fun _418 () STATE)
(declare-fun _419 () STATE)
(declare-fun _420 () STATE)
(declare-fun _421 () STATE)
(declare-fun _422 () STATE)
(declare-fun _423 () STATE)
(declare-fun _424 () STATE)
(declare-fun _425 () STATE)
(declare-fun _426 () STATE)
(declare-fun _427 () STATE)
(declare-fun _428 () STATE)
(declare-fun _429 () STATE)
(declare-fun _430 () STATE)
(declare-fun _431 () STATE)
(declare-fun _432 () STATE)
(declare-fun _433 () STATE)
(declare-fun _434 () STATE)
(declare-fun _435 () STATE)
(declare-fun _436 () STATE)
(declare-fun _437 () STATE)
(declare-fun _438 () STATE)
(declare-fun _439 () STATE)
(declare-fun _440 () STATE)
(declare-fun _441 () STATE)
(declare-fun _442 () STATE)
(declare-fun _443 () STATE)
(declare-fun _444 () STATE)
(declare-fun _445 () STATE)
(declare-fun _446 () STATE)
(declare-fun _447 () STATE)
(declare-fun _448 () STATE)
(declare-fun _449 () STATE)
(declare-fun _450 () STATE)
(declare-fun _451 () STATE)
(declare-fun _452 () STATE)
(declare-fun _453 () STATE)
(declare-fun _454 () STATE)
(declare-fun _455 () STATE)
(declare-fun _456 () STATE)
(declare-fun _457 () STATE)
(declare-fun _458 () STATE)
(declare-fun _459 () STATE)
(declare-fun _460 () STATE)
(declare-fun _461 () STATE)
(declare-fun _462 () STATE)
(declare-fun _463 () STATE)
(declare-fun _464 () STATE)
(declare-fun _465 () STATE)
(declare-fun _466 () STATE)
(declare-fun _467 () STATE)
(declare-fun _468 () STATE)
(declare-fun _469 () STATE)
(declare-fun _470 () STATE)
(declare-fun _471 () STATE)
(declare-fun _472 () STATE)
(declare-fun _473 () STATE)
(declare-fun _474 () STATE)
(declare-fun _475 () STATE)
(declare-fun _476 () STATE)
(declare-fun _477 () STATE)
(declare-fun _478 () STATE)
(declare-fun _479 () STATE)
(declare-fun _480 () STATE)
(assert
 (let ((?x489 (time-to-state 0)))
 (= ?x489 _0)))
(assert
 (let ((?x509 (input-arg0 0)))
 (= ?x509 0)))
(assert
 (let ((?x511 (var1_0 0)))
 (= ?x511 0)))
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x540 (= ?x539 _0)))
 (let (($x556 (and $x540 $x555)))
 (=> $x556 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x570 (= ?x539 _1)))
 (let (($x575 (and $x570 $x555)))
 (=> $x575 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x588 (= ?x539 _2)))
 (let (($x593 (and $x588 $x555)))
 (=> $x593 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x606 (= ?x539 _3)))
 (let (($x611 (and $x606 $x555)))
 (=> $x611 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x624 (= ?x539 _4)))
 (let (($x629 (and $x624 $x555)))
 (=> $x629 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x642 (= ?x539 _5)))
 (let (($x647 (and $x642 $x555)))
 (=> $x647 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x660 (= ?x539 _6)))
 (let (($x665 (and $x660 $x555)))
 (=> $x665 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x678 (= ?x539 _7)))
 (let (($x683 (and $x678 $x555)))
 (=> $x683 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x696 (= ?x539 _8)))
 (let (($x701 (and $x696 $x555)))
 (=> $x701 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x714 (= ?x539 _9)))
 (let (($x719 (and $x714 $x555)))
 (=> $x719 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x732 (= ?x539 _10)))
 (let (($x737 (and $x732 $x555)))
 (=> $x737 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x750 (= ?x539 _11)))
 (let (($x755 (and $x750 $x555)))
 (=> $x755 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x768 (= ?x539 _12)))
 (let (($x773 (and $x768 $x555)))
 (=> $x773 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x786 (= ?x539 _13)))
 (let (($x791 (and $x786 $x555)))
 (=> $x791 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x804 (= ?x539 _14)))
 (let (($x809 (and $x804 $x555)))
 (=> $x809 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x822 (= ?x539 _15)))
 (let (($x827 (and $x822 $x555)))
 (=> $x827 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x840 (= ?x539 _16)))
 (let (($x845 (and $x840 $x555)))
 (=> $x845 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x858 (= ?x539 _17)))
 (let (($x863 (and $x858 $x555)))
 (=> $x863 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x876 (= ?x539 _18)))
 (let (($x881 (and $x876 $x555)))
 (=> $x881 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x894 (= ?x539 _19)))
 (let (($x899 (and $x894 $x555)))
 (=> $x899 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x912 (= ?x539 _20)))
 (let (($x917 (and $x912 $x555)))
 (=> $x917 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x930 (= ?x539 _21)))
 (let (($x935 (and $x930 $x555)))
 (=> $x935 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x948 (= ?x539 _22)))
 (let (($x953 (and $x948 $x555)))
 (=> $x953 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x966 (= ?x539 _23)))
 (let (($x971 (and $x966 $x555)))
 (=> $x971 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x984 (= ?x539 _24)))
 (let (($x989 (and $x984 $x555)))
 (=> $x989 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1002 (= ?x539 _25)))
 (let (($x1007 (and $x1002 $x555)))
 (=> $x1007 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1020 (= ?x539 _26)))
 (let (($x1025 (and $x1020 $x555)))
 (=> $x1025 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1038 (= ?x539 _27)))
 (let (($x1043 (and $x1038 $x555)))
 (=> $x1043 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1056 (= ?x539 _28)))
 (let (($x1061 (and $x1056 $x555)))
 (=> $x1061 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1074 (= ?x539 _29)))
 (let (($x1079 (and $x1074 $x555)))
 (=> $x1079 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1092 (= ?x539 _30)))
 (let (($x1097 (and $x1092 $x555)))
 (=> $x1097 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1110 (= ?x539 _31)))
 (let (($x1115 (and $x1110 $x555)))
 (=> $x1115 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1128 (= ?x539 _32)))
 (let (($x1133 (and $x1128 $x555)))
 (=> $x1133 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1146 (= ?x539 _33)))
 (let (($x1151 (and $x1146 $x555)))
 (=> $x1151 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1164 (= ?x539 _34)))
 (let (($x1169 (and $x1164 $x555)))
 (=> $x1169 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1182 (= ?x539 _35)))
 (let (($x1187 (and $x1182 $x555)))
 (=> $x1187 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1200 (= ?x539 _36)))
 (let (($x1205 (and $x1200 $x555)))
 (=> $x1205 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1218 (= ?x539 _37)))
 (let (($x1223 (and $x1218 $x555)))
 (=> $x1223 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1236 (= ?x539 _38)))
 (let (($x1241 (and $x1236 $x555)))
 (=> $x1241 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1254 (= ?x539 _39)))
 (let (($x1259 (and $x1254 $x555)))
 (=> $x1259 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1272 (= ?x539 _40)))
 (let (($x1277 (and $x1272 $x555)))
 (=> $x1277 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1290 (= ?x539 _41)))
 (let (($x1295 (and $x1290 $x555)))
 (=> $x1295 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1308 (= ?x539 _42)))
 (let (($x1313 (and $x1308 $x555)))
 (=> $x1313 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1326 (= ?x539 _43)))
 (let (($x1331 (and $x1326 $x555)))
 (=> $x1331 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1344 (= ?x539 _44)))
 (let (($x1349 (and $x1344 $x555)))
 (=> $x1349 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1362 (= ?x539 _45)))
 (let (($x1367 (and $x1362 $x555)))
 (=> $x1367 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1380 (= ?x539 _46)))
 (let (($x1385 (and $x1380 $x555)))
 (=> $x1385 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1398 (= ?x539 _47)))
 (let (($x1403 (and $x1398 $x555)))
 (=> $x1403 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1416 (= ?x539 _48)))
 (let (($x1421 (and $x1416 $x555)))
 (=> $x1421 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1434 (= ?x539 _49)))
 (let (($x1439 (and $x1434 $x555)))
 (=> $x1439 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1452 (= ?x539 _50)))
 (let (($x1457 (and $x1452 $x555)))
 (=> $x1457 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1470 (= ?x539 _51)))
 (let (($x1475 (and $x1470 $x555)))
 (=> $x1475 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1488 (= ?x539 _52)))
 (let (($x1493 (and $x1488 $x555)))
 (=> $x1493 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1506 (= ?x539 _53)))
 (let (($x1511 (and $x1506 $x555)))
 (=> $x1511 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1524 (= ?x539 _54)))
 (let (($x1529 (and $x1524 $x555)))
 (=> $x1529 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1542 (= ?x539 _55)))
 (let (($x1547 (and $x1542 $x555)))
 (=> $x1547 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1560 (= ?x539 _56)))
 (let (($x1565 (and $x1560 $x555)))
 (=> $x1565 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1578 (= ?x539 _57)))
 (let (($x1583 (and $x1578 $x555)))
 (=> $x1583 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1596 (= ?x539 _58)))
 (let (($x1601 (and $x1596 $x555)))
 (=> $x1601 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1614 (= ?x539 _59)))
 (let (($x1619 (and $x1614 $x555)))
 (=> $x1619 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1632 (= ?x539 _60)))
 (let (($x1637 (and $x1632 $x555)))
 (=> $x1637 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1650 (= ?x539 _61)))
 (let (($x1655 (and $x1650 $x555)))
 (=> $x1655 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1668 (= ?x539 _62)))
 (let (($x1673 (and $x1668 $x555)))
 (=> $x1673 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1686 (= ?x539 _63)))
 (let (($x1691 (and $x1686 $x555)))
 (=> $x1691 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1704 (= ?x539 _64)))
 (let (($x1709 (and $x1704 $x555)))
 (=> $x1709 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1722 (= ?x539 _65)))
 (let (($x1727 (and $x1722 $x555)))
 (=> $x1727 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1740 (= ?x539 _66)))
 (let (($x1745 (and $x1740 $x555)))
 (=> $x1745 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1758 (= ?x539 _67)))
 (let (($x1763 (and $x1758 $x555)))
 (=> $x1763 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1776 (= ?x539 _68)))
 (let (($x1781 (and $x1776 $x555)))
 (=> $x1781 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1794 (= ?x539 _69)))
 (let (($x1799 (and $x1794 $x555)))
 (=> $x1799 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1812 (= ?x539 _70)))
 (let (($x1817 (and $x1812 $x555)))
 (=> $x1817 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1830 (= ?x539 _71)))
 (let (($x1835 (and $x1830 $x555)))
 (=> $x1835 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1848 (= ?x539 _72)))
 (let (($x1853 (and $x1848 $x555)))
 (=> $x1853 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1866 (= ?x539 _73)))
 (let (($x1871 (and $x1866 $x555)))
 (=> $x1871 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1884 (= ?x539 _74)))
 (let (($x1889 (and $x1884 $x555)))
 (=> $x1889 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1902 (= ?x539 _75)))
 (let (($x1907 (and $x1902 $x555)))
 (=> $x1907 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1920 (= ?x539 _76)))
 (let (($x1925 (and $x1920 $x555)))
 (=> $x1925 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1938 (= ?x539 _77)))
 (let (($x1943 (and $x1938 $x555)))
 (=> $x1943 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1956 (= ?x539 _78)))
 (let (($x1961 (and $x1956 $x555)))
 (=> $x1961 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1974 (= ?x539 _79)))
 (let (($x1979 (and $x1974 $x555)))
 (=> $x1979 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x1992 (= ?x539 _80)))
 (let (($x1997 (and $x1992 $x555)))
 (=> $x1997 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2010 (= ?x539 _81)))
 (let (($x2015 (and $x2010 $x555)))
 (=> $x2015 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2028 (= ?x539 _82)))
 (let (($x2033 (and $x2028 $x555)))
 (=> $x2033 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2046 (= ?x539 _83)))
 (let (($x2051 (and $x2046 $x555)))
 (=> $x2051 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2064 (= ?x539 _84)))
 (let (($x2069 (and $x2064 $x555)))
 (=> $x2069 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2082 (= ?x539 _85)))
 (let (($x2087 (and $x2082 $x555)))
 (=> $x2087 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2100 (= ?x539 _86)))
 (let (($x2105 (and $x2100 $x555)))
 (=> $x2105 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2118 (= ?x539 _87)))
 (let (($x2123 (and $x2118 $x555)))
 (=> $x2123 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2136 (= ?x539 _88)))
 (let (($x2141 (and $x2136 $x555)))
 (=> $x2141 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2154 (= ?x539 _89)))
 (let (($x2159 (and $x2154 $x555)))
 (=> $x2159 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2172 (= ?x539 _90)))
 (let (($x2177 (and $x2172 $x555)))
 (=> $x2177 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2190 (= ?x539 _91)))
 (let (($x2195 (and $x2190 $x555)))
 (=> $x2195 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2208 (= ?x539 _92)))
 (let (($x2213 (and $x2208 $x555)))
 (=> $x2213 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2226 (= ?x539 _93)))
 (let (($x2231 (and $x2226 $x555)))
 (=> $x2231 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2244 (= ?x539 _94)))
 (let (($x2249 (and $x2244 $x555)))
 (=> $x2249 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2262 (= ?x539 _95)))
 (let (($x2267 (and $x2262 $x555)))
 (=> $x2267 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2280 (= ?x539 _96)))
 (let (($x2285 (and $x2280 $x555)))
 (=> $x2285 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2298 (= ?x539 _97)))
 (let (($x2303 (and $x2298 $x555)))
 (=> $x2303 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2316 (= ?x539 _98)))
 (let (($x2321 (and $x2316 $x555)))
 (=> $x2321 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x533))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2334 (= ?x539 _99)))
 (let (($x2339 (and $x2334 $x555)))
 (=> $x2339 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2352 (= ?x539 _100)))
 (=> (and $x2352 $x538) (and (= (time-to-state (+ time 1)) _101) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2352 (= ?x539 _100)))
 (let (($x2357 (and $x2352 $x555)))
 (=> $x2357 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2370 (= ?x539 _101)))
 (=> (and $x2370 $x538) (and (= (time-to-state (+ time 1)) _102) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2370 (= ?x539 _101)))
 (let (($x2375 (and $x2370 $x555)))
 (=> $x2375 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2388 (= ?x539 _102)))
 (=> (and $x2388 $x538) (and (= (time-to-state (+ time 1)) _103) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2388 (= ?x539 _102)))
 (let (($x2393 (and $x2388 $x555)))
 (=> $x2393 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2406 (= ?x539 _103)))
 (=> (and $x2406 $x538) (and (= (time-to-state (+ time 1)) _104) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2406 (= ?x539 _103)))
 (let (($x2411 (and $x2406 $x555)))
 (=> $x2411 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2424 (= ?x539 _104)))
 (=> (and $x2424 $x538) (and (= (time-to-state (+ time 1)) _105) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2424 (= ?x539 _104)))
 (let (($x2429 (and $x2424 $x555)))
 (=> $x2429 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2442 (= ?x539 _105)))
 (=> (and $x2442 $x538) (and (= (time-to-state (+ time 1)) _106) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2442 (= ?x539 _105)))
 (let (($x2447 (and $x2442 $x555)))
 (=> $x2447 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2460 (= ?x539 _106)))
 (=> (and $x2460 $x538) (and (= (time-to-state (+ time 1)) _107) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2460 (= ?x539 _106)))
 (let (($x2465 (and $x2460 $x555)))
 (=> $x2465 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2478 (= ?x539 _107)))
 (=> (and $x2478 $x538) (and (= (time-to-state (+ time 1)) _108) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2478 (= ?x539 _107)))
 (let (($x2483 (and $x2478 $x555)))
 (=> $x2483 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2496 (= ?x539 _108)))
 (=> (and $x2496 $x538) (and (= (time-to-state (+ time 1)) _109) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2496 (= ?x539 _108)))
 (let (($x2501 (and $x2496 $x555)))
 (=> $x2501 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2514 (= ?x539 _109)))
 (=> (and $x2514 $x538) (and (= (time-to-state (+ time 1)) _110) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2514 (= ?x539 _109)))
 (let (($x2519 (and $x2514 $x555)))
 (=> $x2519 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2532 (= ?x539 _110)))
 (=> (and $x2532 $x538) (and (= (time-to-state (+ time 1)) _111) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2532 (= ?x539 _110)))
 (let (($x2537 (and $x2532 $x555)))
 (=> $x2537 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2550 (= ?x539 _111)))
 (=> (and $x2550 $x538) (and (= (time-to-state (+ time 1)) _112) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2550 (= ?x539 _111)))
 (let (($x2555 (and $x2550 $x555)))
 (=> $x2555 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2568 (= ?x539 _112)))
 (=> (and $x2568 $x538) (and (= (time-to-state (+ time 1)) _113) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2568 (= ?x539 _112)))
 (let (($x2573 (and $x2568 $x555)))
 (=> $x2573 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2586 (= ?x539 _113)))
 (=> (and $x2586 $x538) (and (= (time-to-state (+ time 1)) _114) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2586 (= ?x539 _113)))
 (let (($x2591 (and $x2586 $x555)))
 (=> $x2591 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2604 (= ?x539 _114)))
 (=> (and $x2604 $x538) (and (= (time-to-state (+ time 1)) _115) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2604 (= ?x539 _114)))
 (let (($x2609 (and $x2604 $x555)))
 (=> $x2609 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2622 (= ?x539 _115)))
 (=> (and $x2622 $x538) (and (= (time-to-state (+ time 1)) _116) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2622 (= ?x539 _115)))
 (let (($x2627 (and $x2622 $x555)))
 (=> $x2627 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2640 (= ?x539 _116)))
 (=> (and $x2640 $x538) (and (= (time-to-state (+ time 1)) _117) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2640 (= ?x539 _116)))
 (let (($x2645 (and $x2640 $x555)))
 (=> $x2645 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2658 (= ?x539 _117)))
 (=> (and $x2658 $x538) (and (= (time-to-state (+ time 1)) _118) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2658 (= ?x539 _117)))
 (let (($x2663 (and $x2658 $x555)))
 (=> $x2663 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2676 (= ?x539 _118)))
 (=> (and $x2676 $x538) (and (= (time-to-state (+ time 1)) _119) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2676 (= ?x539 _118)))
 (let (($x2681 (and $x2676 $x555)))
 (=> $x2681 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2694 (= ?x539 _119)))
 (=> (and $x2694 $x538) (and (= (time-to-state (+ time 1)) _120) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2694 (= ?x539 _119)))
 (let (($x2699 (and $x2694 $x555)))
 (=> $x2699 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2712 (= ?x539 _120)))
 (=> (and $x2712 $x538) (and (= (time-to-state (+ time 1)) _121) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2712 (= ?x539 _120)))
 (let (($x2717 (and $x2712 $x555)))
 (=> $x2717 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2730 (= ?x539 _121)))
 (=> (and $x2730 $x538) (and (= (time-to-state (+ time 1)) _122) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2730 (= ?x539 _121)))
 (let (($x2735 (and $x2730 $x555)))
 (=> $x2735 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2748 (= ?x539 _122)))
 (=> (and $x2748 $x538) (and (= (time-to-state (+ time 1)) _123) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2748 (= ?x539 _122)))
 (let (($x2753 (and $x2748 $x555)))
 (=> $x2753 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2766 (= ?x539 _123)))
 (=> (and $x2766 $x538) (and (= (time-to-state (+ time 1)) _124) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2766 (= ?x539 _123)))
 (let (($x2771 (and $x2766 $x555)))
 (=> $x2771 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2784 (= ?x539 _124)))
 (=> (and $x2784 $x538) (and (= (time-to-state (+ time 1)) _125) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2784 (= ?x539 _124)))
 (let (($x2789 (and $x2784 $x555)))
 (=> $x2789 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2802 (= ?x539 _125)))
 (=> (and $x2802 $x538) (and (= (time-to-state (+ time 1)) _126) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2802 (= ?x539 _125)))
 (let (($x2807 (and $x2802 $x555)))
 (=> $x2807 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2820 (= ?x539 _126)))
 (=> (and $x2820 $x538) (and (= (time-to-state (+ time 1)) _127) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2820 (= ?x539 _126)))
 (let (($x2825 (and $x2820 $x555)))
 (=> $x2825 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2838 (= ?x539 _127)))
 (=> (and $x2838 $x538) (and (= (time-to-state (+ time 1)) _128) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2838 (= ?x539 _127)))
 (let (($x2843 (and $x2838 $x555)))
 (=> $x2843 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2856 (= ?x539 _128)))
 (=> (and $x2856 $x538) (and (= (time-to-state (+ time 1)) _129) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2856 (= ?x539 _128)))
 (let (($x2861 (and $x2856 $x555)))
 (=> $x2861 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2874 (= ?x539 _129)))
 (=> (and $x2874 $x538) (and (= (time-to-state (+ time 1)) _130) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2874 (= ?x539 _129)))
 (let (($x2879 (and $x2874 $x555)))
 (=> $x2879 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2892 (= ?x539 _130)))
 (=> (and $x2892 $x538) (and (= (time-to-state (+ time 1)) _131) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2892 (= ?x539 _130)))
 (let (($x2897 (and $x2892 $x555)))
 (=> $x2897 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2910 (= ?x539 _131)))
 (=> (and $x2910 $x538) (and (= (time-to-state (+ time 1)) _132) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2910 (= ?x539 _131)))
 (let (($x2915 (and $x2910 $x555)))
 (=> $x2915 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2928 (= ?x539 _132)))
 (=> (and $x2928 $x538) (and (= (time-to-state (+ time 1)) _133) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2928 (= ?x539 _132)))
 (let (($x2933 (and $x2928 $x555)))
 (=> $x2933 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2946 (= ?x539 _133)))
 (=> (and $x2946 $x538) (and (= (time-to-state (+ time 1)) _134) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2946 (= ?x539 _133)))
 (let (($x2951 (and $x2946 $x555)))
 (=> $x2951 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2964 (= ?x539 _134)))
 (=> (and $x2964 $x538) (and (= (time-to-state (+ time 1)) _135) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2964 (= ?x539 _134)))
 (let (($x2969 (and $x2964 $x555)))
 (=> $x2969 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x2982 (= ?x539 _135)))
 (=> (and $x2982 $x538) (and (= (time-to-state (+ time 1)) _136) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x2982 (= ?x539 _135)))
 (let (($x2987 (and $x2982 $x555)))
 (=> $x2987 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3000 (= ?x539 _136)))
 (=> (and $x3000 $x538) (and (= (time-to-state (+ time 1)) _137) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3000 (= ?x539 _136)))
 (let (($x3005 (and $x3000 $x555)))
 (=> $x3005 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3018 (= ?x539 _137)))
 (=> (and $x3018 $x538) (and (= (time-to-state (+ time 1)) _138) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3018 (= ?x539 _137)))
 (let (($x3023 (and $x3018 $x555)))
 (=> $x3023 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3036 (= ?x539 _138)))
 (=> (and $x3036 $x538) (and (= (time-to-state (+ time 1)) _139) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3036 (= ?x539 _138)))
 (let (($x3041 (and $x3036 $x555)))
 (=> $x3041 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3054 (= ?x539 _139)))
 (=> (and $x3054 $x538) (and (= (time-to-state (+ time 1)) _140) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3054 (= ?x539 _139)))
 (let (($x3059 (and $x3054 $x555)))
 (=> $x3059 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3072 (= ?x539 _140)))
 (=> (and $x3072 $x538) (and (= (time-to-state (+ time 1)) _141) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3072 (= ?x539 _140)))
 (let (($x3077 (and $x3072 $x555)))
 (=> $x3077 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3090 (= ?x539 _141)))
 (=> (and $x3090 $x538) (and (= (time-to-state (+ time 1)) _142) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3090 (= ?x539 _141)))
 (let (($x3095 (and $x3090 $x555)))
 (=> $x3095 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3108 (= ?x539 _142)))
 (=> (and $x3108 $x538) (and (= (time-to-state (+ time 1)) _143) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3108 (= ?x539 _142)))
 (let (($x3113 (and $x3108 $x555)))
 (=> $x3113 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3126 (= ?x539 _143)))
 (=> (and $x3126 $x538) (and (= (time-to-state (+ time 1)) _144) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3126 (= ?x539 _143)))
 (let (($x3131 (and $x3126 $x555)))
 (=> $x3131 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3144 (= ?x539 _144)))
 (=> (and $x3144 $x538) (and (= (time-to-state (+ time 1)) _145) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3144 (= ?x539 _144)))
 (let (($x3149 (and $x3144 $x555)))
 (=> $x3149 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3162 (= ?x539 _145)))
 (=> (and $x3162 $x538) (and (= (time-to-state (+ time 1)) _146) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3162 (= ?x539 _145)))
 (let (($x3167 (and $x3162 $x555)))
 (=> $x3167 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3180 (= ?x539 _146)))
 (=> (and $x3180 $x538) (and (= (time-to-state (+ time 1)) _147) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3180 (= ?x539 _146)))
 (let (($x3185 (and $x3180 $x555)))
 (=> $x3185 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3198 (= ?x539 _147)))
 (=> (and $x3198 $x538) (and (= (time-to-state (+ time 1)) _148) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3198 (= ?x539 _147)))
 (let (($x3203 (and $x3198 $x555)))
 (=> $x3203 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3216 (= ?x539 _148)))
 (=> (and $x3216 $x538) (and (= (time-to-state (+ time 1)) _149) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3216 (= ?x539 _148)))
 (let (($x3221 (and $x3216 $x555)))
 (=> $x3221 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3234 (= ?x539 _149)))
 (=> (and $x3234 $x538) (and (= (time-to-state (+ time 1)) _150) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3234 (= ?x539 _149)))
 (let (($x3239 (and $x3234 $x555)))
 (=> $x3239 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3252 (= ?x539 _150)))
 (=> (and $x3252 $x538) (and (= (time-to-state (+ time 1)) _151) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3252 (= ?x539 _150)))
 (let (($x3257 (and $x3252 $x555)))
 (=> $x3257 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3270 (= ?x539 _151)))
 (=> (and $x3270 $x538) (and (= (time-to-state (+ time 1)) _152) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3270 (= ?x539 _151)))
 (let (($x3275 (and $x3270 $x555)))
 (=> $x3275 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3288 (= ?x539 _152)))
 (=> (and $x3288 $x538) (and (= (time-to-state (+ time 1)) _153) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3288 (= ?x539 _152)))
 (let (($x3293 (and $x3288 $x555)))
 (=> $x3293 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3306 (= ?x539 _153)))
 (=> (and $x3306 $x538) (and (= (time-to-state (+ time 1)) _154) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3306 (= ?x539 _153)))
 (let (($x3311 (and $x3306 $x555)))
 (=> $x3311 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3324 (= ?x539 _154)))
 (=> (and $x3324 $x538) (and (= (time-to-state (+ time 1)) _155) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3324 (= ?x539 _154)))
 (let (($x3329 (and $x3324 $x555)))
 (=> $x3329 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3342 (= ?x539 _155)))
 (=> (and $x3342 $x538) (and (= (time-to-state (+ time 1)) _156) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3342 (= ?x539 _155)))
 (let (($x3347 (and $x3342 $x555)))
 (=> $x3347 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3360 (= ?x539 _156)))
 (=> (and $x3360 $x538) (and (= (time-to-state (+ time 1)) _157) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3360 (= ?x539 _156)))
 (let (($x3365 (and $x3360 $x555)))
 (=> $x3365 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3378 (= ?x539 _157)))
 (=> (and $x3378 $x538) (and (= (time-to-state (+ time 1)) _158) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3378 (= ?x539 _157)))
 (let (($x3383 (and $x3378 $x555)))
 (=> $x3383 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3396 (= ?x539 _158)))
 (=> (and $x3396 $x538) (and (= (time-to-state (+ time 1)) _159) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3396 (= ?x539 _158)))
 (let (($x3401 (and $x3396 $x555)))
 (=> $x3401 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3414 (= ?x539 _159)))
 (=> (and $x3414 $x538) (and (= (time-to-state (+ time 1)) _160) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3414 (= ?x539 _159)))
 (let (($x3419 (and $x3414 $x555)))
 (=> $x3419 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3432 (= ?x539 _160)))
 (=> (and $x3432 $x538) (and (= (time-to-state (+ time 1)) _161) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3432 (= ?x539 _160)))
 (let (($x3437 (and $x3432 $x555)))
 (=> $x3437 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3450 (= ?x539 _161)))
 (=> (and $x3450 $x538) (and (= (time-to-state (+ time 1)) _162) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3450 (= ?x539 _161)))
 (let (($x3455 (and $x3450 $x555)))
 (=> $x3455 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3468 (= ?x539 _162)))
 (=> (and $x3468 $x538) (and (= (time-to-state (+ time 1)) _163) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3468 (= ?x539 _162)))
 (let (($x3473 (and $x3468 $x555)))
 (=> $x3473 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3486 (= ?x539 _163)))
 (=> (and $x3486 $x538) (and (= (time-to-state (+ time 1)) _164) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3486 (= ?x539 _163)))
 (let (($x3491 (and $x3486 $x555)))
 (=> $x3491 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3504 (= ?x539 _164)))
 (=> (and $x3504 $x538) (and (= (time-to-state (+ time 1)) _165) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3504 (= ?x539 _164)))
 (let (($x3509 (and $x3504 $x555)))
 (=> $x3509 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3522 (= ?x539 _165)))
 (=> (and $x3522 $x538) (and (= (time-to-state (+ time 1)) _166) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3522 (= ?x539 _165)))
 (let (($x3527 (and $x3522 $x555)))
 (=> $x3527 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3540 (= ?x539 _166)))
 (=> (and $x3540 $x538) (and (= (time-to-state (+ time 1)) _167) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3540 (= ?x539 _166)))
 (let (($x3545 (and $x3540 $x555)))
 (=> $x3545 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3558 (= ?x539 _167)))
 (=> (and $x3558 $x538) (and (= (time-to-state (+ time 1)) _168) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3558 (= ?x539 _167)))
 (let (($x3563 (and $x3558 $x555)))
 (=> $x3563 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3576 (= ?x539 _168)))
 (=> (and $x3576 $x538) (and (= (time-to-state (+ time 1)) _169) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3576 (= ?x539 _168)))
 (let (($x3581 (and $x3576 $x555)))
 (=> $x3581 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3594 (= ?x539 _169)))
 (=> (and $x3594 $x538) (and (= (time-to-state (+ time 1)) _170) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3594 (= ?x539 _169)))
 (let (($x3599 (and $x3594 $x555)))
 (=> $x3599 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3612 (= ?x539 _170)))
 (=> (and $x3612 $x538) (and (= (time-to-state (+ time 1)) _171) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3612 (= ?x539 _170)))
 (let (($x3617 (and $x3612 $x555)))
 (=> $x3617 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3630 (= ?x539 _171)))
 (=> (and $x3630 $x538) (and (= (time-to-state (+ time 1)) _172) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3630 (= ?x539 _171)))
 (let (($x3635 (and $x3630 $x555)))
 (=> $x3635 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3648 (= ?x539 _172)))
 (=> (and $x3648 $x538) (and (= (time-to-state (+ time 1)) _173) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3648 (= ?x539 _172)))
 (let (($x3653 (and $x3648 $x555)))
 (=> $x3653 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3666 (= ?x539 _173)))
 (=> (and $x3666 $x538) (and (= (time-to-state (+ time 1)) _174) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3666 (= ?x539 _173)))
 (let (($x3671 (and $x3666 $x555)))
 (=> $x3671 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3684 (= ?x539 _174)))
 (=> (and $x3684 $x538) (and (= (time-to-state (+ time 1)) _175) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3684 (= ?x539 _174)))
 (let (($x3689 (and $x3684 $x555)))
 (=> $x3689 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3702 (= ?x539 _175)))
 (=> (and $x3702 $x538) (and (= (time-to-state (+ time 1)) _176) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3702 (= ?x539 _175)))
 (let (($x3707 (and $x3702 $x555)))
 (=> $x3707 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3720 (= ?x539 _176)))
 (=> (and $x3720 $x538) (and (= (time-to-state (+ time 1)) _177) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3720 (= ?x539 _176)))
 (let (($x3725 (and $x3720 $x555)))
 (=> $x3725 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3738 (= ?x539 _177)))
 (=> (and $x3738 $x538) (and (= (time-to-state (+ time 1)) _178) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3738 (= ?x539 _177)))
 (let (($x3743 (and $x3738 $x555)))
 (=> $x3743 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3756 (= ?x539 _178)))
 (=> (and $x3756 $x538) (and (= (time-to-state (+ time 1)) _179) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3756 (= ?x539 _178)))
 (let (($x3761 (and $x3756 $x555)))
 (=> $x3761 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3774 (= ?x539 _179)))
 (=> (and $x3774 $x538) (and (= (time-to-state (+ time 1)) _180) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3774 (= ?x539 _179)))
 (let (($x3779 (and $x3774 $x555)))
 (=> $x3779 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3792 (= ?x539 _180)))
 (=> (and $x3792 $x538) (and (= (time-to-state (+ time 1)) _181) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3792 (= ?x539 _180)))
 (let (($x3797 (and $x3792 $x555)))
 (=> $x3797 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3810 (= ?x539 _181)))
 (=> (and $x3810 $x538) (and (= (time-to-state (+ time 1)) _182) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3810 (= ?x539 _181)))
 (let (($x3815 (and $x3810 $x555)))
 (=> $x3815 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3828 (= ?x539 _182)))
 (=> (and $x3828 $x538) (and (= (time-to-state (+ time 1)) _183) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3828 (= ?x539 _182)))
 (let (($x3833 (and $x3828 $x555)))
 (=> $x3833 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3846 (= ?x539 _183)))
 (=> (and $x3846 $x538) (and (= (time-to-state (+ time 1)) _184) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3846 (= ?x539 _183)))
 (let (($x3851 (and $x3846 $x555)))
 (=> $x3851 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3864 (= ?x539 _184)))
 (=> (and $x3864 $x538) (and (= (time-to-state (+ time 1)) _185) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3864 (= ?x539 _184)))
 (let (($x3869 (and $x3864 $x555)))
 (=> $x3869 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3882 (= ?x539 _185)))
 (=> (and $x3882 $x538) (and (= (time-to-state (+ time 1)) _186) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3882 (= ?x539 _185)))
 (let (($x3887 (and $x3882 $x555)))
 (=> $x3887 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3900 (= ?x539 _186)))
 (=> (and $x3900 $x538) (and (= (time-to-state (+ time 1)) _187) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3900 (= ?x539 _186)))
 (let (($x3905 (and $x3900 $x555)))
 (=> $x3905 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3918 (= ?x539 _187)))
 (=> (and $x3918 $x538) (and (= (time-to-state (+ time 1)) _188) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3918 (= ?x539 _187)))
 (let (($x3923 (and $x3918 $x555)))
 (=> $x3923 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3936 (= ?x539 _188)))
 (=> (and $x3936 $x538) (and (= (time-to-state (+ time 1)) _189) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3936 (= ?x539 _188)))
 (let (($x3941 (and $x3936 $x555)))
 (=> $x3941 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3954 (= ?x539 _189)))
 (=> (and $x3954 $x538) (and (= (time-to-state (+ time 1)) _190) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3954 (= ?x539 _189)))
 (let (($x3959 (and $x3954 $x555)))
 (=> $x3959 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3972 (= ?x539 _190)))
 (=> (and $x3972 $x538) (and (= (time-to-state (+ time 1)) _191) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3972 (= ?x539 _190)))
 (let (($x3977 (and $x3972 $x555)))
 (=> $x3977 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x3990 (= ?x539 _191)))
 (=> (and $x3990 $x538) (and (= (time-to-state (+ time 1)) _192) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x3990 (= ?x539 _191)))
 (let (($x3995 (and $x3990 $x555)))
 (=> $x3995 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4008 (= ?x539 _192)))
 (=> (and $x4008 $x538) (and (= (time-to-state (+ time 1)) _193) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4008 (= ?x539 _192)))
 (let (($x4013 (and $x4008 $x555)))
 (=> $x4013 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4026 (= ?x539 _193)))
 (=> (and $x4026 $x538) (and (= (time-to-state (+ time 1)) _194) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4026 (= ?x539 _193)))
 (let (($x4031 (and $x4026 $x555)))
 (=> $x4031 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4044 (= ?x539 _194)))
 (=> (and $x4044 $x538) (and (= (time-to-state (+ time 1)) _195) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4044 (= ?x539 _194)))
 (let (($x4049 (and $x4044 $x555)))
 (=> $x4049 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4062 (= ?x539 _195)))
 (=> (and $x4062 $x538) (and (= (time-to-state (+ time 1)) _196) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4062 (= ?x539 _195)))
 (let (($x4067 (and $x4062 $x555)))
 (=> $x4067 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4080 (= ?x539 _196)))
 (=> (and $x4080 $x538) (and (= (time-to-state (+ time 1)) _197) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4080 (= ?x539 _196)))
 (let (($x4085 (and $x4080 $x555)))
 (=> $x4085 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4098 (= ?x539 _197)))
 (=> (and $x4098 $x538) (and (= (time-to-state (+ time 1)) _198) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4098 (= ?x539 _197)))
 (let (($x4103 (and $x4098 $x555)))
 (=> $x4103 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4116 (= ?x539 _198)))
 (=> (and $x4116 $x538) (and (= (time-to-state (+ time 1)) _199) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4116 (= ?x539 _198)))
 (let (($x4121 (and $x4116 $x555)))
 (=> $x4121 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4134 (= ?x539 _199)))
 (=> (and $x4134 $x538) (and (= (time-to-state (+ time 1)) _200) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4134 (= ?x539 _199)))
 (let (($x4139 (and $x4134 $x555)))
 (=> $x4139 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4152 (= ?x539 _200)))
 (=> (and $x4152 $x538) (and (= (time-to-state (+ time 1)) _201) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4152 (= ?x539 _200)))
 (let (($x4157 (and $x4152 $x555)))
 (=> $x4157 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4170 (= ?x539 _201)))
 (=> (and $x4170 $x538) (and (= (time-to-state (+ time 1)) _202) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4170 (= ?x539 _201)))
 (let (($x4175 (and $x4170 $x555)))
 (=> $x4175 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4188 (= ?x539 _202)))
 (=> (and $x4188 $x538) (and (= (time-to-state (+ time 1)) _203) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4188 (= ?x539 _202)))
 (let (($x4193 (and $x4188 $x555)))
 (=> $x4193 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4206 (= ?x539 _203)))
 (=> (and $x4206 $x538) (and (= (time-to-state (+ time 1)) _204) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4206 (= ?x539 _203)))
 (let (($x4211 (and $x4206 $x555)))
 (=> $x4211 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4224 (= ?x539 _204)))
 (=> (and $x4224 $x538) (and (= (time-to-state (+ time 1)) _205) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4224 (= ?x539 _204)))
 (let (($x4229 (and $x4224 $x555)))
 (=> $x4229 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4242 (= ?x539 _205)))
 (=> (and $x4242 $x538) (and (= (time-to-state (+ time 1)) _206) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4242 (= ?x539 _205)))
 (let (($x4247 (and $x4242 $x555)))
 (=> $x4247 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4260 (= ?x539 _206)))
 (=> (and $x4260 $x538) (and (= (time-to-state (+ time 1)) _207) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4260 (= ?x539 _206)))
 (let (($x4265 (and $x4260 $x555)))
 (=> $x4265 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4278 (= ?x539 _207)))
 (=> (and $x4278 $x538) (and (= (time-to-state (+ time 1)) _208) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4278 (= ?x539 _207)))
 (let (($x4283 (and $x4278 $x555)))
 (=> $x4283 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4296 (= ?x539 _208)))
 (=> (and $x4296 $x538) (and (= (time-to-state (+ time 1)) _209) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4296 (= ?x539 _208)))
 (let (($x4301 (and $x4296 $x555)))
 (=> $x4301 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4314 (= ?x539 _209)))
 (=> (and $x4314 $x538) (and (= (time-to-state (+ time 1)) _210) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4314 (= ?x539 _209)))
 (let (($x4319 (and $x4314 $x555)))
 (=> $x4319 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4332 (= ?x539 _210)))
 (=> (and $x4332 $x538) (and (= (time-to-state (+ time 1)) _211) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4332 (= ?x539 _210)))
 (let (($x4337 (and $x4332 $x555)))
 (=> $x4337 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4350 (= ?x539 _211)))
 (=> (and $x4350 $x538) (and (= (time-to-state (+ time 1)) _212) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4350 (= ?x539 _211)))
 (let (($x4355 (and $x4350 $x555)))
 (=> $x4355 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4368 (= ?x539 _212)))
 (=> (and $x4368 $x538) (and (= (time-to-state (+ time 1)) _213) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4368 (= ?x539 _212)))
 (let (($x4373 (and $x4368 $x555)))
 (=> $x4373 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4386 (= ?x539 _213)))
 (=> (and $x4386 $x538) (and (= (time-to-state (+ time 1)) _214) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4386 (= ?x539 _213)))
 (let (($x4391 (and $x4386 $x555)))
 (=> $x4391 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4404 (= ?x539 _214)))
 (=> (and $x4404 $x538) (and (= (time-to-state (+ time 1)) _215) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4404 (= ?x539 _214)))
 (let (($x4409 (and $x4404 $x555)))
 (=> $x4409 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4422 (= ?x539 _215)))
 (=> (and $x4422 $x538) (and (= (time-to-state (+ time 1)) _216) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4422 (= ?x539 _215)))
 (let (($x4427 (and $x4422 $x555)))
 (=> $x4427 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4440 (= ?x539 _216)))
 (=> (and $x4440 $x538) (and (= (time-to-state (+ time 1)) _217) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4440 (= ?x539 _216)))
 (let (($x4445 (and $x4440 $x555)))
 (=> $x4445 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4458 (= ?x539 _217)))
 (=> (and $x4458 $x538) (and (= (time-to-state (+ time 1)) _218) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4458 (= ?x539 _217)))
 (let (($x4463 (and $x4458 $x555)))
 (=> $x4463 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4476 (= ?x539 _218)))
 (=> (and $x4476 $x538) (and (= (time-to-state (+ time 1)) _219) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4476 (= ?x539 _218)))
 (let (($x4481 (and $x4476 $x555)))
 (=> $x4481 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4494 (= ?x539 _219)))
 (=> (and $x4494 $x538) (and (= (time-to-state (+ time 1)) _220) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4494 (= ?x539 _219)))
 (let (($x4499 (and $x4494 $x555)))
 (=> $x4499 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4512 (= ?x539 _220)))
 (=> (and $x4512 $x538) (and (= (time-to-state (+ time 1)) _221) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4512 (= ?x539 _220)))
 (let (($x4517 (and $x4512 $x555)))
 (=> $x4517 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4530 (= ?x539 _221)))
 (=> (and $x4530 $x538) (and (= (time-to-state (+ time 1)) _222) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4530 (= ?x539 _221)))
 (let (($x4535 (and $x4530 $x555)))
 (=> $x4535 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4548 (= ?x539 _222)))
 (=> (and $x4548 $x538) (and (= (time-to-state (+ time 1)) _223) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4548 (= ?x539 _222)))
 (let (($x4553 (and $x4548 $x555)))
 (=> $x4553 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4566 (= ?x539 _223)))
 (=> (and $x4566 $x538) (and (= (time-to-state (+ time 1)) _224) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4566 (= ?x539 _223)))
 (let (($x4571 (and $x4566 $x555)))
 (=> $x4571 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4584 (= ?x539 _224)))
 (=> (and $x4584 $x538) (and (= (time-to-state (+ time 1)) _225) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4584 (= ?x539 _224)))
 (let (($x4589 (and $x4584 $x555)))
 (=> $x4589 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4602 (= ?x539 _225)))
 (=> (and $x4602 $x538) (and (= (time-to-state (+ time 1)) _226) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4602 (= ?x539 _225)))
 (let (($x4607 (and $x4602 $x555)))
 (=> $x4607 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4620 (= ?x539 _226)))
 (=> (and $x4620 $x538) (and (= (time-to-state (+ time 1)) _227) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4620 (= ?x539 _226)))
 (let (($x4625 (and $x4620 $x555)))
 (=> $x4625 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4638 (= ?x539 _227)))
 (=> (and $x4638 $x538) (and (= (time-to-state (+ time 1)) _228) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4638 (= ?x539 _227)))
 (let (($x4643 (and $x4638 $x555)))
 (=> $x4643 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4656 (= ?x539 _228)))
 (=> (and $x4656 $x538) (and (= (time-to-state (+ time 1)) _229) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4656 (= ?x539 _228)))
 (let (($x4661 (and $x4656 $x555)))
 (=> $x4661 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4674 (= ?x539 _229)))
 (=> (and $x4674 $x538) (and (= (time-to-state (+ time 1)) _230) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4674 (= ?x539 _229)))
 (let (($x4679 (and $x4674 $x555)))
 (=> $x4679 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4692 (= ?x539 _230)))
 (=> (and $x4692 $x538) (and (= (time-to-state (+ time 1)) _231) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4692 (= ?x539 _230)))
 (let (($x4697 (and $x4692 $x555)))
 (=> $x4697 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4710 (= ?x539 _231)))
 (=> (and $x4710 $x538) (and (= (time-to-state (+ time 1)) _232) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4710 (= ?x539 _231)))
 (let (($x4715 (and $x4710 $x555)))
 (=> $x4715 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4728 (= ?x539 _232)))
 (=> (and $x4728 $x538) (and (= (time-to-state (+ time 1)) _233) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4728 (= ?x539 _232)))
 (let (($x4733 (and $x4728 $x555)))
 (=> $x4733 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4746 (= ?x539 _233)))
 (=> (and $x4746 $x538) (and (= (time-to-state (+ time 1)) _234) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4746 (= ?x539 _233)))
 (let (($x4751 (and $x4746 $x555)))
 (=> $x4751 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4764 (= ?x539 _234)))
 (=> (and $x4764 $x538) (and (= (time-to-state (+ time 1)) _235) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4764 (= ?x539 _234)))
 (let (($x4769 (and $x4764 $x555)))
 (=> $x4769 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4782 (= ?x539 _235)))
 (=> (and $x4782 $x538) (and (= (time-to-state (+ time 1)) _236) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4782 (= ?x539 _235)))
 (let (($x4787 (and $x4782 $x555)))
 (=> $x4787 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4800 (= ?x539 _236)))
 (=> (and $x4800 $x538) (and (= (time-to-state (+ time 1)) _237) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4800 (= ?x539 _236)))
 (let (($x4805 (and $x4800 $x555)))
 (=> $x4805 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4818 (= ?x539 _237)))
 (=> (and $x4818 $x538) (and (= (time-to-state (+ time 1)) _238) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4818 (= ?x539 _237)))
 (let (($x4823 (and $x4818 $x555)))
 (=> $x4823 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4836 (= ?x539 _238)))
 (=> (and $x4836 $x538) (and (= (time-to-state (+ time 1)) _239) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4836 (= ?x539 _238)))
 (let (($x4841 (and $x4836 $x555)))
 (=> $x4841 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4854 (= ?x539 _239)))
 (=> (and $x4854 $x538) (and (= (time-to-state (+ time 1)) _240) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4854 (= ?x539 _239)))
 (let (($x4859 (and $x4854 $x555)))
 (=> $x4859 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4872 (= ?x539 _240)))
 (=> (and $x4872 $x538) (and (= (time-to-state (+ time 1)) _241) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4872 (= ?x539 _240)))
 (let (($x4877 (and $x4872 $x555)))
 (=> $x4877 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4890 (= ?x539 _241)))
 (=> (and $x4890 $x538) (and (= (time-to-state (+ time 1)) _242) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4890 (= ?x539 _241)))
 (let (($x4895 (and $x4890 $x555)))
 (=> $x4895 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4908 (= ?x539 _242)))
 (=> (and $x4908 $x538) (and (= (time-to-state (+ time 1)) _243) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4908 (= ?x539 _242)))
 (let (($x4913 (and $x4908 $x555)))
 (=> $x4913 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4926 (= ?x539 _243)))
 (=> (and $x4926 $x538) (and (= (time-to-state (+ time 1)) _244) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4926 (= ?x539 _243)))
 (let (($x4931 (and $x4926 $x555)))
 (=> $x4931 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4944 (= ?x539 _244)))
 (=> (and $x4944 $x538) (and (= (time-to-state (+ time 1)) _245) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4944 (= ?x539 _244)))
 (let (($x4949 (and $x4944 $x555)))
 (=> $x4949 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4962 (= ?x539 _245)))
 (=> (and $x4962 $x538) (and (= (time-to-state (+ time 1)) _246) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4962 (= ?x539 _245)))
 (let (($x4967 (and $x4962 $x555)))
 (=> $x4967 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4980 (= ?x539 _246)))
 (=> (and $x4980 $x538) (and (= (time-to-state (+ time 1)) _247) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4980 (= ?x539 _246)))
 (let (($x4985 (and $x4980 $x555)))
 (=> $x4985 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x4998 (= ?x539 _247)))
 (=> (and $x4998 $x538) (and (= (time-to-state (+ time 1)) _248) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x4998 (= ?x539 _247)))
 (let (($x5003 (and $x4998 $x555)))
 (=> $x5003 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5016 (= ?x539 _248)))
 (=> (and $x5016 $x538) (and (= (time-to-state (+ time 1)) _249) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5016 (= ?x539 _248)))
 (let (($x5021 (and $x5016 $x555)))
 (=> $x5021 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5034 (= ?x539 _249)))
 (=> (and $x5034 $x538) (and (= (time-to-state (+ time 1)) _250) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5034 (= ?x539 _249)))
 (let (($x5039 (and $x5034 $x555)))
 (=> $x5039 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5052 (= ?x539 _250)))
 (=> (and $x5052 $x538) (and (= (time-to-state (+ time 1)) _251) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5052 (= ?x539 _250)))
 (let (($x5057 (and $x5052 $x555)))
 (=> $x5057 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5070 (= ?x539 _251)))
 (=> (and $x5070 $x538) (and (= (time-to-state (+ time 1)) _252) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5070 (= ?x539 _251)))
 (let (($x5075 (and $x5070 $x555)))
 (=> $x5075 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5088 (= ?x539 _252)))
 (=> (and $x5088 $x538) (and (= (time-to-state (+ time 1)) _253) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5088 (= ?x539 _252)))
 (let (($x5093 (and $x5088 $x555)))
 (=> $x5093 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5106 (= ?x539 _253)))
 (=> (and $x5106 $x538) (and (= (time-to-state (+ time 1)) _254) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5106 (= ?x539 _253)))
 (let (($x5111 (and $x5106 $x555)))
 (=> $x5111 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5124 (= ?x539 _254)))
 (=> (and $x5124 $x538) (and (= (time-to-state (+ time 1)) _255) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5124 (= ?x539 _254)))
 (let (($x5129 (and $x5124 $x555)))
 (=> $x5129 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5142 (= ?x539 _255)))
 (=> (and $x5142 $x538) (and (= (time-to-state (+ time 1)) _256) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5142 (= ?x539 _255)))
 (let (($x5147 (and $x5142 $x555)))
 (=> $x5147 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5160 (= ?x539 _256)))
 (=> (and $x5160 $x538) (and (= (time-to-state (+ time 1)) _257) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5160 (= ?x539 _256)))
 (let (($x5165 (and $x5160 $x555)))
 (=> $x5165 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5178 (= ?x539 _257)))
 (=> (and $x5178 $x538) (and (= (time-to-state (+ time 1)) _258) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5178 (= ?x539 _257)))
 (let (($x5183 (and $x5178 $x555)))
 (=> $x5183 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5196 (= ?x539 _258)))
 (=> (and $x5196 $x538) (and (= (time-to-state (+ time 1)) _259) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5196 (= ?x539 _258)))
 (let (($x5201 (and $x5196 $x555)))
 (=> $x5201 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5214 (= ?x539 _259)))
 (=> (and $x5214 $x538) (and (= (time-to-state (+ time 1)) _260) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5214 (= ?x539 _259)))
 (let (($x5219 (and $x5214 $x555)))
 (=> $x5219 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5232 (= ?x539 _260)))
 (=> (and $x5232 $x538) (and (= (time-to-state (+ time 1)) _261) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5232 (= ?x539 _260)))
 (let (($x5237 (and $x5232 $x555)))
 (=> $x5237 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5250 (= ?x539 _261)))
 (=> (and $x5250 $x538) (and (= (time-to-state (+ time 1)) _262) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5250 (= ?x539 _261)))
 (let (($x5255 (and $x5250 $x555)))
 (=> $x5255 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5268 (= ?x539 _262)))
 (=> (and $x5268 $x538) (and (= (time-to-state (+ time 1)) _263) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5268 (= ?x539 _262)))
 (let (($x5273 (and $x5268 $x555)))
 (=> $x5273 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5286 (= ?x539 _263)))
 (=> (and $x5286 $x538) (and (= (time-to-state (+ time 1)) _264) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5286 (= ?x539 _263)))
 (let (($x5291 (and $x5286 $x555)))
 (=> $x5291 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5304 (= ?x539 _264)))
 (=> (and $x5304 $x538) (and (= (time-to-state (+ time 1)) _265) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5304 (= ?x539 _264)))
 (let (($x5309 (and $x5304 $x555)))
 (=> $x5309 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5322 (= ?x539 _265)))
 (=> (and $x5322 $x538) (and (= (time-to-state (+ time 1)) _266) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5322 (= ?x539 _265)))
 (let (($x5327 (and $x5322 $x555)))
 (=> $x5327 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5340 (= ?x539 _266)))
 (=> (and $x5340 $x538) (and (= (time-to-state (+ time 1)) _267) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5340 (= ?x539 _266)))
 (let (($x5345 (and $x5340 $x555)))
 (=> $x5345 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5358 (= ?x539 _267)))
 (=> (and $x5358 $x538) (and (= (time-to-state (+ time 1)) _268) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5358 (= ?x539 _267)))
 (let (($x5363 (and $x5358 $x555)))
 (=> $x5363 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5376 (= ?x539 _268)))
 (=> (and $x5376 $x538) (and (= (time-to-state (+ time 1)) _269) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5376 (= ?x539 _268)))
 (let (($x5381 (and $x5376 $x555)))
 (=> $x5381 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5394 (= ?x539 _269)))
 (=> (and $x5394 $x538) (and (= (time-to-state (+ time 1)) _270) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5394 (= ?x539 _269)))
 (let (($x5399 (and $x5394 $x555)))
 (=> $x5399 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5412 (= ?x539 _270)))
 (=> (and $x5412 $x538) (and (= (time-to-state (+ time 1)) _271) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5412 (= ?x539 _270)))
 (let (($x5417 (and $x5412 $x555)))
 (=> $x5417 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5430 (= ?x539 _271)))
 (=> (and $x5430 $x538) (and (= (time-to-state (+ time 1)) _272) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5430 (= ?x539 _271)))
 (let (($x5435 (and $x5430 $x555)))
 (=> $x5435 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5448 (= ?x539 _272)))
 (=> (and $x5448 $x538) (and (= (time-to-state (+ time 1)) _273) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5448 (= ?x539 _272)))
 (let (($x5453 (and $x5448 $x555)))
 (=> $x5453 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5466 (= ?x539 _273)))
 (=> (and $x5466 $x538) (and (= (time-to-state (+ time 1)) _274) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5466 (= ?x539 _273)))
 (let (($x5471 (and $x5466 $x555)))
 (=> $x5471 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5484 (= ?x539 _274)))
 (=> (and $x5484 $x538) (and (= (time-to-state (+ time 1)) _275) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5484 (= ?x539 _274)))
 (let (($x5489 (and $x5484 $x555)))
 (=> $x5489 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5502 (= ?x539 _275)))
 (=> (and $x5502 $x538) (and (= (time-to-state (+ time 1)) _276) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5502 (= ?x539 _275)))
 (let (($x5507 (and $x5502 $x555)))
 (=> $x5507 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5520 (= ?x539 _276)))
 (=> (and $x5520 $x538) (and (= (time-to-state (+ time 1)) _277) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5520 (= ?x539 _276)))
 (let (($x5525 (and $x5520 $x555)))
 (=> $x5525 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5538 (= ?x539 _277)))
 (=> (and $x5538 $x538) (and (= (time-to-state (+ time 1)) _278) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5538 (= ?x539 _277)))
 (let (($x5543 (and $x5538 $x555)))
 (=> $x5543 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5556 (= ?x539 _278)))
 (=> (and $x5556 $x538) (and (= (time-to-state (+ time 1)) _279) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5556 (= ?x539 _278)))
 (let (($x5561 (and $x5556 $x555)))
 (=> $x5561 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5574 (= ?x539 _279)))
 (=> (and $x5574 $x538) (and (= (time-to-state (+ time 1)) _280) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5574 (= ?x539 _279)))
 (let (($x5579 (and $x5574 $x555)))
 (=> $x5579 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5592 (= ?x539 _280)))
 (=> (and $x5592 $x538) (and (= (time-to-state (+ time 1)) _281) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5592 (= ?x539 _280)))
 (let (($x5597 (and $x5592 $x555)))
 (=> $x5597 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5610 (= ?x539 _281)))
 (=> (and $x5610 $x538) (and (= (time-to-state (+ time 1)) _282) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5610 (= ?x539 _281)))
 (let (($x5615 (and $x5610 $x555)))
 (=> $x5615 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5628 (= ?x539 _282)))
 (=> (and $x5628 $x538) (and (= (time-to-state (+ time 1)) _283) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5628 (= ?x539 _282)))
 (let (($x5633 (and $x5628 $x555)))
 (=> $x5633 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5646 (= ?x539 _283)))
 (=> (and $x5646 $x538) (and (= (time-to-state (+ time 1)) _284) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5646 (= ?x539 _283)))
 (let (($x5651 (and $x5646 $x555)))
 (=> $x5651 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5664 (= ?x539 _284)))
 (=> (and $x5664 $x538) (and (= (time-to-state (+ time 1)) _285) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5664 (= ?x539 _284)))
 (let (($x5669 (and $x5664 $x555)))
 (=> $x5669 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5682 (= ?x539 _285)))
 (=> (and $x5682 $x538) (and (= (time-to-state (+ time 1)) _286) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5682 (= ?x539 _285)))
 (let (($x5687 (and $x5682 $x555)))
 (=> $x5687 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5700 (= ?x539 _286)))
 (=> (and $x5700 $x538) (and (= (time-to-state (+ time 1)) _287) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5700 (= ?x539 _286)))
 (let (($x5705 (and $x5700 $x555)))
 (=> $x5705 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5718 (= ?x539 _287)))
 (=> (and $x5718 $x538) (and (= (time-to-state (+ time 1)) _288) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5718 (= ?x539 _287)))
 (let (($x5723 (and $x5718 $x555)))
 (=> $x5723 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5736 (= ?x539 _288)))
 (=> (and $x5736 $x538) (and (= (time-to-state (+ time 1)) _289) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5736 (= ?x539 _288)))
 (let (($x5741 (and $x5736 $x555)))
 (=> $x5741 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5754 (= ?x539 _289)))
 (=> (and $x5754 $x538) (and (= (time-to-state (+ time 1)) _290) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5754 (= ?x539 _289)))
 (let (($x5759 (and $x5754 $x555)))
 (=> $x5759 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5772 (= ?x539 _290)))
 (=> (and $x5772 $x538) (and (= (time-to-state (+ time 1)) _291) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5772 (= ?x539 _290)))
 (let (($x5777 (and $x5772 $x555)))
 (=> $x5777 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5790 (= ?x539 _291)))
 (=> (and $x5790 $x538) (and (= (time-to-state (+ time 1)) _292) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5790 (= ?x539 _291)))
 (let (($x5795 (and $x5790 $x555)))
 (=> $x5795 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5808 (= ?x539 _292)))
 (=> (and $x5808 $x538) (and (= (time-to-state (+ time 1)) _293) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5808 (= ?x539 _292)))
 (let (($x5813 (and $x5808 $x555)))
 (=> $x5813 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5826 (= ?x539 _293)))
 (=> (and $x5826 $x538) (and (= (time-to-state (+ time 1)) _294) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5826 (= ?x539 _293)))
 (let (($x5831 (and $x5826 $x555)))
 (=> $x5831 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5844 (= ?x539 _294)))
 (=> (and $x5844 $x538) (and (= (time-to-state (+ time 1)) _295) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5844 (= ?x539 _294)))
 (let (($x5849 (and $x5844 $x555)))
 (=> $x5849 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5862 (= ?x539 _295)))
 (=> (and $x5862 $x538) (and (= (time-to-state (+ time 1)) _296) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5862 (= ?x539 _295)))
 (let (($x5867 (and $x5862 $x555)))
 (=> $x5867 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5880 (= ?x539 _296)))
 (=> (and $x5880 $x538) (and (= (time-to-state (+ time 1)) _297) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5880 (= ?x539 _296)))
 (let (($x5885 (and $x5880 $x555)))
 (=> $x5885 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5898 (= ?x539 _297)))
 (=> (and $x5898 $x538) (and (= (time-to-state (+ time 1)) _298) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5898 (= ?x539 _297)))
 (let (($x5903 (and $x5898 $x555)))
 (=> $x5903 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5916 (= ?x539 _298)))
 (=> (and $x5916 $x538) (and (= (time-to-state (+ time 1)) _299) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5916 (= ?x539 _298)))
 (let (($x5921 (and $x5916 $x555)))
 (=> $x5921 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5934 (= ?x539 _299)))
 (=> (and $x5934 $x538) (and (= (time-to-state (+ time 1)) _300) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5934 (= ?x539 _299)))
 (let (($x5939 (and $x5934 $x555)))
 (=> $x5939 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5952 (= ?x539 _300)))
 (=> (and $x5952 $x538) (and (= (time-to-state (+ time 1)) _301) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5952 (= ?x539 _300)))
 (let (($x5957 (and $x5952 $x555)))
 (=> $x5957 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5970 (= ?x539 _301)))
 (=> (and $x5970 $x538) (and (= (time-to-state (+ time 1)) _302) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5970 (= ?x539 _301)))
 (let (($x5975 (and $x5970 $x555)))
 (=> $x5975 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x5988 (= ?x539 _302)))
 (=> (and $x5988 $x538) (and (= (time-to-state (+ time 1)) _303) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x5988 (= ?x539 _302)))
 (let (($x5993 (and $x5988 $x555)))
 (=> $x5993 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6006 (= ?x539 _303)))
 (=> (and $x6006 $x538) (and (= (time-to-state (+ time 1)) _304) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6006 (= ?x539 _303)))
 (let (($x6011 (and $x6006 $x555)))
 (=> $x6011 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6024 (= ?x539 _304)))
 (=> (and $x6024 $x538) (and (= (time-to-state (+ time 1)) _305) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6024 (= ?x539 _304)))
 (let (($x6029 (and $x6024 $x555)))
 (=> $x6029 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6042 (= ?x539 _305)))
 (=> (and $x6042 $x538) (and (= (time-to-state (+ time 1)) _306) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6042 (= ?x539 _305)))
 (let (($x6047 (and $x6042 $x555)))
 (=> $x6047 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6060 (= ?x539 _306)))
 (=> (and $x6060 $x538) (and (= (time-to-state (+ time 1)) _307) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6060 (= ?x539 _306)))
 (let (($x6065 (and $x6060 $x555)))
 (=> $x6065 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6078 (= ?x539 _307)))
 (=> (and $x6078 $x538) (and (= (time-to-state (+ time 1)) _308) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6078 (= ?x539 _307)))
 (let (($x6083 (and $x6078 $x555)))
 (=> $x6083 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6096 (= ?x539 _308)))
 (=> (and $x6096 $x538) (and (= (time-to-state (+ time 1)) _309) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6096 (= ?x539 _308)))
 (let (($x6101 (and $x6096 $x555)))
 (=> $x6101 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6114 (= ?x539 _309)))
 (=> (and $x6114 $x538) (and (= (time-to-state (+ time 1)) _310) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6114 (= ?x539 _309)))
 (let (($x6119 (and $x6114 $x555)))
 (=> $x6119 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6132 (= ?x539 _310)))
 (=> (and $x6132 $x538) (and (= (time-to-state (+ time 1)) _311) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6132 (= ?x539 _310)))
 (let (($x6137 (and $x6132 $x555)))
 (=> $x6137 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6150 (= ?x539 _311)))
 (=> (and $x6150 $x538) (and (= (time-to-state (+ time 1)) _312) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6150 (= ?x539 _311)))
 (let (($x6155 (and $x6150 $x555)))
 (=> $x6155 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6168 (= ?x539 _312)))
 (=> (and $x6168 $x538) (and (= (time-to-state (+ time 1)) _313) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6168 (= ?x539 _312)))
 (let (($x6173 (and $x6168 $x555)))
 (=> $x6173 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6186 (= ?x539 _313)))
 (=> (and $x6186 $x538) (and (= (time-to-state (+ time 1)) _314) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6186 (= ?x539 _313)))
 (let (($x6191 (and $x6186 $x555)))
 (=> $x6191 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6204 (= ?x539 _314)))
 (=> (and $x6204 $x538) (and (= (time-to-state (+ time 1)) _315) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6204 (= ?x539 _314)))
 (let (($x6209 (and $x6204 $x555)))
 (=> $x6209 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6222 (= ?x539 _315)))
 (=> (and $x6222 $x538) (and (= (time-to-state (+ time 1)) _316) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6222 (= ?x539 _315)))
 (let (($x6227 (and $x6222 $x555)))
 (=> $x6227 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6240 (= ?x539 _316)))
 (=> (and $x6240 $x538) (and (= (time-to-state (+ time 1)) _317) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6240 (= ?x539 _316)))
 (let (($x6245 (and $x6240 $x555)))
 (=> $x6245 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6258 (= ?x539 _317)))
 (=> (and $x6258 $x538) (and (= (time-to-state (+ time 1)) _318) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6258 (= ?x539 _317)))
 (let (($x6263 (and $x6258 $x555)))
 (=> $x6263 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6276 (= ?x539 _318)))
 (=> (and $x6276 $x538) (and (= (time-to-state (+ time 1)) _319) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6276 (= ?x539 _318)))
 (let (($x6281 (and $x6276 $x555)))
 (=> $x6281 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6294 (= ?x539 _319)))
 (=> (and $x6294 $x538) (and (= (time-to-state (+ time 1)) _320) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6294 (= ?x539 _319)))
 (let (($x6299 (and $x6294 $x555)))
 (=> $x6299 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6312 (= ?x539 _320)))
 (=> (and $x6312 $x538) (and (= (time-to-state (+ time 1)) _321) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6312 (= ?x539 _320)))
 (let (($x6317 (and $x6312 $x555)))
 (=> $x6317 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6330 (= ?x539 _321)))
 (=> (and $x6330 $x538) (and (= (time-to-state (+ time 1)) _322) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6330 (= ?x539 _321)))
 (let (($x6335 (and $x6330 $x555)))
 (=> $x6335 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6348 (= ?x539 _322)))
 (=> (and $x6348 $x538) (and (= (time-to-state (+ time 1)) _323) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6348 (= ?x539 _322)))
 (let (($x6353 (and $x6348 $x555)))
 (=> $x6353 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6366 (= ?x539 _323)))
 (=> (and $x6366 $x538) (and (= (time-to-state (+ time 1)) _324) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6366 (= ?x539 _323)))
 (let (($x6371 (and $x6366 $x555)))
 (=> $x6371 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6384 (= ?x539 _324)))
 (=> (and $x6384 $x538) (and (= (time-to-state (+ time 1)) _325) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6384 (= ?x539 _324)))
 (let (($x6389 (and $x6384 $x555)))
 (=> $x6389 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6402 (= ?x539 _325)))
 (=> (and $x6402 $x538) (and (= (time-to-state (+ time 1)) _326) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6402 (= ?x539 _325)))
 (let (($x6407 (and $x6402 $x555)))
 (=> $x6407 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6420 (= ?x539 _326)))
 (=> (and $x6420 $x538) (and (= (time-to-state (+ time 1)) _327) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6420 (= ?x539 _326)))
 (let (($x6425 (and $x6420 $x555)))
 (=> $x6425 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6438 (= ?x539 _327)))
 (=> (and $x6438 $x538) (and (= (time-to-state (+ time 1)) _328) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6438 (= ?x539 _327)))
 (let (($x6443 (and $x6438 $x555)))
 (=> $x6443 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6456 (= ?x539 _328)))
 (=> (and $x6456 $x538) (and (= (time-to-state (+ time 1)) _329) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6456 (= ?x539 _328)))
 (let (($x6461 (and $x6456 $x555)))
 (=> $x6461 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6474 (= ?x539 _329)))
 (=> (and $x6474 $x538) (and (= (time-to-state (+ time 1)) _330) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6474 (= ?x539 _329)))
 (let (($x6479 (and $x6474 $x555)))
 (=> $x6479 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6492 (= ?x539 _330)))
 (=> (and $x6492 $x538) (and (= (time-to-state (+ time 1)) _331) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6492 (= ?x539 _330)))
 (let (($x6497 (and $x6492 $x555)))
 (=> $x6497 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6510 (= ?x539 _331)))
 (=> (and $x6510 $x538) (and (= (time-to-state (+ time 1)) _332) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6510 (= ?x539 _331)))
 (let (($x6515 (and $x6510 $x555)))
 (=> $x6515 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6528 (= ?x539 _332)))
 (=> (and $x6528 $x538) (and (= (time-to-state (+ time 1)) _333) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6528 (= ?x539 _332)))
 (let (($x6533 (and $x6528 $x555)))
 (=> $x6533 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6546 (= ?x539 _333)))
 (=> (and $x6546 $x538) (and (= (time-to-state (+ time 1)) _334) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6546 (= ?x539 _333)))
 (let (($x6551 (and $x6546 $x555)))
 (=> $x6551 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6564 (= ?x539 _334)))
 (=> (and $x6564 $x538) (and (= (time-to-state (+ time 1)) _335) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6564 (= ?x539 _334)))
 (let (($x6569 (and $x6564 $x555)))
 (=> $x6569 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6582 (= ?x539 _335)))
 (=> (and $x6582 $x538) (and (= (time-to-state (+ time 1)) _336) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6582 (= ?x539 _335)))
 (let (($x6587 (and $x6582 $x555)))
 (=> $x6587 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6600 (= ?x539 _336)))
 (=> (and $x6600 $x538) (and (= (time-to-state (+ time 1)) _337) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6600 (= ?x539 _336)))
 (let (($x6605 (and $x6600 $x555)))
 (=> $x6605 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6618 (= ?x539 _337)))
 (=> (and $x6618 $x538) (and (= (time-to-state (+ time 1)) _338) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6618 (= ?x539 _337)))
 (let (($x6623 (and $x6618 $x555)))
 (=> $x6623 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6636 (= ?x539 _338)))
 (=> (and $x6636 $x538) (and (= (time-to-state (+ time 1)) _339) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6636 (= ?x539 _338)))
 (let (($x6641 (and $x6636 $x555)))
 (=> $x6641 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6654 (= ?x539 _339)))
 (=> (and $x6654 $x538) (and (= (time-to-state (+ time 1)) _340) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6654 (= ?x539 _339)))
 (let (($x6659 (and $x6654 $x555)))
 (=> $x6659 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6672 (= ?x539 _340)))
 (=> (and $x6672 $x538) (and (= (time-to-state (+ time 1)) _341) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6672 (= ?x539 _340)))
 (let (($x6677 (and $x6672 $x555)))
 (=> $x6677 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6690 (= ?x539 _341)))
 (=> (and $x6690 $x538) (and (= (time-to-state (+ time 1)) _342) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6690 (= ?x539 _341)))
 (let (($x6695 (and $x6690 $x555)))
 (=> $x6695 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6708 (= ?x539 _342)))
 (=> (and $x6708 $x538) (and (= (time-to-state (+ time 1)) _343) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6708 (= ?x539 _342)))
 (let (($x6713 (and $x6708 $x555)))
 (=> $x6713 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6726 (= ?x539 _343)))
 (=> (and $x6726 $x538) (and (= (time-to-state (+ time 1)) _344) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6726 (= ?x539 _343)))
 (let (($x6731 (and $x6726 $x555)))
 (=> $x6731 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6744 (= ?x539 _344)))
 (=> (and $x6744 $x538) (and (= (time-to-state (+ time 1)) _345) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6744 (= ?x539 _344)))
 (let (($x6749 (and $x6744 $x555)))
 (=> $x6749 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6762 (= ?x539 _345)))
 (=> (and $x6762 $x538) (and (= (time-to-state (+ time 1)) _346) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6762 (= ?x539 _345)))
 (let (($x6767 (and $x6762 $x555)))
 (=> $x6767 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6780 (= ?x539 _346)))
 (=> (and $x6780 $x538) (and (= (time-to-state (+ time 1)) _347) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6780 (= ?x539 _346)))
 (let (($x6785 (and $x6780 $x555)))
 (=> $x6785 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6798 (= ?x539 _347)))
 (=> (and $x6798 $x538) (and (= (time-to-state (+ time 1)) _348) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6798 (= ?x539 _347)))
 (let (($x6803 (and $x6798 $x555)))
 (=> $x6803 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6816 (= ?x539 _348)))
 (=> (and $x6816 $x538) (and (= (time-to-state (+ time 1)) _349) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6816 (= ?x539 _348)))
 (let (($x6821 (and $x6816 $x555)))
 (=> $x6821 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6834 (= ?x539 _349)))
 (=> (and $x6834 $x538) (and (= (time-to-state (+ time 1)) _350) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6834 (= ?x539 _349)))
 (let (($x6839 (and $x6834 $x555)))
 (=> $x6839 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6852 (= ?x539 _350)))
 (=> (and $x6852 $x538) (and (= (time-to-state (+ time 1)) _351) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6852 (= ?x539 _350)))
 (let (($x6857 (and $x6852 $x555)))
 (=> $x6857 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6870 (= ?x539 _351)))
 (=> (and $x6870 $x538) (and (= (time-to-state (+ time 1)) _352) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6870 (= ?x539 _351)))
 (let (($x6875 (and $x6870 $x555)))
 (=> $x6875 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6888 (= ?x539 _352)))
 (=> (and $x6888 $x538) (and (= (time-to-state (+ time 1)) _353) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6888 (= ?x539 _352)))
 (let (($x6893 (and $x6888 $x555)))
 (=> $x6893 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6906 (= ?x539 _353)))
 (=> (and $x6906 $x538) (and (= (time-to-state (+ time 1)) _354) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6906 (= ?x539 _353)))
 (let (($x6911 (and $x6906 $x555)))
 (=> $x6911 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6924 (= ?x539 _354)))
 (=> (and $x6924 $x538) (and (= (time-to-state (+ time 1)) _355) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6924 (= ?x539 _354)))
 (let (($x6929 (and $x6924 $x555)))
 (=> $x6929 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6942 (= ?x539 _355)))
 (=> (and $x6942 $x538) (and (= (time-to-state (+ time 1)) _356) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6942 (= ?x539 _355)))
 (let (($x6947 (and $x6942 $x555)))
 (=> $x6947 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6960 (= ?x539 _356)))
 (=> (and $x6960 $x538) (and (= (time-to-state (+ time 1)) _357) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6960 (= ?x539 _356)))
 (let (($x6965 (and $x6960 $x555)))
 (=> $x6965 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6978 (= ?x539 _357)))
 (=> (and $x6978 $x538) (and (= (time-to-state (+ time 1)) _358) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6978 (= ?x539 _357)))
 (let (($x6983 (and $x6978 $x555)))
 (=> $x6983 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x6996 (= ?x539 _358)))
 (=> (and $x6996 $x538) (and (= (time-to-state (+ time 1)) _359) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x6996 (= ?x539 _358)))
 (let (($x7001 (and $x6996 $x555)))
 (=> $x7001 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7014 (= ?x539 _359)))
 (=> (and $x7014 $x538) (and (= (time-to-state (+ time 1)) _360) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7014 (= ?x539 _359)))
 (let (($x7019 (and $x7014 $x555)))
 (=> $x7019 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7032 (= ?x539 _360)))
 (=> (and $x7032 $x538) (and (= (time-to-state (+ time 1)) _361) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7032 (= ?x539 _360)))
 (let (($x7037 (and $x7032 $x555)))
 (=> $x7037 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7050 (= ?x539 _361)))
 (=> (and $x7050 $x538) (and (= (time-to-state (+ time 1)) _362) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7050 (= ?x539 _361)))
 (let (($x7055 (and $x7050 $x555)))
 (=> $x7055 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7068 (= ?x539 _362)))
 (=> (and $x7068 $x538) (and (= (time-to-state (+ time 1)) _363) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7068 (= ?x539 _362)))
 (let (($x7073 (and $x7068 $x555)))
 (=> $x7073 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7086 (= ?x539 _363)))
 (=> (and $x7086 $x538) (and (= (time-to-state (+ time 1)) _364) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7086 (= ?x539 _363)))
 (let (($x7091 (and $x7086 $x555)))
 (=> $x7091 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7104 (= ?x539 _364)))
 (=> (and $x7104 $x538) (and (= (time-to-state (+ time 1)) _365) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7104 (= ?x539 _364)))
 (let (($x7109 (and $x7104 $x555)))
 (=> $x7109 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7122 (= ?x539 _365)))
 (=> (and $x7122 $x538) (and (= (time-to-state (+ time 1)) _366) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7122 (= ?x539 _365)))
 (let (($x7127 (and $x7122 $x555)))
 (=> $x7127 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7140 (= ?x539 _366)))
 (=> (and $x7140 $x538) (and (= (time-to-state (+ time 1)) _367) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7140 (= ?x539 _366)))
 (let (($x7145 (and $x7140 $x555)))
 (=> $x7145 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7158 (= ?x539 _367)))
 (=> (and $x7158 $x538) (and (= (time-to-state (+ time 1)) _368) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7158 (= ?x539 _367)))
 (let (($x7163 (and $x7158 $x555)))
 (=> $x7163 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7176 (= ?x539 _368)))
 (=> (and $x7176 $x538) (and (= (time-to-state (+ time 1)) _369) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7176 (= ?x539 _368)))
 (let (($x7181 (and $x7176 $x555)))
 (=> $x7181 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7194 (= ?x539 _369)))
 (=> (and $x7194 $x538) (and (= (time-to-state (+ time 1)) _370) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7194 (= ?x539 _369)))
 (let (($x7199 (and $x7194 $x555)))
 (=> $x7199 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7212 (= ?x539 _370)))
 (=> (and $x7212 $x538) (and (= (time-to-state (+ time 1)) _371) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7212 (= ?x539 _370)))
 (let (($x7217 (and $x7212 $x555)))
 (=> $x7217 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7230 (= ?x539 _371)))
 (=> (and $x7230 $x538) (and (= (time-to-state (+ time 1)) _372) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7230 (= ?x539 _371)))
 (let (($x7235 (and $x7230 $x555)))
 (=> $x7235 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7248 (= ?x539 _372)))
 (=> (and $x7248 $x538) (and (= (time-to-state (+ time 1)) _373) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7248 (= ?x539 _372)))
 (let (($x7253 (and $x7248 $x555)))
 (=> $x7253 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7266 (= ?x539 _373)))
 (=> (and $x7266 $x538) (and (= (time-to-state (+ time 1)) _374) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7266 (= ?x539 _373)))
 (let (($x7271 (and $x7266 $x555)))
 (=> $x7271 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7284 (= ?x539 _374)))
 (=> (and $x7284 $x538) (and (= (time-to-state (+ time 1)) _375) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7284 (= ?x539 _374)))
 (let (($x7289 (and $x7284 $x555)))
 (=> $x7289 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7302 (= ?x539 _375)))
 (=> (and $x7302 $x538) (and (= (time-to-state (+ time 1)) _376) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7302 (= ?x539 _375)))
 (let (($x7307 (and $x7302 $x555)))
 (=> $x7307 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7320 (= ?x539 _376)))
 (=> (and $x7320 $x538) (and (= (time-to-state (+ time 1)) _377) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7320 (= ?x539 _376)))
 (let (($x7325 (and $x7320 $x555)))
 (=> $x7325 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7338 (= ?x539 _377)))
 (=> (and $x7338 $x538) (and (= (time-to-state (+ time 1)) _378) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7338 (= ?x539 _377)))
 (let (($x7343 (and $x7338 $x555)))
 (=> $x7343 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7356 (= ?x539 _378)))
 (=> (and $x7356 $x538) (and (= (time-to-state (+ time 1)) _379) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7356 (= ?x539 _378)))
 (let (($x7361 (and $x7356 $x555)))
 (=> $x7361 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7374 (= ?x539 _379)))
 (=> (and $x7374 $x538) (and (= (time-to-state (+ time 1)) _380) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7374 (= ?x539 _379)))
 (let (($x7379 (and $x7374 $x555)))
 (=> $x7379 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7392 (= ?x539 _380)))
 (=> (and $x7392 $x538) (and (= (time-to-state (+ time 1)) _381) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7392 (= ?x539 _380)))
 (let (($x7397 (and $x7392 $x555)))
 (=> $x7397 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7410 (= ?x539 _381)))
 (=> (and $x7410 $x538) (and (= (time-to-state (+ time 1)) _382) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7410 (= ?x539 _381)))
 (let (($x7415 (and $x7410 $x555)))
 (=> $x7415 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7428 (= ?x539 _382)))
 (=> (and $x7428 $x538) (and (= (time-to-state (+ time 1)) _383) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7428 (= ?x539 _382)))
 (let (($x7433 (and $x7428 $x555)))
 (=> $x7433 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7446 (= ?x539 _383)))
 (=> (and $x7446 $x538) (and (= (time-to-state (+ time 1)) _384) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7446 (= ?x539 _383)))
 (let (($x7451 (and $x7446 $x555)))
 (=> $x7451 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7464 (= ?x539 _384)))
 (=> (and $x7464 $x538) (and (= (time-to-state (+ time 1)) _385) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7464 (= ?x539 _384)))
 (let (($x7469 (and $x7464 $x555)))
 (=> $x7469 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7482 (= ?x539 _385)))
 (=> (and $x7482 $x538) (and (= (time-to-state (+ time 1)) _386) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7482 (= ?x539 _385)))
 (let (($x7487 (and $x7482 $x555)))
 (=> $x7487 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7500 (= ?x539 _386)))
 (=> (and $x7500 $x538) (and (= (time-to-state (+ time 1)) _387) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7500 (= ?x539 _386)))
 (let (($x7505 (and $x7500 $x555)))
 (=> $x7505 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7518 (= ?x539 _387)))
 (=> (and $x7518 $x538) (and (= (time-to-state (+ time 1)) _388) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7518 (= ?x539 _387)))
 (let (($x7523 (and $x7518 $x555)))
 (=> $x7523 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7536 (= ?x539 _388)))
 (=> (and $x7536 $x538) (and (= (time-to-state (+ time 1)) _389) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7536 (= ?x539 _388)))
 (let (($x7541 (and $x7536 $x555)))
 (=> $x7541 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7554 (= ?x539 _389)))
 (=> (and $x7554 $x538) (and (= (time-to-state (+ time 1)) _390) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7554 (= ?x539 _389)))
 (let (($x7559 (and $x7554 $x555)))
 (=> $x7559 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7572 (= ?x539 _390)))
 (=> (and $x7572 $x538) (and (= (time-to-state (+ time 1)) _391) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7572 (= ?x539 _390)))
 (let (($x7577 (and $x7572 $x555)))
 (=> $x7577 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7590 (= ?x539 _391)))
 (=> (and $x7590 $x538) (and (= (time-to-state (+ time 1)) _392) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7590 (= ?x539 _391)))
 (let (($x7595 (and $x7590 $x555)))
 (=> $x7595 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7608 (= ?x539 _392)))
 (=> (and $x7608 $x538) (and (= (time-to-state (+ time 1)) _393) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7608 (= ?x539 _392)))
 (let (($x7613 (and $x7608 $x555)))
 (=> $x7613 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7626 (= ?x539 _393)))
 (=> (and $x7626 $x538) (and (= (time-to-state (+ time 1)) _394) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7626 (= ?x539 _393)))
 (let (($x7631 (and $x7626 $x555)))
 (=> $x7631 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7644 (= ?x539 _394)))
 (=> (and $x7644 $x538) (and (= (time-to-state (+ time 1)) _395) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7644 (= ?x539 _394)))
 (let (($x7649 (and $x7644 $x555)))
 (=> $x7649 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7662 (= ?x539 _395)))
 (=> (and $x7662 $x538) (and (= (time-to-state (+ time 1)) _396) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7662 (= ?x539 _395)))
 (let (($x7667 (and $x7662 $x555)))
 (=> $x7667 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7680 (= ?x539 _396)))
 (=> (and $x7680 $x538) (and (= (time-to-state (+ time 1)) _397) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7680 (= ?x539 _396)))
 (let (($x7685 (and $x7680 $x555)))
 (=> $x7685 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7698 (= ?x539 _397)))
 (=> (and $x7698 $x538) (and (= (time-to-state (+ time 1)) _398) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7698 (= ?x539 _397)))
 (let (($x7703 (and $x7698 $x555)))
 (=> $x7703 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7716 (= ?x539 _398)))
 (=> (and $x7716 $x538) (and (= (time-to-state (+ time 1)) _399) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7716 (= ?x539 _398)))
 (let (($x7721 (and $x7716 $x555)))
 (=> $x7721 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7734 (= ?x539 _399)))
 (=> (and $x7734 $x538) (and (= (time-to-state (+ time 1)) _400) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7734 (= ?x539 _399)))
 (let (($x7739 (and $x7734 $x555)))
 (=> $x7739 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7752 (= ?x539 _400)))
 (=> (and $x7752 $x538) (and (= (time-to-state (+ time 1)) _401) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7752 (= ?x539 _400)))
 (let (($x7757 (and $x7752 $x555)))
 (=> $x7757 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7770 (= ?x539 _401)))
 (=> (and $x7770 $x538) (and (= (time-to-state (+ time 1)) _402) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7770 (= ?x539 _401)))
 (let (($x7775 (and $x7770 $x555)))
 (=> $x7775 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7788 (= ?x539 _402)))
 (=> (and $x7788 $x538) (and (= (time-to-state (+ time 1)) _403) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7788 (= ?x539 _402)))
 (let (($x7793 (and $x7788 $x555)))
 (=> $x7793 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7806 (= ?x539 _403)))
 (=> (and $x7806 $x538) (and (= (time-to-state (+ time 1)) _404) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7806 (= ?x539 _403)))
 (let (($x7811 (and $x7806 $x555)))
 (=> $x7811 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7824 (= ?x539 _404)))
 (=> (and $x7824 $x538) (and (= (time-to-state (+ time 1)) _405) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7824 (= ?x539 _404)))
 (let (($x7829 (and $x7824 $x555)))
 (=> $x7829 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7842 (= ?x539 _405)))
 (=> (and $x7842 $x538) (and (= (time-to-state (+ time 1)) _406) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7842 (= ?x539 _405)))
 (let (($x7847 (and $x7842 $x555)))
 (=> $x7847 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7860 (= ?x539 _406)))
 (=> (and $x7860 $x538) (and (= (time-to-state (+ time 1)) _407) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7860 (= ?x539 _406)))
 (let (($x7865 (and $x7860 $x555)))
 (=> $x7865 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7878 (= ?x539 _407)))
 (=> (and $x7878 $x538) (and (= (time-to-state (+ time 1)) _408) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7878 (= ?x539 _407)))
 (let (($x7883 (and $x7878 $x555)))
 (=> $x7883 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7896 (= ?x539 _408)))
 (=> (and $x7896 $x538) (and (= (time-to-state (+ time 1)) _409) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7896 (= ?x539 _408)))
 (let (($x7901 (and $x7896 $x555)))
 (=> $x7901 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7914 (= ?x539 _409)))
 (=> (and $x7914 $x538) (and (= (time-to-state (+ time 1)) _410) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7914 (= ?x539 _409)))
 (let (($x7919 (and $x7914 $x555)))
 (=> $x7919 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7932 (= ?x539 _410)))
 (=> (and $x7932 $x538) (and (= (time-to-state (+ time 1)) _411) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7932 (= ?x539 _410)))
 (let (($x7937 (and $x7932 $x555)))
 (=> $x7937 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7950 (= ?x539 _411)))
 (=> (and $x7950 $x538) (and (= (time-to-state (+ time 1)) _412) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7950 (= ?x539 _411)))
 (let (($x7955 (and $x7950 $x555)))
 (=> $x7955 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7968 (= ?x539 _412)))
 (=> (and $x7968 $x538) (and (= (time-to-state (+ time 1)) _413) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7968 (= ?x539 _412)))
 (let (($x7973 (and $x7968 $x555)))
 (=> $x7973 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x7986 (= ?x539 _413)))
 (=> (and $x7986 $x538) (and (= (time-to-state (+ time 1)) _414) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x7986 (= ?x539 _413)))
 (let (($x7991 (and $x7986 $x555)))
 (=> $x7991 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8004 (= ?x539 _414)))
 (=> (and $x8004 $x538) (and (= (time-to-state (+ time 1)) _415) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8004 (= ?x539 _414)))
 (let (($x8009 (and $x8004 $x555)))
 (=> $x8009 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8022 (= ?x539 _415)))
 (=> (and $x8022 $x538) (and (= (time-to-state (+ time 1)) _416) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8022 (= ?x539 _415)))
 (let (($x8027 (and $x8022 $x555)))
 (=> $x8027 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8040 (= ?x539 _416)))
 (=> (and $x8040 $x538) (and (= (time-to-state (+ time 1)) _417) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8040 (= ?x539 _416)))
 (let (($x8045 (and $x8040 $x555)))
 (=> $x8045 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8058 (= ?x539 _417)))
 (=> (and $x8058 $x538) (and (= (time-to-state (+ time 1)) _418) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8058 (= ?x539 _417)))
 (let (($x8063 (and $x8058 $x555)))
 (=> $x8063 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8076 (= ?x539 _418)))
 (=> (and $x8076 $x538) (and (= (time-to-state (+ time 1)) _419) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8076 (= ?x539 _418)))
 (let (($x8081 (and $x8076 $x555)))
 (=> $x8081 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8094 (= ?x539 _419)))
 (=> (and $x8094 $x538) (and (= (time-to-state (+ time 1)) _420) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8094 (= ?x539 _419)))
 (let (($x8099 (and $x8094 $x555)))
 (=> $x8099 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8112 (= ?x539 _420)))
 (=> (and $x8112 $x538) (and (= (time-to-state (+ time 1)) _421) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8112 (= ?x539 _420)))
 (let (($x8117 (and $x8112 $x555)))
 (=> $x8117 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8130 (= ?x539 _421)))
 (=> (and $x8130 $x538) (and (= (time-to-state (+ time 1)) _422) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8130 (= ?x539 _421)))
 (let (($x8135 (and $x8130 $x555)))
 (=> $x8135 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8148 (= ?x539 _422)))
 (=> (and $x8148 $x538) (and (= (time-to-state (+ time 1)) _423) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8148 (= ?x539 _422)))
 (let (($x8153 (and $x8148 $x555)))
 (=> $x8153 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8166 (= ?x539 _423)))
 (=> (and $x8166 $x538) (and (= (time-to-state (+ time 1)) _424) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8166 (= ?x539 _423)))
 (let (($x8171 (and $x8166 $x555)))
 (=> $x8171 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8184 (= ?x539 _424)))
 (=> (and $x8184 $x538) (and (= (time-to-state (+ time 1)) _425) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8184 (= ?x539 _424)))
 (let (($x8189 (and $x8184 $x555)))
 (=> $x8189 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8202 (= ?x539 _425)))
 (=> (and $x8202 $x538) (and (= (time-to-state (+ time 1)) _426) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8202 (= ?x539 _425)))
 (let (($x8207 (and $x8202 $x555)))
 (=> $x8207 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8220 (= ?x539 _426)))
 (=> (and $x8220 $x538) (and (= (time-to-state (+ time 1)) _427) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8220 (= ?x539 _426)))
 (let (($x8225 (and $x8220 $x555)))
 (=> $x8225 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8238 (= ?x539 _427)))
 (=> (and $x8238 $x538) (and (= (time-to-state (+ time 1)) _428) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8238 (= ?x539 _427)))
 (let (($x8243 (and $x8238 $x555)))
 (=> $x8243 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8256 (= ?x539 _428)))
 (=> (and $x8256 $x538) (and (= (time-to-state (+ time 1)) _429) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8256 (= ?x539 _428)))
 (let (($x8261 (and $x8256 $x555)))
 (=> $x8261 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8274 (= ?x539 _429)))
 (=> (and $x8274 $x538) (and (= (time-to-state (+ time 1)) _430) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8274 (= ?x539 _429)))
 (let (($x8279 (and $x8274 $x555)))
 (=> $x8279 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8292 (= ?x539 _430)))
 (=> (and $x8292 $x538) (and (= (time-to-state (+ time 1)) _431) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8292 (= ?x539 _430)))
 (let (($x8297 (and $x8292 $x555)))
 (=> $x8297 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8310 (= ?x539 _431)))
 (=> (and $x8310 $x538) (and (= (time-to-state (+ time 1)) _432) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8310 (= ?x539 _431)))
 (let (($x8315 (and $x8310 $x555)))
 (=> $x8315 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8328 (= ?x539 _432)))
 (=> (and $x8328 $x538) (and (= (time-to-state (+ time 1)) _433) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8328 (= ?x539 _432)))
 (let (($x8333 (and $x8328 $x555)))
 (=> $x8333 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8346 (= ?x539 _433)))
 (=> (and $x8346 $x538) (and (= (time-to-state (+ time 1)) _434) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8346 (= ?x539 _433)))
 (let (($x8351 (and $x8346 $x555)))
 (=> $x8351 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8364 (= ?x539 _434)))
 (=> (and $x8364 $x538) (and (= (time-to-state (+ time 1)) _435) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8364 (= ?x539 _434)))
 (let (($x8369 (and $x8364 $x555)))
 (=> $x8369 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8382 (= ?x539 _435)))
 (=> (and $x8382 $x538) (and (= (time-to-state (+ time 1)) _436) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8382 (= ?x539 _435)))
 (let (($x8387 (and $x8382 $x555)))
 (=> $x8387 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8400 (= ?x539 _436)))
 (=> (and $x8400 $x538) (and (= (time-to-state (+ time 1)) _437) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8400 (= ?x539 _436)))
 (let (($x8405 (and $x8400 $x555)))
 (=> $x8405 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8418 (= ?x539 _437)))
 (=> (and $x8418 $x538) (and (= (time-to-state (+ time 1)) _438) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8418 (= ?x539 _437)))
 (let (($x8423 (and $x8418 $x555)))
 (=> $x8423 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8436 (= ?x539 _438)))
 (=> (and $x8436 $x538) (and (= (time-to-state (+ time 1)) _439) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8436 (= ?x539 _438)))
 (let (($x8441 (and $x8436 $x555)))
 (=> $x8441 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8454 (= ?x539 _439)))
 (=> (and $x8454 $x538) (and (= (time-to-state (+ time 1)) _440) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8454 (= ?x539 _439)))
 (let (($x8459 (and $x8454 $x555)))
 (=> $x8459 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8472 (= ?x539 _440)))
 (=> (and $x8472 $x538) (and (= (time-to-state (+ time 1)) _441) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8472 (= ?x539 _440)))
 (let (($x8477 (and $x8472 $x555)))
 (=> $x8477 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8490 (= ?x539 _441)))
 (=> (and $x8490 $x538) (and (= (time-to-state (+ time 1)) _442) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8490 (= ?x539 _441)))
 (let (($x8495 (and $x8490 $x555)))
 (=> $x8495 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8508 (= ?x539 _442)))
 (=> (and $x8508 $x538) (and (= (time-to-state (+ time 1)) _443) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8508 (= ?x539 _442)))
 (let (($x8513 (and $x8508 $x555)))
 (=> $x8513 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8526 (= ?x539 _443)))
 (=> (and $x8526 $x538) (and (= (time-to-state (+ time 1)) _444) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8526 (= ?x539 _443)))
 (let (($x8531 (and $x8526 $x555)))
 (=> $x8531 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8544 (= ?x539 _444)))
 (=> (and $x8544 $x538) (and (= (time-to-state (+ time 1)) _445) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8544 (= ?x539 _444)))
 (let (($x8549 (and $x8544 $x555)))
 (=> $x8549 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8562 (= ?x539 _445)))
 (=> (and $x8562 $x538) (and (= (time-to-state (+ time 1)) _446) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8562 (= ?x539 _445)))
 (let (($x8567 (and $x8562 $x555)))
 (=> $x8567 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8580 (= ?x539 _446)))
 (=> (and $x8580 $x538) (and (= (time-to-state (+ time 1)) _447) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8580 (= ?x539 _446)))
 (let (($x8585 (and $x8580 $x555)))
 (=> $x8585 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8598 (= ?x539 _447)))
 (=> (and $x8598 $x538) (and (= (time-to-state (+ time 1)) _448) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8598 (= ?x539 _447)))
 (let (($x8603 (and $x8598 $x555)))
 (=> $x8603 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8616 (= ?x539 _448)))
 (=> (and $x8616 $x538) (and (= (time-to-state (+ time 1)) _449) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8616 (= ?x539 _448)))
 (let (($x8621 (and $x8616 $x555)))
 (=> $x8621 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8634 (= ?x539 _449)))
 (=> (and $x8634 $x538) (and (= (time-to-state (+ time 1)) _450) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8634 (= ?x539 _449)))
 (let (($x8639 (and $x8634 $x555)))
 (=> $x8639 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8652 (= ?x539 _450)))
 (=> (and $x8652 $x538) (and (= (time-to-state (+ time 1)) _451) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8652 (= ?x539 _450)))
 (let (($x8657 (and $x8652 $x555)))
 (=> $x8657 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8670 (= ?x539 _451)))
 (=> (and $x8670 $x538) (and (= (time-to-state (+ time 1)) _452) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8670 (= ?x539 _451)))
 (let (($x8675 (and $x8670 $x555)))
 (=> $x8675 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8688 (= ?x539 _452)))
 (=> (and $x8688 $x538) (and (= (time-to-state (+ time 1)) _453) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8688 (= ?x539 _452)))
 (let (($x8693 (and $x8688 $x555)))
 (=> $x8693 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8706 (= ?x539 _453)))
 (=> (and $x8706 $x538) (and (= (time-to-state (+ time 1)) _454) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8706 (= ?x539 _453)))
 (let (($x8711 (and $x8706 $x555)))
 (=> $x8711 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8724 (= ?x539 _454)))
 (=> (and $x8724 $x538) (and (= (time-to-state (+ time 1)) _455) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8724 (= ?x539 _454)))
 (let (($x8729 (and $x8724 $x555)))
 (=> $x8729 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8742 (= ?x539 _455)))
 (=> (and $x8742 $x538) (and (= (time-to-state (+ time 1)) _456) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8742 (= ?x539 _455)))
 (let (($x8747 (and $x8742 $x555)))
 (=> $x8747 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8760 (= ?x539 _456)))
 (=> (and $x8760 $x538) (and (= (time-to-state (+ time 1)) _457) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8760 (= ?x539 _456)))
 (let (($x8765 (and $x8760 $x555)))
 (=> $x8765 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8778 (= ?x539 _457)))
 (=> (and $x8778 $x538) (and (= (time-to-state (+ time 1)) _458) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8778 (= ?x539 _457)))
 (let (($x8783 (and $x8778 $x555)))
 (=> $x8783 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8796 (= ?x539 _458)))
 (=> (and $x8796 $x538) (and (= (time-to-state (+ time 1)) _459) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8796 (= ?x539 _458)))
 (let (($x8801 (and $x8796 $x555)))
 (=> $x8801 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8814 (= ?x539 _459)))
 (=> (and $x8814 $x538) (and (= (time-to-state (+ time 1)) _460) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8814 (= ?x539 _459)))
 (let (($x8819 (and $x8814 $x555)))
 (=> $x8819 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8832 (= ?x539 _460)))
 (=> (and $x8832 $x538) (and (= (time-to-state (+ time 1)) _461) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8832 (= ?x539 _460)))
 (let (($x8837 (and $x8832 $x555)))
 (=> $x8837 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8850 (= ?x539 _461)))
 (=> (and $x8850 $x538) (and (= (time-to-state (+ time 1)) _462) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8850 (= ?x539 _461)))
 (let (($x8855 (and $x8850 $x555)))
 (=> $x8855 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8868 (= ?x539 _462)))
 (=> (and $x8868 $x538) (and (= (time-to-state (+ time 1)) _463) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8868 (= ?x539 _462)))
 (let (($x8873 (and $x8868 $x555)))
 (=> $x8873 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8886 (= ?x539 _463)))
 (=> (and $x8886 $x538) (and (= (time-to-state (+ time 1)) _464) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8886 (= ?x539 _463)))
 (let (($x8891 (and $x8886 $x555)))
 (=> $x8891 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8904 (= ?x539 _464)))
 (=> (and $x8904 $x538) (and (= (time-to-state (+ time 1)) _465) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8904 (= ?x539 _464)))
 (let (($x8909 (and $x8904 $x555)))
 (=> $x8909 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8922 (= ?x539 _465)))
 (=> (and $x8922 $x538) (and (= (time-to-state (+ time 1)) _466) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8922 (= ?x539 _465)))
 (let (($x8927 (and $x8922 $x555)))
 (=> $x8927 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8940 (= ?x539 _466)))
 (=> (and $x8940 $x538) (and (= (time-to-state (+ time 1)) _467) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8940 (= ?x539 _466)))
 (let (($x8945 (and $x8940 $x555)))
 (=> $x8945 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8958 (= ?x539 _467)))
 (=> (and $x8958 $x538) (and (= (time-to-state (+ time 1)) _468) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8958 (= ?x539 _467)))
 (let (($x8963 (and $x8958 $x555)))
 (=> $x8963 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8976 (= ?x539 _468)))
 (=> (and $x8976 $x538) (and (= (time-to-state (+ time 1)) _469) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8976 (= ?x539 _468)))
 (let (($x8981 (and $x8976 $x555)))
 (=> $x8981 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x8994 (= ?x539 _469)))
 (=> (and $x8994 $x538) (and (= (time-to-state (+ time 1)) _470) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x8994 (= ?x539 _469)))
 (let (($x8999 (and $x8994 $x555)))
 (=> $x8999 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9012 (= ?x539 _470)))
 (=> (and $x9012 $x538) (and (= (time-to-state (+ time 1)) _471) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9012 (= ?x539 _470)))
 (let (($x9017 (and $x9012 $x555)))
 (=> $x9017 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9030 (= ?x539 _471)))
 (=> (and $x9030 $x538) (and (= (time-to-state (+ time 1)) _472) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9030 (= ?x539 _471)))
 (let (($x9035 (and $x9030 $x555)))
 (=> $x9035 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9048 (= ?x539 _472)))
 (=> (and $x9048 $x538) (and (= (time-to-state (+ time 1)) _473) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9048 (= ?x539 _472)))
 (let (($x9053 (and $x9048 $x555)))
 (=> $x9053 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9066 (= ?x539 _473)))
 (=> (and $x9066 $x538) (and (= (time-to-state (+ time 1)) _474) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9066 (= ?x539 _473)))
 (let (($x9071 (and $x9066 $x555)))
 (=> $x9071 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9084 (= ?x539 _474)))
 (=> (and $x9084 $x538) (and (= (time-to-state (+ time 1)) _475) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9084 (= ?x539 _474)))
 (let (($x9089 (and $x9084 $x555)))
 (=> $x9089 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9102 (= ?x539 _475)))
 (=> (and $x9102 $x538) (and (= (time-to-state (+ time 1)) _476) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9102 (= ?x539 _475)))
 (let (($x9107 (and $x9102 $x555)))
 (=> $x9107 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9120 (= ?x539 _476)))
 (=> (and $x9120 $x538) (and (= (time-to-state (+ time 1)) _477) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9120 (= ?x539 _476)))
 (let (($x9125 (and $x9120 $x555)))
 (=> $x9125 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9138 (= ?x539 _477)))
 (=> (and $x9138 $x538) (and (= (time-to-state (+ time 1)) _478) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9138 (= ?x539 _477)))
 (let (($x9143 (and $x9138 $x555)))
 (=> $x9143 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9156 (= ?x539 _478)))
 (=> (and $x9156 $x538) (and (= (time-to-state (+ time 1)) _479) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9156 (= ?x539 _478)))
 (let (($x9161 (and $x9156 $x555)))
 (=> $x9161 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let (($x533 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x537 (input-arg0 time)))
 (let (($x538 (and (distinct ?x537 0) true)))
 (let ((?x539 (time-to-state time)))
 (let (($x9174 (= ?x539 _479)))
 (=> (and $x9174 $x538) (and (= (time-to-state (+ time 1)) _480) $x533))))))))
 )
(assert
 (forall ((time Int) )(let ((?x531 (+ time 1)))
 (let ((?x534 (time-to-state ?x531)))
 (let (($x554 (= ?x534 ERR)))
 (let ((?x537 (input-arg0 time)))
 (let (($x555 (= ?x537 1)))
 (let ((?x539 (time-to-state time)))
 (let (($x9174 (= ?x539 _479)))
 (let (($x9179 (and $x9174 $x555)))
 (=> $x9179 $x554))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x539 (time-to-state time)))
 (let (($x9182 (= ?x539 ERR)))
 (and $x9182 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355 _356 _357 _358 _359 _360 _361 _362 _363 _364 _365 _366 _367 _368 _369 _370 _371 _372 _373 _374 _375 _376 _377 _378 _379 _380 _381 _382 _383 _384 _385 _386 _387 _388 _389 _390 _391 _392 _393 _394 _395 _396 _397 _398 _399 _400 _401 _402 _403 _404 _405 _406 _407 _408 _409 _410 _411 _412 _413 _414 _415 _416 _417 _418 _419 _420 _421 _422 _423 _424 _425 _426 _427 _428 _429 _430 _431 _432 _433 _434 _435 _436 _437 _438 _439 _440 _441 _442 _443 _444 _445 _446 _447 _448 _449 _450 _451 _452 _453 _454 _455 _456 _457 _458 _459 _460 _461 _462 _463 _464 _465 _466 _467 _468 _469 _470 _471 _472 _473 _474 _475 _476 _477 _478 _479 _480) true))
(check-sat)
