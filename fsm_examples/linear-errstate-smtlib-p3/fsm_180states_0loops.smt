; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(assert
 (let ((?x189 (time-to-state 0)))
 (= ?x189 _0)))
(assert
 (let ((?x209 (input-arg0 0)))
 (= ?x209 0)))
(assert
 (let ((?x211 (var1_0 0)))
 (= ?x211 0)))
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x240 (= ?x239 _0)))
 (let (($x256 (and $x240 $x255)))
 (=> $x256 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x270 (= ?x239 _1)))
 (let (($x275 (and $x270 $x255)))
 (=> $x275 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x288 (= ?x239 _2)))
 (let (($x293 (and $x288 $x255)))
 (=> $x293 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x306 (= ?x239 _3)))
 (let (($x311 (and $x306 $x255)))
 (=> $x311 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x324 (= ?x239 _4)))
 (let (($x329 (and $x324 $x255)))
 (=> $x329 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x342 (= ?x239 _5)))
 (let (($x347 (and $x342 $x255)))
 (=> $x347 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x360 (= ?x239 _6)))
 (let (($x365 (and $x360 $x255)))
 (=> $x365 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x378 (= ?x239 _7)))
 (let (($x383 (and $x378 $x255)))
 (=> $x383 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x396 (= ?x239 _8)))
 (let (($x401 (and $x396 $x255)))
 (=> $x401 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x414 (= ?x239 _9)))
 (let (($x419 (and $x414 $x255)))
 (=> $x419 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x432 (= ?x239 _10)))
 (let (($x437 (and $x432 $x255)))
 (=> $x437 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x450 (= ?x239 _11)))
 (let (($x455 (and $x450 $x255)))
 (=> $x455 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x468 (= ?x239 _12)))
 (let (($x473 (and $x468 $x255)))
 (=> $x473 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x486 (= ?x239 _13)))
 (let (($x491 (and $x486 $x255)))
 (=> $x491 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x504 (= ?x239 _14)))
 (let (($x509 (and $x504 $x255)))
 (=> $x509 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x522 (= ?x239 _15)))
 (let (($x527 (and $x522 $x255)))
 (=> $x527 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x540 (= ?x239 _16)))
 (let (($x545 (and $x540 $x255)))
 (=> $x545 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x558 (= ?x239 _17)))
 (let (($x563 (and $x558 $x255)))
 (=> $x563 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x576 (= ?x239 _18)))
 (let (($x581 (and $x576 $x255)))
 (=> $x581 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x594 (= ?x239 _19)))
 (let (($x599 (and $x594 $x255)))
 (=> $x599 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x612 (= ?x239 _20)))
 (let (($x617 (and $x612 $x255)))
 (=> $x617 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x630 (= ?x239 _21)))
 (let (($x635 (and $x630 $x255)))
 (=> $x635 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x648 (= ?x239 _22)))
 (let (($x653 (and $x648 $x255)))
 (=> $x653 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x666 (= ?x239 _23)))
 (let (($x671 (and $x666 $x255)))
 (=> $x671 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x684 (= ?x239 _24)))
 (let (($x689 (and $x684 $x255)))
 (=> $x689 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x702 (= ?x239 _25)))
 (let (($x707 (and $x702 $x255)))
 (=> $x707 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x720 (= ?x239 _26)))
 (let (($x725 (and $x720 $x255)))
 (=> $x725 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x738 (= ?x239 _27)))
 (let (($x743 (and $x738 $x255)))
 (=> $x743 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x756 (= ?x239 _28)))
 (let (($x761 (and $x756 $x255)))
 (=> $x761 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x774 (= ?x239 _29)))
 (let (($x779 (and $x774 $x255)))
 (=> $x779 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x792 (= ?x239 _30)))
 (let (($x797 (and $x792 $x255)))
 (=> $x797 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x810 (= ?x239 _31)))
 (let (($x815 (and $x810 $x255)))
 (=> $x815 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x828 (= ?x239 _32)))
 (let (($x833 (and $x828 $x255)))
 (=> $x833 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x846 (= ?x239 _33)))
 (let (($x851 (and $x846 $x255)))
 (=> $x851 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x864 (= ?x239 _34)))
 (let (($x869 (and $x864 $x255)))
 (=> $x869 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x882 (= ?x239 _35)))
 (let (($x887 (and $x882 $x255)))
 (=> $x887 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x900 (= ?x239 _36)))
 (let (($x905 (and $x900 $x255)))
 (=> $x905 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x918 (= ?x239 _37)))
 (let (($x923 (and $x918 $x255)))
 (=> $x923 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x936 (= ?x239 _38)))
 (let (($x941 (and $x936 $x255)))
 (=> $x941 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x954 (= ?x239 _39)))
 (let (($x959 (and $x954 $x255)))
 (=> $x959 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x972 (= ?x239 _40)))
 (let (($x977 (and $x972 $x255)))
 (=> $x977 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x990 (= ?x239 _41)))
 (let (($x995 (and $x990 $x255)))
 (=> $x995 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1008 (= ?x239 _42)))
 (let (($x1013 (and $x1008 $x255)))
 (=> $x1013 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1026 (= ?x239 _43)))
 (let (($x1031 (and $x1026 $x255)))
 (=> $x1031 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1044 (= ?x239 _44)))
 (let (($x1049 (and $x1044 $x255)))
 (=> $x1049 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1062 (= ?x239 _45)))
 (let (($x1067 (and $x1062 $x255)))
 (=> $x1067 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1080 (= ?x239 _46)))
 (let (($x1085 (and $x1080 $x255)))
 (=> $x1085 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1098 (= ?x239 _47)))
 (let (($x1103 (and $x1098 $x255)))
 (=> $x1103 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1116 (= ?x239 _48)))
 (let (($x1121 (and $x1116 $x255)))
 (=> $x1121 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1134 (= ?x239 _49)))
 (let (($x1139 (and $x1134 $x255)))
 (=> $x1139 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1152 (= ?x239 _50)))
 (let (($x1157 (and $x1152 $x255)))
 (=> $x1157 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1170 (= ?x239 _51)))
 (let (($x1175 (and $x1170 $x255)))
 (=> $x1175 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1188 (= ?x239 _52)))
 (let (($x1193 (and $x1188 $x255)))
 (=> $x1193 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1206 (= ?x239 _53)))
 (let (($x1211 (and $x1206 $x255)))
 (=> $x1211 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1224 (= ?x239 _54)))
 (let (($x1229 (and $x1224 $x255)))
 (=> $x1229 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1242 (= ?x239 _55)))
 (let (($x1247 (and $x1242 $x255)))
 (=> $x1247 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1260 (= ?x239 _56)))
 (let (($x1265 (and $x1260 $x255)))
 (=> $x1265 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1278 (= ?x239 _57)))
 (let (($x1283 (and $x1278 $x255)))
 (=> $x1283 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1296 (= ?x239 _58)))
 (let (($x1301 (and $x1296 $x255)))
 (=> $x1301 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1314 (= ?x239 _59)))
 (let (($x1319 (and $x1314 $x255)))
 (=> $x1319 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1332 (= ?x239 _60)))
 (let (($x1337 (and $x1332 $x255)))
 (=> $x1337 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1350 (= ?x239 _61)))
 (let (($x1355 (and $x1350 $x255)))
 (=> $x1355 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1368 (= ?x239 _62)))
 (let (($x1373 (and $x1368 $x255)))
 (=> $x1373 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1386 (= ?x239 _63)))
 (let (($x1391 (and $x1386 $x255)))
 (=> $x1391 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1404 (= ?x239 _64)))
 (let (($x1409 (and $x1404 $x255)))
 (=> $x1409 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1422 (= ?x239 _65)))
 (let (($x1427 (and $x1422 $x255)))
 (=> $x1427 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1440 (= ?x239 _66)))
 (let (($x1445 (and $x1440 $x255)))
 (=> $x1445 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1458 (= ?x239 _67)))
 (let (($x1463 (and $x1458 $x255)))
 (=> $x1463 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1476 (= ?x239 _68)))
 (let (($x1481 (and $x1476 $x255)))
 (=> $x1481 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1494 (= ?x239 _69)))
 (let (($x1499 (and $x1494 $x255)))
 (=> $x1499 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1512 (= ?x239 _70)))
 (let (($x1517 (and $x1512 $x255)))
 (=> $x1517 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1530 (= ?x239 _71)))
 (let (($x1535 (and $x1530 $x255)))
 (=> $x1535 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1548 (= ?x239 _72)))
 (let (($x1553 (and $x1548 $x255)))
 (=> $x1553 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1566 (= ?x239 _73)))
 (let (($x1571 (and $x1566 $x255)))
 (=> $x1571 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1584 (= ?x239 _74)))
 (let (($x1589 (and $x1584 $x255)))
 (=> $x1589 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1602 (= ?x239 _75)))
 (let (($x1607 (and $x1602 $x255)))
 (=> $x1607 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1620 (= ?x239 _76)))
 (let (($x1625 (and $x1620 $x255)))
 (=> $x1625 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1638 (= ?x239 _77)))
 (let (($x1643 (and $x1638 $x255)))
 (=> $x1643 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1656 (= ?x239 _78)))
 (let (($x1661 (and $x1656 $x255)))
 (=> $x1661 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1674 (= ?x239 _79)))
 (let (($x1679 (and $x1674 $x255)))
 (=> $x1679 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1692 (= ?x239 _80)))
 (let (($x1697 (and $x1692 $x255)))
 (=> $x1697 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1710 (= ?x239 _81)))
 (let (($x1715 (and $x1710 $x255)))
 (=> $x1715 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1728 (= ?x239 _82)))
 (let (($x1733 (and $x1728 $x255)))
 (=> $x1733 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1746 (= ?x239 _83)))
 (let (($x1751 (and $x1746 $x255)))
 (=> $x1751 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1764 (= ?x239 _84)))
 (let (($x1769 (and $x1764 $x255)))
 (=> $x1769 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1782 (= ?x239 _85)))
 (let (($x1787 (and $x1782 $x255)))
 (=> $x1787 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1800 (= ?x239 _86)))
 (let (($x1805 (and $x1800 $x255)))
 (=> $x1805 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1818 (= ?x239 _87)))
 (let (($x1823 (and $x1818 $x255)))
 (=> $x1823 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1836 (= ?x239 _88)))
 (let (($x1841 (and $x1836 $x255)))
 (=> $x1841 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1854 (= ?x239 _89)))
 (let (($x1859 (and $x1854 $x255)))
 (=> $x1859 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1872 (= ?x239 _90)))
 (let (($x1877 (and $x1872 $x255)))
 (=> $x1877 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1890 (= ?x239 _91)))
 (let (($x1895 (and $x1890 $x255)))
 (=> $x1895 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1908 (= ?x239 _92)))
 (let (($x1913 (and $x1908 $x255)))
 (=> $x1913 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1926 (= ?x239 _93)))
 (let (($x1931 (and $x1926 $x255)))
 (=> $x1931 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1944 (= ?x239 _94)))
 (let (($x1949 (and $x1944 $x255)))
 (=> $x1949 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1962 (= ?x239 _95)))
 (let (($x1967 (and $x1962 $x255)))
 (=> $x1967 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1980 (= ?x239 _96)))
 (let (($x1985 (and $x1980 $x255)))
 (=> $x1985 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x1998 (= ?x239 _97)))
 (let (($x2003 (and $x1998 $x255)))
 (=> $x2003 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2016 (= ?x239 _98)))
 (let (($x2021 (and $x2016 $x255)))
 (=> $x2021 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x233))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2034 (= ?x239 _99)))
 (let (($x2039 (and $x2034 $x255)))
 (=> $x2039 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2052 (= ?x239 _100)))
 (=> (and $x2052 $x238) (and (= (time-to-state (+ time 1)) _101) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2052 (= ?x239 _100)))
 (let (($x2057 (and $x2052 $x255)))
 (=> $x2057 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2070 (= ?x239 _101)))
 (=> (and $x2070 $x238) (and (= (time-to-state (+ time 1)) _102) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2070 (= ?x239 _101)))
 (let (($x2075 (and $x2070 $x255)))
 (=> $x2075 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2088 (= ?x239 _102)))
 (=> (and $x2088 $x238) (and (= (time-to-state (+ time 1)) _103) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2088 (= ?x239 _102)))
 (let (($x2093 (and $x2088 $x255)))
 (=> $x2093 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2106 (= ?x239 _103)))
 (=> (and $x2106 $x238) (and (= (time-to-state (+ time 1)) _104) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2106 (= ?x239 _103)))
 (let (($x2111 (and $x2106 $x255)))
 (=> $x2111 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2124 (= ?x239 _104)))
 (=> (and $x2124 $x238) (and (= (time-to-state (+ time 1)) _105) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2124 (= ?x239 _104)))
 (let (($x2129 (and $x2124 $x255)))
 (=> $x2129 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2142 (= ?x239 _105)))
 (=> (and $x2142 $x238) (and (= (time-to-state (+ time 1)) _106) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2142 (= ?x239 _105)))
 (let (($x2147 (and $x2142 $x255)))
 (=> $x2147 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2160 (= ?x239 _106)))
 (=> (and $x2160 $x238) (and (= (time-to-state (+ time 1)) _107) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2160 (= ?x239 _106)))
 (let (($x2165 (and $x2160 $x255)))
 (=> $x2165 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2178 (= ?x239 _107)))
 (=> (and $x2178 $x238) (and (= (time-to-state (+ time 1)) _108) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2178 (= ?x239 _107)))
 (let (($x2183 (and $x2178 $x255)))
 (=> $x2183 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2196 (= ?x239 _108)))
 (=> (and $x2196 $x238) (and (= (time-to-state (+ time 1)) _109) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2196 (= ?x239 _108)))
 (let (($x2201 (and $x2196 $x255)))
 (=> $x2201 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2214 (= ?x239 _109)))
 (=> (and $x2214 $x238) (and (= (time-to-state (+ time 1)) _110) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2214 (= ?x239 _109)))
 (let (($x2219 (and $x2214 $x255)))
 (=> $x2219 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2232 (= ?x239 _110)))
 (=> (and $x2232 $x238) (and (= (time-to-state (+ time 1)) _111) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2232 (= ?x239 _110)))
 (let (($x2237 (and $x2232 $x255)))
 (=> $x2237 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2250 (= ?x239 _111)))
 (=> (and $x2250 $x238) (and (= (time-to-state (+ time 1)) _112) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2250 (= ?x239 _111)))
 (let (($x2255 (and $x2250 $x255)))
 (=> $x2255 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2268 (= ?x239 _112)))
 (=> (and $x2268 $x238) (and (= (time-to-state (+ time 1)) _113) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2268 (= ?x239 _112)))
 (let (($x2273 (and $x2268 $x255)))
 (=> $x2273 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2286 (= ?x239 _113)))
 (=> (and $x2286 $x238) (and (= (time-to-state (+ time 1)) _114) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2286 (= ?x239 _113)))
 (let (($x2291 (and $x2286 $x255)))
 (=> $x2291 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2304 (= ?x239 _114)))
 (=> (and $x2304 $x238) (and (= (time-to-state (+ time 1)) _115) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2304 (= ?x239 _114)))
 (let (($x2309 (and $x2304 $x255)))
 (=> $x2309 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2322 (= ?x239 _115)))
 (=> (and $x2322 $x238) (and (= (time-to-state (+ time 1)) _116) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2322 (= ?x239 _115)))
 (let (($x2327 (and $x2322 $x255)))
 (=> $x2327 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2340 (= ?x239 _116)))
 (=> (and $x2340 $x238) (and (= (time-to-state (+ time 1)) _117) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2340 (= ?x239 _116)))
 (let (($x2345 (and $x2340 $x255)))
 (=> $x2345 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2358 (= ?x239 _117)))
 (=> (and $x2358 $x238) (and (= (time-to-state (+ time 1)) _118) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2358 (= ?x239 _117)))
 (let (($x2363 (and $x2358 $x255)))
 (=> $x2363 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2376 (= ?x239 _118)))
 (=> (and $x2376 $x238) (and (= (time-to-state (+ time 1)) _119) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2376 (= ?x239 _118)))
 (let (($x2381 (and $x2376 $x255)))
 (=> $x2381 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2394 (= ?x239 _119)))
 (=> (and $x2394 $x238) (and (= (time-to-state (+ time 1)) _120) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2394 (= ?x239 _119)))
 (let (($x2399 (and $x2394 $x255)))
 (=> $x2399 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2412 (= ?x239 _120)))
 (=> (and $x2412 $x238) (and (= (time-to-state (+ time 1)) _121) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2412 (= ?x239 _120)))
 (let (($x2417 (and $x2412 $x255)))
 (=> $x2417 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2430 (= ?x239 _121)))
 (=> (and $x2430 $x238) (and (= (time-to-state (+ time 1)) _122) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2430 (= ?x239 _121)))
 (let (($x2435 (and $x2430 $x255)))
 (=> $x2435 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2448 (= ?x239 _122)))
 (=> (and $x2448 $x238) (and (= (time-to-state (+ time 1)) _123) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2448 (= ?x239 _122)))
 (let (($x2453 (and $x2448 $x255)))
 (=> $x2453 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2466 (= ?x239 _123)))
 (=> (and $x2466 $x238) (and (= (time-to-state (+ time 1)) _124) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2466 (= ?x239 _123)))
 (let (($x2471 (and $x2466 $x255)))
 (=> $x2471 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2484 (= ?x239 _124)))
 (=> (and $x2484 $x238) (and (= (time-to-state (+ time 1)) _125) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2484 (= ?x239 _124)))
 (let (($x2489 (and $x2484 $x255)))
 (=> $x2489 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2502 (= ?x239 _125)))
 (=> (and $x2502 $x238) (and (= (time-to-state (+ time 1)) _126) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2502 (= ?x239 _125)))
 (let (($x2507 (and $x2502 $x255)))
 (=> $x2507 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2520 (= ?x239 _126)))
 (=> (and $x2520 $x238) (and (= (time-to-state (+ time 1)) _127) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2520 (= ?x239 _126)))
 (let (($x2525 (and $x2520 $x255)))
 (=> $x2525 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2538 (= ?x239 _127)))
 (=> (and $x2538 $x238) (and (= (time-to-state (+ time 1)) _128) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2538 (= ?x239 _127)))
 (let (($x2543 (and $x2538 $x255)))
 (=> $x2543 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2556 (= ?x239 _128)))
 (=> (and $x2556 $x238) (and (= (time-to-state (+ time 1)) _129) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2556 (= ?x239 _128)))
 (let (($x2561 (and $x2556 $x255)))
 (=> $x2561 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2574 (= ?x239 _129)))
 (=> (and $x2574 $x238) (and (= (time-to-state (+ time 1)) _130) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2574 (= ?x239 _129)))
 (let (($x2579 (and $x2574 $x255)))
 (=> $x2579 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2592 (= ?x239 _130)))
 (=> (and $x2592 $x238) (and (= (time-to-state (+ time 1)) _131) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2592 (= ?x239 _130)))
 (let (($x2597 (and $x2592 $x255)))
 (=> $x2597 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2610 (= ?x239 _131)))
 (=> (and $x2610 $x238) (and (= (time-to-state (+ time 1)) _132) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2610 (= ?x239 _131)))
 (let (($x2615 (and $x2610 $x255)))
 (=> $x2615 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2628 (= ?x239 _132)))
 (=> (and $x2628 $x238) (and (= (time-to-state (+ time 1)) _133) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2628 (= ?x239 _132)))
 (let (($x2633 (and $x2628 $x255)))
 (=> $x2633 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2646 (= ?x239 _133)))
 (=> (and $x2646 $x238) (and (= (time-to-state (+ time 1)) _134) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2646 (= ?x239 _133)))
 (let (($x2651 (and $x2646 $x255)))
 (=> $x2651 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2664 (= ?x239 _134)))
 (=> (and $x2664 $x238) (and (= (time-to-state (+ time 1)) _135) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2664 (= ?x239 _134)))
 (let (($x2669 (and $x2664 $x255)))
 (=> $x2669 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2682 (= ?x239 _135)))
 (=> (and $x2682 $x238) (and (= (time-to-state (+ time 1)) _136) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2682 (= ?x239 _135)))
 (let (($x2687 (and $x2682 $x255)))
 (=> $x2687 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2700 (= ?x239 _136)))
 (=> (and $x2700 $x238) (and (= (time-to-state (+ time 1)) _137) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2700 (= ?x239 _136)))
 (let (($x2705 (and $x2700 $x255)))
 (=> $x2705 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2718 (= ?x239 _137)))
 (=> (and $x2718 $x238) (and (= (time-to-state (+ time 1)) _138) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2718 (= ?x239 _137)))
 (let (($x2723 (and $x2718 $x255)))
 (=> $x2723 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2736 (= ?x239 _138)))
 (=> (and $x2736 $x238) (and (= (time-to-state (+ time 1)) _139) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2736 (= ?x239 _138)))
 (let (($x2741 (and $x2736 $x255)))
 (=> $x2741 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2754 (= ?x239 _139)))
 (=> (and $x2754 $x238) (and (= (time-to-state (+ time 1)) _140) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2754 (= ?x239 _139)))
 (let (($x2759 (and $x2754 $x255)))
 (=> $x2759 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2772 (= ?x239 _140)))
 (=> (and $x2772 $x238) (and (= (time-to-state (+ time 1)) _141) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2772 (= ?x239 _140)))
 (let (($x2777 (and $x2772 $x255)))
 (=> $x2777 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2790 (= ?x239 _141)))
 (=> (and $x2790 $x238) (and (= (time-to-state (+ time 1)) _142) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2790 (= ?x239 _141)))
 (let (($x2795 (and $x2790 $x255)))
 (=> $x2795 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2808 (= ?x239 _142)))
 (=> (and $x2808 $x238) (and (= (time-to-state (+ time 1)) _143) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2808 (= ?x239 _142)))
 (let (($x2813 (and $x2808 $x255)))
 (=> $x2813 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2826 (= ?x239 _143)))
 (=> (and $x2826 $x238) (and (= (time-to-state (+ time 1)) _144) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2826 (= ?x239 _143)))
 (let (($x2831 (and $x2826 $x255)))
 (=> $x2831 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2844 (= ?x239 _144)))
 (=> (and $x2844 $x238) (and (= (time-to-state (+ time 1)) _145) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2844 (= ?x239 _144)))
 (let (($x2849 (and $x2844 $x255)))
 (=> $x2849 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2862 (= ?x239 _145)))
 (=> (and $x2862 $x238) (and (= (time-to-state (+ time 1)) _146) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2862 (= ?x239 _145)))
 (let (($x2867 (and $x2862 $x255)))
 (=> $x2867 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2880 (= ?x239 _146)))
 (=> (and $x2880 $x238) (and (= (time-to-state (+ time 1)) _147) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2880 (= ?x239 _146)))
 (let (($x2885 (and $x2880 $x255)))
 (=> $x2885 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2898 (= ?x239 _147)))
 (=> (and $x2898 $x238) (and (= (time-to-state (+ time 1)) _148) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2898 (= ?x239 _147)))
 (let (($x2903 (and $x2898 $x255)))
 (=> $x2903 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2916 (= ?x239 _148)))
 (=> (and $x2916 $x238) (and (= (time-to-state (+ time 1)) _149) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2916 (= ?x239 _148)))
 (let (($x2921 (and $x2916 $x255)))
 (=> $x2921 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2934 (= ?x239 _149)))
 (=> (and $x2934 $x238) (and (= (time-to-state (+ time 1)) _150) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2934 (= ?x239 _149)))
 (let (($x2939 (and $x2934 $x255)))
 (=> $x2939 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2952 (= ?x239 _150)))
 (=> (and $x2952 $x238) (and (= (time-to-state (+ time 1)) _151) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2952 (= ?x239 _150)))
 (let (($x2957 (and $x2952 $x255)))
 (=> $x2957 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2970 (= ?x239 _151)))
 (=> (and $x2970 $x238) (and (= (time-to-state (+ time 1)) _152) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2970 (= ?x239 _151)))
 (let (($x2975 (and $x2970 $x255)))
 (=> $x2975 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x2988 (= ?x239 _152)))
 (=> (and $x2988 $x238) (and (= (time-to-state (+ time 1)) _153) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x2988 (= ?x239 _152)))
 (let (($x2993 (and $x2988 $x255)))
 (=> $x2993 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3006 (= ?x239 _153)))
 (=> (and $x3006 $x238) (and (= (time-to-state (+ time 1)) _154) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3006 (= ?x239 _153)))
 (let (($x3011 (and $x3006 $x255)))
 (=> $x3011 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3024 (= ?x239 _154)))
 (=> (and $x3024 $x238) (and (= (time-to-state (+ time 1)) _155) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3024 (= ?x239 _154)))
 (let (($x3029 (and $x3024 $x255)))
 (=> $x3029 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3042 (= ?x239 _155)))
 (=> (and $x3042 $x238) (and (= (time-to-state (+ time 1)) _156) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3042 (= ?x239 _155)))
 (let (($x3047 (and $x3042 $x255)))
 (=> $x3047 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3060 (= ?x239 _156)))
 (=> (and $x3060 $x238) (and (= (time-to-state (+ time 1)) _157) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3060 (= ?x239 _156)))
 (let (($x3065 (and $x3060 $x255)))
 (=> $x3065 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3078 (= ?x239 _157)))
 (=> (and $x3078 $x238) (and (= (time-to-state (+ time 1)) _158) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3078 (= ?x239 _157)))
 (let (($x3083 (and $x3078 $x255)))
 (=> $x3083 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3096 (= ?x239 _158)))
 (=> (and $x3096 $x238) (and (= (time-to-state (+ time 1)) _159) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3096 (= ?x239 _158)))
 (let (($x3101 (and $x3096 $x255)))
 (=> $x3101 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3114 (= ?x239 _159)))
 (=> (and $x3114 $x238) (and (= (time-to-state (+ time 1)) _160) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3114 (= ?x239 _159)))
 (let (($x3119 (and $x3114 $x255)))
 (=> $x3119 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3132 (= ?x239 _160)))
 (=> (and $x3132 $x238) (and (= (time-to-state (+ time 1)) _161) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3132 (= ?x239 _160)))
 (let (($x3137 (and $x3132 $x255)))
 (=> $x3137 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3150 (= ?x239 _161)))
 (=> (and $x3150 $x238) (and (= (time-to-state (+ time 1)) _162) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3150 (= ?x239 _161)))
 (let (($x3155 (and $x3150 $x255)))
 (=> $x3155 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3168 (= ?x239 _162)))
 (=> (and $x3168 $x238) (and (= (time-to-state (+ time 1)) _163) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3168 (= ?x239 _162)))
 (let (($x3173 (and $x3168 $x255)))
 (=> $x3173 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3186 (= ?x239 _163)))
 (=> (and $x3186 $x238) (and (= (time-to-state (+ time 1)) _164) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3186 (= ?x239 _163)))
 (let (($x3191 (and $x3186 $x255)))
 (=> $x3191 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3204 (= ?x239 _164)))
 (=> (and $x3204 $x238) (and (= (time-to-state (+ time 1)) _165) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3204 (= ?x239 _164)))
 (let (($x3209 (and $x3204 $x255)))
 (=> $x3209 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3222 (= ?x239 _165)))
 (=> (and $x3222 $x238) (and (= (time-to-state (+ time 1)) _166) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3222 (= ?x239 _165)))
 (let (($x3227 (and $x3222 $x255)))
 (=> $x3227 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3240 (= ?x239 _166)))
 (=> (and $x3240 $x238) (and (= (time-to-state (+ time 1)) _167) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3240 (= ?x239 _166)))
 (let (($x3245 (and $x3240 $x255)))
 (=> $x3245 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3258 (= ?x239 _167)))
 (=> (and $x3258 $x238) (and (= (time-to-state (+ time 1)) _168) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3258 (= ?x239 _167)))
 (let (($x3263 (and $x3258 $x255)))
 (=> $x3263 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3276 (= ?x239 _168)))
 (=> (and $x3276 $x238) (and (= (time-to-state (+ time 1)) _169) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3276 (= ?x239 _168)))
 (let (($x3281 (and $x3276 $x255)))
 (=> $x3281 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3294 (= ?x239 _169)))
 (=> (and $x3294 $x238) (and (= (time-to-state (+ time 1)) _170) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3294 (= ?x239 _169)))
 (let (($x3299 (and $x3294 $x255)))
 (=> $x3299 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3312 (= ?x239 _170)))
 (=> (and $x3312 $x238) (and (= (time-to-state (+ time 1)) _171) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3312 (= ?x239 _170)))
 (let (($x3317 (and $x3312 $x255)))
 (=> $x3317 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3330 (= ?x239 _171)))
 (=> (and $x3330 $x238) (and (= (time-to-state (+ time 1)) _172) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3330 (= ?x239 _171)))
 (let (($x3335 (and $x3330 $x255)))
 (=> $x3335 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3348 (= ?x239 _172)))
 (=> (and $x3348 $x238) (and (= (time-to-state (+ time 1)) _173) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3348 (= ?x239 _172)))
 (let (($x3353 (and $x3348 $x255)))
 (=> $x3353 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3366 (= ?x239 _173)))
 (=> (and $x3366 $x238) (and (= (time-to-state (+ time 1)) _174) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3366 (= ?x239 _173)))
 (let (($x3371 (and $x3366 $x255)))
 (=> $x3371 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3384 (= ?x239 _174)))
 (=> (and $x3384 $x238) (and (= (time-to-state (+ time 1)) _175) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3384 (= ?x239 _174)))
 (let (($x3389 (and $x3384 $x255)))
 (=> $x3389 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3402 (= ?x239 _175)))
 (=> (and $x3402 $x238) (and (= (time-to-state (+ time 1)) _176) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3402 (= ?x239 _175)))
 (let (($x3407 (and $x3402 $x255)))
 (=> $x3407 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3420 (= ?x239 _176)))
 (=> (and $x3420 $x238) (and (= (time-to-state (+ time 1)) _177) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3420 (= ?x239 _176)))
 (let (($x3425 (and $x3420 $x255)))
 (=> $x3425 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3438 (= ?x239 _177)))
 (=> (and $x3438 $x238) (and (= (time-to-state (+ time 1)) _178) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3438 (= ?x239 _177)))
 (let (($x3443 (and $x3438 $x255)))
 (=> $x3443 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3456 (= ?x239 _178)))
 (=> (and $x3456 $x238) (and (= (time-to-state (+ time 1)) _179) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3456 (= ?x239 _178)))
 (let (($x3461 (and $x3456 $x255)))
 (=> $x3461 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let (($x233 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x237 (input-arg0 time)))
 (let (($x238 (and (distinct ?x237 0) true)))
 (let ((?x239 (time-to-state time)))
 (let (($x3474 (= ?x239 _179)))
 (=> (and $x3474 $x238) (and (= (time-to-state (+ time 1)) _180) $x233))))))))
 )
(assert
 (forall ((time Int) )(let ((?x231 (+ time 1)))
 (let ((?x234 (time-to-state ?x231)))
 (let (($x254 (= ?x234 ERR)))
 (let ((?x237 (input-arg0 time)))
 (let (($x255 (= ?x237 1)))
 (let ((?x239 (time-to-state time)))
 (let (($x3474 (= ?x239 _179)))
 (let (($x3479 (and $x3474 $x255)))
 (=> $x3479 $x254))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x239 (time-to-state time)))
 (let (($x3482 (= ?x239 ERR)))
 (and $x3482 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180) true))
(check-sat)
