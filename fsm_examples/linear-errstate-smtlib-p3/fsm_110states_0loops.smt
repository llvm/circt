; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(assert
 (let ((?x119 (time-to-state 0)))
 (= ?x119 _0)))
(assert
 (let ((?x139 (input-arg0 0)))
 (= ?x139 0)))
(assert
 (let ((?x141 (var1_0 0)))
 (= ?x141 0)))
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x170 (= ?x169 _0)))
 (let (($x186 (and $x170 $x185)))
 (=> $x186 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x200 (= ?x169 _1)))
 (let (($x205 (and $x200 $x185)))
 (=> $x205 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x218 (= ?x169 _2)))
 (let (($x223 (and $x218 $x185)))
 (=> $x223 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x236 (= ?x169 _3)))
 (let (($x241 (and $x236 $x185)))
 (=> $x241 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x254 (= ?x169 _4)))
 (let (($x259 (and $x254 $x185)))
 (=> $x259 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x272 (= ?x169 _5)))
 (let (($x277 (and $x272 $x185)))
 (=> $x277 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x290 (= ?x169 _6)))
 (let (($x295 (and $x290 $x185)))
 (=> $x295 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x308 (= ?x169 _7)))
 (let (($x313 (and $x308 $x185)))
 (=> $x313 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x326 (= ?x169 _8)))
 (let (($x331 (and $x326 $x185)))
 (=> $x331 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x344 (= ?x169 _9)))
 (let (($x349 (and $x344 $x185)))
 (=> $x349 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x362 (= ?x169 _10)))
 (let (($x367 (and $x362 $x185)))
 (=> $x367 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x380 (= ?x169 _11)))
 (let (($x385 (and $x380 $x185)))
 (=> $x385 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x398 (= ?x169 _12)))
 (let (($x403 (and $x398 $x185)))
 (=> $x403 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x416 (= ?x169 _13)))
 (let (($x421 (and $x416 $x185)))
 (=> $x421 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x434 (= ?x169 _14)))
 (let (($x439 (and $x434 $x185)))
 (=> $x439 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x452 (= ?x169 _15)))
 (let (($x457 (and $x452 $x185)))
 (=> $x457 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x470 (= ?x169 _16)))
 (let (($x475 (and $x470 $x185)))
 (=> $x475 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x488 (= ?x169 _17)))
 (let (($x493 (and $x488 $x185)))
 (=> $x493 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x506 (= ?x169 _18)))
 (let (($x511 (and $x506 $x185)))
 (=> $x511 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x524 (= ?x169 _19)))
 (let (($x529 (and $x524 $x185)))
 (=> $x529 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x542 (= ?x169 _20)))
 (let (($x547 (and $x542 $x185)))
 (=> $x547 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x560 (= ?x169 _21)))
 (let (($x565 (and $x560 $x185)))
 (=> $x565 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x578 (= ?x169 _22)))
 (let (($x583 (and $x578 $x185)))
 (=> $x583 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x596 (= ?x169 _23)))
 (let (($x601 (and $x596 $x185)))
 (=> $x601 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x614 (= ?x169 _24)))
 (let (($x619 (and $x614 $x185)))
 (=> $x619 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x632 (= ?x169 _25)))
 (let (($x637 (and $x632 $x185)))
 (=> $x637 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x650 (= ?x169 _26)))
 (let (($x655 (and $x650 $x185)))
 (=> $x655 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x668 (= ?x169 _27)))
 (let (($x673 (and $x668 $x185)))
 (=> $x673 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x686 (= ?x169 _28)))
 (let (($x691 (and $x686 $x185)))
 (=> $x691 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x704 (= ?x169 _29)))
 (let (($x709 (and $x704 $x185)))
 (=> $x709 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x722 (= ?x169 _30)))
 (let (($x727 (and $x722 $x185)))
 (=> $x727 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x740 (= ?x169 _31)))
 (let (($x745 (and $x740 $x185)))
 (=> $x745 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x758 (= ?x169 _32)))
 (let (($x763 (and $x758 $x185)))
 (=> $x763 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x776 (= ?x169 _33)))
 (let (($x781 (and $x776 $x185)))
 (=> $x781 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x794 (= ?x169 _34)))
 (let (($x799 (and $x794 $x185)))
 (=> $x799 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x812 (= ?x169 _35)))
 (let (($x817 (and $x812 $x185)))
 (=> $x817 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x830 (= ?x169 _36)))
 (let (($x835 (and $x830 $x185)))
 (=> $x835 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x848 (= ?x169 _37)))
 (let (($x853 (and $x848 $x185)))
 (=> $x853 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x866 (= ?x169 _38)))
 (let (($x871 (and $x866 $x185)))
 (=> $x871 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x884 (= ?x169 _39)))
 (let (($x889 (and $x884 $x185)))
 (=> $x889 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x902 (= ?x169 _40)))
 (let (($x907 (and $x902 $x185)))
 (=> $x907 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x920 (= ?x169 _41)))
 (let (($x925 (and $x920 $x185)))
 (=> $x925 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x938 (= ?x169 _42)))
 (let (($x943 (and $x938 $x185)))
 (=> $x943 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x956 (= ?x169 _43)))
 (let (($x961 (and $x956 $x185)))
 (=> $x961 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x974 (= ?x169 _44)))
 (let (($x979 (and $x974 $x185)))
 (=> $x979 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x992 (= ?x169 _45)))
 (let (($x997 (and $x992 $x185)))
 (=> $x997 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1010 (= ?x169 _46)))
 (let (($x1015 (and $x1010 $x185)))
 (=> $x1015 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1028 (= ?x169 _47)))
 (let (($x1033 (and $x1028 $x185)))
 (=> $x1033 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1046 (= ?x169 _48)))
 (let (($x1051 (and $x1046 $x185)))
 (=> $x1051 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1064 (= ?x169 _49)))
 (let (($x1069 (and $x1064 $x185)))
 (=> $x1069 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1082 (= ?x169 _50)))
 (let (($x1087 (and $x1082 $x185)))
 (=> $x1087 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1100 (= ?x169 _51)))
 (let (($x1105 (and $x1100 $x185)))
 (=> $x1105 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1118 (= ?x169 _52)))
 (let (($x1123 (and $x1118 $x185)))
 (=> $x1123 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1136 (= ?x169 _53)))
 (let (($x1141 (and $x1136 $x185)))
 (=> $x1141 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1154 (= ?x169 _54)))
 (let (($x1159 (and $x1154 $x185)))
 (=> $x1159 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1172 (= ?x169 _55)))
 (let (($x1177 (and $x1172 $x185)))
 (=> $x1177 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1190 (= ?x169 _56)))
 (let (($x1195 (and $x1190 $x185)))
 (=> $x1195 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1208 (= ?x169 _57)))
 (let (($x1213 (and $x1208 $x185)))
 (=> $x1213 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1226 (= ?x169 _58)))
 (let (($x1231 (and $x1226 $x185)))
 (=> $x1231 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1244 (= ?x169 _59)))
 (let (($x1249 (and $x1244 $x185)))
 (=> $x1249 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1262 (= ?x169 _60)))
 (let (($x1267 (and $x1262 $x185)))
 (=> $x1267 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1280 (= ?x169 _61)))
 (let (($x1285 (and $x1280 $x185)))
 (=> $x1285 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1298 (= ?x169 _62)))
 (let (($x1303 (and $x1298 $x185)))
 (=> $x1303 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1316 (= ?x169 _63)))
 (let (($x1321 (and $x1316 $x185)))
 (=> $x1321 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1334 (= ?x169 _64)))
 (let (($x1339 (and $x1334 $x185)))
 (=> $x1339 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1352 (= ?x169 _65)))
 (let (($x1357 (and $x1352 $x185)))
 (=> $x1357 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1370 (= ?x169 _66)))
 (let (($x1375 (and $x1370 $x185)))
 (=> $x1375 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1388 (= ?x169 _67)))
 (let (($x1393 (and $x1388 $x185)))
 (=> $x1393 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1406 (= ?x169 _68)))
 (let (($x1411 (and $x1406 $x185)))
 (=> $x1411 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1424 (= ?x169 _69)))
 (let (($x1429 (and $x1424 $x185)))
 (=> $x1429 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1442 (= ?x169 _70)))
 (let (($x1447 (and $x1442 $x185)))
 (=> $x1447 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1460 (= ?x169 _71)))
 (let (($x1465 (and $x1460 $x185)))
 (=> $x1465 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1478 (= ?x169 _72)))
 (let (($x1483 (and $x1478 $x185)))
 (=> $x1483 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1496 (= ?x169 _73)))
 (let (($x1501 (and $x1496 $x185)))
 (=> $x1501 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1514 (= ?x169 _74)))
 (let (($x1519 (and $x1514 $x185)))
 (=> $x1519 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1532 (= ?x169 _75)))
 (let (($x1537 (and $x1532 $x185)))
 (=> $x1537 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1550 (= ?x169 _76)))
 (let (($x1555 (and $x1550 $x185)))
 (=> $x1555 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1568 (= ?x169 _77)))
 (let (($x1573 (and $x1568 $x185)))
 (=> $x1573 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1586 (= ?x169 _78)))
 (let (($x1591 (and $x1586 $x185)))
 (=> $x1591 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1604 (= ?x169 _79)))
 (let (($x1609 (and $x1604 $x185)))
 (=> $x1609 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1622 (= ?x169 _80)))
 (let (($x1627 (and $x1622 $x185)))
 (=> $x1627 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1640 (= ?x169 _81)))
 (let (($x1645 (and $x1640 $x185)))
 (=> $x1645 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1658 (= ?x169 _82)))
 (let (($x1663 (and $x1658 $x185)))
 (=> $x1663 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1676 (= ?x169 _83)))
 (let (($x1681 (and $x1676 $x185)))
 (=> $x1681 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1694 (= ?x169 _84)))
 (let (($x1699 (and $x1694 $x185)))
 (=> $x1699 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1712 (= ?x169 _85)))
 (let (($x1717 (and $x1712 $x185)))
 (=> $x1717 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1730 (= ?x169 _86)))
 (let (($x1735 (and $x1730 $x185)))
 (=> $x1735 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1748 (= ?x169 _87)))
 (let (($x1753 (and $x1748 $x185)))
 (=> $x1753 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1766 (= ?x169 _88)))
 (let (($x1771 (and $x1766 $x185)))
 (=> $x1771 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1784 (= ?x169 _89)))
 (let (($x1789 (and $x1784 $x185)))
 (=> $x1789 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1802 (= ?x169 _90)))
 (let (($x1807 (and $x1802 $x185)))
 (=> $x1807 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1820 (= ?x169 _91)))
 (let (($x1825 (and $x1820 $x185)))
 (=> $x1825 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1838 (= ?x169 _92)))
 (let (($x1843 (and $x1838 $x185)))
 (=> $x1843 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1856 (= ?x169 _93)))
 (let (($x1861 (and $x1856 $x185)))
 (=> $x1861 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1874 (= ?x169 _94)))
 (let (($x1879 (and $x1874 $x185)))
 (=> $x1879 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1892 (= ?x169 _95)))
 (let (($x1897 (and $x1892 $x185)))
 (=> $x1897 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1910 (= ?x169 _96)))
 (let (($x1915 (and $x1910 $x185)))
 (=> $x1915 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1928 (= ?x169 _97)))
 (let (($x1933 (and $x1928 $x185)))
 (=> $x1933 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1946 (= ?x169 _98)))
 (let (($x1951 (and $x1946 $x185)))
 (=> $x1951 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x163))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1964 (= ?x169 _99)))
 (let (($x1969 (and $x1964 $x185)))
 (=> $x1969 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x1982 (= ?x169 _100)))
 (=> (and $x1982 $x168) (and (= (time-to-state (+ time 1)) _101) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x1982 (= ?x169 _100)))
 (let (($x1987 (and $x1982 $x185)))
 (=> $x1987 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2000 (= ?x169 _101)))
 (=> (and $x2000 $x168) (and (= (time-to-state (+ time 1)) _102) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2000 (= ?x169 _101)))
 (let (($x2005 (and $x2000 $x185)))
 (=> $x2005 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2018 (= ?x169 _102)))
 (=> (and $x2018 $x168) (and (= (time-to-state (+ time 1)) _103) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2018 (= ?x169 _102)))
 (let (($x2023 (and $x2018 $x185)))
 (=> $x2023 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2036 (= ?x169 _103)))
 (=> (and $x2036 $x168) (and (= (time-to-state (+ time 1)) _104) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2036 (= ?x169 _103)))
 (let (($x2041 (and $x2036 $x185)))
 (=> $x2041 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2054 (= ?x169 _104)))
 (=> (and $x2054 $x168) (and (= (time-to-state (+ time 1)) _105) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2054 (= ?x169 _104)))
 (let (($x2059 (and $x2054 $x185)))
 (=> $x2059 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2072 (= ?x169 _105)))
 (=> (and $x2072 $x168) (and (= (time-to-state (+ time 1)) _106) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2072 (= ?x169 _105)))
 (let (($x2077 (and $x2072 $x185)))
 (=> $x2077 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2090 (= ?x169 _106)))
 (=> (and $x2090 $x168) (and (= (time-to-state (+ time 1)) _107) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2090 (= ?x169 _106)))
 (let (($x2095 (and $x2090 $x185)))
 (=> $x2095 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2108 (= ?x169 _107)))
 (=> (and $x2108 $x168) (and (= (time-to-state (+ time 1)) _108) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2108 (= ?x169 _107)))
 (let (($x2113 (and $x2108 $x185)))
 (=> $x2113 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2126 (= ?x169 _108)))
 (=> (and $x2126 $x168) (and (= (time-to-state (+ time 1)) _109) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2126 (= ?x169 _108)))
 (let (($x2131 (and $x2126 $x185)))
 (=> $x2131 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let (($x163 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x167 (input-arg0 time)))
 (let (($x168 (and (distinct ?x167 0) true)))
 (let ((?x169 (time-to-state time)))
 (let (($x2144 (= ?x169 _109)))
 (=> (and $x2144 $x168) (and (= (time-to-state (+ time 1)) _110) $x163))))))))
 )
(assert
 (forall ((time Int) )(let ((?x161 (+ time 1)))
 (let ((?x164 (time-to-state ?x161)))
 (let (($x184 (= ?x164 ERR)))
 (let ((?x167 (input-arg0 time)))
 (let (($x185 (= ?x167 1)))
 (let ((?x169 (time-to-state time)))
 (let (($x2144 (= ?x169 _109)))
 (let (($x2149 (and $x2144 $x185)))
 (=> $x2149 $x184))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x169 (time-to-state time)))
 (let (($x2152 (= ?x169 ERR)))
 (and $x2152 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110) true))
(check-sat)
