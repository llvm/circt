; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(assert
 (let ((?x289 (time-to-state 0)))
 (= ?x289 _0)))
(assert
 (let ((?x309 (input-arg0 0)))
 (= ?x309 0)))
(assert
 (let ((?x311 (var1_0 0)))
 (= ?x311 0)))
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x340 (= ?x339 _0)))
 (let (($x356 (and $x340 $x355)))
 (=> $x356 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x370 (= ?x339 _1)))
 (let (($x375 (and $x370 $x355)))
 (=> $x375 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x388 (= ?x339 _2)))
 (let (($x393 (and $x388 $x355)))
 (=> $x393 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x406 (= ?x339 _3)))
 (let (($x411 (and $x406 $x355)))
 (=> $x411 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x424 (= ?x339 _4)))
 (let (($x429 (and $x424 $x355)))
 (=> $x429 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x442 (= ?x339 _5)))
 (let (($x447 (and $x442 $x355)))
 (=> $x447 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x460 (= ?x339 _6)))
 (let (($x465 (and $x460 $x355)))
 (=> $x465 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x478 (= ?x339 _7)))
 (let (($x483 (and $x478 $x355)))
 (=> $x483 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x496 (= ?x339 _8)))
 (let (($x501 (and $x496 $x355)))
 (=> $x501 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x514 (= ?x339 _9)))
 (let (($x519 (and $x514 $x355)))
 (=> $x519 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x532 (= ?x339 _10)))
 (let (($x537 (and $x532 $x355)))
 (=> $x537 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x550 (= ?x339 _11)))
 (let (($x555 (and $x550 $x355)))
 (=> $x555 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x568 (= ?x339 _12)))
 (let (($x573 (and $x568 $x355)))
 (=> $x573 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x586 (= ?x339 _13)))
 (let (($x591 (and $x586 $x355)))
 (=> $x591 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x604 (= ?x339 _14)))
 (let (($x609 (and $x604 $x355)))
 (=> $x609 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x622 (= ?x339 _15)))
 (let (($x627 (and $x622 $x355)))
 (=> $x627 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x640 (= ?x339 _16)))
 (let (($x645 (and $x640 $x355)))
 (=> $x645 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x658 (= ?x339 _17)))
 (let (($x663 (and $x658 $x355)))
 (=> $x663 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x676 (= ?x339 _18)))
 (let (($x681 (and $x676 $x355)))
 (=> $x681 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x694 (= ?x339 _19)))
 (let (($x699 (and $x694 $x355)))
 (=> $x699 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x712 (= ?x339 _20)))
 (let (($x717 (and $x712 $x355)))
 (=> $x717 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x730 (= ?x339 _21)))
 (let (($x735 (and $x730 $x355)))
 (=> $x735 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x748 (= ?x339 _22)))
 (let (($x753 (and $x748 $x355)))
 (=> $x753 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x766 (= ?x339 _23)))
 (let (($x771 (and $x766 $x355)))
 (=> $x771 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x784 (= ?x339 _24)))
 (let (($x789 (and $x784 $x355)))
 (=> $x789 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x802 (= ?x339 _25)))
 (let (($x807 (and $x802 $x355)))
 (=> $x807 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x820 (= ?x339 _26)))
 (let (($x825 (and $x820 $x355)))
 (=> $x825 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x838 (= ?x339 _27)))
 (let (($x843 (and $x838 $x355)))
 (=> $x843 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x856 (= ?x339 _28)))
 (let (($x861 (and $x856 $x355)))
 (=> $x861 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x874 (= ?x339 _29)))
 (let (($x879 (and $x874 $x355)))
 (=> $x879 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x892 (= ?x339 _30)))
 (let (($x897 (and $x892 $x355)))
 (=> $x897 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x910 (= ?x339 _31)))
 (let (($x915 (and $x910 $x355)))
 (=> $x915 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x928 (= ?x339 _32)))
 (let (($x933 (and $x928 $x355)))
 (=> $x933 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x946 (= ?x339 _33)))
 (let (($x951 (and $x946 $x355)))
 (=> $x951 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x964 (= ?x339 _34)))
 (let (($x969 (and $x964 $x355)))
 (=> $x969 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x982 (= ?x339 _35)))
 (let (($x987 (and $x982 $x355)))
 (=> $x987 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1000 (= ?x339 _36)))
 (let (($x1005 (and $x1000 $x355)))
 (=> $x1005 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1018 (= ?x339 _37)))
 (let (($x1023 (and $x1018 $x355)))
 (=> $x1023 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1036 (= ?x339 _38)))
 (let (($x1041 (and $x1036 $x355)))
 (=> $x1041 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1054 (= ?x339 _39)))
 (let (($x1059 (and $x1054 $x355)))
 (=> $x1059 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1072 (= ?x339 _40)))
 (let (($x1077 (and $x1072 $x355)))
 (=> $x1077 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1090 (= ?x339 _41)))
 (let (($x1095 (and $x1090 $x355)))
 (=> $x1095 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1108 (= ?x339 _42)))
 (let (($x1113 (and $x1108 $x355)))
 (=> $x1113 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1126 (= ?x339 _43)))
 (let (($x1131 (and $x1126 $x355)))
 (=> $x1131 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1144 (= ?x339 _44)))
 (let (($x1149 (and $x1144 $x355)))
 (=> $x1149 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1162 (= ?x339 _45)))
 (let (($x1167 (and $x1162 $x355)))
 (=> $x1167 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1180 (= ?x339 _46)))
 (let (($x1185 (and $x1180 $x355)))
 (=> $x1185 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1198 (= ?x339 _47)))
 (let (($x1203 (and $x1198 $x355)))
 (=> $x1203 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1216 (= ?x339 _48)))
 (let (($x1221 (and $x1216 $x355)))
 (=> $x1221 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1234 (= ?x339 _49)))
 (let (($x1239 (and $x1234 $x355)))
 (=> $x1239 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1252 (= ?x339 _50)))
 (let (($x1257 (and $x1252 $x355)))
 (=> $x1257 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1270 (= ?x339 _51)))
 (let (($x1275 (and $x1270 $x355)))
 (=> $x1275 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1288 (= ?x339 _52)))
 (let (($x1293 (and $x1288 $x355)))
 (=> $x1293 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1306 (= ?x339 _53)))
 (let (($x1311 (and $x1306 $x355)))
 (=> $x1311 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1324 (= ?x339 _54)))
 (let (($x1329 (and $x1324 $x355)))
 (=> $x1329 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1342 (= ?x339 _55)))
 (let (($x1347 (and $x1342 $x355)))
 (=> $x1347 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1360 (= ?x339 _56)))
 (let (($x1365 (and $x1360 $x355)))
 (=> $x1365 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1378 (= ?x339 _57)))
 (let (($x1383 (and $x1378 $x355)))
 (=> $x1383 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1396 (= ?x339 _58)))
 (let (($x1401 (and $x1396 $x355)))
 (=> $x1401 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1414 (= ?x339 _59)))
 (let (($x1419 (and $x1414 $x355)))
 (=> $x1419 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1432 (= ?x339 _60)))
 (let (($x1437 (and $x1432 $x355)))
 (=> $x1437 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1450 (= ?x339 _61)))
 (let (($x1455 (and $x1450 $x355)))
 (=> $x1455 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1468 (= ?x339 _62)))
 (let (($x1473 (and $x1468 $x355)))
 (=> $x1473 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1486 (= ?x339 _63)))
 (let (($x1491 (and $x1486 $x355)))
 (=> $x1491 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1504 (= ?x339 _64)))
 (let (($x1509 (and $x1504 $x355)))
 (=> $x1509 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1522 (= ?x339 _65)))
 (let (($x1527 (and $x1522 $x355)))
 (=> $x1527 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1540 (= ?x339 _66)))
 (let (($x1545 (and $x1540 $x355)))
 (=> $x1545 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1558 (= ?x339 _67)))
 (let (($x1563 (and $x1558 $x355)))
 (=> $x1563 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1576 (= ?x339 _68)))
 (let (($x1581 (and $x1576 $x355)))
 (=> $x1581 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1594 (= ?x339 _69)))
 (let (($x1599 (and $x1594 $x355)))
 (=> $x1599 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1612 (= ?x339 _70)))
 (let (($x1617 (and $x1612 $x355)))
 (=> $x1617 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1630 (= ?x339 _71)))
 (let (($x1635 (and $x1630 $x355)))
 (=> $x1635 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1648 (= ?x339 _72)))
 (let (($x1653 (and $x1648 $x355)))
 (=> $x1653 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1666 (= ?x339 _73)))
 (let (($x1671 (and $x1666 $x355)))
 (=> $x1671 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1684 (= ?x339 _74)))
 (let (($x1689 (and $x1684 $x355)))
 (=> $x1689 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1702 (= ?x339 _75)))
 (let (($x1707 (and $x1702 $x355)))
 (=> $x1707 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1720 (= ?x339 _76)))
 (let (($x1725 (and $x1720 $x355)))
 (=> $x1725 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1738 (= ?x339 _77)))
 (let (($x1743 (and $x1738 $x355)))
 (=> $x1743 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1756 (= ?x339 _78)))
 (let (($x1761 (and $x1756 $x355)))
 (=> $x1761 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1774 (= ?x339 _79)))
 (let (($x1779 (and $x1774 $x355)))
 (=> $x1779 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1792 (= ?x339 _80)))
 (let (($x1797 (and $x1792 $x355)))
 (=> $x1797 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1810 (= ?x339 _81)))
 (let (($x1815 (and $x1810 $x355)))
 (=> $x1815 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1828 (= ?x339 _82)))
 (let (($x1833 (and $x1828 $x355)))
 (=> $x1833 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1846 (= ?x339 _83)))
 (let (($x1851 (and $x1846 $x355)))
 (=> $x1851 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1864 (= ?x339 _84)))
 (let (($x1869 (and $x1864 $x355)))
 (=> $x1869 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1882 (= ?x339 _85)))
 (let (($x1887 (and $x1882 $x355)))
 (=> $x1887 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1900 (= ?x339 _86)))
 (let (($x1905 (and $x1900 $x355)))
 (=> $x1905 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1918 (= ?x339 _87)))
 (let (($x1923 (and $x1918 $x355)))
 (=> $x1923 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1936 (= ?x339 _88)))
 (let (($x1941 (and $x1936 $x355)))
 (=> $x1941 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1954 (= ?x339 _89)))
 (let (($x1959 (and $x1954 $x355)))
 (=> $x1959 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1972 (= ?x339 _90)))
 (let (($x1977 (and $x1972 $x355)))
 (=> $x1977 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x1990 (= ?x339 _91)))
 (let (($x1995 (and $x1990 $x355)))
 (=> $x1995 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2008 (= ?x339 _92)))
 (let (($x2013 (and $x2008 $x355)))
 (=> $x2013 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2026 (= ?x339 _93)))
 (let (($x2031 (and $x2026 $x355)))
 (=> $x2031 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2044 (= ?x339 _94)))
 (let (($x2049 (and $x2044 $x355)))
 (=> $x2049 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2062 (= ?x339 _95)))
 (let (($x2067 (and $x2062 $x355)))
 (=> $x2067 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2080 (= ?x339 _96)))
 (let (($x2085 (and $x2080 $x355)))
 (=> $x2085 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2098 (= ?x339 _97)))
 (let (($x2103 (and $x2098 $x355)))
 (=> $x2103 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2116 (= ?x339 _98)))
 (let (($x2121 (and $x2116 $x355)))
 (=> $x2121 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x333))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2134 (= ?x339 _99)))
 (let (($x2139 (and $x2134 $x355)))
 (=> $x2139 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2152 (= ?x339 _100)))
 (=> (and $x2152 $x338) (and (= (time-to-state (+ time 1)) _101) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2152 (= ?x339 _100)))
 (let (($x2157 (and $x2152 $x355)))
 (=> $x2157 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2170 (= ?x339 _101)))
 (=> (and $x2170 $x338) (and (= (time-to-state (+ time 1)) _102) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2170 (= ?x339 _101)))
 (let (($x2175 (and $x2170 $x355)))
 (=> $x2175 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2188 (= ?x339 _102)))
 (=> (and $x2188 $x338) (and (= (time-to-state (+ time 1)) _103) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2188 (= ?x339 _102)))
 (let (($x2193 (and $x2188 $x355)))
 (=> $x2193 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2206 (= ?x339 _103)))
 (=> (and $x2206 $x338) (and (= (time-to-state (+ time 1)) _104) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2206 (= ?x339 _103)))
 (let (($x2211 (and $x2206 $x355)))
 (=> $x2211 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2224 (= ?x339 _104)))
 (=> (and $x2224 $x338) (and (= (time-to-state (+ time 1)) _105) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2224 (= ?x339 _104)))
 (let (($x2229 (and $x2224 $x355)))
 (=> $x2229 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2242 (= ?x339 _105)))
 (=> (and $x2242 $x338) (and (= (time-to-state (+ time 1)) _106) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2242 (= ?x339 _105)))
 (let (($x2247 (and $x2242 $x355)))
 (=> $x2247 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2260 (= ?x339 _106)))
 (=> (and $x2260 $x338) (and (= (time-to-state (+ time 1)) _107) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2260 (= ?x339 _106)))
 (let (($x2265 (and $x2260 $x355)))
 (=> $x2265 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2278 (= ?x339 _107)))
 (=> (and $x2278 $x338) (and (= (time-to-state (+ time 1)) _108) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2278 (= ?x339 _107)))
 (let (($x2283 (and $x2278 $x355)))
 (=> $x2283 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2296 (= ?x339 _108)))
 (=> (and $x2296 $x338) (and (= (time-to-state (+ time 1)) _109) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2296 (= ?x339 _108)))
 (let (($x2301 (and $x2296 $x355)))
 (=> $x2301 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2314 (= ?x339 _109)))
 (=> (and $x2314 $x338) (and (= (time-to-state (+ time 1)) _110) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2314 (= ?x339 _109)))
 (let (($x2319 (and $x2314 $x355)))
 (=> $x2319 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2332 (= ?x339 _110)))
 (=> (and $x2332 $x338) (and (= (time-to-state (+ time 1)) _111) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2332 (= ?x339 _110)))
 (let (($x2337 (and $x2332 $x355)))
 (=> $x2337 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2350 (= ?x339 _111)))
 (=> (and $x2350 $x338) (and (= (time-to-state (+ time 1)) _112) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2350 (= ?x339 _111)))
 (let (($x2355 (and $x2350 $x355)))
 (=> $x2355 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2368 (= ?x339 _112)))
 (=> (and $x2368 $x338) (and (= (time-to-state (+ time 1)) _113) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2368 (= ?x339 _112)))
 (let (($x2373 (and $x2368 $x355)))
 (=> $x2373 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2386 (= ?x339 _113)))
 (=> (and $x2386 $x338) (and (= (time-to-state (+ time 1)) _114) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2386 (= ?x339 _113)))
 (let (($x2391 (and $x2386 $x355)))
 (=> $x2391 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2404 (= ?x339 _114)))
 (=> (and $x2404 $x338) (and (= (time-to-state (+ time 1)) _115) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2404 (= ?x339 _114)))
 (let (($x2409 (and $x2404 $x355)))
 (=> $x2409 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2422 (= ?x339 _115)))
 (=> (and $x2422 $x338) (and (= (time-to-state (+ time 1)) _116) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2422 (= ?x339 _115)))
 (let (($x2427 (and $x2422 $x355)))
 (=> $x2427 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2440 (= ?x339 _116)))
 (=> (and $x2440 $x338) (and (= (time-to-state (+ time 1)) _117) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2440 (= ?x339 _116)))
 (let (($x2445 (and $x2440 $x355)))
 (=> $x2445 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2458 (= ?x339 _117)))
 (=> (and $x2458 $x338) (and (= (time-to-state (+ time 1)) _118) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2458 (= ?x339 _117)))
 (let (($x2463 (and $x2458 $x355)))
 (=> $x2463 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2476 (= ?x339 _118)))
 (=> (and $x2476 $x338) (and (= (time-to-state (+ time 1)) _119) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2476 (= ?x339 _118)))
 (let (($x2481 (and $x2476 $x355)))
 (=> $x2481 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2494 (= ?x339 _119)))
 (=> (and $x2494 $x338) (and (= (time-to-state (+ time 1)) _120) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2494 (= ?x339 _119)))
 (let (($x2499 (and $x2494 $x355)))
 (=> $x2499 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2512 (= ?x339 _120)))
 (=> (and $x2512 $x338) (and (= (time-to-state (+ time 1)) _121) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2512 (= ?x339 _120)))
 (let (($x2517 (and $x2512 $x355)))
 (=> $x2517 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2530 (= ?x339 _121)))
 (=> (and $x2530 $x338) (and (= (time-to-state (+ time 1)) _122) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2530 (= ?x339 _121)))
 (let (($x2535 (and $x2530 $x355)))
 (=> $x2535 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2548 (= ?x339 _122)))
 (=> (and $x2548 $x338) (and (= (time-to-state (+ time 1)) _123) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2548 (= ?x339 _122)))
 (let (($x2553 (and $x2548 $x355)))
 (=> $x2553 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2566 (= ?x339 _123)))
 (=> (and $x2566 $x338) (and (= (time-to-state (+ time 1)) _124) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2566 (= ?x339 _123)))
 (let (($x2571 (and $x2566 $x355)))
 (=> $x2571 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2584 (= ?x339 _124)))
 (=> (and $x2584 $x338) (and (= (time-to-state (+ time 1)) _125) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2584 (= ?x339 _124)))
 (let (($x2589 (and $x2584 $x355)))
 (=> $x2589 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2602 (= ?x339 _125)))
 (=> (and $x2602 $x338) (and (= (time-to-state (+ time 1)) _126) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2602 (= ?x339 _125)))
 (let (($x2607 (and $x2602 $x355)))
 (=> $x2607 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2620 (= ?x339 _126)))
 (=> (and $x2620 $x338) (and (= (time-to-state (+ time 1)) _127) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2620 (= ?x339 _126)))
 (let (($x2625 (and $x2620 $x355)))
 (=> $x2625 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2638 (= ?x339 _127)))
 (=> (and $x2638 $x338) (and (= (time-to-state (+ time 1)) _128) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2638 (= ?x339 _127)))
 (let (($x2643 (and $x2638 $x355)))
 (=> $x2643 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2656 (= ?x339 _128)))
 (=> (and $x2656 $x338) (and (= (time-to-state (+ time 1)) _129) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2656 (= ?x339 _128)))
 (let (($x2661 (and $x2656 $x355)))
 (=> $x2661 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2674 (= ?x339 _129)))
 (=> (and $x2674 $x338) (and (= (time-to-state (+ time 1)) _130) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2674 (= ?x339 _129)))
 (let (($x2679 (and $x2674 $x355)))
 (=> $x2679 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2692 (= ?x339 _130)))
 (=> (and $x2692 $x338) (and (= (time-to-state (+ time 1)) _131) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2692 (= ?x339 _130)))
 (let (($x2697 (and $x2692 $x355)))
 (=> $x2697 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2710 (= ?x339 _131)))
 (=> (and $x2710 $x338) (and (= (time-to-state (+ time 1)) _132) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2710 (= ?x339 _131)))
 (let (($x2715 (and $x2710 $x355)))
 (=> $x2715 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2728 (= ?x339 _132)))
 (=> (and $x2728 $x338) (and (= (time-to-state (+ time 1)) _133) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2728 (= ?x339 _132)))
 (let (($x2733 (and $x2728 $x355)))
 (=> $x2733 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2746 (= ?x339 _133)))
 (=> (and $x2746 $x338) (and (= (time-to-state (+ time 1)) _134) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2746 (= ?x339 _133)))
 (let (($x2751 (and $x2746 $x355)))
 (=> $x2751 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2764 (= ?x339 _134)))
 (=> (and $x2764 $x338) (and (= (time-to-state (+ time 1)) _135) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2764 (= ?x339 _134)))
 (let (($x2769 (and $x2764 $x355)))
 (=> $x2769 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2782 (= ?x339 _135)))
 (=> (and $x2782 $x338) (and (= (time-to-state (+ time 1)) _136) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2782 (= ?x339 _135)))
 (let (($x2787 (and $x2782 $x355)))
 (=> $x2787 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2800 (= ?x339 _136)))
 (=> (and $x2800 $x338) (and (= (time-to-state (+ time 1)) _137) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2800 (= ?x339 _136)))
 (let (($x2805 (and $x2800 $x355)))
 (=> $x2805 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2818 (= ?x339 _137)))
 (=> (and $x2818 $x338) (and (= (time-to-state (+ time 1)) _138) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2818 (= ?x339 _137)))
 (let (($x2823 (and $x2818 $x355)))
 (=> $x2823 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2836 (= ?x339 _138)))
 (=> (and $x2836 $x338) (and (= (time-to-state (+ time 1)) _139) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2836 (= ?x339 _138)))
 (let (($x2841 (and $x2836 $x355)))
 (=> $x2841 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2854 (= ?x339 _139)))
 (=> (and $x2854 $x338) (and (= (time-to-state (+ time 1)) _140) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2854 (= ?x339 _139)))
 (let (($x2859 (and $x2854 $x355)))
 (=> $x2859 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2872 (= ?x339 _140)))
 (=> (and $x2872 $x338) (and (= (time-to-state (+ time 1)) _141) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2872 (= ?x339 _140)))
 (let (($x2877 (and $x2872 $x355)))
 (=> $x2877 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2890 (= ?x339 _141)))
 (=> (and $x2890 $x338) (and (= (time-to-state (+ time 1)) _142) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2890 (= ?x339 _141)))
 (let (($x2895 (and $x2890 $x355)))
 (=> $x2895 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2908 (= ?x339 _142)))
 (=> (and $x2908 $x338) (and (= (time-to-state (+ time 1)) _143) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2908 (= ?x339 _142)))
 (let (($x2913 (and $x2908 $x355)))
 (=> $x2913 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2926 (= ?x339 _143)))
 (=> (and $x2926 $x338) (and (= (time-to-state (+ time 1)) _144) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2926 (= ?x339 _143)))
 (let (($x2931 (and $x2926 $x355)))
 (=> $x2931 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2944 (= ?x339 _144)))
 (=> (and $x2944 $x338) (and (= (time-to-state (+ time 1)) _145) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2944 (= ?x339 _144)))
 (let (($x2949 (and $x2944 $x355)))
 (=> $x2949 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2962 (= ?x339 _145)))
 (=> (and $x2962 $x338) (and (= (time-to-state (+ time 1)) _146) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2962 (= ?x339 _145)))
 (let (($x2967 (and $x2962 $x355)))
 (=> $x2967 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2980 (= ?x339 _146)))
 (=> (and $x2980 $x338) (and (= (time-to-state (+ time 1)) _147) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2980 (= ?x339 _146)))
 (let (($x2985 (and $x2980 $x355)))
 (=> $x2985 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x2998 (= ?x339 _147)))
 (=> (and $x2998 $x338) (and (= (time-to-state (+ time 1)) _148) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x2998 (= ?x339 _147)))
 (let (($x3003 (and $x2998 $x355)))
 (=> $x3003 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3016 (= ?x339 _148)))
 (=> (and $x3016 $x338) (and (= (time-to-state (+ time 1)) _149) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3016 (= ?x339 _148)))
 (let (($x3021 (and $x3016 $x355)))
 (=> $x3021 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3034 (= ?x339 _149)))
 (=> (and $x3034 $x338) (and (= (time-to-state (+ time 1)) _150) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3034 (= ?x339 _149)))
 (let (($x3039 (and $x3034 $x355)))
 (=> $x3039 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3052 (= ?x339 _150)))
 (=> (and $x3052 $x338) (and (= (time-to-state (+ time 1)) _151) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3052 (= ?x339 _150)))
 (let (($x3057 (and $x3052 $x355)))
 (=> $x3057 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3070 (= ?x339 _151)))
 (=> (and $x3070 $x338) (and (= (time-to-state (+ time 1)) _152) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3070 (= ?x339 _151)))
 (let (($x3075 (and $x3070 $x355)))
 (=> $x3075 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3088 (= ?x339 _152)))
 (=> (and $x3088 $x338) (and (= (time-to-state (+ time 1)) _153) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3088 (= ?x339 _152)))
 (let (($x3093 (and $x3088 $x355)))
 (=> $x3093 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3106 (= ?x339 _153)))
 (=> (and $x3106 $x338) (and (= (time-to-state (+ time 1)) _154) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3106 (= ?x339 _153)))
 (let (($x3111 (and $x3106 $x355)))
 (=> $x3111 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3124 (= ?x339 _154)))
 (=> (and $x3124 $x338) (and (= (time-to-state (+ time 1)) _155) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3124 (= ?x339 _154)))
 (let (($x3129 (and $x3124 $x355)))
 (=> $x3129 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3142 (= ?x339 _155)))
 (=> (and $x3142 $x338) (and (= (time-to-state (+ time 1)) _156) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3142 (= ?x339 _155)))
 (let (($x3147 (and $x3142 $x355)))
 (=> $x3147 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3160 (= ?x339 _156)))
 (=> (and $x3160 $x338) (and (= (time-to-state (+ time 1)) _157) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3160 (= ?x339 _156)))
 (let (($x3165 (and $x3160 $x355)))
 (=> $x3165 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3178 (= ?x339 _157)))
 (=> (and $x3178 $x338) (and (= (time-to-state (+ time 1)) _158) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3178 (= ?x339 _157)))
 (let (($x3183 (and $x3178 $x355)))
 (=> $x3183 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3196 (= ?x339 _158)))
 (=> (and $x3196 $x338) (and (= (time-to-state (+ time 1)) _159) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3196 (= ?x339 _158)))
 (let (($x3201 (and $x3196 $x355)))
 (=> $x3201 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3214 (= ?x339 _159)))
 (=> (and $x3214 $x338) (and (= (time-to-state (+ time 1)) _160) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3214 (= ?x339 _159)))
 (let (($x3219 (and $x3214 $x355)))
 (=> $x3219 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3232 (= ?x339 _160)))
 (=> (and $x3232 $x338) (and (= (time-to-state (+ time 1)) _161) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3232 (= ?x339 _160)))
 (let (($x3237 (and $x3232 $x355)))
 (=> $x3237 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3250 (= ?x339 _161)))
 (=> (and $x3250 $x338) (and (= (time-to-state (+ time 1)) _162) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3250 (= ?x339 _161)))
 (let (($x3255 (and $x3250 $x355)))
 (=> $x3255 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3268 (= ?x339 _162)))
 (=> (and $x3268 $x338) (and (= (time-to-state (+ time 1)) _163) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3268 (= ?x339 _162)))
 (let (($x3273 (and $x3268 $x355)))
 (=> $x3273 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3286 (= ?x339 _163)))
 (=> (and $x3286 $x338) (and (= (time-to-state (+ time 1)) _164) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3286 (= ?x339 _163)))
 (let (($x3291 (and $x3286 $x355)))
 (=> $x3291 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3304 (= ?x339 _164)))
 (=> (and $x3304 $x338) (and (= (time-to-state (+ time 1)) _165) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3304 (= ?x339 _164)))
 (let (($x3309 (and $x3304 $x355)))
 (=> $x3309 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3322 (= ?x339 _165)))
 (=> (and $x3322 $x338) (and (= (time-to-state (+ time 1)) _166) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3322 (= ?x339 _165)))
 (let (($x3327 (and $x3322 $x355)))
 (=> $x3327 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3340 (= ?x339 _166)))
 (=> (and $x3340 $x338) (and (= (time-to-state (+ time 1)) _167) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3340 (= ?x339 _166)))
 (let (($x3345 (and $x3340 $x355)))
 (=> $x3345 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3358 (= ?x339 _167)))
 (=> (and $x3358 $x338) (and (= (time-to-state (+ time 1)) _168) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3358 (= ?x339 _167)))
 (let (($x3363 (and $x3358 $x355)))
 (=> $x3363 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3376 (= ?x339 _168)))
 (=> (and $x3376 $x338) (and (= (time-to-state (+ time 1)) _169) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3376 (= ?x339 _168)))
 (let (($x3381 (and $x3376 $x355)))
 (=> $x3381 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3394 (= ?x339 _169)))
 (=> (and $x3394 $x338) (and (= (time-to-state (+ time 1)) _170) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3394 (= ?x339 _169)))
 (let (($x3399 (and $x3394 $x355)))
 (=> $x3399 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3412 (= ?x339 _170)))
 (=> (and $x3412 $x338) (and (= (time-to-state (+ time 1)) _171) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3412 (= ?x339 _170)))
 (let (($x3417 (and $x3412 $x355)))
 (=> $x3417 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3430 (= ?x339 _171)))
 (=> (and $x3430 $x338) (and (= (time-to-state (+ time 1)) _172) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3430 (= ?x339 _171)))
 (let (($x3435 (and $x3430 $x355)))
 (=> $x3435 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3448 (= ?x339 _172)))
 (=> (and $x3448 $x338) (and (= (time-to-state (+ time 1)) _173) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3448 (= ?x339 _172)))
 (let (($x3453 (and $x3448 $x355)))
 (=> $x3453 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3466 (= ?x339 _173)))
 (=> (and $x3466 $x338) (and (= (time-to-state (+ time 1)) _174) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3466 (= ?x339 _173)))
 (let (($x3471 (and $x3466 $x355)))
 (=> $x3471 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3484 (= ?x339 _174)))
 (=> (and $x3484 $x338) (and (= (time-to-state (+ time 1)) _175) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3484 (= ?x339 _174)))
 (let (($x3489 (and $x3484 $x355)))
 (=> $x3489 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3502 (= ?x339 _175)))
 (=> (and $x3502 $x338) (and (= (time-to-state (+ time 1)) _176) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3502 (= ?x339 _175)))
 (let (($x3507 (and $x3502 $x355)))
 (=> $x3507 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3520 (= ?x339 _176)))
 (=> (and $x3520 $x338) (and (= (time-to-state (+ time 1)) _177) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3520 (= ?x339 _176)))
 (let (($x3525 (and $x3520 $x355)))
 (=> $x3525 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3538 (= ?x339 _177)))
 (=> (and $x3538 $x338) (and (= (time-to-state (+ time 1)) _178) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3538 (= ?x339 _177)))
 (let (($x3543 (and $x3538 $x355)))
 (=> $x3543 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3556 (= ?x339 _178)))
 (=> (and $x3556 $x338) (and (= (time-to-state (+ time 1)) _179) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3556 (= ?x339 _178)))
 (let (($x3561 (and $x3556 $x355)))
 (=> $x3561 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3574 (= ?x339 _179)))
 (=> (and $x3574 $x338) (and (= (time-to-state (+ time 1)) _180) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3574 (= ?x339 _179)))
 (let (($x3579 (and $x3574 $x355)))
 (=> $x3579 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3592 (= ?x339 _180)))
 (=> (and $x3592 $x338) (and (= (time-to-state (+ time 1)) _181) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3592 (= ?x339 _180)))
 (let (($x3597 (and $x3592 $x355)))
 (=> $x3597 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3610 (= ?x339 _181)))
 (=> (and $x3610 $x338) (and (= (time-to-state (+ time 1)) _182) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3610 (= ?x339 _181)))
 (let (($x3615 (and $x3610 $x355)))
 (=> $x3615 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3628 (= ?x339 _182)))
 (=> (and $x3628 $x338) (and (= (time-to-state (+ time 1)) _183) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3628 (= ?x339 _182)))
 (let (($x3633 (and $x3628 $x355)))
 (=> $x3633 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3646 (= ?x339 _183)))
 (=> (and $x3646 $x338) (and (= (time-to-state (+ time 1)) _184) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3646 (= ?x339 _183)))
 (let (($x3651 (and $x3646 $x355)))
 (=> $x3651 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3664 (= ?x339 _184)))
 (=> (and $x3664 $x338) (and (= (time-to-state (+ time 1)) _185) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3664 (= ?x339 _184)))
 (let (($x3669 (and $x3664 $x355)))
 (=> $x3669 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3682 (= ?x339 _185)))
 (=> (and $x3682 $x338) (and (= (time-to-state (+ time 1)) _186) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3682 (= ?x339 _185)))
 (let (($x3687 (and $x3682 $x355)))
 (=> $x3687 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3700 (= ?x339 _186)))
 (=> (and $x3700 $x338) (and (= (time-to-state (+ time 1)) _187) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3700 (= ?x339 _186)))
 (let (($x3705 (and $x3700 $x355)))
 (=> $x3705 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3718 (= ?x339 _187)))
 (=> (and $x3718 $x338) (and (= (time-to-state (+ time 1)) _188) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3718 (= ?x339 _187)))
 (let (($x3723 (and $x3718 $x355)))
 (=> $x3723 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3736 (= ?x339 _188)))
 (=> (and $x3736 $x338) (and (= (time-to-state (+ time 1)) _189) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3736 (= ?x339 _188)))
 (let (($x3741 (and $x3736 $x355)))
 (=> $x3741 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3754 (= ?x339 _189)))
 (=> (and $x3754 $x338) (and (= (time-to-state (+ time 1)) _190) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3754 (= ?x339 _189)))
 (let (($x3759 (and $x3754 $x355)))
 (=> $x3759 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3772 (= ?x339 _190)))
 (=> (and $x3772 $x338) (and (= (time-to-state (+ time 1)) _191) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3772 (= ?x339 _190)))
 (let (($x3777 (and $x3772 $x355)))
 (=> $x3777 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3790 (= ?x339 _191)))
 (=> (and $x3790 $x338) (and (= (time-to-state (+ time 1)) _192) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3790 (= ?x339 _191)))
 (let (($x3795 (and $x3790 $x355)))
 (=> $x3795 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3808 (= ?x339 _192)))
 (=> (and $x3808 $x338) (and (= (time-to-state (+ time 1)) _193) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3808 (= ?x339 _192)))
 (let (($x3813 (and $x3808 $x355)))
 (=> $x3813 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3826 (= ?x339 _193)))
 (=> (and $x3826 $x338) (and (= (time-to-state (+ time 1)) _194) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3826 (= ?x339 _193)))
 (let (($x3831 (and $x3826 $x355)))
 (=> $x3831 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3844 (= ?x339 _194)))
 (=> (and $x3844 $x338) (and (= (time-to-state (+ time 1)) _195) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3844 (= ?x339 _194)))
 (let (($x3849 (and $x3844 $x355)))
 (=> $x3849 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3862 (= ?x339 _195)))
 (=> (and $x3862 $x338) (and (= (time-to-state (+ time 1)) _196) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3862 (= ?x339 _195)))
 (let (($x3867 (and $x3862 $x355)))
 (=> $x3867 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3880 (= ?x339 _196)))
 (=> (and $x3880 $x338) (and (= (time-to-state (+ time 1)) _197) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3880 (= ?x339 _196)))
 (let (($x3885 (and $x3880 $x355)))
 (=> $x3885 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3898 (= ?x339 _197)))
 (=> (and $x3898 $x338) (and (= (time-to-state (+ time 1)) _198) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3898 (= ?x339 _197)))
 (let (($x3903 (and $x3898 $x355)))
 (=> $x3903 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3916 (= ?x339 _198)))
 (=> (and $x3916 $x338) (and (= (time-to-state (+ time 1)) _199) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3916 (= ?x339 _198)))
 (let (($x3921 (and $x3916 $x355)))
 (=> $x3921 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3934 (= ?x339 _199)))
 (=> (and $x3934 $x338) (and (= (time-to-state (+ time 1)) _200) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3934 (= ?x339 _199)))
 (let (($x3939 (and $x3934 $x355)))
 (=> $x3939 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3952 (= ?x339 _200)))
 (=> (and $x3952 $x338) (and (= (time-to-state (+ time 1)) _201) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3952 (= ?x339 _200)))
 (let (($x3957 (and $x3952 $x355)))
 (=> $x3957 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3970 (= ?x339 _201)))
 (=> (and $x3970 $x338) (and (= (time-to-state (+ time 1)) _202) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3970 (= ?x339 _201)))
 (let (($x3975 (and $x3970 $x355)))
 (=> $x3975 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x3988 (= ?x339 _202)))
 (=> (and $x3988 $x338) (and (= (time-to-state (+ time 1)) _203) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x3988 (= ?x339 _202)))
 (let (($x3993 (and $x3988 $x355)))
 (=> $x3993 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4006 (= ?x339 _203)))
 (=> (and $x4006 $x338) (and (= (time-to-state (+ time 1)) _204) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4006 (= ?x339 _203)))
 (let (($x4011 (and $x4006 $x355)))
 (=> $x4011 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4024 (= ?x339 _204)))
 (=> (and $x4024 $x338) (and (= (time-to-state (+ time 1)) _205) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4024 (= ?x339 _204)))
 (let (($x4029 (and $x4024 $x355)))
 (=> $x4029 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4042 (= ?x339 _205)))
 (=> (and $x4042 $x338) (and (= (time-to-state (+ time 1)) _206) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4042 (= ?x339 _205)))
 (let (($x4047 (and $x4042 $x355)))
 (=> $x4047 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4060 (= ?x339 _206)))
 (=> (and $x4060 $x338) (and (= (time-to-state (+ time 1)) _207) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4060 (= ?x339 _206)))
 (let (($x4065 (and $x4060 $x355)))
 (=> $x4065 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4078 (= ?x339 _207)))
 (=> (and $x4078 $x338) (and (= (time-to-state (+ time 1)) _208) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4078 (= ?x339 _207)))
 (let (($x4083 (and $x4078 $x355)))
 (=> $x4083 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4096 (= ?x339 _208)))
 (=> (and $x4096 $x338) (and (= (time-to-state (+ time 1)) _209) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4096 (= ?x339 _208)))
 (let (($x4101 (and $x4096 $x355)))
 (=> $x4101 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4114 (= ?x339 _209)))
 (=> (and $x4114 $x338) (and (= (time-to-state (+ time 1)) _210) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4114 (= ?x339 _209)))
 (let (($x4119 (and $x4114 $x355)))
 (=> $x4119 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4132 (= ?x339 _210)))
 (=> (and $x4132 $x338) (and (= (time-to-state (+ time 1)) _211) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4132 (= ?x339 _210)))
 (let (($x4137 (and $x4132 $x355)))
 (=> $x4137 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4150 (= ?x339 _211)))
 (=> (and $x4150 $x338) (and (= (time-to-state (+ time 1)) _212) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4150 (= ?x339 _211)))
 (let (($x4155 (and $x4150 $x355)))
 (=> $x4155 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4168 (= ?x339 _212)))
 (=> (and $x4168 $x338) (and (= (time-to-state (+ time 1)) _213) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4168 (= ?x339 _212)))
 (let (($x4173 (and $x4168 $x355)))
 (=> $x4173 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4186 (= ?x339 _213)))
 (=> (and $x4186 $x338) (and (= (time-to-state (+ time 1)) _214) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4186 (= ?x339 _213)))
 (let (($x4191 (and $x4186 $x355)))
 (=> $x4191 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4204 (= ?x339 _214)))
 (=> (and $x4204 $x338) (and (= (time-to-state (+ time 1)) _215) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4204 (= ?x339 _214)))
 (let (($x4209 (and $x4204 $x355)))
 (=> $x4209 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4222 (= ?x339 _215)))
 (=> (and $x4222 $x338) (and (= (time-to-state (+ time 1)) _216) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4222 (= ?x339 _215)))
 (let (($x4227 (and $x4222 $x355)))
 (=> $x4227 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4240 (= ?x339 _216)))
 (=> (and $x4240 $x338) (and (= (time-to-state (+ time 1)) _217) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4240 (= ?x339 _216)))
 (let (($x4245 (and $x4240 $x355)))
 (=> $x4245 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4258 (= ?x339 _217)))
 (=> (and $x4258 $x338) (and (= (time-to-state (+ time 1)) _218) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4258 (= ?x339 _217)))
 (let (($x4263 (and $x4258 $x355)))
 (=> $x4263 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4276 (= ?x339 _218)))
 (=> (and $x4276 $x338) (and (= (time-to-state (+ time 1)) _219) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4276 (= ?x339 _218)))
 (let (($x4281 (and $x4276 $x355)))
 (=> $x4281 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4294 (= ?x339 _219)))
 (=> (and $x4294 $x338) (and (= (time-to-state (+ time 1)) _220) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4294 (= ?x339 _219)))
 (let (($x4299 (and $x4294 $x355)))
 (=> $x4299 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4312 (= ?x339 _220)))
 (=> (and $x4312 $x338) (and (= (time-to-state (+ time 1)) _221) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4312 (= ?x339 _220)))
 (let (($x4317 (and $x4312 $x355)))
 (=> $x4317 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4330 (= ?x339 _221)))
 (=> (and $x4330 $x338) (and (= (time-to-state (+ time 1)) _222) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4330 (= ?x339 _221)))
 (let (($x4335 (and $x4330 $x355)))
 (=> $x4335 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4348 (= ?x339 _222)))
 (=> (and $x4348 $x338) (and (= (time-to-state (+ time 1)) _223) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4348 (= ?x339 _222)))
 (let (($x4353 (and $x4348 $x355)))
 (=> $x4353 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4366 (= ?x339 _223)))
 (=> (and $x4366 $x338) (and (= (time-to-state (+ time 1)) _224) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4366 (= ?x339 _223)))
 (let (($x4371 (and $x4366 $x355)))
 (=> $x4371 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4384 (= ?x339 _224)))
 (=> (and $x4384 $x338) (and (= (time-to-state (+ time 1)) _225) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4384 (= ?x339 _224)))
 (let (($x4389 (and $x4384 $x355)))
 (=> $x4389 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4402 (= ?x339 _225)))
 (=> (and $x4402 $x338) (and (= (time-to-state (+ time 1)) _226) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4402 (= ?x339 _225)))
 (let (($x4407 (and $x4402 $x355)))
 (=> $x4407 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4420 (= ?x339 _226)))
 (=> (and $x4420 $x338) (and (= (time-to-state (+ time 1)) _227) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4420 (= ?x339 _226)))
 (let (($x4425 (and $x4420 $x355)))
 (=> $x4425 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4438 (= ?x339 _227)))
 (=> (and $x4438 $x338) (and (= (time-to-state (+ time 1)) _228) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4438 (= ?x339 _227)))
 (let (($x4443 (and $x4438 $x355)))
 (=> $x4443 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4456 (= ?x339 _228)))
 (=> (and $x4456 $x338) (and (= (time-to-state (+ time 1)) _229) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4456 (= ?x339 _228)))
 (let (($x4461 (and $x4456 $x355)))
 (=> $x4461 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4474 (= ?x339 _229)))
 (=> (and $x4474 $x338) (and (= (time-to-state (+ time 1)) _230) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4474 (= ?x339 _229)))
 (let (($x4479 (and $x4474 $x355)))
 (=> $x4479 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4492 (= ?x339 _230)))
 (=> (and $x4492 $x338) (and (= (time-to-state (+ time 1)) _231) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4492 (= ?x339 _230)))
 (let (($x4497 (and $x4492 $x355)))
 (=> $x4497 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4510 (= ?x339 _231)))
 (=> (and $x4510 $x338) (and (= (time-to-state (+ time 1)) _232) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4510 (= ?x339 _231)))
 (let (($x4515 (and $x4510 $x355)))
 (=> $x4515 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4528 (= ?x339 _232)))
 (=> (and $x4528 $x338) (and (= (time-to-state (+ time 1)) _233) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4528 (= ?x339 _232)))
 (let (($x4533 (and $x4528 $x355)))
 (=> $x4533 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4546 (= ?x339 _233)))
 (=> (and $x4546 $x338) (and (= (time-to-state (+ time 1)) _234) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4546 (= ?x339 _233)))
 (let (($x4551 (and $x4546 $x355)))
 (=> $x4551 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4564 (= ?x339 _234)))
 (=> (and $x4564 $x338) (and (= (time-to-state (+ time 1)) _235) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4564 (= ?x339 _234)))
 (let (($x4569 (and $x4564 $x355)))
 (=> $x4569 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4582 (= ?x339 _235)))
 (=> (and $x4582 $x338) (and (= (time-to-state (+ time 1)) _236) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4582 (= ?x339 _235)))
 (let (($x4587 (and $x4582 $x355)))
 (=> $x4587 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4600 (= ?x339 _236)))
 (=> (and $x4600 $x338) (and (= (time-to-state (+ time 1)) _237) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4600 (= ?x339 _236)))
 (let (($x4605 (and $x4600 $x355)))
 (=> $x4605 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4618 (= ?x339 _237)))
 (=> (and $x4618 $x338) (and (= (time-to-state (+ time 1)) _238) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4618 (= ?x339 _237)))
 (let (($x4623 (and $x4618 $x355)))
 (=> $x4623 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4636 (= ?x339 _238)))
 (=> (and $x4636 $x338) (and (= (time-to-state (+ time 1)) _239) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4636 (= ?x339 _238)))
 (let (($x4641 (and $x4636 $x355)))
 (=> $x4641 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4654 (= ?x339 _239)))
 (=> (and $x4654 $x338) (and (= (time-to-state (+ time 1)) _240) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4654 (= ?x339 _239)))
 (let (($x4659 (and $x4654 $x355)))
 (=> $x4659 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4672 (= ?x339 _240)))
 (=> (and $x4672 $x338) (and (= (time-to-state (+ time 1)) _241) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4672 (= ?x339 _240)))
 (let (($x4677 (and $x4672 $x355)))
 (=> $x4677 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4690 (= ?x339 _241)))
 (=> (and $x4690 $x338) (and (= (time-to-state (+ time 1)) _242) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4690 (= ?x339 _241)))
 (let (($x4695 (and $x4690 $x355)))
 (=> $x4695 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4708 (= ?x339 _242)))
 (=> (and $x4708 $x338) (and (= (time-to-state (+ time 1)) _243) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4708 (= ?x339 _242)))
 (let (($x4713 (and $x4708 $x355)))
 (=> $x4713 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4726 (= ?x339 _243)))
 (=> (and $x4726 $x338) (and (= (time-to-state (+ time 1)) _244) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4726 (= ?x339 _243)))
 (let (($x4731 (and $x4726 $x355)))
 (=> $x4731 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4744 (= ?x339 _244)))
 (=> (and $x4744 $x338) (and (= (time-to-state (+ time 1)) _245) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4744 (= ?x339 _244)))
 (let (($x4749 (and $x4744 $x355)))
 (=> $x4749 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4762 (= ?x339 _245)))
 (=> (and $x4762 $x338) (and (= (time-to-state (+ time 1)) _246) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4762 (= ?x339 _245)))
 (let (($x4767 (and $x4762 $x355)))
 (=> $x4767 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4780 (= ?x339 _246)))
 (=> (and $x4780 $x338) (and (= (time-to-state (+ time 1)) _247) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4780 (= ?x339 _246)))
 (let (($x4785 (and $x4780 $x355)))
 (=> $x4785 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4798 (= ?x339 _247)))
 (=> (and $x4798 $x338) (and (= (time-to-state (+ time 1)) _248) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4798 (= ?x339 _247)))
 (let (($x4803 (and $x4798 $x355)))
 (=> $x4803 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4816 (= ?x339 _248)))
 (=> (and $x4816 $x338) (and (= (time-to-state (+ time 1)) _249) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4816 (= ?x339 _248)))
 (let (($x4821 (and $x4816 $x355)))
 (=> $x4821 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4834 (= ?x339 _249)))
 (=> (and $x4834 $x338) (and (= (time-to-state (+ time 1)) _250) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4834 (= ?x339 _249)))
 (let (($x4839 (and $x4834 $x355)))
 (=> $x4839 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4852 (= ?x339 _250)))
 (=> (and $x4852 $x338) (and (= (time-to-state (+ time 1)) _251) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4852 (= ?x339 _250)))
 (let (($x4857 (and $x4852 $x355)))
 (=> $x4857 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4870 (= ?x339 _251)))
 (=> (and $x4870 $x338) (and (= (time-to-state (+ time 1)) _252) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4870 (= ?x339 _251)))
 (let (($x4875 (and $x4870 $x355)))
 (=> $x4875 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4888 (= ?x339 _252)))
 (=> (and $x4888 $x338) (and (= (time-to-state (+ time 1)) _253) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4888 (= ?x339 _252)))
 (let (($x4893 (and $x4888 $x355)))
 (=> $x4893 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4906 (= ?x339 _253)))
 (=> (and $x4906 $x338) (and (= (time-to-state (+ time 1)) _254) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4906 (= ?x339 _253)))
 (let (($x4911 (and $x4906 $x355)))
 (=> $x4911 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4924 (= ?x339 _254)))
 (=> (and $x4924 $x338) (and (= (time-to-state (+ time 1)) _255) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4924 (= ?x339 _254)))
 (let (($x4929 (and $x4924 $x355)))
 (=> $x4929 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4942 (= ?x339 _255)))
 (=> (and $x4942 $x338) (and (= (time-to-state (+ time 1)) _256) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4942 (= ?x339 _255)))
 (let (($x4947 (and $x4942 $x355)))
 (=> $x4947 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4960 (= ?x339 _256)))
 (=> (and $x4960 $x338) (and (= (time-to-state (+ time 1)) _257) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4960 (= ?x339 _256)))
 (let (($x4965 (and $x4960 $x355)))
 (=> $x4965 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4978 (= ?x339 _257)))
 (=> (and $x4978 $x338) (and (= (time-to-state (+ time 1)) _258) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4978 (= ?x339 _257)))
 (let (($x4983 (and $x4978 $x355)))
 (=> $x4983 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x4996 (= ?x339 _258)))
 (=> (and $x4996 $x338) (and (= (time-to-state (+ time 1)) _259) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x4996 (= ?x339 _258)))
 (let (($x5001 (and $x4996 $x355)))
 (=> $x5001 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5014 (= ?x339 _259)))
 (=> (and $x5014 $x338) (and (= (time-to-state (+ time 1)) _260) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5014 (= ?x339 _259)))
 (let (($x5019 (and $x5014 $x355)))
 (=> $x5019 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5032 (= ?x339 _260)))
 (=> (and $x5032 $x338) (and (= (time-to-state (+ time 1)) _261) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5032 (= ?x339 _260)))
 (let (($x5037 (and $x5032 $x355)))
 (=> $x5037 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5050 (= ?x339 _261)))
 (=> (and $x5050 $x338) (and (= (time-to-state (+ time 1)) _262) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5050 (= ?x339 _261)))
 (let (($x5055 (and $x5050 $x355)))
 (=> $x5055 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5068 (= ?x339 _262)))
 (=> (and $x5068 $x338) (and (= (time-to-state (+ time 1)) _263) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5068 (= ?x339 _262)))
 (let (($x5073 (and $x5068 $x355)))
 (=> $x5073 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5086 (= ?x339 _263)))
 (=> (and $x5086 $x338) (and (= (time-to-state (+ time 1)) _264) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5086 (= ?x339 _263)))
 (let (($x5091 (and $x5086 $x355)))
 (=> $x5091 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5104 (= ?x339 _264)))
 (=> (and $x5104 $x338) (and (= (time-to-state (+ time 1)) _265) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5104 (= ?x339 _264)))
 (let (($x5109 (and $x5104 $x355)))
 (=> $x5109 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5122 (= ?x339 _265)))
 (=> (and $x5122 $x338) (and (= (time-to-state (+ time 1)) _266) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5122 (= ?x339 _265)))
 (let (($x5127 (and $x5122 $x355)))
 (=> $x5127 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5140 (= ?x339 _266)))
 (=> (and $x5140 $x338) (and (= (time-to-state (+ time 1)) _267) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5140 (= ?x339 _266)))
 (let (($x5145 (and $x5140 $x355)))
 (=> $x5145 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5158 (= ?x339 _267)))
 (=> (and $x5158 $x338) (and (= (time-to-state (+ time 1)) _268) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5158 (= ?x339 _267)))
 (let (($x5163 (and $x5158 $x355)))
 (=> $x5163 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5176 (= ?x339 _268)))
 (=> (and $x5176 $x338) (and (= (time-to-state (+ time 1)) _269) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5176 (= ?x339 _268)))
 (let (($x5181 (and $x5176 $x355)))
 (=> $x5181 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5194 (= ?x339 _269)))
 (=> (and $x5194 $x338) (and (= (time-to-state (+ time 1)) _270) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5194 (= ?x339 _269)))
 (let (($x5199 (and $x5194 $x355)))
 (=> $x5199 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5212 (= ?x339 _270)))
 (=> (and $x5212 $x338) (and (= (time-to-state (+ time 1)) _271) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5212 (= ?x339 _270)))
 (let (($x5217 (and $x5212 $x355)))
 (=> $x5217 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5230 (= ?x339 _271)))
 (=> (and $x5230 $x338) (and (= (time-to-state (+ time 1)) _272) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5230 (= ?x339 _271)))
 (let (($x5235 (and $x5230 $x355)))
 (=> $x5235 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5248 (= ?x339 _272)))
 (=> (and $x5248 $x338) (and (= (time-to-state (+ time 1)) _273) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5248 (= ?x339 _272)))
 (let (($x5253 (and $x5248 $x355)))
 (=> $x5253 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5266 (= ?x339 _273)))
 (=> (and $x5266 $x338) (and (= (time-to-state (+ time 1)) _274) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5266 (= ?x339 _273)))
 (let (($x5271 (and $x5266 $x355)))
 (=> $x5271 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5284 (= ?x339 _274)))
 (=> (and $x5284 $x338) (and (= (time-to-state (+ time 1)) _275) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5284 (= ?x339 _274)))
 (let (($x5289 (and $x5284 $x355)))
 (=> $x5289 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5302 (= ?x339 _275)))
 (=> (and $x5302 $x338) (and (= (time-to-state (+ time 1)) _276) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5302 (= ?x339 _275)))
 (let (($x5307 (and $x5302 $x355)))
 (=> $x5307 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5320 (= ?x339 _276)))
 (=> (and $x5320 $x338) (and (= (time-to-state (+ time 1)) _277) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5320 (= ?x339 _276)))
 (let (($x5325 (and $x5320 $x355)))
 (=> $x5325 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5338 (= ?x339 _277)))
 (=> (and $x5338 $x338) (and (= (time-to-state (+ time 1)) _278) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5338 (= ?x339 _277)))
 (let (($x5343 (and $x5338 $x355)))
 (=> $x5343 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5356 (= ?x339 _278)))
 (=> (and $x5356 $x338) (and (= (time-to-state (+ time 1)) _279) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5356 (= ?x339 _278)))
 (let (($x5361 (and $x5356 $x355)))
 (=> $x5361 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let (($x333 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x337 (input-arg0 time)))
 (let (($x338 (and (distinct ?x337 0) true)))
 (let ((?x339 (time-to-state time)))
 (let (($x5374 (= ?x339 _279)))
 (=> (and $x5374 $x338) (and (= (time-to-state (+ time 1)) _280) $x333))))))))
 )
(assert
 (forall ((time Int) )(let ((?x331 (+ time 1)))
 (let ((?x334 (time-to-state ?x331)))
 (let (($x354 (= ?x334 ERR)))
 (let ((?x337 (input-arg0 time)))
 (let (($x355 (= ?x337 1)))
 (let ((?x339 (time-to-state time)))
 (let (($x5374 (= ?x339 _279)))
 (let (($x5379 (and $x5374 $x355)))
 (=> $x5379 $x354))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x339 (time-to-state time)))
 (let (($x5382 (= ?x339 ERR)))
 (and $x5382 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280) true))
(check-sat)
