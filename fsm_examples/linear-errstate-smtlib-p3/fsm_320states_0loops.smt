; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun input-arg0 (Int) Int)
(declare-fun var1_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun ERR () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(assert
 (let ((?x329 (time-to-state 0)))
 (= ?x329 _0)))
(assert
 (let ((?x349 (input-arg0 0)))
 (= ?x349 0)))
(assert
 (let ((?x351 (var1_0 0)))
 (= ?x351 0)))
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _1) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x380 (= ?x379 _0)))
 (let (($x396 (and $x380 $x395)))
 (=> $x396 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _2) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x410 (= ?x379 _1)))
 (let (($x415 (and $x410 $x395)))
 (=> $x415 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _2) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _3) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x428 (= ?x379 _2)))
 (let (($x433 (and $x428 $x395)))
 (=> $x433 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _4) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x446 (= ?x379 _3)))
 (let (($x451 (and $x446 $x395)))
 (=> $x451 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _5) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x464 (= ?x379 _4)))
 (let (($x469 (and $x464 $x395)))
 (=> $x469 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _6) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x482 (= ?x379 _5)))
 (let (($x487 (and $x482 $x395)))
 (=> $x487 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _7) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x500 (= ?x379 _6)))
 (let (($x505 (and $x500 $x395)))
 (=> $x505 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _8) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x518 (= ?x379 _7)))
 (let (($x523 (and $x518 $x395)))
 (=> $x523 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _9) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x536 (= ?x379 _8)))
 (let (($x541 (and $x536 $x395)))
 (=> $x541 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _10) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x554 (= ?x379 _9)))
 (let (($x559 (and $x554 $x395)))
 (=> $x559 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _11) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x572 (= ?x379 _10)))
 (let (($x577 (and $x572 $x395)))
 (=> $x577 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _12) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x590 (= ?x379 _11)))
 (let (($x595 (and $x590 $x395)))
 (=> $x595 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _13) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x608 (= ?x379 _12)))
 (let (($x613 (and $x608 $x395)))
 (=> $x613 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _14) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x626 (= ?x379 _13)))
 (let (($x631 (and $x626 $x395)))
 (=> $x631 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _15) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x644 (= ?x379 _14)))
 (let (($x649 (and $x644 $x395)))
 (=> $x649 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _16) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x662 (= ?x379 _15)))
 (let (($x667 (and $x662 $x395)))
 (=> $x667 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _17) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x680 (= ?x379 _16)))
 (let (($x685 (and $x680 $x395)))
 (=> $x685 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _18) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x698 (= ?x379 _17)))
 (let (($x703 (and $x698 $x395)))
 (=> $x703 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _19) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x716 (= ?x379 _18)))
 (let (($x721 (and $x716 $x395)))
 (=> $x721 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _20) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x734 (= ?x379 _19)))
 (let (($x739 (and $x734 $x395)))
 (=> $x739 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _21) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x752 (= ?x379 _20)))
 (let (($x757 (and $x752 $x395)))
 (=> $x757 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _22) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x770 (= ?x379 _21)))
 (let (($x775 (and $x770 $x395)))
 (=> $x775 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _23) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x788 (= ?x379 _22)))
 (let (($x793 (and $x788 $x395)))
 (=> $x793 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _24) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x806 (= ?x379 _23)))
 (let (($x811 (and $x806 $x395)))
 (=> $x811 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _25) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x824 (= ?x379 _24)))
 (let (($x829 (and $x824 $x395)))
 (=> $x829 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _26) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x842 (= ?x379 _25)))
 (let (($x847 (and $x842 $x395)))
 (=> $x847 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _27) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x860 (= ?x379 _26)))
 (let (($x865 (and $x860 $x395)))
 (=> $x865 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _28) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x878 (= ?x379 _27)))
 (let (($x883 (and $x878 $x395)))
 (=> $x883 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _29) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x896 (= ?x379 _28)))
 (let (($x901 (and $x896 $x395)))
 (=> $x901 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _30) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x914 (= ?x379 _29)))
 (let (($x919 (and $x914 $x395)))
 (=> $x919 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _31) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x932 (= ?x379 _30)))
 (let (($x937 (and $x932 $x395)))
 (=> $x937 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _32) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x950 (= ?x379 _31)))
 (let (($x955 (and $x950 $x395)))
 (=> $x955 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _33) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x968 (= ?x379 _32)))
 (let (($x973 (and $x968 $x395)))
 (=> $x973 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _34) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x986 (= ?x379 _33)))
 (let (($x991 (and $x986 $x395)))
 (=> $x991 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _35) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1004 (= ?x379 _34)))
 (let (($x1009 (and $x1004 $x395)))
 (=> $x1009 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _36) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1022 (= ?x379 _35)))
 (let (($x1027 (and $x1022 $x395)))
 (=> $x1027 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _37) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1040 (= ?x379 _36)))
 (let (($x1045 (and $x1040 $x395)))
 (=> $x1045 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _38) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1058 (= ?x379 _37)))
 (let (($x1063 (and $x1058 $x395)))
 (=> $x1063 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _39) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1076 (= ?x379 _38)))
 (let (($x1081 (and $x1076 $x395)))
 (=> $x1081 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _40) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1094 (= ?x379 _39)))
 (let (($x1099 (and $x1094 $x395)))
 (=> $x1099 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _41) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1112 (= ?x379 _40)))
 (let (($x1117 (and $x1112 $x395)))
 (=> $x1117 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _42) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1130 (= ?x379 _41)))
 (let (($x1135 (and $x1130 $x395)))
 (=> $x1135 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _43) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1148 (= ?x379 _42)))
 (let (($x1153 (and $x1148 $x395)))
 (=> $x1153 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _44) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1166 (= ?x379 _43)))
 (let (($x1171 (and $x1166 $x395)))
 (=> $x1171 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _45) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1184 (= ?x379 _44)))
 (let (($x1189 (and $x1184 $x395)))
 (=> $x1189 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _46) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1202 (= ?x379 _45)))
 (let (($x1207 (and $x1202 $x395)))
 (=> $x1207 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _47) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1220 (= ?x379 _46)))
 (let (($x1225 (and $x1220 $x395)))
 (=> $x1225 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _48) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1238 (= ?x379 _47)))
 (let (($x1243 (and $x1238 $x395)))
 (=> $x1243 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _49) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1256 (= ?x379 _48)))
 (let (($x1261 (and $x1256 $x395)))
 (=> $x1261 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _50) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1274 (= ?x379 _49)))
 (let (($x1279 (and $x1274 $x395)))
 (=> $x1279 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _51) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1292 (= ?x379 _50)))
 (let (($x1297 (and $x1292 $x395)))
 (=> $x1297 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _52) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1310 (= ?x379 _51)))
 (let (($x1315 (and $x1310 $x395)))
 (=> $x1315 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _53) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1328 (= ?x379 _52)))
 (let (($x1333 (and $x1328 $x395)))
 (=> $x1333 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _54) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1346 (= ?x379 _53)))
 (let (($x1351 (and $x1346 $x395)))
 (=> $x1351 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _55) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1364 (= ?x379 _54)))
 (let (($x1369 (and $x1364 $x395)))
 (=> $x1369 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _56) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1382 (= ?x379 _55)))
 (let (($x1387 (and $x1382 $x395)))
 (=> $x1387 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _57) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1400 (= ?x379 _56)))
 (let (($x1405 (and $x1400 $x395)))
 (=> $x1405 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _58) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1418 (= ?x379 _57)))
 (let (($x1423 (and $x1418 $x395)))
 (=> $x1423 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _59) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1436 (= ?x379 _58)))
 (let (($x1441 (and $x1436 $x395)))
 (=> $x1441 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _60) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1454 (= ?x379 _59)))
 (let (($x1459 (and $x1454 $x395)))
 (=> $x1459 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _61) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1472 (= ?x379 _60)))
 (let (($x1477 (and $x1472 $x395)))
 (=> $x1477 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _62) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1490 (= ?x379 _61)))
 (let (($x1495 (and $x1490 $x395)))
 (=> $x1495 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _63) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1508 (= ?x379 _62)))
 (let (($x1513 (and $x1508 $x395)))
 (=> $x1513 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _64) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1526 (= ?x379 _63)))
 (let (($x1531 (and $x1526 $x395)))
 (=> $x1531 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _65) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1544 (= ?x379 _64)))
 (let (($x1549 (and $x1544 $x395)))
 (=> $x1549 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _66) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1562 (= ?x379 _65)))
 (let (($x1567 (and $x1562 $x395)))
 (=> $x1567 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _67) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1580 (= ?x379 _66)))
 (let (($x1585 (and $x1580 $x395)))
 (=> $x1585 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _68) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1598 (= ?x379 _67)))
 (let (($x1603 (and $x1598 $x395)))
 (=> $x1603 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _69) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1616 (= ?x379 _68)))
 (let (($x1621 (and $x1616 $x395)))
 (=> $x1621 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _70) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1634 (= ?x379 _69)))
 (let (($x1639 (and $x1634 $x395)))
 (=> $x1639 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _71) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1652 (= ?x379 _70)))
 (let (($x1657 (and $x1652 $x395)))
 (=> $x1657 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _72) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1670 (= ?x379 _71)))
 (let (($x1675 (and $x1670 $x395)))
 (=> $x1675 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _73) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1688 (= ?x379 _72)))
 (let (($x1693 (and $x1688 $x395)))
 (=> $x1693 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _74) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1706 (= ?x379 _73)))
 (let (($x1711 (and $x1706 $x395)))
 (=> $x1711 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _75) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1724 (= ?x379 _74)))
 (let (($x1729 (and $x1724 $x395)))
 (=> $x1729 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _76) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1742 (= ?x379 _75)))
 (let (($x1747 (and $x1742 $x395)))
 (=> $x1747 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _77) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1760 (= ?x379 _76)))
 (let (($x1765 (and $x1760 $x395)))
 (=> $x1765 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _78) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1778 (= ?x379 _77)))
 (let (($x1783 (and $x1778 $x395)))
 (=> $x1783 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _79) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1796 (= ?x379 _78)))
 (let (($x1801 (and $x1796 $x395)))
 (=> $x1801 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _80) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1814 (= ?x379 _79)))
 (let (($x1819 (and $x1814 $x395)))
 (=> $x1819 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _81) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1832 (= ?x379 _80)))
 (let (($x1837 (and $x1832 $x395)))
 (=> $x1837 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _82) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1850 (= ?x379 _81)))
 (let (($x1855 (and $x1850 $x395)))
 (=> $x1855 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _83) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1868 (= ?x379 _82)))
 (let (($x1873 (and $x1868 $x395)))
 (=> $x1873 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _84) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1886 (= ?x379 _83)))
 (let (($x1891 (and $x1886 $x395)))
 (=> $x1891 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _85) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1904 (= ?x379 _84)))
 (let (($x1909 (and $x1904 $x395)))
 (=> $x1909 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _86) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1922 (= ?x379 _85)))
 (let (($x1927 (and $x1922 $x395)))
 (=> $x1927 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _87) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1940 (= ?x379 _86)))
 (let (($x1945 (and $x1940 $x395)))
 (=> $x1945 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _88) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1958 (= ?x379 _87)))
 (let (($x1963 (and $x1958 $x395)))
 (=> $x1963 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _89) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1976 (= ?x379 _88)))
 (let (($x1981 (and $x1976 $x395)))
 (=> $x1981 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _90) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x1994 (= ?x379 _89)))
 (let (($x1999 (and $x1994 $x395)))
 (=> $x1999 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _91) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2012 (= ?x379 _90)))
 (let (($x2017 (and $x2012 $x395)))
 (=> $x2017 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _92) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2030 (= ?x379 _91)))
 (let (($x2035 (and $x2030 $x395)))
 (=> $x2035 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _93) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2048 (= ?x379 _92)))
 (let (($x2053 (and $x2048 $x395)))
 (=> $x2053 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _94) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2066 (= ?x379 _93)))
 (let (($x2071 (and $x2066 $x395)))
 (=> $x2071 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _95) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2084 (= ?x379 _94)))
 (let (($x2089 (and $x2084 $x395)))
 (=> $x2089 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _96) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2102 (= ?x379 _95)))
 (let (($x2107 (and $x2102 $x395)))
 (=> $x2107 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _97) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2120 (= ?x379 _96)))
 (let (($x2125 (and $x2120 $x395)))
 (=> $x2125 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _98) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2138 (= ?x379 _97)))
 (let (($x2143 (and $x2138 $x395)))
 (=> $x2143 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _99) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2156 (= ?x379 _98)))
 (let (($x2161 (and $x2156 $x395)))
 (=> $x2161 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) _99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) _100) $x373))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2174 (= ?x379 _99)))
 (let (($x2179 (and $x2174 $x395)))
 (=> $x2179 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2192 (= ?x379 _100)))
 (=> (and $x2192 $x378) (and (= (time-to-state (+ time 1)) _101) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2192 (= ?x379 _100)))
 (let (($x2197 (and $x2192 $x395)))
 (=> $x2197 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2210 (= ?x379 _101)))
 (=> (and $x2210 $x378) (and (= (time-to-state (+ time 1)) _102) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2210 (= ?x379 _101)))
 (let (($x2215 (and $x2210 $x395)))
 (=> $x2215 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2228 (= ?x379 _102)))
 (=> (and $x2228 $x378) (and (= (time-to-state (+ time 1)) _103) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2228 (= ?x379 _102)))
 (let (($x2233 (and $x2228 $x395)))
 (=> $x2233 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2246 (= ?x379 _103)))
 (=> (and $x2246 $x378) (and (= (time-to-state (+ time 1)) _104) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2246 (= ?x379 _103)))
 (let (($x2251 (and $x2246 $x395)))
 (=> $x2251 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2264 (= ?x379 _104)))
 (=> (and $x2264 $x378) (and (= (time-to-state (+ time 1)) _105) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2264 (= ?x379 _104)))
 (let (($x2269 (and $x2264 $x395)))
 (=> $x2269 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2282 (= ?x379 _105)))
 (=> (and $x2282 $x378) (and (= (time-to-state (+ time 1)) _106) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2282 (= ?x379 _105)))
 (let (($x2287 (and $x2282 $x395)))
 (=> $x2287 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2300 (= ?x379 _106)))
 (=> (and $x2300 $x378) (and (= (time-to-state (+ time 1)) _107) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2300 (= ?x379 _106)))
 (let (($x2305 (and $x2300 $x395)))
 (=> $x2305 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2318 (= ?x379 _107)))
 (=> (and $x2318 $x378) (and (= (time-to-state (+ time 1)) _108) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2318 (= ?x379 _107)))
 (let (($x2323 (and $x2318 $x395)))
 (=> $x2323 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2336 (= ?x379 _108)))
 (=> (and $x2336 $x378) (and (= (time-to-state (+ time 1)) _109) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2336 (= ?x379 _108)))
 (let (($x2341 (and $x2336 $x395)))
 (=> $x2341 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2354 (= ?x379 _109)))
 (=> (and $x2354 $x378) (and (= (time-to-state (+ time 1)) _110) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2354 (= ?x379 _109)))
 (let (($x2359 (and $x2354 $x395)))
 (=> $x2359 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2372 (= ?x379 _110)))
 (=> (and $x2372 $x378) (and (= (time-to-state (+ time 1)) _111) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2372 (= ?x379 _110)))
 (let (($x2377 (and $x2372 $x395)))
 (=> $x2377 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2390 (= ?x379 _111)))
 (=> (and $x2390 $x378) (and (= (time-to-state (+ time 1)) _112) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2390 (= ?x379 _111)))
 (let (($x2395 (and $x2390 $x395)))
 (=> $x2395 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2408 (= ?x379 _112)))
 (=> (and $x2408 $x378) (and (= (time-to-state (+ time 1)) _113) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2408 (= ?x379 _112)))
 (let (($x2413 (and $x2408 $x395)))
 (=> $x2413 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2426 (= ?x379 _113)))
 (=> (and $x2426 $x378) (and (= (time-to-state (+ time 1)) _114) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2426 (= ?x379 _113)))
 (let (($x2431 (and $x2426 $x395)))
 (=> $x2431 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2444 (= ?x379 _114)))
 (=> (and $x2444 $x378) (and (= (time-to-state (+ time 1)) _115) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2444 (= ?x379 _114)))
 (let (($x2449 (and $x2444 $x395)))
 (=> $x2449 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2462 (= ?x379 _115)))
 (=> (and $x2462 $x378) (and (= (time-to-state (+ time 1)) _116) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2462 (= ?x379 _115)))
 (let (($x2467 (and $x2462 $x395)))
 (=> $x2467 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2480 (= ?x379 _116)))
 (=> (and $x2480 $x378) (and (= (time-to-state (+ time 1)) _117) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2480 (= ?x379 _116)))
 (let (($x2485 (and $x2480 $x395)))
 (=> $x2485 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2498 (= ?x379 _117)))
 (=> (and $x2498 $x378) (and (= (time-to-state (+ time 1)) _118) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2498 (= ?x379 _117)))
 (let (($x2503 (and $x2498 $x395)))
 (=> $x2503 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2516 (= ?x379 _118)))
 (=> (and $x2516 $x378) (and (= (time-to-state (+ time 1)) _119) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2516 (= ?x379 _118)))
 (let (($x2521 (and $x2516 $x395)))
 (=> $x2521 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2534 (= ?x379 _119)))
 (=> (and $x2534 $x378) (and (= (time-to-state (+ time 1)) _120) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2534 (= ?x379 _119)))
 (let (($x2539 (and $x2534 $x395)))
 (=> $x2539 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2552 (= ?x379 _120)))
 (=> (and $x2552 $x378) (and (= (time-to-state (+ time 1)) _121) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2552 (= ?x379 _120)))
 (let (($x2557 (and $x2552 $x395)))
 (=> $x2557 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2570 (= ?x379 _121)))
 (=> (and $x2570 $x378) (and (= (time-to-state (+ time 1)) _122) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2570 (= ?x379 _121)))
 (let (($x2575 (and $x2570 $x395)))
 (=> $x2575 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2588 (= ?x379 _122)))
 (=> (and $x2588 $x378) (and (= (time-to-state (+ time 1)) _123) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2588 (= ?x379 _122)))
 (let (($x2593 (and $x2588 $x395)))
 (=> $x2593 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2606 (= ?x379 _123)))
 (=> (and $x2606 $x378) (and (= (time-to-state (+ time 1)) _124) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2606 (= ?x379 _123)))
 (let (($x2611 (and $x2606 $x395)))
 (=> $x2611 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2624 (= ?x379 _124)))
 (=> (and $x2624 $x378) (and (= (time-to-state (+ time 1)) _125) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2624 (= ?x379 _124)))
 (let (($x2629 (and $x2624 $x395)))
 (=> $x2629 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2642 (= ?x379 _125)))
 (=> (and $x2642 $x378) (and (= (time-to-state (+ time 1)) _126) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2642 (= ?x379 _125)))
 (let (($x2647 (and $x2642 $x395)))
 (=> $x2647 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2660 (= ?x379 _126)))
 (=> (and $x2660 $x378) (and (= (time-to-state (+ time 1)) _127) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2660 (= ?x379 _126)))
 (let (($x2665 (and $x2660 $x395)))
 (=> $x2665 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2678 (= ?x379 _127)))
 (=> (and $x2678 $x378) (and (= (time-to-state (+ time 1)) _128) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2678 (= ?x379 _127)))
 (let (($x2683 (and $x2678 $x395)))
 (=> $x2683 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2696 (= ?x379 _128)))
 (=> (and $x2696 $x378) (and (= (time-to-state (+ time 1)) _129) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2696 (= ?x379 _128)))
 (let (($x2701 (and $x2696 $x395)))
 (=> $x2701 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2714 (= ?x379 _129)))
 (=> (and $x2714 $x378) (and (= (time-to-state (+ time 1)) _130) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2714 (= ?x379 _129)))
 (let (($x2719 (and $x2714 $x395)))
 (=> $x2719 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2732 (= ?x379 _130)))
 (=> (and $x2732 $x378) (and (= (time-to-state (+ time 1)) _131) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2732 (= ?x379 _130)))
 (let (($x2737 (and $x2732 $x395)))
 (=> $x2737 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2750 (= ?x379 _131)))
 (=> (and $x2750 $x378) (and (= (time-to-state (+ time 1)) _132) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2750 (= ?x379 _131)))
 (let (($x2755 (and $x2750 $x395)))
 (=> $x2755 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2768 (= ?x379 _132)))
 (=> (and $x2768 $x378) (and (= (time-to-state (+ time 1)) _133) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2768 (= ?x379 _132)))
 (let (($x2773 (and $x2768 $x395)))
 (=> $x2773 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2786 (= ?x379 _133)))
 (=> (and $x2786 $x378) (and (= (time-to-state (+ time 1)) _134) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2786 (= ?x379 _133)))
 (let (($x2791 (and $x2786 $x395)))
 (=> $x2791 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2804 (= ?x379 _134)))
 (=> (and $x2804 $x378) (and (= (time-to-state (+ time 1)) _135) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2804 (= ?x379 _134)))
 (let (($x2809 (and $x2804 $x395)))
 (=> $x2809 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2822 (= ?x379 _135)))
 (=> (and $x2822 $x378) (and (= (time-to-state (+ time 1)) _136) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2822 (= ?x379 _135)))
 (let (($x2827 (and $x2822 $x395)))
 (=> $x2827 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2840 (= ?x379 _136)))
 (=> (and $x2840 $x378) (and (= (time-to-state (+ time 1)) _137) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2840 (= ?x379 _136)))
 (let (($x2845 (and $x2840 $x395)))
 (=> $x2845 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2858 (= ?x379 _137)))
 (=> (and $x2858 $x378) (and (= (time-to-state (+ time 1)) _138) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2858 (= ?x379 _137)))
 (let (($x2863 (and $x2858 $x395)))
 (=> $x2863 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2876 (= ?x379 _138)))
 (=> (and $x2876 $x378) (and (= (time-to-state (+ time 1)) _139) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2876 (= ?x379 _138)))
 (let (($x2881 (and $x2876 $x395)))
 (=> $x2881 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2894 (= ?x379 _139)))
 (=> (and $x2894 $x378) (and (= (time-to-state (+ time 1)) _140) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2894 (= ?x379 _139)))
 (let (($x2899 (and $x2894 $x395)))
 (=> $x2899 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2912 (= ?x379 _140)))
 (=> (and $x2912 $x378) (and (= (time-to-state (+ time 1)) _141) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2912 (= ?x379 _140)))
 (let (($x2917 (and $x2912 $x395)))
 (=> $x2917 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2930 (= ?x379 _141)))
 (=> (and $x2930 $x378) (and (= (time-to-state (+ time 1)) _142) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2930 (= ?x379 _141)))
 (let (($x2935 (and $x2930 $x395)))
 (=> $x2935 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2948 (= ?x379 _142)))
 (=> (and $x2948 $x378) (and (= (time-to-state (+ time 1)) _143) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2948 (= ?x379 _142)))
 (let (($x2953 (and $x2948 $x395)))
 (=> $x2953 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2966 (= ?x379 _143)))
 (=> (and $x2966 $x378) (and (= (time-to-state (+ time 1)) _144) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2966 (= ?x379 _143)))
 (let (($x2971 (and $x2966 $x395)))
 (=> $x2971 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x2984 (= ?x379 _144)))
 (=> (and $x2984 $x378) (and (= (time-to-state (+ time 1)) _145) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x2984 (= ?x379 _144)))
 (let (($x2989 (and $x2984 $x395)))
 (=> $x2989 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3002 (= ?x379 _145)))
 (=> (and $x3002 $x378) (and (= (time-to-state (+ time 1)) _146) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3002 (= ?x379 _145)))
 (let (($x3007 (and $x3002 $x395)))
 (=> $x3007 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3020 (= ?x379 _146)))
 (=> (and $x3020 $x378) (and (= (time-to-state (+ time 1)) _147) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3020 (= ?x379 _146)))
 (let (($x3025 (and $x3020 $x395)))
 (=> $x3025 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3038 (= ?x379 _147)))
 (=> (and $x3038 $x378) (and (= (time-to-state (+ time 1)) _148) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3038 (= ?x379 _147)))
 (let (($x3043 (and $x3038 $x395)))
 (=> $x3043 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3056 (= ?x379 _148)))
 (=> (and $x3056 $x378) (and (= (time-to-state (+ time 1)) _149) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3056 (= ?x379 _148)))
 (let (($x3061 (and $x3056 $x395)))
 (=> $x3061 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3074 (= ?x379 _149)))
 (=> (and $x3074 $x378) (and (= (time-to-state (+ time 1)) _150) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3074 (= ?x379 _149)))
 (let (($x3079 (and $x3074 $x395)))
 (=> $x3079 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3092 (= ?x379 _150)))
 (=> (and $x3092 $x378) (and (= (time-to-state (+ time 1)) _151) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3092 (= ?x379 _150)))
 (let (($x3097 (and $x3092 $x395)))
 (=> $x3097 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3110 (= ?x379 _151)))
 (=> (and $x3110 $x378) (and (= (time-to-state (+ time 1)) _152) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3110 (= ?x379 _151)))
 (let (($x3115 (and $x3110 $x395)))
 (=> $x3115 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3128 (= ?x379 _152)))
 (=> (and $x3128 $x378) (and (= (time-to-state (+ time 1)) _153) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3128 (= ?x379 _152)))
 (let (($x3133 (and $x3128 $x395)))
 (=> $x3133 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3146 (= ?x379 _153)))
 (=> (and $x3146 $x378) (and (= (time-to-state (+ time 1)) _154) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3146 (= ?x379 _153)))
 (let (($x3151 (and $x3146 $x395)))
 (=> $x3151 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3164 (= ?x379 _154)))
 (=> (and $x3164 $x378) (and (= (time-to-state (+ time 1)) _155) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3164 (= ?x379 _154)))
 (let (($x3169 (and $x3164 $x395)))
 (=> $x3169 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3182 (= ?x379 _155)))
 (=> (and $x3182 $x378) (and (= (time-to-state (+ time 1)) _156) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3182 (= ?x379 _155)))
 (let (($x3187 (and $x3182 $x395)))
 (=> $x3187 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3200 (= ?x379 _156)))
 (=> (and $x3200 $x378) (and (= (time-to-state (+ time 1)) _157) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3200 (= ?x379 _156)))
 (let (($x3205 (and $x3200 $x395)))
 (=> $x3205 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3218 (= ?x379 _157)))
 (=> (and $x3218 $x378) (and (= (time-to-state (+ time 1)) _158) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3218 (= ?x379 _157)))
 (let (($x3223 (and $x3218 $x395)))
 (=> $x3223 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3236 (= ?x379 _158)))
 (=> (and $x3236 $x378) (and (= (time-to-state (+ time 1)) _159) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3236 (= ?x379 _158)))
 (let (($x3241 (and $x3236 $x395)))
 (=> $x3241 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3254 (= ?x379 _159)))
 (=> (and $x3254 $x378) (and (= (time-to-state (+ time 1)) _160) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3254 (= ?x379 _159)))
 (let (($x3259 (and $x3254 $x395)))
 (=> $x3259 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3272 (= ?x379 _160)))
 (=> (and $x3272 $x378) (and (= (time-to-state (+ time 1)) _161) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3272 (= ?x379 _160)))
 (let (($x3277 (and $x3272 $x395)))
 (=> $x3277 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3290 (= ?x379 _161)))
 (=> (and $x3290 $x378) (and (= (time-to-state (+ time 1)) _162) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3290 (= ?x379 _161)))
 (let (($x3295 (and $x3290 $x395)))
 (=> $x3295 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3308 (= ?x379 _162)))
 (=> (and $x3308 $x378) (and (= (time-to-state (+ time 1)) _163) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3308 (= ?x379 _162)))
 (let (($x3313 (and $x3308 $x395)))
 (=> $x3313 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3326 (= ?x379 _163)))
 (=> (and $x3326 $x378) (and (= (time-to-state (+ time 1)) _164) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3326 (= ?x379 _163)))
 (let (($x3331 (and $x3326 $x395)))
 (=> $x3331 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3344 (= ?x379 _164)))
 (=> (and $x3344 $x378) (and (= (time-to-state (+ time 1)) _165) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3344 (= ?x379 _164)))
 (let (($x3349 (and $x3344 $x395)))
 (=> $x3349 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3362 (= ?x379 _165)))
 (=> (and $x3362 $x378) (and (= (time-to-state (+ time 1)) _166) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3362 (= ?x379 _165)))
 (let (($x3367 (and $x3362 $x395)))
 (=> $x3367 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3380 (= ?x379 _166)))
 (=> (and $x3380 $x378) (and (= (time-to-state (+ time 1)) _167) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3380 (= ?x379 _166)))
 (let (($x3385 (and $x3380 $x395)))
 (=> $x3385 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3398 (= ?x379 _167)))
 (=> (and $x3398 $x378) (and (= (time-to-state (+ time 1)) _168) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3398 (= ?x379 _167)))
 (let (($x3403 (and $x3398 $x395)))
 (=> $x3403 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3416 (= ?x379 _168)))
 (=> (and $x3416 $x378) (and (= (time-to-state (+ time 1)) _169) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3416 (= ?x379 _168)))
 (let (($x3421 (and $x3416 $x395)))
 (=> $x3421 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3434 (= ?x379 _169)))
 (=> (and $x3434 $x378) (and (= (time-to-state (+ time 1)) _170) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3434 (= ?x379 _169)))
 (let (($x3439 (and $x3434 $x395)))
 (=> $x3439 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3452 (= ?x379 _170)))
 (=> (and $x3452 $x378) (and (= (time-to-state (+ time 1)) _171) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3452 (= ?x379 _170)))
 (let (($x3457 (and $x3452 $x395)))
 (=> $x3457 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3470 (= ?x379 _171)))
 (=> (and $x3470 $x378) (and (= (time-to-state (+ time 1)) _172) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3470 (= ?x379 _171)))
 (let (($x3475 (and $x3470 $x395)))
 (=> $x3475 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3488 (= ?x379 _172)))
 (=> (and $x3488 $x378) (and (= (time-to-state (+ time 1)) _173) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3488 (= ?x379 _172)))
 (let (($x3493 (and $x3488 $x395)))
 (=> $x3493 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3506 (= ?x379 _173)))
 (=> (and $x3506 $x378) (and (= (time-to-state (+ time 1)) _174) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3506 (= ?x379 _173)))
 (let (($x3511 (and $x3506 $x395)))
 (=> $x3511 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3524 (= ?x379 _174)))
 (=> (and $x3524 $x378) (and (= (time-to-state (+ time 1)) _175) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3524 (= ?x379 _174)))
 (let (($x3529 (and $x3524 $x395)))
 (=> $x3529 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3542 (= ?x379 _175)))
 (=> (and $x3542 $x378) (and (= (time-to-state (+ time 1)) _176) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3542 (= ?x379 _175)))
 (let (($x3547 (and $x3542 $x395)))
 (=> $x3547 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3560 (= ?x379 _176)))
 (=> (and $x3560 $x378) (and (= (time-to-state (+ time 1)) _177) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3560 (= ?x379 _176)))
 (let (($x3565 (and $x3560 $x395)))
 (=> $x3565 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3578 (= ?x379 _177)))
 (=> (and $x3578 $x378) (and (= (time-to-state (+ time 1)) _178) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3578 (= ?x379 _177)))
 (let (($x3583 (and $x3578 $x395)))
 (=> $x3583 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3596 (= ?x379 _178)))
 (=> (and $x3596 $x378) (and (= (time-to-state (+ time 1)) _179) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3596 (= ?x379 _178)))
 (let (($x3601 (and $x3596 $x395)))
 (=> $x3601 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3614 (= ?x379 _179)))
 (=> (and $x3614 $x378) (and (= (time-to-state (+ time 1)) _180) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3614 (= ?x379 _179)))
 (let (($x3619 (and $x3614 $x395)))
 (=> $x3619 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3632 (= ?x379 _180)))
 (=> (and $x3632 $x378) (and (= (time-to-state (+ time 1)) _181) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3632 (= ?x379 _180)))
 (let (($x3637 (and $x3632 $x395)))
 (=> $x3637 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3650 (= ?x379 _181)))
 (=> (and $x3650 $x378) (and (= (time-to-state (+ time 1)) _182) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3650 (= ?x379 _181)))
 (let (($x3655 (and $x3650 $x395)))
 (=> $x3655 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3668 (= ?x379 _182)))
 (=> (and $x3668 $x378) (and (= (time-to-state (+ time 1)) _183) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3668 (= ?x379 _182)))
 (let (($x3673 (and $x3668 $x395)))
 (=> $x3673 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3686 (= ?x379 _183)))
 (=> (and $x3686 $x378) (and (= (time-to-state (+ time 1)) _184) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3686 (= ?x379 _183)))
 (let (($x3691 (and $x3686 $x395)))
 (=> $x3691 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3704 (= ?x379 _184)))
 (=> (and $x3704 $x378) (and (= (time-to-state (+ time 1)) _185) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3704 (= ?x379 _184)))
 (let (($x3709 (and $x3704 $x395)))
 (=> $x3709 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3722 (= ?x379 _185)))
 (=> (and $x3722 $x378) (and (= (time-to-state (+ time 1)) _186) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3722 (= ?x379 _185)))
 (let (($x3727 (and $x3722 $x395)))
 (=> $x3727 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3740 (= ?x379 _186)))
 (=> (and $x3740 $x378) (and (= (time-to-state (+ time 1)) _187) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3740 (= ?x379 _186)))
 (let (($x3745 (and $x3740 $x395)))
 (=> $x3745 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3758 (= ?x379 _187)))
 (=> (and $x3758 $x378) (and (= (time-to-state (+ time 1)) _188) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3758 (= ?x379 _187)))
 (let (($x3763 (and $x3758 $x395)))
 (=> $x3763 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3776 (= ?x379 _188)))
 (=> (and $x3776 $x378) (and (= (time-to-state (+ time 1)) _189) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3776 (= ?x379 _188)))
 (let (($x3781 (and $x3776 $x395)))
 (=> $x3781 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3794 (= ?x379 _189)))
 (=> (and $x3794 $x378) (and (= (time-to-state (+ time 1)) _190) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3794 (= ?x379 _189)))
 (let (($x3799 (and $x3794 $x395)))
 (=> $x3799 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3812 (= ?x379 _190)))
 (=> (and $x3812 $x378) (and (= (time-to-state (+ time 1)) _191) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3812 (= ?x379 _190)))
 (let (($x3817 (and $x3812 $x395)))
 (=> $x3817 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3830 (= ?x379 _191)))
 (=> (and $x3830 $x378) (and (= (time-to-state (+ time 1)) _192) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3830 (= ?x379 _191)))
 (let (($x3835 (and $x3830 $x395)))
 (=> $x3835 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3848 (= ?x379 _192)))
 (=> (and $x3848 $x378) (and (= (time-to-state (+ time 1)) _193) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3848 (= ?x379 _192)))
 (let (($x3853 (and $x3848 $x395)))
 (=> $x3853 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3866 (= ?x379 _193)))
 (=> (and $x3866 $x378) (and (= (time-to-state (+ time 1)) _194) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3866 (= ?x379 _193)))
 (let (($x3871 (and $x3866 $x395)))
 (=> $x3871 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3884 (= ?x379 _194)))
 (=> (and $x3884 $x378) (and (= (time-to-state (+ time 1)) _195) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3884 (= ?x379 _194)))
 (let (($x3889 (and $x3884 $x395)))
 (=> $x3889 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3902 (= ?x379 _195)))
 (=> (and $x3902 $x378) (and (= (time-to-state (+ time 1)) _196) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3902 (= ?x379 _195)))
 (let (($x3907 (and $x3902 $x395)))
 (=> $x3907 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3920 (= ?x379 _196)))
 (=> (and $x3920 $x378) (and (= (time-to-state (+ time 1)) _197) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3920 (= ?x379 _196)))
 (let (($x3925 (and $x3920 $x395)))
 (=> $x3925 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3938 (= ?x379 _197)))
 (=> (and $x3938 $x378) (and (= (time-to-state (+ time 1)) _198) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3938 (= ?x379 _197)))
 (let (($x3943 (and $x3938 $x395)))
 (=> $x3943 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3956 (= ?x379 _198)))
 (=> (and $x3956 $x378) (and (= (time-to-state (+ time 1)) _199) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3956 (= ?x379 _198)))
 (let (($x3961 (and $x3956 $x395)))
 (=> $x3961 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3974 (= ?x379 _199)))
 (=> (and $x3974 $x378) (and (= (time-to-state (+ time 1)) _200) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3974 (= ?x379 _199)))
 (let (($x3979 (and $x3974 $x395)))
 (=> $x3979 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x3992 (= ?x379 _200)))
 (=> (and $x3992 $x378) (and (= (time-to-state (+ time 1)) _201) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x3992 (= ?x379 _200)))
 (let (($x3997 (and $x3992 $x395)))
 (=> $x3997 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4010 (= ?x379 _201)))
 (=> (and $x4010 $x378) (and (= (time-to-state (+ time 1)) _202) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4010 (= ?x379 _201)))
 (let (($x4015 (and $x4010 $x395)))
 (=> $x4015 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4028 (= ?x379 _202)))
 (=> (and $x4028 $x378) (and (= (time-to-state (+ time 1)) _203) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4028 (= ?x379 _202)))
 (let (($x4033 (and $x4028 $x395)))
 (=> $x4033 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4046 (= ?x379 _203)))
 (=> (and $x4046 $x378) (and (= (time-to-state (+ time 1)) _204) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4046 (= ?x379 _203)))
 (let (($x4051 (and $x4046 $x395)))
 (=> $x4051 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4064 (= ?x379 _204)))
 (=> (and $x4064 $x378) (and (= (time-to-state (+ time 1)) _205) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4064 (= ?x379 _204)))
 (let (($x4069 (and $x4064 $x395)))
 (=> $x4069 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4082 (= ?x379 _205)))
 (=> (and $x4082 $x378) (and (= (time-to-state (+ time 1)) _206) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4082 (= ?x379 _205)))
 (let (($x4087 (and $x4082 $x395)))
 (=> $x4087 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4100 (= ?x379 _206)))
 (=> (and $x4100 $x378) (and (= (time-to-state (+ time 1)) _207) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4100 (= ?x379 _206)))
 (let (($x4105 (and $x4100 $x395)))
 (=> $x4105 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4118 (= ?x379 _207)))
 (=> (and $x4118 $x378) (and (= (time-to-state (+ time 1)) _208) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4118 (= ?x379 _207)))
 (let (($x4123 (and $x4118 $x395)))
 (=> $x4123 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4136 (= ?x379 _208)))
 (=> (and $x4136 $x378) (and (= (time-to-state (+ time 1)) _209) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4136 (= ?x379 _208)))
 (let (($x4141 (and $x4136 $x395)))
 (=> $x4141 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4154 (= ?x379 _209)))
 (=> (and $x4154 $x378) (and (= (time-to-state (+ time 1)) _210) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4154 (= ?x379 _209)))
 (let (($x4159 (and $x4154 $x395)))
 (=> $x4159 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4172 (= ?x379 _210)))
 (=> (and $x4172 $x378) (and (= (time-to-state (+ time 1)) _211) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4172 (= ?x379 _210)))
 (let (($x4177 (and $x4172 $x395)))
 (=> $x4177 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4190 (= ?x379 _211)))
 (=> (and $x4190 $x378) (and (= (time-to-state (+ time 1)) _212) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4190 (= ?x379 _211)))
 (let (($x4195 (and $x4190 $x395)))
 (=> $x4195 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4208 (= ?x379 _212)))
 (=> (and $x4208 $x378) (and (= (time-to-state (+ time 1)) _213) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4208 (= ?x379 _212)))
 (let (($x4213 (and $x4208 $x395)))
 (=> $x4213 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4226 (= ?x379 _213)))
 (=> (and $x4226 $x378) (and (= (time-to-state (+ time 1)) _214) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4226 (= ?x379 _213)))
 (let (($x4231 (and $x4226 $x395)))
 (=> $x4231 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4244 (= ?x379 _214)))
 (=> (and $x4244 $x378) (and (= (time-to-state (+ time 1)) _215) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4244 (= ?x379 _214)))
 (let (($x4249 (and $x4244 $x395)))
 (=> $x4249 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4262 (= ?x379 _215)))
 (=> (and $x4262 $x378) (and (= (time-to-state (+ time 1)) _216) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4262 (= ?x379 _215)))
 (let (($x4267 (and $x4262 $x395)))
 (=> $x4267 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4280 (= ?x379 _216)))
 (=> (and $x4280 $x378) (and (= (time-to-state (+ time 1)) _217) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4280 (= ?x379 _216)))
 (let (($x4285 (and $x4280 $x395)))
 (=> $x4285 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4298 (= ?x379 _217)))
 (=> (and $x4298 $x378) (and (= (time-to-state (+ time 1)) _218) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4298 (= ?x379 _217)))
 (let (($x4303 (and $x4298 $x395)))
 (=> $x4303 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4316 (= ?x379 _218)))
 (=> (and $x4316 $x378) (and (= (time-to-state (+ time 1)) _219) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4316 (= ?x379 _218)))
 (let (($x4321 (and $x4316 $x395)))
 (=> $x4321 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4334 (= ?x379 _219)))
 (=> (and $x4334 $x378) (and (= (time-to-state (+ time 1)) _220) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4334 (= ?x379 _219)))
 (let (($x4339 (and $x4334 $x395)))
 (=> $x4339 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4352 (= ?x379 _220)))
 (=> (and $x4352 $x378) (and (= (time-to-state (+ time 1)) _221) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4352 (= ?x379 _220)))
 (let (($x4357 (and $x4352 $x395)))
 (=> $x4357 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4370 (= ?x379 _221)))
 (=> (and $x4370 $x378) (and (= (time-to-state (+ time 1)) _222) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4370 (= ?x379 _221)))
 (let (($x4375 (and $x4370 $x395)))
 (=> $x4375 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4388 (= ?x379 _222)))
 (=> (and $x4388 $x378) (and (= (time-to-state (+ time 1)) _223) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4388 (= ?x379 _222)))
 (let (($x4393 (and $x4388 $x395)))
 (=> $x4393 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4406 (= ?x379 _223)))
 (=> (and $x4406 $x378) (and (= (time-to-state (+ time 1)) _224) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4406 (= ?x379 _223)))
 (let (($x4411 (and $x4406 $x395)))
 (=> $x4411 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4424 (= ?x379 _224)))
 (=> (and $x4424 $x378) (and (= (time-to-state (+ time 1)) _225) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4424 (= ?x379 _224)))
 (let (($x4429 (and $x4424 $x395)))
 (=> $x4429 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4442 (= ?x379 _225)))
 (=> (and $x4442 $x378) (and (= (time-to-state (+ time 1)) _226) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4442 (= ?x379 _225)))
 (let (($x4447 (and $x4442 $x395)))
 (=> $x4447 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4460 (= ?x379 _226)))
 (=> (and $x4460 $x378) (and (= (time-to-state (+ time 1)) _227) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4460 (= ?x379 _226)))
 (let (($x4465 (and $x4460 $x395)))
 (=> $x4465 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4478 (= ?x379 _227)))
 (=> (and $x4478 $x378) (and (= (time-to-state (+ time 1)) _228) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4478 (= ?x379 _227)))
 (let (($x4483 (and $x4478 $x395)))
 (=> $x4483 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4496 (= ?x379 _228)))
 (=> (and $x4496 $x378) (and (= (time-to-state (+ time 1)) _229) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4496 (= ?x379 _228)))
 (let (($x4501 (and $x4496 $x395)))
 (=> $x4501 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4514 (= ?x379 _229)))
 (=> (and $x4514 $x378) (and (= (time-to-state (+ time 1)) _230) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4514 (= ?x379 _229)))
 (let (($x4519 (and $x4514 $x395)))
 (=> $x4519 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4532 (= ?x379 _230)))
 (=> (and $x4532 $x378) (and (= (time-to-state (+ time 1)) _231) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4532 (= ?x379 _230)))
 (let (($x4537 (and $x4532 $x395)))
 (=> $x4537 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4550 (= ?x379 _231)))
 (=> (and $x4550 $x378) (and (= (time-to-state (+ time 1)) _232) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4550 (= ?x379 _231)))
 (let (($x4555 (and $x4550 $x395)))
 (=> $x4555 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4568 (= ?x379 _232)))
 (=> (and $x4568 $x378) (and (= (time-to-state (+ time 1)) _233) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4568 (= ?x379 _232)))
 (let (($x4573 (and $x4568 $x395)))
 (=> $x4573 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4586 (= ?x379 _233)))
 (=> (and $x4586 $x378) (and (= (time-to-state (+ time 1)) _234) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4586 (= ?x379 _233)))
 (let (($x4591 (and $x4586 $x395)))
 (=> $x4591 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4604 (= ?x379 _234)))
 (=> (and $x4604 $x378) (and (= (time-to-state (+ time 1)) _235) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4604 (= ?x379 _234)))
 (let (($x4609 (and $x4604 $x395)))
 (=> $x4609 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4622 (= ?x379 _235)))
 (=> (and $x4622 $x378) (and (= (time-to-state (+ time 1)) _236) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4622 (= ?x379 _235)))
 (let (($x4627 (and $x4622 $x395)))
 (=> $x4627 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4640 (= ?x379 _236)))
 (=> (and $x4640 $x378) (and (= (time-to-state (+ time 1)) _237) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4640 (= ?x379 _236)))
 (let (($x4645 (and $x4640 $x395)))
 (=> $x4645 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4658 (= ?x379 _237)))
 (=> (and $x4658 $x378) (and (= (time-to-state (+ time 1)) _238) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4658 (= ?x379 _237)))
 (let (($x4663 (and $x4658 $x395)))
 (=> $x4663 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4676 (= ?x379 _238)))
 (=> (and $x4676 $x378) (and (= (time-to-state (+ time 1)) _239) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4676 (= ?x379 _238)))
 (let (($x4681 (and $x4676 $x395)))
 (=> $x4681 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4694 (= ?x379 _239)))
 (=> (and $x4694 $x378) (and (= (time-to-state (+ time 1)) _240) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4694 (= ?x379 _239)))
 (let (($x4699 (and $x4694 $x395)))
 (=> $x4699 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4712 (= ?x379 _240)))
 (=> (and $x4712 $x378) (and (= (time-to-state (+ time 1)) _241) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4712 (= ?x379 _240)))
 (let (($x4717 (and $x4712 $x395)))
 (=> $x4717 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4730 (= ?x379 _241)))
 (=> (and $x4730 $x378) (and (= (time-to-state (+ time 1)) _242) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4730 (= ?x379 _241)))
 (let (($x4735 (and $x4730 $x395)))
 (=> $x4735 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4748 (= ?x379 _242)))
 (=> (and $x4748 $x378) (and (= (time-to-state (+ time 1)) _243) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4748 (= ?x379 _242)))
 (let (($x4753 (and $x4748 $x395)))
 (=> $x4753 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4766 (= ?x379 _243)))
 (=> (and $x4766 $x378) (and (= (time-to-state (+ time 1)) _244) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4766 (= ?x379 _243)))
 (let (($x4771 (and $x4766 $x395)))
 (=> $x4771 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4784 (= ?x379 _244)))
 (=> (and $x4784 $x378) (and (= (time-to-state (+ time 1)) _245) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4784 (= ?x379 _244)))
 (let (($x4789 (and $x4784 $x395)))
 (=> $x4789 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4802 (= ?x379 _245)))
 (=> (and $x4802 $x378) (and (= (time-to-state (+ time 1)) _246) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4802 (= ?x379 _245)))
 (let (($x4807 (and $x4802 $x395)))
 (=> $x4807 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4820 (= ?x379 _246)))
 (=> (and $x4820 $x378) (and (= (time-to-state (+ time 1)) _247) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4820 (= ?x379 _246)))
 (let (($x4825 (and $x4820 $x395)))
 (=> $x4825 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4838 (= ?x379 _247)))
 (=> (and $x4838 $x378) (and (= (time-to-state (+ time 1)) _248) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4838 (= ?x379 _247)))
 (let (($x4843 (and $x4838 $x395)))
 (=> $x4843 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4856 (= ?x379 _248)))
 (=> (and $x4856 $x378) (and (= (time-to-state (+ time 1)) _249) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4856 (= ?x379 _248)))
 (let (($x4861 (and $x4856 $x395)))
 (=> $x4861 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4874 (= ?x379 _249)))
 (=> (and $x4874 $x378) (and (= (time-to-state (+ time 1)) _250) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4874 (= ?x379 _249)))
 (let (($x4879 (and $x4874 $x395)))
 (=> $x4879 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4892 (= ?x379 _250)))
 (=> (and $x4892 $x378) (and (= (time-to-state (+ time 1)) _251) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4892 (= ?x379 _250)))
 (let (($x4897 (and $x4892 $x395)))
 (=> $x4897 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4910 (= ?x379 _251)))
 (=> (and $x4910 $x378) (and (= (time-to-state (+ time 1)) _252) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4910 (= ?x379 _251)))
 (let (($x4915 (and $x4910 $x395)))
 (=> $x4915 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4928 (= ?x379 _252)))
 (=> (and $x4928 $x378) (and (= (time-to-state (+ time 1)) _253) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4928 (= ?x379 _252)))
 (let (($x4933 (and $x4928 $x395)))
 (=> $x4933 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4946 (= ?x379 _253)))
 (=> (and $x4946 $x378) (and (= (time-to-state (+ time 1)) _254) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4946 (= ?x379 _253)))
 (let (($x4951 (and $x4946 $x395)))
 (=> $x4951 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4964 (= ?x379 _254)))
 (=> (and $x4964 $x378) (and (= (time-to-state (+ time 1)) _255) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4964 (= ?x379 _254)))
 (let (($x4969 (and $x4964 $x395)))
 (=> $x4969 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x4982 (= ?x379 _255)))
 (=> (and $x4982 $x378) (and (= (time-to-state (+ time 1)) _256) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x4982 (= ?x379 _255)))
 (let (($x4987 (and $x4982 $x395)))
 (=> $x4987 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5000 (= ?x379 _256)))
 (=> (and $x5000 $x378) (and (= (time-to-state (+ time 1)) _257) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5000 (= ?x379 _256)))
 (let (($x5005 (and $x5000 $x395)))
 (=> $x5005 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5018 (= ?x379 _257)))
 (=> (and $x5018 $x378) (and (= (time-to-state (+ time 1)) _258) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5018 (= ?x379 _257)))
 (let (($x5023 (and $x5018 $x395)))
 (=> $x5023 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5036 (= ?x379 _258)))
 (=> (and $x5036 $x378) (and (= (time-to-state (+ time 1)) _259) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5036 (= ?x379 _258)))
 (let (($x5041 (and $x5036 $x395)))
 (=> $x5041 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5054 (= ?x379 _259)))
 (=> (and $x5054 $x378) (and (= (time-to-state (+ time 1)) _260) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5054 (= ?x379 _259)))
 (let (($x5059 (and $x5054 $x395)))
 (=> $x5059 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5072 (= ?x379 _260)))
 (=> (and $x5072 $x378) (and (= (time-to-state (+ time 1)) _261) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5072 (= ?x379 _260)))
 (let (($x5077 (and $x5072 $x395)))
 (=> $x5077 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5090 (= ?x379 _261)))
 (=> (and $x5090 $x378) (and (= (time-to-state (+ time 1)) _262) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5090 (= ?x379 _261)))
 (let (($x5095 (and $x5090 $x395)))
 (=> $x5095 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5108 (= ?x379 _262)))
 (=> (and $x5108 $x378) (and (= (time-to-state (+ time 1)) _263) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5108 (= ?x379 _262)))
 (let (($x5113 (and $x5108 $x395)))
 (=> $x5113 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5126 (= ?x379 _263)))
 (=> (and $x5126 $x378) (and (= (time-to-state (+ time 1)) _264) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5126 (= ?x379 _263)))
 (let (($x5131 (and $x5126 $x395)))
 (=> $x5131 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5144 (= ?x379 _264)))
 (=> (and $x5144 $x378) (and (= (time-to-state (+ time 1)) _265) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5144 (= ?x379 _264)))
 (let (($x5149 (and $x5144 $x395)))
 (=> $x5149 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5162 (= ?x379 _265)))
 (=> (and $x5162 $x378) (and (= (time-to-state (+ time 1)) _266) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5162 (= ?x379 _265)))
 (let (($x5167 (and $x5162 $x395)))
 (=> $x5167 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5180 (= ?x379 _266)))
 (=> (and $x5180 $x378) (and (= (time-to-state (+ time 1)) _267) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5180 (= ?x379 _266)))
 (let (($x5185 (and $x5180 $x395)))
 (=> $x5185 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5198 (= ?x379 _267)))
 (=> (and $x5198 $x378) (and (= (time-to-state (+ time 1)) _268) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5198 (= ?x379 _267)))
 (let (($x5203 (and $x5198 $x395)))
 (=> $x5203 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5216 (= ?x379 _268)))
 (=> (and $x5216 $x378) (and (= (time-to-state (+ time 1)) _269) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5216 (= ?x379 _268)))
 (let (($x5221 (and $x5216 $x395)))
 (=> $x5221 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5234 (= ?x379 _269)))
 (=> (and $x5234 $x378) (and (= (time-to-state (+ time 1)) _270) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5234 (= ?x379 _269)))
 (let (($x5239 (and $x5234 $x395)))
 (=> $x5239 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5252 (= ?x379 _270)))
 (=> (and $x5252 $x378) (and (= (time-to-state (+ time 1)) _271) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5252 (= ?x379 _270)))
 (let (($x5257 (and $x5252 $x395)))
 (=> $x5257 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5270 (= ?x379 _271)))
 (=> (and $x5270 $x378) (and (= (time-to-state (+ time 1)) _272) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5270 (= ?x379 _271)))
 (let (($x5275 (and $x5270 $x395)))
 (=> $x5275 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5288 (= ?x379 _272)))
 (=> (and $x5288 $x378) (and (= (time-to-state (+ time 1)) _273) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5288 (= ?x379 _272)))
 (let (($x5293 (and $x5288 $x395)))
 (=> $x5293 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5306 (= ?x379 _273)))
 (=> (and $x5306 $x378) (and (= (time-to-state (+ time 1)) _274) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5306 (= ?x379 _273)))
 (let (($x5311 (and $x5306 $x395)))
 (=> $x5311 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5324 (= ?x379 _274)))
 (=> (and $x5324 $x378) (and (= (time-to-state (+ time 1)) _275) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5324 (= ?x379 _274)))
 (let (($x5329 (and $x5324 $x395)))
 (=> $x5329 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5342 (= ?x379 _275)))
 (=> (and $x5342 $x378) (and (= (time-to-state (+ time 1)) _276) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5342 (= ?x379 _275)))
 (let (($x5347 (and $x5342 $x395)))
 (=> $x5347 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5360 (= ?x379 _276)))
 (=> (and $x5360 $x378) (and (= (time-to-state (+ time 1)) _277) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5360 (= ?x379 _276)))
 (let (($x5365 (and $x5360 $x395)))
 (=> $x5365 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5378 (= ?x379 _277)))
 (=> (and $x5378 $x378) (and (= (time-to-state (+ time 1)) _278) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5378 (= ?x379 _277)))
 (let (($x5383 (and $x5378 $x395)))
 (=> $x5383 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5396 (= ?x379 _278)))
 (=> (and $x5396 $x378) (and (= (time-to-state (+ time 1)) _279) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5396 (= ?x379 _278)))
 (let (($x5401 (and $x5396 $x395)))
 (=> $x5401 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5414 (= ?x379 _279)))
 (=> (and $x5414 $x378) (and (= (time-to-state (+ time 1)) _280) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5414 (= ?x379 _279)))
 (let (($x5419 (and $x5414 $x395)))
 (=> $x5419 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5432 (= ?x379 _280)))
 (=> (and $x5432 $x378) (and (= (time-to-state (+ time 1)) _281) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5432 (= ?x379 _280)))
 (let (($x5437 (and $x5432 $x395)))
 (=> $x5437 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5450 (= ?x379 _281)))
 (=> (and $x5450 $x378) (and (= (time-to-state (+ time 1)) _282) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5450 (= ?x379 _281)))
 (let (($x5455 (and $x5450 $x395)))
 (=> $x5455 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5468 (= ?x379 _282)))
 (=> (and $x5468 $x378) (and (= (time-to-state (+ time 1)) _283) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5468 (= ?x379 _282)))
 (let (($x5473 (and $x5468 $x395)))
 (=> $x5473 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5486 (= ?x379 _283)))
 (=> (and $x5486 $x378) (and (= (time-to-state (+ time 1)) _284) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5486 (= ?x379 _283)))
 (let (($x5491 (and $x5486 $x395)))
 (=> $x5491 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5504 (= ?x379 _284)))
 (=> (and $x5504 $x378) (and (= (time-to-state (+ time 1)) _285) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5504 (= ?x379 _284)))
 (let (($x5509 (and $x5504 $x395)))
 (=> $x5509 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5522 (= ?x379 _285)))
 (=> (and $x5522 $x378) (and (= (time-to-state (+ time 1)) _286) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5522 (= ?x379 _285)))
 (let (($x5527 (and $x5522 $x395)))
 (=> $x5527 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5540 (= ?x379 _286)))
 (=> (and $x5540 $x378) (and (= (time-to-state (+ time 1)) _287) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5540 (= ?x379 _286)))
 (let (($x5545 (and $x5540 $x395)))
 (=> $x5545 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5558 (= ?x379 _287)))
 (=> (and $x5558 $x378) (and (= (time-to-state (+ time 1)) _288) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5558 (= ?x379 _287)))
 (let (($x5563 (and $x5558 $x395)))
 (=> $x5563 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5576 (= ?x379 _288)))
 (=> (and $x5576 $x378) (and (= (time-to-state (+ time 1)) _289) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5576 (= ?x379 _288)))
 (let (($x5581 (and $x5576 $x395)))
 (=> $x5581 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5594 (= ?x379 _289)))
 (=> (and $x5594 $x378) (and (= (time-to-state (+ time 1)) _290) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5594 (= ?x379 _289)))
 (let (($x5599 (and $x5594 $x395)))
 (=> $x5599 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5612 (= ?x379 _290)))
 (=> (and $x5612 $x378) (and (= (time-to-state (+ time 1)) _291) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5612 (= ?x379 _290)))
 (let (($x5617 (and $x5612 $x395)))
 (=> $x5617 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5630 (= ?x379 _291)))
 (=> (and $x5630 $x378) (and (= (time-to-state (+ time 1)) _292) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5630 (= ?x379 _291)))
 (let (($x5635 (and $x5630 $x395)))
 (=> $x5635 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5648 (= ?x379 _292)))
 (=> (and $x5648 $x378) (and (= (time-to-state (+ time 1)) _293) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5648 (= ?x379 _292)))
 (let (($x5653 (and $x5648 $x395)))
 (=> $x5653 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5666 (= ?x379 _293)))
 (=> (and $x5666 $x378) (and (= (time-to-state (+ time 1)) _294) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5666 (= ?x379 _293)))
 (let (($x5671 (and $x5666 $x395)))
 (=> $x5671 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5684 (= ?x379 _294)))
 (=> (and $x5684 $x378) (and (= (time-to-state (+ time 1)) _295) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5684 (= ?x379 _294)))
 (let (($x5689 (and $x5684 $x395)))
 (=> $x5689 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5702 (= ?x379 _295)))
 (=> (and $x5702 $x378) (and (= (time-to-state (+ time 1)) _296) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5702 (= ?x379 _295)))
 (let (($x5707 (and $x5702 $x395)))
 (=> $x5707 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5720 (= ?x379 _296)))
 (=> (and $x5720 $x378) (and (= (time-to-state (+ time 1)) _297) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5720 (= ?x379 _296)))
 (let (($x5725 (and $x5720 $x395)))
 (=> $x5725 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5738 (= ?x379 _297)))
 (=> (and $x5738 $x378) (and (= (time-to-state (+ time 1)) _298) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5738 (= ?x379 _297)))
 (let (($x5743 (and $x5738 $x395)))
 (=> $x5743 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5756 (= ?x379 _298)))
 (=> (and $x5756 $x378) (and (= (time-to-state (+ time 1)) _299) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5756 (= ?x379 _298)))
 (let (($x5761 (and $x5756 $x395)))
 (=> $x5761 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5774 (= ?x379 _299)))
 (=> (and $x5774 $x378) (and (= (time-to-state (+ time 1)) _300) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5774 (= ?x379 _299)))
 (let (($x5779 (and $x5774 $x395)))
 (=> $x5779 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5792 (= ?x379 _300)))
 (=> (and $x5792 $x378) (and (= (time-to-state (+ time 1)) _301) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5792 (= ?x379 _300)))
 (let (($x5797 (and $x5792 $x395)))
 (=> $x5797 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5810 (= ?x379 _301)))
 (=> (and $x5810 $x378) (and (= (time-to-state (+ time 1)) _302) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5810 (= ?x379 _301)))
 (let (($x5815 (and $x5810 $x395)))
 (=> $x5815 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5828 (= ?x379 _302)))
 (=> (and $x5828 $x378) (and (= (time-to-state (+ time 1)) _303) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5828 (= ?x379 _302)))
 (let (($x5833 (and $x5828 $x395)))
 (=> $x5833 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5846 (= ?x379 _303)))
 (=> (and $x5846 $x378) (and (= (time-to-state (+ time 1)) _304) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5846 (= ?x379 _303)))
 (let (($x5851 (and $x5846 $x395)))
 (=> $x5851 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5864 (= ?x379 _304)))
 (=> (and $x5864 $x378) (and (= (time-to-state (+ time 1)) _305) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5864 (= ?x379 _304)))
 (let (($x5869 (and $x5864 $x395)))
 (=> $x5869 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5882 (= ?x379 _305)))
 (=> (and $x5882 $x378) (and (= (time-to-state (+ time 1)) _306) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5882 (= ?x379 _305)))
 (let (($x5887 (and $x5882 $x395)))
 (=> $x5887 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5900 (= ?x379 _306)))
 (=> (and $x5900 $x378) (and (= (time-to-state (+ time 1)) _307) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5900 (= ?x379 _306)))
 (let (($x5905 (and $x5900 $x395)))
 (=> $x5905 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5918 (= ?x379 _307)))
 (=> (and $x5918 $x378) (and (= (time-to-state (+ time 1)) _308) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5918 (= ?x379 _307)))
 (let (($x5923 (and $x5918 $x395)))
 (=> $x5923 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5936 (= ?x379 _308)))
 (=> (and $x5936 $x378) (and (= (time-to-state (+ time 1)) _309) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5936 (= ?x379 _308)))
 (let (($x5941 (and $x5936 $x395)))
 (=> $x5941 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5954 (= ?x379 _309)))
 (=> (and $x5954 $x378) (and (= (time-to-state (+ time 1)) _310) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5954 (= ?x379 _309)))
 (let (($x5959 (and $x5954 $x395)))
 (=> $x5959 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5972 (= ?x379 _310)))
 (=> (and $x5972 $x378) (and (= (time-to-state (+ time 1)) _311) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5972 (= ?x379 _310)))
 (let (($x5977 (and $x5972 $x395)))
 (=> $x5977 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x5990 (= ?x379 _311)))
 (=> (and $x5990 $x378) (and (= (time-to-state (+ time 1)) _312) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x5990 (= ?x379 _311)))
 (let (($x5995 (and $x5990 $x395)))
 (=> $x5995 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6008 (= ?x379 _312)))
 (=> (and $x6008 $x378) (and (= (time-to-state (+ time 1)) _313) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6008 (= ?x379 _312)))
 (let (($x6013 (and $x6008 $x395)))
 (=> $x6013 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6026 (= ?x379 _313)))
 (=> (and $x6026 $x378) (and (= (time-to-state (+ time 1)) _314) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6026 (= ?x379 _313)))
 (let (($x6031 (and $x6026 $x395)))
 (=> $x6031 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6044 (= ?x379 _314)))
 (=> (and $x6044 $x378) (and (= (time-to-state (+ time 1)) _315) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6044 (= ?x379 _314)))
 (let (($x6049 (and $x6044 $x395)))
 (=> $x6049 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6062 (= ?x379 _315)))
 (=> (and $x6062 $x378) (and (= (time-to-state (+ time 1)) _316) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6062 (= ?x379 _315)))
 (let (($x6067 (and $x6062 $x395)))
 (=> $x6067 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6080 (= ?x379 _316)))
 (=> (and $x6080 $x378) (and (= (time-to-state (+ time 1)) _317) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6080 (= ?x379 _316)))
 (let (($x6085 (and $x6080 $x395)))
 (=> $x6085 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6098 (= ?x379 _317)))
 (=> (and $x6098 $x378) (and (= (time-to-state (+ time 1)) _318) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6098 (= ?x379 _317)))
 (let (($x6103 (and $x6098 $x395)))
 (=> $x6103 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6116 (= ?x379 _318)))
 (=> (and $x6116 $x378) (and (= (time-to-state (+ time 1)) _319) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6116 (= ?x379 _318)))
 (let (($x6121 (and $x6116 $x395)))
 (=> $x6121 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let (($x373 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (let ((?x377 (input-arg0 time)))
 (let (($x378 (and (distinct ?x377 0) true)))
 (let ((?x379 (time-to-state time)))
 (let (($x6134 (= ?x379 _319)))
 (=> (and $x6134 $x378) (and (= (time-to-state (+ time 1)) _320) $x373))))))))
 )
(assert
 (forall ((time Int) )(let ((?x371 (+ time 1)))
 (let ((?x374 (time-to-state ?x371)))
 (let (($x394 (= ?x374 ERR)))
 (let ((?x377 (input-arg0 time)))
 (let (($x395 (= ?x377 1)))
 (let ((?x379 (time-to-state time)))
 (let (($x6134 (= ?x379 _319)))
 (let (($x6139 (and $x6134 $x395)))
 (=> $x6139 $x394))))))))))
 )
(assert
 (forall ((time Int) )(let ((?x379 (time-to-state time)))
 (let (($x6142 (= ?x379 ERR)))
 (and $x6142 (and (distinct (input-arg0 time) 1) true)))))
 )
(assert
 (and (distinct _0 _1 ERR _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320) true))
(check-sat)
