; 
(set-info :status unknown)
(declare-sort STATE 0)
 (declare-fun _0 () STATE)
(declare-fun time-to-state (Int) STATE)
(declare-fun var0_0 (Int) Int)
(declare-fun _1 () STATE)
(declare-fun _2 () STATE)
(declare-fun _3 () STATE)
(declare-fun _4 () STATE)
(declare-fun _5 () STATE)
(declare-fun _6 () STATE)
(declare-fun _7 () STATE)
(declare-fun _8 () STATE)
(declare-fun _9 () STATE)
(declare-fun _10 () STATE)
(declare-fun _11 () STATE)
(declare-fun _12 () STATE)
(declare-fun _13 () STATE)
(declare-fun _14 () STATE)
(declare-fun _15 () STATE)
(declare-fun _16 () STATE)
(declare-fun _17 () STATE)
(declare-fun _18 () STATE)
(declare-fun _19 () STATE)
(declare-fun _20 () STATE)
(declare-fun _21 () STATE)
(declare-fun _22 () STATE)
(declare-fun _23 () STATE)
(declare-fun _24 () STATE)
(declare-fun _25 () STATE)
(declare-fun _26 () STATE)
(declare-fun _27 () STATE)
(declare-fun _28 () STATE)
(declare-fun _29 () STATE)
(declare-fun _30 () STATE)
(declare-fun _31 () STATE)
(declare-fun _32 () STATE)
(declare-fun _33 () STATE)
(declare-fun _34 () STATE)
(declare-fun _35 () STATE)
(declare-fun _36 () STATE)
(declare-fun _37 () STATE)
(declare-fun _38 () STATE)
(declare-fun _39 () STATE)
(declare-fun _40 () STATE)
(declare-fun _41 () STATE)
(declare-fun _42 () STATE)
(declare-fun _43 () STATE)
(declare-fun _44 () STATE)
(declare-fun _45 () STATE)
(declare-fun _46 () STATE)
(declare-fun _47 () STATE)
(declare-fun _48 () STATE)
(declare-fun _49 () STATE)
(declare-fun _50 () STATE)
(declare-fun _51 () STATE)
(declare-fun _52 () STATE)
(declare-fun _53 () STATE)
(declare-fun _54 () STATE)
(declare-fun _55 () STATE)
(declare-fun _56 () STATE)
(declare-fun _57 () STATE)
(declare-fun _58 () STATE)
(declare-fun _59 () STATE)
(declare-fun _60 () STATE)
(declare-fun _61 () STATE)
(declare-fun _62 () STATE)
(declare-fun _63 () STATE)
(declare-fun _64 () STATE)
(declare-fun _65 () STATE)
(declare-fun _66 () STATE)
(declare-fun _67 () STATE)
(declare-fun _68 () STATE)
(declare-fun _69 () STATE)
(declare-fun _70 () STATE)
(declare-fun _71 () STATE)
(declare-fun _72 () STATE)
(declare-fun _73 () STATE)
(declare-fun _74 () STATE)
(declare-fun _75 () STATE)
(declare-fun _76 () STATE)
(declare-fun _77 () STATE)
(declare-fun _78 () STATE)
(declare-fun _79 () STATE)
(declare-fun _80 () STATE)
(declare-fun _81 () STATE)
(declare-fun _82 () STATE)
(declare-fun _83 () STATE)
(declare-fun _84 () STATE)
(declare-fun _85 () STATE)
(declare-fun _86 () STATE)
(declare-fun _87 () STATE)
(declare-fun _88 () STATE)
(declare-fun _89 () STATE)
(declare-fun _90 () STATE)
(declare-fun _91 () STATE)
(declare-fun _92 () STATE)
(declare-fun _93 () STATE)
(declare-fun _94 () STATE)
(declare-fun _95 () STATE)
(declare-fun _96 () STATE)
(declare-fun _97 () STATE)
(declare-fun _98 () STATE)
(declare-fun _99 () STATE)
(declare-fun _100 () STATE)
(declare-fun _101 () STATE)
(declare-fun _102 () STATE)
(declare-fun _103 () STATE)
(declare-fun _104 () STATE)
(declare-fun _105 () STATE)
(declare-fun _106 () STATE)
(declare-fun _107 () STATE)
(declare-fun _108 () STATE)
(declare-fun _109 () STATE)
(declare-fun _110 () STATE)
(declare-fun _111 () STATE)
(declare-fun _112 () STATE)
(declare-fun _113 () STATE)
(declare-fun _114 () STATE)
(declare-fun _115 () STATE)
(declare-fun _116 () STATE)
(declare-fun _117 () STATE)
(declare-fun _118 () STATE)
(declare-fun _119 () STATE)
(declare-fun _120 () STATE)
(declare-fun _121 () STATE)
(declare-fun _122 () STATE)
(declare-fun _123 () STATE)
(declare-fun _124 () STATE)
(declare-fun _125 () STATE)
(declare-fun _126 () STATE)
(declare-fun _127 () STATE)
(declare-fun _128 () STATE)
(declare-fun _129 () STATE)
(declare-fun _130 () STATE)
(declare-fun _131 () STATE)
(declare-fun _132 () STATE)
(declare-fun _133 () STATE)
(declare-fun _134 () STATE)
(declare-fun _135 () STATE)
(declare-fun _136 () STATE)
(declare-fun _137 () STATE)
(declare-fun _138 () STATE)
(declare-fun _139 () STATE)
(declare-fun _140 () STATE)
(declare-fun _141 () STATE)
(declare-fun _142 () STATE)
(declare-fun _143 () STATE)
(declare-fun _144 () STATE)
(declare-fun _145 () STATE)
(declare-fun _146 () STATE)
(declare-fun _147 () STATE)
(declare-fun _148 () STATE)
(declare-fun _149 () STATE)
(declare-fun _150 () STATE)
(declare-fun _151 () STATE)
(declare-fun _152 () STATE)
(declare-fun _153 () STATE)
(declare-fun _154 () STATE)
(declare-fun _155 () STATE)
(declare-fun _156 () STATE)
(declare-fun _157 () STATE)
(declare-fun _158 () STATE)
(declare-fun _159 () STATE)
(declare-fun _160 () STATE)
(declare-fun _161 () STATE)
(declare-fun _162 () STATE)
(declare-fun _163 () STATE)
(declare-fun _164 () STATE)
(declare-fun _165 () STATE)
(declare-fun _166 () STATE)
(declare-fun _167 () STATE)
(declare-fun _168 () STATE)
(declare-fun _169 () STATE)
(declare-fun _170 () STATE)
(declare-fun _171 () STATE)
(declare-fun _172 () STATE)
(declare-fun _173 () STATE)
(declare-fun _174 () STATE)
(declare-fun _175 () STATE)
(declare-fun _176 () STATE)
(declare-fun _177 () STATE)
(declare-fun _178 () STATE)
(declare-fun _179 () STATE)
(declare-fun _180 () STATE)
(declare-fun _181 () STATE)
(declare-fun _182 () STATE)
(declare-fun _183 () STATE)
(declare-fun _184 () STATE)
(declare-fun _185 () STATE)
(declare-fun _186 () STATE)
(declare-fun _187 () STATE)
(declare-fun _188 () STATE)
(declare-fun _189 () STATE)
(declare-fun _190 () STATE)
(declare-fun _191 () STATE)
(declare-fun _192 () STATE)
(declare-fun _193 () STATE)
(declare-fun _194 () STATE)
(declare-fun _195 () STATE)
(declare-fun _196 () STATE)
(declare-fun _197 () STATE)
(declare-fun _198 () STATE)
(declare-fun _199 () STATE)
(declare-fun _200 () STATE)
(declare-fun _201 () STATE)
(declare-fun _202 () STATE)
(declare-fun _203 () STATE)
(declare-fun _204 () STATE)
(declare-fun _205 () STATE)
(declare-fun _206 () STATE)
(declare-fun _207 () STATE)
(declare-fun _208 () STATE)
(declare-fun _209 () STATE)
(declare-fun _210 () STATE)
(declare-fun _211 () STATE)
(declare-fun _212 () STATE)
(declare-fun _213 () STATE)
(declare-fun _214 () STATE)
(declare-fun _215 () STATE)
(declare-fun _216 () STATE)
(declare-fun _217 () STATE)
(declare-fun _218 () STATE)
(declare-fun _219 () STATE)
(declare-fun _220 () STATE)
(declare-fun _221 () STATE)
(declare-fun _222 () STATE)
(declare-fun _223 () STATE)
(declare-fun _224 () STATE)
(declare-fun _225 () STATE)
(declare-fun _226 () STATE)
(declare-fun _227 () STATE)
(declare-fun _228 () STATE)
(declare-fun _229 () STATE)
(declare-fun _230 () STATE)
(declare-fun _231 () STATE)
(declare-fun _232 () STATE)
(declare-fun _233 () STATE)
(declare-fun _234 () STATE)
(declare-fun _235 () STATE)
(declare-fun _236 () STATE)
(declare-fun _237 () STATE)
(declare-fun _238 () STATE)
(declare-fun _239 () STATE)
(declare-fun _240 () STATE)
(declare-fun _241 () STATE)
(declare-fun _242 () STATE)
(declare-fun _243 () STATE)
(declare-fun _244 () STATE)
(declare-fun _245 () STATE)
(declare-fun _246 () STATE)
(declare-fun _247 () STATE)
(declare-fun _248 () STATE)
(declare-fun _249 () STATE)
(declare-fun _250 () STATE)
(declare-fun _251 () STATE)
(declare-fun _252 () STATE)
(declare-fun _253 () STATE)
(declare-fun _254 () STATE)
(declare-fun _255 () STATE)
(declare-fun _256 () STATE)
(declare-fun _257 () STATE)
(declare-fun _258 () STATE)
(declare-fun _259 () STATE)
(declare-fun _260 () STATE)
(declare-fun _261 () STATE)
(declare-fun _262 () STATE)
(declare-fun _263 () STATE)
(declare-fun _264 () STATE)
(declare-fun _265 () STATE)
(declare-fun _266 () STATE)
(declare-fun _267 () STATE)
(declare-fun _268 () STATE)
(declare-fun _269 () STATE)
(declare-fun _270 () STATE)
(declare-fun _271 () STATE)
(declare-fun _272 () STATE)
(declare-fun _273 () STATE)
(declare-fun _274 () STATE)
(declare-fun _275 () STATE)
(declare-fun _276 () STATE)
(declare-fun _277 () STATE)
(declare-fun _278 () STATE)
(declare-fun _279 () STATE)
(declare-fun _280 () STATE)
(declare-fun _281 () STATE)
(declare-fun _282 () STATE)
(declare-fun _283 () STATE)
(declare-fun _284 () STATE)
(declare-fun _285 () STATE)
(declare-fun _286 () STATE)
(declare-fun _287 () STATE)
(declare-fun _288 () STATE)
(declare-fun _289 () STATE)
(declare-fun _290 () STATE)
(declare-fun _291 () STATE)
(declare-fun _292 () STATE)
(declare-fun _293 () STATE)
(declare-fun _294 () STATE)
(declare-fun _295 () STATE)
(declare-fun _296 () STATE)
(declare-fun _297 () STATE)
(declare-fun _298 () STATE)
(declare-fun _299 () STATE)
(declare-fun _300 () STATE)
(declare-fun _301 () STATE)
(declare-fun _302 () STATE)
(declare-fun _303 () STATE)
(declare-fun _304 () STATE)
(declare-fun _305 () STATE)
(declare-fun _306 () STATE)
(declare-fun _307 () STATE)
(declare-fun _308 () STATE)
(declare-fun _309 () STATE)
(declare-fun _310 () STATE)
(declare-fun _311 () STATE)
(declare-fun _312 () STATE)
(declare-fun _313 () STATE)
(declare-fun _314 () STATE)
(declare-fun _315 () STATE)
(declare-fun _316 () STATE)
(declare-fun _317 () STATE)
(declare-fun _318 () STATE)
(declare-fun _319 () STATE)
(declare-fun _320 () STATE)
(declare-fun _321 () STATE)
(declare-fun _322 () STATE)
(declare-fun _323 () STATE)
(declare-fun _324 () STATE)
(declare-fun _325 () STATE)
(declare-fun _326 () STATE)
(declare-fun _327 () STATE)
(declare-fun _328 () STATE)
(declare-fun _329 () STATE)
(declare-fun _330 () STATE)
(declare-fun _331 () STATE)
(declare-fun _332 () STATE)
(declare-fun _333 () STATE)
(declare-fun _334 () STATE)
(declare-fun _335 () STATE)
(declare-fun _336 () STATE)
(declare-fun _337 () STATE)
(declare-fun _338 () STATE)
(declare-fun _339 () STATE)
(declare-fun _340 () STATE)
(declare-fun _341 () STATE)
(declare-fun _342 () STATE)
(declare-fun _343 () STATE)
(declare-fun _344 () STATE)
(declare-fun _345 () STATE)
(declare-fun _346 () STATE)
(declare-fun _347 () STATE)
(declare-fun _348 () STATE)
(declare-fun _349 () STATE)
(declare-fun _350 () STATE)
(declare-fun _351 () STATE)
(declare-fun _352 () STATE)
(declare-fun _353 () STATE)
(declare-fun _354 () STATE)
(declare-fun _355 () STATE)
(assert
 (let ((?x363 (time-to-state 0)))
 (= ?x363 _0)))
(assert
 (let ((?x383 (var0_0 0)))
 (= ?x383 0)))
(assert
 (let ((?x383 (var0_0 0)))
 (= ?x383 0)))
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x407 (= ?x406 _0)))
 (=> $x407 (and (= (time-to-state (+ time 1)) _1) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x424 (= ?x406 _1)))
 (=> $x424 (and (= (time-to-state (+ time 1)) _2) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x434 (= ?x406 _2)))
 (=> $x434 (and (= (time-to-state (+ time 1)) _3) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x444 (= ?x406 _3)))
 (=> $x444 (and (= (time-to-state (+ time 1)) _4) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x454 (= ?x406 _4)))
 (=> $x454 (and (= (time-to-state (+ time 1)) _5) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x464 (= ?x406 _5)))
 (=> $x464 (and (= (time-to-state (+ time 1)) _6) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x474 (= ?x406 _6)))
 (=> $x474 (and (= (time-to-state (+ time 1)) _7) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x484 (= ?x406 _7)))
 (=> $x484 (and (= (time-to-state (+ time 1)) _8) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x494 (= ?x406 _8)))
 (=> $x494 (and (= (time-to-state (+ time 1)) _9) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x504 (= ?x406 _9)))
 (=> $x504 (and (= (time-to-state (+ time 1)) _10) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x514 (= ?x406 _10)))
 (=> $x514 (and (= (time-to-state (+ time 1)) _11) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x524 (= ?x406 _11)))
 (=> $x524 (and (= (time-to-state (+ time 1)) _12) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x534 (= ?x406 _12)))
 (=> $x534 (and (= (time-to-state (+ time 1)) _13) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x544 (= ?x406 _13)))
 (=> $x544 (and (= (time-to-state (+ time 1)) _14) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x554 (= ?x406 _14)))
 (=> $x554 (and (= (time-to-state (+ time 1)) _15) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x564 (= ?x406 _15)))
 (=> $x564 (and (= (time-to-state (+ time 1)) _16) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x574 (= ?x406 _16)))
 (=> $x574 (and (= (time-to-state (+ time 1)) _17) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x584 (= ?x406 _17)))
 (=> $x584 (and (= (time-to-state (+ time 1)) _18) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x594 (= ?x406 _18)))
 (=> $x594 (and (= (time-to-state (+ time 1)) _19) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x604 (= ?x406 _19)))
 (=> $x604 (and (= (time-to-state (+ time 1)) _20) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x614 (= ?x406 _20)))
 (=> $x614 (and (= (time-to-state (+ time 1)) _21) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x624 (= ?x406 _21)))
 (=> $x624 (and (= (time-to-state (+ time 1)) _22) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x634 (= ?x406 _22)))
 (=> $x634 (and (= (time-to-state (+ time 1)) _23) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x644 (= ?x406 _23)))
 (=> $x644 (and (= (time-to-state (+ time 1)) _24) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x654 (= ?x406 _24)))
 (=> $x654 (and (= (time-to-state (+ time 1)) _25) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x664 (= ?x406 _25)))
 (=> $x664 (and (= (time-to-state (+ time 1)) _26) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x674 (= ?x406 _26)))
 (=> $x674 (and (= (time-to-state (+ time 1)) _27) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x684 (= ?x406 _27)))
 (=> $x684 (and (= (time-to-state (+ time 1)) _28) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x694 (= ?x406 _28)))
 (=> $x694 (and (= (time-to-state (+ time 1)) _29) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x704 (= ?x406 _29)))
 (=> $x704 (and (= (time-to-state (+ time 1)) _30) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x714 (= ?x406 _30)))
 (=> $x714 (and (= (time-to-state (+ time 1)) _31) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x724 (= ?x406 _31)))
 (=> $x724 (and (= (time-to-state (+ time 1)) _32) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x734 (= ?x406 _32)))
 (=> $x734 (and (= (time-to-state (+ time 1)) _33) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x744 (= ?x406 _33)))
 (=> $x744 (and (= (time-to-state (+ time 1)) _34) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x754 (= ?x406 _34)))
 (=> $x754 (and (= (time-to-state (+ time 1)) _35) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x764 (= ?x406 _35)))
 (=> $x764 (and (= (time-to-state (+ time 1)) _36) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x774 (= ?x406 _36)))
 (=> $x774 (and (= (time-to-state (+ time 1)) _37) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x784 (= ?x406 _37)))
 (=> $x784 (and (= (time-to-state (+ time 1)) _38) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x794 (= ?x406 _38)))
 (=> $x794 (and (= (time-to-state (+ time 1)) _39) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x804 (= ?x406 _39)))
 (=> $x804 (and (= (time-to-state (+ time 1)) _40) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x814 (= ?x406 _40)))
 (=> $x814 (and (= (time-to-state (+ time 1)) _41) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x824 (= ?x406 _41)))
 (=> $x824 (and (= (time-to-state (+ time 1)) _42) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x834 (= ?x406 _42)))
 (=> $x834 (and (= (time-to-state (+ time 1)) _43) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x844 (= ?x406 _43)))
 (=> $x844 (and (= (time-to-state (+ time 1)) _44) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x854 (= ?x406 _44)))
 (=> $x854 (and (= (time-to-state (+ time 1)) _45) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x864 (= ?x406 _45)))
 (=> $x864 (and (= (time-to-state (+ time 1)) _46) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x874 (= ?x406 _46)))
 (=> $x874 (and (= (time-to-state (+ time 1)) _47) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x884 (= ?x406 _47)))
 (=> $x884 (and (= (time-to-state (+ time 1)) _48) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x894 (= ?x406 _48)))
 (=> $x894 (and (= (time-to-state (+ time 1)) _49) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x904 (= ?x406 _49)))
 (=> $x904 (and (= (time-to-state (+ time 1)) _50) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x914 (= ?x406 _50)))
 (=> $x914 (and (= (time-to-state (+ time 1)) _51) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x924 (= ?x406 _51)))
 (=> $x924 (and (= (time-to-state (+ time 1)) _52) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x934 (= ?x406 _52)))
 (=> $x934 (and (= (time-to-state (+ time 1)) _53) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x944 (= ?x406 _53)))
 (=> $x944 (and (= (time-to-state (+ time 1)) _54) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x954 (= ?x406 _54)))
 (=> $x954 (and (= (time-to-state (+ time 1)) _55) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x964 (= ?x406 _55)))
 (=> $x964 (and (= (time-to-state (+ time 1)) _56) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x974 (= ?x406 _56)))
 (=> $x974 (and (= (time-to-state (+ time 1)) _57) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x984 (= ?x406 _57)))
 (=> $x984 (and (= (time-to-state (+ time 1)) _58) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x994 (= ?x406 _58)))
 (=> $x994 (and (= (time-to-state (+ time 1)) _59) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1004 (= ?x406 _59)))
 (=> $x1004 (and (= (time-to-state (+ time 1)) _60) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1014 (= ?x406 _60)))
 (=> $x1014 (and (= (time-to-state (+ time 1)) _61) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1024 (= ?x406 _61)))
 (=> $x1024 (and (= (time-to-state (+ time 1)) _62) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1034 (= ?x406 _62)))
 (=> $x1034 (and (= (time-to-state (+ time 1)) _63) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1044 (= ?x406 _63)))
 (=> $x1044 (and (= (time-to-state (+ time 1)) _64) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1054 (= ?x406 _64)))
 (=> $x1054 (and (= (time-to-state (+ time 1)) _65) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1064 (= ?x406 _65)))
 (=> $x1064 (and (= (time-to-state (+ time 1)) _66) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1074 (= ?x406 _66)))
 (=> $x1074 (and (= (time-to-state (+ time 1)) _67) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1084 (= ?x406 _67)))
 (=> $x1084 (and (= (time-to-state (+ time 1)) _68) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1094 (= ?x406 _68)))
 (=> $x1094 (and (= (time-to-state (+ time 1)) _69) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1104 (= ?x406 _69)))
 (=> $x1104 (and (= (time-to-state (+ time 1)) _70) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1114 (= ?x406 _70)))
 (=> $x1114 (and (= (time-to-state (+ time 1)) _71) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1124 (= ?x406 _71)))
 (=> $x1124 (and (= (time-to-state (+ time 1)) _72) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1134 (= ?x406 _72)))
 (=> $x1134 (and (= (time-to-state (+ time 1)) _73) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1144 (= ?x406 _73)))
 (=> $x1144 (and (= (time-to-state (+ time 1)) _74) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1154 (= ?x406 _74)))
 (=> $x1154 (and (= (time-to-state (+ time 1)) _75) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1164 (= ?x406 _75)))
 (=> $x1164 (and (= (time-to-state (+ time 1)) _76) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1174 (= ?x406 _76)))
 (=> $x1174 (and (= (time-to-state (+ time 1)) _77) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1184 (= ?x406 _77)))
 (=> $x1184 (and (= (time-to-state (+ time 1)) _78) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1194 (= ?x406 _78)))
 (=> $x1194 (and (= (time-to-state (+ time 1)) _79) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1204 (= ?x406 _79)))
 (=> $x1204 (and (= (time-to-state (+ time 1)) _80) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1214 (= ?x406 _80)))
 (=> $x1214 (and (= (time-to-state (+ time 1)) _81) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1224 (= ?x406 _81)))
 (=> $x1224 (and (= (time-to-state (+ time 1)) _82) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1234 (= ?x406 _82)))
 (=> $x1234 (and (= (time-to-state (+ time 1)) _83) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1244 (= ?x406 _83)))
 (=> $x1244 (and (= (time-to-state (+ time 1)) _84) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1254 (= ?x406 _84)))
 (=> $x1254 (and (= (time-to-state (+ time 1)) _85) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1264 (= ?x406 _85)))
 (=> $x1264 (and (= (time-to-state (+ time 1)) _86) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1274 (= ?x406 _86)))
 (=> $x1274 (and (= (time-to-state (+ time 1)) _87) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1284 (= ?x406 _87)))
 (=> $x1284 (and (= (time-to-state (+ time 1)) _88) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1294 (= ?x406 _88)))
 (=> $x1294 (and (= (time-to-state (+ time 1)) _89) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1304 (= ?x406 _89)))
 (=> $x1304 (and (= (time-to-state (+ time 1)) _90) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1314 (= ?x406 _90)))
 (=> $x1314 (and (= (time-to-state (+ time 1)) _91) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1324 (= ?x406 _91)))
 (=> $x1324 (and (= (time-to-state (+ time 1)) _92) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1334 (= ?x406 _92)))
 (=> $x1334 (and (= (time-to-state (+ time 1)) _93) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1344 (= ?x406 _93)))
 (=> $x1344 (and (= (time-to-state (+ time 1)) _94) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1354 (= ?x406 _94)))
 (=> $x1354 (and (= (time-to-state (+ time 1)) _95) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1364 (= ?x406 _95)))
 (=> $x1364 (and (= (time-to-state (+ time 1)) _96) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1374 (= ?x406 _96)))
 (=> $x1374 (and (= (time-to-state (+ time 1)) _97) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1384 (= ?x406 _97)))
 (=> $x1384 (and (= (time-to-state (+ time 1)) _98) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1394 (= ?x406 _98)))
 (=> $x1394 (and (= (time-to-state (+ time 1)) _99) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1404 (= ?x406 _99)))
 (=> $x1404 (and (= (time-to-state (+ time 1)) _100) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1414 (= ?x406 _100)))
 (=> $x1414 (and (= (time-to-state (+ time 1)) _101) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1424 (= ?x406 _101)))
 (=> $x1424 (and (= (time-to-state (+ time 1)) _102) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1434 (= ?x406 _102)))
 (=> $x1434 (and (= (time-to-state (+ time 1)) _103) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1444 (= ?x406 _103)))
 (=> $x1444 (and (= (time-to-state (+ time 1)) _104) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1454 (= ?x406 _104)))
 (=> $x1454 (and (= (time-to-state (+ time 1)) _105) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1464 (= ?x406 _105)))
 (=> $x1464 (and (= (time-to-state (+ time 1)) _106) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1474 (= ?x406 _106)))
 (=> $x1474 (and (= (time-to-state (+ time 1)) _107) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1484 (= ?x406 _107)))
 (=> $x1484 (and (= (time-to-state (+ time 1)) _108) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1494 (= ?x406 _108)))
 (=> $x1494 (and (= (time-to-state (+ time 1)) _109) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1504 (= ?x406 _109)))
 (=> $x1504 (and (= (time-to-state (+ time 1)) _110) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1514 (= ?x406 _110)))
 (=> $x1514 (and (= (time-to-state (+ time 1)) _111) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1524 (= ?x406 _111)))
 (=> $x1524 (and (= (time-to-state (+ time 1)) _112) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1534 (= ?x406 _112)))
 (=> $x1534 (and (= (time-to-state (+ time 1)) _113) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1544 (= ?x406 _113)))
 (=> $x1544 (and (= (time-to-state (+ time 1)) _114) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1554 (= ?x406 _114)))
 (=> $x1554 (and (= (time-to-state (+ time 1)) _115) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1564 (= ?x406 _115)))
 (=> $x1564 (and (= (time-to-state (+ time 1)) _116) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1574 (= ?x406 _116)))
 (=> $x1574 (and (= (time-to-state (+ time 1)) _117) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1584 (= ?x406 _117)))
 (=> $x1584 (and (= (time-to-state (+ time 1)) _118) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1594 (= ?x406 _118)))
 (=> $x1594 (and (= (time-to-state (+ time 1)) _119) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1604 (= ?x406 _119)))
 (=> $x1604 (and (= (time-to-state (+ time 1)) _120) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1614 (= ?x406 _120)))
 (=> $x1614 (and (= (time-to-state (+ time 1)) _121) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1624 (= ?x406 _121)))
 (=> $x1624 (and (= (time-to-state (+ time 1)) _122) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1634 (= ?x406 _122)))
 (=> $x1634 (and (= (time-to-state (+ time 1)) _123) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1644 (= ?x406 _123)))
 (=> $x1644 (and (= (time-to-state (+ time 1)) _124) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1654 (= ?x406 _124)))
 (=> $x1654 (and (= (time-to-state (+ time 1)) _125) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1664 (= ?x406 _125)))
 (=> $x1664 (and (= (time-to-state (+ time 1)) _126) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1674 (= ?x406 _126)))
 (=> $x1674 (and (= (time-to-state (+ time 1)) _127) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1684 (= ?x406 _127)))
 (=> $x1684 (and (= (time-to-state (+ time 1)) _128) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1694 (= ?x406 _128)))
 (=> $x1694 (and (= (time-to-state (+ time 1)) _129) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1704 (= ?x406 _129)))
 (=> $x1704 (and (= (time-to-state (+ time 1)) _130) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1714 (= ?x406 _130)))
 (=> $x1714 (and (= (time-to-state (+ time 1)) _131) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1724 (= ?x406 _131)))
 (=> $x1724 (and (= (time-to-state (+ time 1)) _132) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1734 (= ?x406 _132)))
 (=> $x1734 (and (= (time-to-state (+ time 1)) _133) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1744 (= ?x406 _133)))
 (=> $x1744 (and (= (time-to-state (+ time 1)) _134) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1754 (= ?x406 _134)))
 (=> $x1754 (and (= (time-to-state (+ time 1)) _135) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1764 (= ?x406 _135)))
 (=> $x1764 (and (= (time-to-state (+ time 1)) _136) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1774 (= ?x406 _136)))
 (=> $x1774 (and (= (time-to-state (+ time 1)) _137) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1784 (= ?x406 _137)))
 (=> $x1784 (and (= (time-to-state (+ time 1)) _138) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1794 (= ?x406 _138)))
 (=> $x1794 (and (= (time-to-state (+ time 1)) _139) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1804 (= ?x406 _139)))
 (=> $x1804 (and (= (time-to-state (+ time 1)) _140) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1814 (= ?x406 _140)))
 (=> $x1814 (and (= (time-to-state (+ time 1)) _141) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1824 (= ?x406 _141)))
 (=> $x1824 (and (= (time-to-state (+ time 1)) _142) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1834 (= ?x406 _142)))
 (=> $x1834 (and (= (time-to-state (+ time 1)) _143) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1844 (= ?x406 _143)))
 (=> $x1844 (and (= (time-to-state (+ time 1)) _144) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1854 (= ?x406 _144)))
 (=> $x1854 (and (= (time-to-state (+ time 1)) _145) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1864 (= ?x406 _145)))
 (=> $x1864 (and (= (time-to-state (+ time 1)) _146) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1874 (= ?x406 _146)))
 (=> $x1874 (and (= (time-to-state (+ time 1)) _147) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1884 (= ?x406 _147)))
 (=> $x1884 (and (= (time-to-state (+ time 1)) _148) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1894 (= ?x406 _148)))
 (=> $x1894 (and (= (time-to-state (+ time 1)) _149) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1904 (= ?x406 _149)))
 (=> $x1904 (and (= (time-to-state (+ time 1)) _150) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1914 (= ?x406 _150)))
 (=> $x1914 (and (= (time-to-state (+ time 1)) _151) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1924 (= ?x406 _151)))
 (=> $x1924 (and (= (time-to-state (+ time 1)) _152) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1934 (= ?x406 _152)))
 (=> $x1934 (and (= (time-to-state (+ time 1)) _153) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1944 (= ?x406 _153)))
 (=> $x1944 (and (= (time-to-state (+ time 1)) _154) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1954 (= ?x406 _154)))
 (=> $x1954 (and (= (time-to-state (+ time 1)) _155) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1964 (= ?x406 _155)))
 (=> $x1964 (and (= (time-to-state (+ time 1)) _156) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1974 (= ?x406 _156)))
 (=> $x1974 (and (= (time-to-state (+ time 1)) _157) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1984 (= ?x406 _157)))
 (=> $x1984 (and (= (time-to-state (+ time 1)) _158) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x1994 (= ?x406 _158)))
 (=> $x1994 (and (= (time-to-state (+ time 1)) _159) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2004 (= ?x406 _159)))
 (=> $x2004 (and (= (time-to-state (+ time 1)) _160) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2014 (= ?x406 _160)))
 (=> $x2014 (and (= (time-to-state (+ time 1)) _161) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2024 (= ?x406 _161)))
 (=> $x2024 (and (= (time-to-state (+ time 1)) _162) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2034 (= ?x406 _162)))
 (=> $x2034 (and (= (time-to-state (+ time 1)) _163) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2044 (= ?x406 _163)))
 (=> $x2044 (and (= (time-to-state (+ time 1)) _164) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2054 (= ?x406 _164)))
 (=> $x2054 (and (= (time-to-state (+ time 1)) _165) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2064 (= ?x406 _165)))
 (=> $x2064 (and (= (time-to-state (+ time 1)) _166) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2074 (= ?x406 _166)))
 (=> $x2074 (and (= (time-to-state (+ time 1)) _167) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2084 (= ?x406 _167)))
 (=> $x2084 (and (= (time-to-state (+ time 1)) _168) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2094 (= ?x406 _168)))
 (=> $x2094 (and (= (time-to-state (+ time 1)) _169) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2104 (= ?x406 _169)))
 (=> $x2104 (and (= (time-to-state (+ time 1)) _170) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2114 (= ?x406 _170)))
 (=> $x2114 (and (= (time-to-state (+ time 1)) _171) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2124 (= ?x406 _171)))
 (=> $x2124 (and (= (time-to-state (+ time 1)) _172) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2134 (= ?x406 _172)))
 (=> $x2134 (and (= (time-to-state (+ time 1)) _173) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2144 (= ?x406 _173)))
 (=> $x2144 (and (= (time-to-state (+ time 1)) _174) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2154 (= ?x406 _174)))
 (=> $x2154 (and (= (time-to-state (+ time 1)) _175) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2164 (= ?x406 _175)))
 (=> $x2164 (and (= (time-to-state (+ time 1)) _176) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2174 (= ?x406 _176)))
 (=> $x2174 (and (= (time-to-state (+ time 1)) _177) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2184 (= ?x406 _177)))
 (=> $x2184 (and (= (time-to-state (+ time 1)) _178) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2194 (= ?x406 _178)))
 (=> $x2194 (and (= (time-to-state (+ time 1)) _179) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2204 (= ?x406 _179)))
 (=> $x2204 (and (= (time-to-state (+ time 1)) _180) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2214 (= ?x406 _180)))
 (=> $x2214 (and (= (time-to-state (+ time 1)) _181) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2224 (= ?x406 _181)))
 (=> $x2224 (and (= (time-to-state (+ time 1)) _182) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2234 (= ?x406 _182)))
 (=> $x2234 (and (= (time-to-state (+ time 1)) _183) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2244 (= ?x406 _183)))
 (=> $x2244 (and (= (time-to-state (+ time 1)) _184) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2254 (= ?x406 _184)))
 (=> $x2254 (and (= (time-to-state (+ time 1)) _185) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2264 (= ?x406 _185)))
 (=> $x2264 (and (= (time-to-state (+ time 1)) _186) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2274 (= ?x406 _186)))
 (=> $x2274 (and (= (time-to-state (+ time 1)) _187) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2284 (= ?x406 _187)))
 (=> $x2284 (and (= (time-to-state (+ time 1)) _188) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2294 (= ?x406 _188)))
 (=> $x2294 (and (= (time-to-state (+ time 1)) _189) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2304 (= ?x406 _189)))
 (=> $x2304 (and (= (time-to-state (+ time 1)) _190) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2314 (= ?x406 _190)))
 (=> $x2314 (and (= (time-to-state (+ time 1)) _191) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2324 (= ?x406 _191)))
 (=> $x2324 (and (= (time-to-state (+ time 1)) _192) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2334 (= ?x406 _192)))
 (=> $x2334 (and (= (time-to-state (+ time 1)) _193) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2344 (= ?x406 _193)))
 (=> $x2344 (and (= (time-to-state (+ time 1)) _194) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2354 (= ?x406 _194)))
 (=> $x2354 (and (= (time-to-state (+ time 1)) _195) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2364 (= ?x406 _195)))
 (=> $x2364 (and (= (time-to-state (+ time 1)) _196) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2374 (= ?x406 _196)))
 (=> $x2374 (and (= (time-to-state (+ time 1)) _197) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2384 (= ?x406 _197)))
 (=> $x2384 (and (= (time-to-state (+ time 1)) _198) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2394 (= ?x406 _198)))
 (=> $x2394 (and (= (time-to-state (+ time 1)) _199) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2404 (= ?x406 _199)))
 (=> $x2404 (and (= (time-to-state (+ time 1)) _200) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2414 (= ?x406 _200)))
 (=> $x2414 (and (= (time-to-state (+ time 1)) _201) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2424 (= ?x406 _201)))
 (=> $x2424 (and (= (time-to-state (+ time 1)) _202) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2434 (= ?x406 _202)))
 (=> $x2434 (and (= (time-to-state (+ time 1)) _203) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2444 (= ?x406 _203)))
 (=> $x2444 (and (= (time-to-state (+ time 1)) _204) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2454 (= ?x406 _204)))
 (=> $x2454 (and (= (time-to-state (+ time 1)) _205) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2464 (= ?x406 _205)))
 (=> $x2464 (and (= (time-to-state (+ time 1)) _206) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2474 (= ?x406 _206)))
 (=> $x2474 (and (= (time-to-state (+ time 1)) _207) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2484 (= ?x406 _207)))
 (=> $x2484 (and (= (time-to-state (+ time 1)) _208) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2494 (= ?x406 _208)))
 (=> $x2494 (and (= (time-to-state (+ time 1)) _209) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2504 (= ?x406 _209)))
 (=> $x2504 (and (= (time-to-state (+ time 1)) _210) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2514 (= ?x406 _210)))
 (=> $x2514 (and (= (time-to-state (+ time 1)) _211) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2524 (= ?x406 _211)))
 (=> $x2524 (and (= (time-to-state (+ time 1)) _212) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2534 (= ?x406 _212)))
 (=> $x2534 (and (= (time-to-state (+ time 1)) _213) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2544 (= ?x406 _213)))
 (=> $x2544 (and (= (time-to-state (+ time 1)) _214) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2554 (= ?x406 _214)))
 (=> $x2554 (and (= (time-to-state (+ time 1)) _215) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2564 (= ?x406 _215)))
 (=> $x2564 (and (= (time-to-state (+ time 1)) _216) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2574 (= ?x406 _216)))
 (=> $x2574 (and (= (time-to-state (+ time 1)) _217) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2584 (= ?x406 _217)))
 (=> $x2584 (and (= (time-to-state (+ time 1)) _218) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2594 (= ?x406 _218)))
 (=> $x2594 (and (= (time-to-state (+ time 1)) _219) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2604 (= ?x406 _219)))
 (=> $x2604 (and (= (time-to-state (+ time 1)) _220) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2614 (= ?x406 _220)))
 (=> $x2614 (and (= (time-to-state (+ time 1)) _221) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2624 (= ?x406 _221)))
 (=> $x2624 (and (= (time-to-state (+ time 1)) _222) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2634 (= ?x406 _222)))
 (=> $x2634 (and (= (time-to-state (+ time 1)) _223) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2644 (= ?x406 _223)))
 (=> $x2644 (and (= (time-to-state (+ time 1)) _224) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2654 (= ?x406 _224)))
 (=> $x2654 (and (= (time-to-state (+ time 1)) _225) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2664 (= ?x406 _225)))
 (=> $x2664 (and (= (time-to-state (+ time 1)) _226) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2674 (= ?x406 _226)))
 (=> $x2674 (and (= (time-to-state (+ time 1)) _227) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2684 (= ?x406 _227)))
 (=> $x2684 (and (= (time-to-state (+ time 1)) _228) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2694 (= ?x406 _228)))
 (=> $x2694 (and (= (time-to-state (+ time 1)) _229) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2704 (= ?x406 _229)))
 (=> $x2704 (and (= (time-to-state (+ time 1)) _230) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2714 (= ?x406 _230)))
 (=> $x2714 (and (= (time-to-state (+ time 1)) _231) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2724 (= ?x406 _231)))
 (=> $x2724 (and (= (time-to-state (+ time 1)) _232) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2734 (= ?x406 _232)))
 (=> $x2734 (and (= (time-to-state (+ time 1)) _233) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2744 (= ?x406 _233)))
 (=> $x2744 (and (= (time-to-state (+ time 1)) _234) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2754 (= ?x406 _234)))
 (=> $x2754 (and (= (time-to-state (+ time 1)) _235) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2764 (= ?x406 _235)))
 (=> $x2764 (and (= (time-to-state (+ time 1)) _236) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2774 (= ?x406 _236)))
 (=> $x2774 (and (= (time-to-state (+ time 1)) _237) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2784 (= ?x406 _237)))
 (=> $x2784 (and (= (time-to-state (+ time 1)) _238) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2794 (= ?x406 _238)))
 (=> $x2794 (and (= (time-to-state (+ time 1)) _239) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2804 (= ?x406 _239)))
 (=> $x2804 (and (= (time-to-state (+ time 1)) _240) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2814 (= ?x406 _240)))
 (=> $x2814 (and (= (time-to-state (+ time 1)) _241) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2824 (= ?x406 _241)))
 (=> $x2824 (and (= (time-to-state (+ time 1)) _242) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2834 (= ?x406 _242)))
 (=> $x2834 (and (= (time-to-state (+ time 1)) _243) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2844 (= ?x406 _243)))
 (=> $x2844 (and (= (time-to-state (+ time 1)) _244) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2854 (= ?x406 _244)))
 (=> $x2854 (and (= (time-to-state (+ time 1)) _245) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2864 (= ?x406 _245)))
 (=> $x2864 (and (= (time-to-state (+ time 1)) _246) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2874 (= ?x406 _246)))
 (=> $x2874 (and (= (time-to-state (+ time 1)) _247) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2884 (= ?x406 _247)))
 (=> $x2884 (and (= (time-to-state (+ time 1)) _248) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2894 (= ?x406 _248)))
 (=> $x2894 (and (= (time-to-state (+ time 1)) _249) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2904 (= ?x406 _249)))
 (=> $x2904 (and (= (time-to-state (+ time 1)) _250) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2914 (= ?x406 _250)))
 (=> $x2914 (and (= (time-to-state (+ time 1)) _251) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2924 (= ?x406 _251)))
 (=> $x2924 (and (= (time-to-state (+ time 1)) _252) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2934 (= ?x406 _252)))
 (=> $x2934 (and (= (time-to-state (+ time 1)) _253) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2944 (= ?x406 _253)))
 (=> $x2944 (and (= (time-to-state (+ time 1)) _254) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2954 (= ?x406 _254)))
 (=> $x2954 (and (= (time-to-state (+ time 1)) _255) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2964 (= ?x406 _255)))
 (=> $x2964 (and (= (time-to-state (+ time 1)) _256) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2974 (= ?x406 _256)))
 (=> $x2974 (and (= (time-to-state (+ time 1)) _257) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2984 (= ?x406 _257)))
 (=> $x2984 (and (= (time-to-state (+ time 1)) _258) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x2994 (= ?x406 _258)))
 (=> $x2994 (and (= (time-to-state (+ time 1)) _259) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3004 (= ?x406 _259)))
 (=> $x3004 (and (= (time-to-state (+ time 1)) _260) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3014 (= ?x406 _260)))
 (=> $x3014 (and (= (time-to-state (+ time 1)) _261) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3024 (= ?x406 _261)))
 (=> $x3024 (and (= (time-to-state (+ time 1)) _262) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3034 (= ?x406 _262)))
 (=> $x3034 (and (= (time-to-state (+ time 1)) _263) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3044 (= ?x406 _263)))
 (=> $x3044 (and (= (time-to-state (+ time 1)) _264) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3054 (= ?x406 _264)))
 (=> $x3054 (and (= (time-to-state (+ time 1)) _265) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3064 (= ?x406 _265)))
 (=> $x3064 (and (= (time-to-state (+ time 1)) _266) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3074 (= ?x406 _266)))
 (=> $x3074 (and (= (time-to-state (+ time 1)) _267) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3084 (= ?x406 _267)))
 (=> $x3084 (and (= (time-to-state (+ time 1)) _268) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3094 (= ?x406 _268)))
 (=> $x3094 (and (= (time-to-state (+ time 1)) _269) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3104 (= ?x406 _269)))
 (=> $x3104 (and (= (time-to-state (+ time 1)) _270) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3114 (= ?x406 _270)))
 (=> $x3114 (and (= (time-to-state (+ time 1)) _271) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3124 (= ?x406 _271)))
 (=> $x3124 (and (= (time-to-state (+ time 1)) _272) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3134 (= ?x406 _272)))
 (=> $x3134 (and (= (time-to-state (+ time 1)) _273) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3144 (= ?x406 _273)))
 (=> $x3144 (and (= (time-to-state (+ time 1)) _274) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3154 (= ?x406 _274)))
 (=> $x3154 (and (= (time-to-state (+ time 1)) _275) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3164 (= ?x406 _275)))
 (=> $x3164 (and (= (time-to-state (+ time 1)) _276) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3174 (= ?x406 _276)))
 (=> $x3174 (and (= (time-to-state (+ time 1)) _277) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3184 (= ?x406 _277)))
 (=> $x3184 (and (= (time-to-state (+ time 1)) _278) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3194 (= ?x406 _278)))
 (=> $x3194 (and (= (time-to-state (+ time 1)) _279) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3204 (= ?x406 _279)))
 (=> $x3204 (and (= (time-to-state (+ time 1)) _280) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3214 (= ?x406 _280)))
 (=> $x3214 (and (= (time-to-state (+ time 1)) _281) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3224 (= ?x406 _281)))
 (=> $x3224 (and (= (time-to-state (+ time 1)) _282) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3234 (= ?x406 _282)))
 (=> $x3234 (and (= (time-to-state (+ time 1)) _283) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3244 (= ?x406 _283)))
 (=> $x3244 (and (= (time-to-state (+ time 1)) _284) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3254 (= ?x406 _284)))
 (=> $x3254 (and (= (time-to-state (+ time 1)) _285) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3264 (= ?x406 _285)))
 (=> $x3264 (and (= (time-to-state (+ time 1)) _286) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3274 (= ?x406 _286)))
 (=> $x3274 (and (= (time-to-state (+ time 1)) _287) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3284 (= ?x406 _287)))
 (=> $x3284 (and (= (time-to-state (+ time 1)) _288) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3294 (= ?x406 _288)))
 (=> $x3294 (and (= (time-to-state (+ time 1)) _289) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3304 (= ?x406 _289)))
 (=> $x3304 (and (= (time-to-state (+ time 1)) _290) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3314 (= ?x406 _290)))
 (=> $x3314 (and (= (time-to-state (+ time 1)) _291) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3324 (= ?x406 _291)))
 (=> $x3324 (and (= (time-to-state (+ time 1)) _292) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3334 (= ?x406 _292)))
 (=> $x3334 (and (= (time-to-state (+ time 1)) _293) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3344 (= ?x406 _293)))
 (=> $x3344 (and (= (time-to-state (+ time 1)) _294) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3354 (= ?x406 _294)))
 (=> $x3354 (and (= (time-to-state (+ time 1)) _295) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3364 (= ?x406 _295)))
 (=> $x3364 (and (= (time-to-state (+ time 1)) _296) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3374 (= ?x406 _296)))
 (=> $x3374 (and (= (time-to-state (+ time 1)) _297) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3384 (= ?x406 _297)))
 (=> $x3384 (and (= (time-to-state (+ time 1)) _298) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3394 (= ?x406 _298)))
 (=> $x3394 (and (= (time-to-state (+ time 1)) _299) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3404 (= ?x406 _299)))
 (=> $x3404 (and (= (time-to-state (+ time 1)) _300) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3414 (= ?x406 _300)))
 (=> $x3414 (and (= (time-to-state (+ time 1)) _301) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3424 (= ?x406 _301)))
 (=> $x3424 (and (= (time-to-state (+ time 1)) _302) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3434 (= ?x406 _302)))
 (=> $x3434 (and (= (time-to-state (+ time 1)) _303) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3444 (= ?x406 _303)))
 (=> $x3444 (and (= (time-to-state (+ time 1)) _304) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3454 (= ?x406 _304)))
 (=> $x3454 (and (= (time-to-state (+ time 1)) _305) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3464 (= ?x406 _305)))
 (=> $x3464 (and (= (time-to-state (+ time 1)) _306) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3474 (= ?x406 _306)))
 (=> $x3474 (and (= (time-to-state (+ time 1)) _307) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3484 (= ?x406 _307)))
 (=> $x3484 (and (= (time-to-state (+ time 1)) _308) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3494 (= ?x406 _308)))
 (=> $x3494 (and (= (time-to-state (+ time 1)) _309) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3504 (= ?x406 _309)))
 (=> $x3504 (and (= (time-to-state (+ time 1)) _310) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3514 (= ?x406 _310)))
 (=> $x3514 (and (= (time-to-state (+ time 1)) _311) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3524 (= ?x406 _311)))
 (=> $x3524 (and (= (time-to-state (+ time 1)) _312) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3534 (= ?x406 _312)))
 (=> $x3534 (and (= (time-to-state (+ time 1)) _313) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3544 (= ?x406 _313)))
 (=> $x3544 (and (= (time-to-state (+ time 1)) _314) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3554 (= ?x406 _314)))
 (=> $x3554 (and (= (time-to-state (+ time 1)) _315) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3564 (= ?x406 _315)))
 (=> $x3564 (and (= (time-to-state (+ time 1)) _316) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3574 (= ?x406 _316)))
 (=> $x3574 (and (= (time-to-state (+ time 1)) _317) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3584 (= ?x406 _317)))
 (=> $x3584 (and (= (time-to-state (+ time 1)) _318) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3594 (= ?x406 _318)))
 (=> $x3594 (and (= (time-to-state (+ time 1)) _319) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3604 (= ?x406 _319)))
 (=> $x3604 (and (= (time-to-state (+ time 1)) _320) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3614 (= ?x406 _320)))
 (=> $x3614 (and (= (time-to-state (+ time 1)) _321) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3624 (= ?x406 _321)))
 (=> $x3624 (and (= (time-to-state (+ time 1)) _322) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3634 (= ?x406 _322)))
 (=> $x3634 (and (= (time-to-state (+ time 1)) _323) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3644 (= ?x406 _323)))
 (=> $x3644 (and (= (time-to-state (+ time 1)) _324) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3654 (= ?x406 _324)))
 (=> $x3654 (and (= (time-to-state (+ time 1)) _325) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3664 (= ?x406 _325)))
 (=> $x3664 (and (= (time-to-state (+ time 1)) _326) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3674 (= ?x406 _326)))
 (=> $x3674 (and (= (time-to-state (+ time 1)) _327) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3684 (= ?x406 _327)))
 (=> $x3684 (and (= (time-to-state (+ time 1)) _328) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3694 (= ?x406 _328)))
 (=> $x3694 (and (= (time-to-state (+ time 1)) _329) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3704 (= ?x406 _329)))
 (=> $x3704 (and (= (time-to-state (+ time 1)) _330) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3714 (= ?x406 _330)))
 (=> $x3714 (and (= (time-to-state (+ time 1)) _331) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3724 (= ?x406 _331)))
 (=> $x3724 (and (= (time-to-state (+ time 1)) _332) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3734 (= ?x406 _332)))
 (=> $x3734 (and (= (time-to-state (+ time 1)) _333) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3744 (= ?x406 _333)))
 (=> $x3744 (and (= (time-to-state (+ time 1)) _334) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3754 (= ?x406 _334)))
 (=> $x3754 (and (= (time-to-state (+ time 1)) _335) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3764 (= ?x406 _335)))
 (=> $x3764 (and (= (time-to-state (+ time 1)) _336) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3774 (= ?x406 _336)))
 (=> $x3774 (and (= (time-to-state (+ time 1)) _337) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3784 (= ?x406 _337)))
 (=> $x3784 (and (= (time-to-state (+ time 1)) _338) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3794 (= ?x406 _338)))
 (=> $x3794 (and (= (time-to-state (+ time 1)) _339) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3804 (= ?x406 _339)))
 (=> $x3804 (and (= (time-to-state (+ time 1)) _340) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3814 (= ?x406 _340)))
 (=> $x3814 (and (= (time-to-state (+ time 1)) _341) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3824 (= ?x406 _341)))
 (=> $x3824 (and (= (time-to-state (+ time 1)) _342) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3834 (= ?x406 _342)))
 (=> $x3834 (and (= (time-to-state (+ time 1)) _343) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3844 (= ?x406 _343)))
 (=> $x3844 (and (= (time-to-state (+ time 1)) _344) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3854 (= ?x406 _344)))
 (=> $x3854 (and (= (time-to-state (+ time 1)) _345) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3864 (= ?x406 _345)))
 (=> $x3864 (and (= (time-to-state (+ time 1)) _346) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3874 (= ?x406 _346)))
 (=> $x3874 (and (= (time-to-state (+ time 1)) _347) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3884 (= ?x406 _347)))
 (=> $x3884 (and (= (time-to-state (+ time 1)) _348) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3894 (= ?x406 _348)))
 (=> $x3894 (and (= (time-to-state (+ time 1)) _349) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3904 (= ?x406 _349)))
 (=> $x3904 (and (= (time-to-state (+ time 1)) _350) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3914 (= ?x406 _350)))
 (=> $x3914 (and (= (time-to-state (+ time 1)) _351) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3924 (= ?x406 _351)))
 (=> $x3924 (and (= (time-to-state (+ time 1)) _352) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3934 (= ?x406 _352)))
 (=> $x3934 (and (= (time-to-state (+ time 1)) _353) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3944 (= ?x406 _353)))
 (=> $x3944 (and (= (time-to-state (+ time 1)) _354) $x402))))))
 )
(assert
 (forall ((time Int) )(let (($x402 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let ((?x406 (time-to-state time)))
 (let (($x3954 (= ?x406 _354)))
 (=> $x3954 (and (= (time-to-state (+ time 1)) _355) $x402))))))
 )
(assert
 (forall ((time Int) )(let ((?x406 (time-to-state time)))
 (and (distinct ?x406 _354) true)))
 )
(assert
 (and (distinct _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 _136 _137 _138 _139 _140 _141 _142 _143 _144 _145 _146 _147 _148 _149 _150 _151 _152 _153 _154 _155 _156 _157 _158 _159 _160 _161 _162 _163 _164 _165 _166 _167 _168 _169 _170 _171 _172 _173 _174 _175 _176 _177 _178 _179 _180 _181 _182 _183 _184 _185 _186 _187 _188 _189 _190 _191 _192 _193 _194 _195 _196 _197 _198 _199 _200 _201 _202 _203 _204 _205 _206 _207 _208 _209 _210 _211 _212 _213 _214 _215 _216 _217 _218 _219 _220 _221 _222 _223 _224 _225 _226 _227 _228 _229 _230 _231 _232 _233 _234 _235 _236 _237 _238 _239 _240 _241 _242 _243 _244 _245 _246 _247 _248 _249 _250 _251 _252 _253 _254 _255 _256 _257 _258 _259 _260 _261 _262 _263 _264 _265 _266 _267 _268 _269 _270 _271 _272 _273 _274 _275 _276 _277 _278 _279 _280 _281 _282 _283 _284 _285 _286 _287 _288 _289 _290 _291 _292 _293 _294 _295 _296 _297 _298 _299 _300 _301 _302 _303 _304 _305 _306 _307 _308 _309 _310 _311 _312 _313 _314 _315 _316 _317 _318 _319 _320 _321 _322 _323 _324 _325 _326 _327 _328 _329 _330 _331 _332 _333 _334 _335 _336 _337 _338 _339 _340 _341 _342 _343 _344 _345 _346 _347 _348 _349 _350 _351 _352 _353 _354 _355) true))
(check-sat)
