; 
(set-info :status unknown)
(declare-fun time-to-state (Int) Int)
(declare-fun var0_0 (Int) Int)
(assert
 (forall ((time Int) )(let (($x448 (<= time 160)))
 (let (($x456 (= (var0_0 (+ time 1)) (+ (var0_0 time) 1))))
 (let (($x10 (= (var0_0 0) 0)))
 (let (($x668 (and (and (and (= (time-to-state 0) 0) $x10) $x10) (and (= (time-to-state (+ time 1)) 1) $x456))))
 (let (($x670 (and (and $x668 (and (= (time-to-state (+ time 1)) 2) $x456)) (and (= (time-to-state (+ time 1)) 3) $x456))))
 (let (($x672 (and (and $x670 (and (= (time-to-state (+ time 1)) 4) $x456)) (and (= (time-to-state (+ time 1)) 5) $x456))))
 (let (($x674 (and (and $x672 (and (= (time-to-state (+ time 1)) 6) $x456)) (and (= (time-to-state (+ time 1)) 7) $x456))))
 (let (($x676 (and (and $x674 (and (= (time-to-state (+ time 1)) 8) $x456)) (and (= (time-to-state (+ time 1)) 9) $x456))))
 (let (($x678 (and (and $x676 (and (= (time-to-state (+ time 1)) 10) $x456)) (and (= (time-to-state (+ time 1)) 11) $x456))))
 (let (($x680 (and (and $x678 (and (= (time-to-state (+ time 1)) 12) $x456)) (and (= (time-to-state (+ time 1)) 13) $x456))))
 (let (($x682 (and (and $x680 (and (= (time-to-state (+ time 1)) 14) $x456)) (and (= (time-to-state (+ time 1)) 15) $x456))))
 (let (($x684 (and (and $x682 (and (= (time-to-state (+ time 1)) 16) $x456)) (and (= (time-to-state (+ time 1)) 17) $x456))))
 (let (($x686 (and (and $x684 (and (= (time-to-state (+ time 1)) 18) $x456)) (and (= (time-to-state (+ time 1)) 19) $x456))))
 (let (($x688 (and (and $x686 (and (= (time-to-state (+ time 1)) 20) $x456)) (and (= (time-to-state (+ time 1)) 21) $x456))))
 (let (($x690 (and (and $x688 (and (= (time-to-state (+ time 1)) 22) $x456)) (and (= (time-to-state (+ time 1)) 23) $x456))))
 (let (($x692 (and (and $x690 (and (= (time-to-state (+ time 1)) 24) $x456)) (and (= (time-to-state (+ time 1)) 25) $x456))))
 (let (($x694 (and (and $x692 (and (= (time-to-state (+ time 1)) 26) $x456)) (and (= (time-to-state (+ time 1)) 27) $x456))))
 (let (($x696 (and (and $x694 (and (= (time-to-state (+ time 1)) 28) $x456)) (and (= (time-to-state (+ time 1)) 29) $x456))))
 (let (($x698 (and (and $x696 (and (= (time-to-state (+ time 1)) 30) $x456)) (and (= (time-to-state (+ time 1)) 31) $x456))))
 (let (($x700 (and (and $x698 (and (= (time-to-state (+ time 1)) 32) $x456)) (and (= (time-to-state (+ time 1)) 33) $x456))))
 (let (($x702 (and (and $x700 (and (= (time-to-state (+ time 1)) 34) $x456)) (and (= (time-to-state (+ time 1)) 35) $x456))))
 (let (($x704 (and (and $x702 (and (= (time-to-state (+ time 1)) 36) $x456)) (and (= (time-to-state (+ time 1)) 37) $x456))))
 (let (($x706 (and (and $x704 (and (= (time-to-state (+ time 1)) 38) $x456)) (and (= (time-to-state (+ time 1)) 39) $x456))))
 (let (($x708 (and (and $x706 (and (= (time-to-state (+ time 1)) 40) $x456)) (and (= (time-to-state (+ time 1)) 41) $x456))))
 (let (($x710 (and (and $x708 (and (= (time-to-state (+ time 1)) 42) $x456)) (and (= (time-to-state (+ time 1)) 43) $x456))))
 (let (($x712 (and (and $x710 (and (= (time-to-state (+ time 1)) 44) $x456)) (and (= (time-to-state (+ time 1)) 45) $x456))))
 (let (($x714 (and (and $x712 (and (= (time-to-state (+ time 1)) 46) $x456)) (and (= (time-to-state (+ time 1)) 47) $x456))))
 (let (($x716 (and (and $x714 (and (= (time-to-state (+ time 1)) 48) $x456)) (and (= (time-to-state (+ time 1)) 49) $x456))))
 (let (($x718 (and (and $x716 (and (= (time-to-state (+ time 1)) 50) $x456)) (and (= (time-to-state (+ time 1)) 51) $x456))))
 (let (($x720 (and (and $x718 (and (= (time-to-state (+ time 1)) 52) $x456)) (and (= (time-to-state (+ time 1)) 53) $x456))))
 (let (($x722 (and (and $x720 (and (= (time-to-state (+ time 1)) 54) $x456)) (and (= (time-to-state (+ time 1)) 55) $x456))))
 (let (($x724 (and (and $x722 (and (= (time-to-state (+ time 1)) 56) $x456)) (and (= (time-to-state (+ time 1)) 57) $x456))))
 (let (($x726 (and (and $x724 (and (= (time-to-state (+ time 1)) 58) $x456)) (and (= (time-to-state (+ time 1)) 59) $x456))))
 (let (($x728 (and (and $x726 (and (= (time-to-state (+ time 1)) 60) $x456)) (and (= (time-to-state (+ time 1)) 61) $x456))))
 (let (($x730 (and (and $x728 (and (= (time-to-state (+ time 1)) 62) $x456)) (and (= (time-to-state (+ time 1)) 63) $x456))))
 (let (($x732 (and (and $x730 (and (= (time-to-state (+ time 1)) 64) $x456)) (and (= (time-to-state (+ time 1)) 65) $x456))))
 (let (($x734 (and (and $x732 (and (= (time-to-state (+ time 1)) 66) $x456)) (and (= (time-to-state (+ time 1)) 67) $x456))))
 (let (($x736 (and (and $x734 (and (= (time-to-state (+ time 1)) 68) $x456)) (and (= (time-to-state (+ time 1)) 69) $x456))))
 (let (($x738 (and (and $x736 (and (= (time-to-state (+ time 1)) 70) $x456)) (and (= (time-to-state (+ time 1)) 71) $x456))))
 (let (($x740 (and (and $x738 (and (= (time-to-state (+ time 1)) 72) $x456)) (and (= (time-to-state (+ time 1)) 73) $x456))))
 (let (($x742 (and (and $x740 (and (= (time-to-state (+ time 1)) 74) $x456)) (and (= (time-to-state (+ time 1)) 75) $x456))))
 (let (($x744 (and (and $x742 (and (= (time-to-state (+ time 1)) 76) $x456)) (and (= (time-to-state (+ time 1)) 77) $x456))))
 (let (($x746 (and (and $x744 (and (= (time-to-state (+ time 1)) 78) $x456)) (and (= (time-to-state (+ time 1)) 79) $x456))))
 (let (($x748 (and (and $x746 (and (= (time-to-state (+ time 1)) 80) $x456)) (and (= (time-to-state (+ time 1)) 81) $x456))))
 (let (($x750 (and (and $x748 (and (= (time-to-state (+ time 1)) 82) $x456)) (and (= (time-to-state (+ time 1)) 83) $x456))))
 (let (($x752 (and (and $x750 (and (= (time-to-state (+ time 1)) 84) $x456)) (and (= (time-to-state (+ time 1)) 85) $x456))))
 (let (($x754 (and (and $x752 (and (= (time-to-state (+ time 1)) 86) $x456)) (and (= (time-to-state (+ time 1)) 87) $x456))))
 (let (($x756 (and (and $x754 (and (= (time-to-state (+ time 1)) 88) $x456)) (and (= (time-to-state (+ time 1)) 89) $x456))))
 (let (($x758 (and (and $x756 (and (= (time-to-state (+ time 1)) 90) $x456)) (and (= (time-to-state (+ time 1)) 91) $x456))))
 (let (($x760 (and (and $x758 (and (= (time-to-state (+ time 1)) 92) $x456)) (and (= (time-to-state (+ time 1)) 93) $x456))))
 (let (($x762 (and (and $x760 (and (= (time-to-state (+ time 1)) 94) $x456)) (and (= (time-to-state (+ time 1)) 95) $x456))))
 (let (($x764 (and (and $x762 (and (= (time-to-state (+ time 1)) 96) $x456)) (and (= (time-to-state (+ time 1)) 97) $x456))))
 (let (($x766 (and (and $x764 (and (= (time-to-state (+ time 1)) 98) $x456)) (and (= (time-to-state (+ time 1)) 99) $x456))))
 (let (($x768 (and (and $x766 (and (= (time-to-state (+ time 1)) 100) $x456)) (and (= (time-to-state (+ time 1)) 101) $x456))))
 (let (($x770 (and (and $x768 (and (= (time-to-state (+ time 1)) 102) $x456)) (and (= (time-to-state (+ time 1)) 103) $x456))))
 (let (($x772 (and (and $x770 (and (= (time-to-state (+ time 1)) 104) $x456)) (and (= (time-to-state (+ time 1)) 105) $x456))))
 (and (and (and $x772 (and (distinct (time-to-state time) 104) true)) (> time 0)) $x448))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
