module {
  hw.module @fsm45(in %clk : !seq.clock, in %rst : i1) {
    %is_second_state = comb.icmp bin eq %c1_i16, %state_reg : i16
    verif.cover %is_second_state : i1
    %c0_i1 = hw.constant 0 : i1
    %no_rst = comb.icmp bin eq %c0_i1, %rst : i1
    verif.assume %no_rst : i1
    %c0_i16 = hw.constant 0 : i16
    %c1_i16 = hw.constant 1 : i16
    %c2_i16 = hw.constant 2 : i16
    %c3_i16 = hw.constant 3 : i16
    %c4_i16 = hw.constant 4 : i16
    %c5_i16 = hw.constant 5 : i16
    %c6_i16 = hw.constant 6 : i16
    %c7_i16 = hw.constant 7 : i16
    %c8_i16 = hw.constant 8 : i16
    %c9_i16 = hw.constant 9 : i16
    %c10_i16 = hw.constant 10 : i16
    %c11_i16 = hw.constant 11 : i16
    %c12_i16 = hw.constant 12 : i16
    %c13_i16 = hw.constant 13 : i16
    %c14_i16 = hw.constant 14 : i16
    %c15_i16 = hw.constant 15 : i16
    %c16_i16 = hw.constant 16 : i16
    %c17_i16 = hw.constant 17 : i16
    %c18_i16 = hw.constant 18 : i16
    %c19_i16 = hw.constant 19 : i16
    %c20_i16 = hw.constant 20 : i16
    %c21_i16 = hw.constant 21 : i16
    %c22_i16 = hw.constant 22 : i16
    %c23_i16 = hw.constant 23 : i16
    %c24_i16 = hw.constant 24 : i16
    %c25_i16 = hw.constant 25 : i16
    %c26_i16 = hw.constant 26 : i16
    %c27_i16 = hw.constant 27 : i16
    %c28_i16 = hw.constant 28 : i16
    %c29_i16 = hw.constant 29 : i16
    %c30_i16 = hw.constant 30 : i16
    %c31_i16 = hw.constant 31 : i16
    %c32_i16 = hw.constant 32 : i16
    %c33_i16 = hw.constant 33 : i16
    %c34_i16 = hw.constant 34 : i16
    %c35_i16 = hw.constant 35 : i16
    %c36_i16 = hw.constant 36 : i16
    %c37_i16 = hw.constant 37 : i16
    %c38_i16 = hw.constant 38 : i16
    %c39_i16 = hw.constant 39 : i16
    %c40_i16 = hw.constant 40 : i16
    %c41_i16 = hw.constant 41 : i16
    %c42_i16 = hw.constant 42 : i16
    %c43_i16 = hw.constant 43 : i16
    %c44_i16 = hw.constant 44 : i16
    %c45_i16 = hw.constant 45 : i16
    %state_reg = seq.compreg sym @state_reg  %205, %clk reset %rst, %c0_i16 : i16  
    %c0_i16_0 = hw.constant 0 : i16
    %x0 = seq.compreg sym @x0  %202, %clk reset %rst, %c0_i16_0 : i16  
    %c14_i16_1 = hw.constant 14 : i16
    %c40_i16_2 = hw.constant 40 : i16
    %c1_i16_3 = hw.constant 1 : i16
    %0 = comb.icmp bin eq %state_reg, %c0_i16 : i16
    %1 = comb.add bin %x0, %c1_i16_3 : i16
    %2 = comb.mux bin %0, %1, %202 : i16
    %3 = comb.mux bin %0, %c1_i16, %state_reg : i16
    %4 = comb.icmp bin eq %state_reg, %c1_i16 : i16
    %5 = comb.add bin %x0, %c1_i16_3 : i16
    %6 = comb.mux bin %4, %5, %2 : i16
    %7 = comb.mux bin %4, %c2_i16, %3 : i16
    %8 = comb.icmp bin eq %state_reg, %c2_i16 : i16
    %9 = comb.add bin %x0, %c1_i16_3 : i16
    %10 = comb.mux bin %8, %9, %6 : i16
    %11 = comb.mux bin %8, %c3_i16, %7 : i16
    %12 = comb.icmp bin eq %state_reg, %c3_i16 : i16
    %13 = comb.add bin %x0, %c1_i16_3 : i16
    %14 = comb.mux bin %12, %13, %10 : i16
    %15 = comb.mux bin %12, %c4_i16, %11 : i16
    %16 = comb.icmp bin eq %state_reg, %c4_i16 : i16
    %17 = comb.add bin %x0, %c1_i16_3 : i16
    %18 = comb.mux bin %16, %17, %14 : i16
    %19 = comb.mux bin %16, %c5_i16, %15 : i16
    %20 = comb.icmp bin eq %state_reg, %c5_i16 : i16
    %21 = comb.add bin %x0, %c1_i16_3 : i16
    %22 = comb.mux bin %20, %21, %18 : i16
    %23 = comb.mux bin %20, %c6_i16, %19 : i16
    %24 = comb.icmp bin eq %state_reg, %c6_i16 : i16
    %25 = comb.add bin %x0, %c1_i16_3 : i16
    %26 = comb.mux bin %24, %25, %22 : i16
    %27 = comb.mux bin %24, %c7_i16, %23 : i16
    %28 = comb.icmp bin eq %state_reg, %c7_i16 : i16
    %29 = comb.add bin %x0, %c1_i16_3 : i16
    %30 = comb.mux bin %28, %29, %26 : i16
    %31 = comb.mux bin %28, %c8_i16, %27 : i16
    %32 = comb.icmp bin eq %state_reg, %c8_i16 : i16
    %33 = comb.add bin %x0, %c1_i16_3 : i16
    %34 = comb.mux bin %32, %33, %30 : i16
    %35 = comb.mux bin %32, %c9_i16, %31 : i16
    %36 = comb.icmp bin eq %state_reg, %c9_i16 : i16
    %37 = comb.add bin %x0, %c1_i16_3 : i16
    %38 = comb.mux bin %36, %37, %34 : i16
    %39 = comb.mux bin %36, %c10_i16, %35 : i16
    %40 = comb.icmp bin eq %state_reg, %c10_i16 : i16
    %41 = comb.add bin %x0, %c1_i16_3 : i16
    %42 = comb.mux bin %40, %41, %38 : i16
    %43 = comb.mux bin %40, %c11_i16, %39 : i16
    %44 = comb.icmp bin eq %state_reg, %c11_i16 : i16
    %45 = comb.add bin %x0, %c1_i16_3 : i16
    %46 = comb.icmp bin uge %x0, %c14_i16_1 : i16
    %47 = comb.icmp bin eq %state_reg, %c11_i16 : i16
    %48 = comb.add bin %x0, %c1_i16_3 : i16
    %49 = comb.icmp bin ult %x0, %c14_i16_1 : i16
    %50 = comb.icmp bin eq %state_reg, %c11_i16 : i16
    %51 = comb.mux bin %50, %c11_i16, %43 : i16
    %52 = comb.mux bin %49, %c5_i16, %c11_i16 : i16
    %53 = comb.and bin %49, %47 : i1
    %54 = comb.mux bin %53, %48, %42 : i16
    %55 = comb.mux bin %47, %52, %51 : i16
    %56 = comb.mux bin %46, %c12_i16, %52 : i16
    %57 = comb.and bin %46, %44 : i1
    %58 = comb.mux bin %57, %45, %54 : i16
    %59 = comb.mux bin %44, %56, %55 : i16
    %60 = comb.icmp bin eq %state_reg, %c12_i16 : i16
    %61 = comb.add bin %x0, %c1_i16_3 : i16
    %62 = comb.mux bin %60, %61, %58 : i16
    %63 = comb.mux bin %60, %c13_i16, %59 : i16
    %64 = comb.icmp bin eq %state_reg, %c13_i16 : i16
    %65 = comb.add bin %x0, %c1_i16_3 : i16
    %66 = comb.mux bin %64, %65, %62 : i16
    %67 = comb.mux bin %64, %c14_i16, %63 : i16
    %68 = comb.icmp bin eq %state_reg, %c14_i16 : i16
    %69 = comb.add bin %x0, %c1_i16_3 : i16
    %70 = comb.mux bin %68, %69, %66 : i16
    %71 = comb.mux bin %68, %c15_i16, %67 : i16
    %72 = comb.icmp bin eq %state_reg, %c15_i16 : i16
    %73 = comb.add bin %x0, %c1_i16_3 : i16
    %74 = comb.mux bin %72, %73, %70 : i16
    %75 = comb.mux bin %72, %c16_i16, %71 : i16
    %76 = comb.icmp bin eq %state_reg, %c16_i16 : i16
    %77 = comb.add bin %x0, %c1_i16_3 : i16
    %78 = comb.mux bin %76, %77, %74 : i16
    %79 = comb.mux bin %76, %c17_i16, %75 : i16
    %80 = comb.icmp bin eq %state_reg, %c17_i16 : i16
    %81 = comb.add bin %x0, %c1_i16_3 : i16
    %82 = comb.mux bin %80, %81, %78 : i16
    %83 = comb.mux bin %80, %c18_i16, %79 : i16
    %84 = comb.icmp bin eq %state_reg, %c18_i16 : i16
    %85 = comb.add bin %x0, %c1_i16_3 : i16
    %86 = comb.mux bin %84, %85, %82 : i16
    %87 = comb.mux bin %84, %c19_i16, %83 : i16
    %88 = comb.icmp bin eq %state_reg, %c19_i16 : i16
    %89 = comb.add bin %x0, %c1_i16_3 : i16
    %90 = comb.mux bin %88, %89, %86 : i16
    %91 = comb.mux bin %88, %c20_i16, %87 : i16
    %92 = comb.icmp bin eq %state_reg, %c20_i16 : i16
    %93 = comb.add bin %x0, %c1_i16_3 : i16
    %94 = comb.mux bin %92, %93, %90 : i16
    %95 = comb.mux bin %92, %c21_i16, %91 : i16
    %96 = comb.icmp bin eq %state_reg, %c21_i16 : i16
    %97 = comb.add bin %x0, %c1_i16_3 : i16
    %98 = comb.mux bin %96, %97, %94 : i16
    %99 = comb.mux bin %96, %c22_i16, %95 : i16
    %100 = comb.icmp bin eq %state_reg, %c22_i16 : i16
    %101 = comb.add bin %x0, %c1_i16_3 : i16
    %102 = comb.mux bin %100, %101, %98 : i16
    %103 = comb.mux bin %100, %c23_i16, %99 : i16
    %104 = comb.icmp bin eq %state_reg, %c23_i16 : i16
    %105 = comb.add bin %x0, %c1_i16_3 : i16
    %106 = comb.mux bin %104, %105, %102 : i16
    %107 = comb.mux bin %104, %c24_i16, %103 : i16
    %108 = comb.icmp bin eq %state_reg, %c24_i16 : i16
    %109 = comb.add bin %x0, %c1_i16_3 : i16
    %110 = comb.icmp bin uge %x0, %c40_i16_2 : i16
    %111 = comb.icmp bin eq %state_reg, %c24_i16 : i16
    %112 = comb.add bin %x0, %c1_i16_3 : i16
    %113 = comb.icmp bin ult %x0, %c40_i16_2 : i16
    %114 = comb.icmp bin eq %state_reg, %c24_i16 : i16
    %115 = comb.mux bin %114, %c24_i16, %107 : i16
    %116 = comb.mux bin %113, %c14_i16, %c24_i16 : i16
    %117 = comb.and bin %113, %111 : i1
    %118 = comb.mux bin %117, %112, %106 : i16
    %119 = comb.mux bin %111, %116, %115 : i16
    %120 = comb.mux bin %110, %c25_i16, %116 : i16
    %121 = comb.and bin %110, %108 : i1
    %122 = comb.mux bin %121, %109, %118 : i16
    %123 = comb.mux bin %108, %120, %119 : i16
    %124 = comb.icmp bin eq %state_reg, %c25_i16 : i16
    %125 = comb.add bin %x0, %c1_i16_3 : i16
    %126 = comb.mux bin %124, %125, %122 : i16
    %127 = comb.mux bin %124, %c26_i16, %123 : i16
    %128 = comb.icmp bin eq %state_reg, %c26_i16 : i16
    %129 = comb.add bin %x0, %c1_i16_3 : i16
    %130 = comb.mux bin %128, %129, %126 : i16
    %131 = comb.mux bin %128, %c27_i16, %127 : i16
    %132 = comb.icmp bin eq %state_reg, %c27_i16 : i16
    %133 = comb.add bin %x0, %c1_i16_3 : i16
    %134 = comb.mux bin %132, %133, %130 : i16
    %135 = comb.mux bin %132, %c28_i16, %131 : i16
    %136 = comb.icmp bin eq %state_reg, %c28_i16 : i16
    %137 = comb.add bin %x0, %c1_i16_3 : i16
    %138 = comb.mux bin %136, %137, %134 : i16
    %139 = comb.mux bin %136, %c29_i16, %135 : i16
    %140 = comb.icmp bin eq %state_reg, %c29_i16 : i16
    %141 = comb.add bin %x0, %c1_i16_3 : i16
    %142 = comb.mux bin %140, %141, %138 : i16
    %143 = comb.mux bin %140, %c30_i16, %139 : i16
    %144 = comb.icmp bin eq %state_reg, %c30_i16 : i16
    %145 = comb.add bin %x0, %c1_i16_3 : i16
    %146 = comb.mux bin %144, %145, %142 : i16
    %147 = comb.mux bin %144, %c31_i16, %143 : i16
    %148 = comb.icmp bin eq %state_reg, %c31_i16 : i16
    %149 = comb.add bin %x0, %c1_i16_3 : i16
    %150 = comb.mux bin %148, %149, %146 : i16
    %151 = comb.mux bin %148, %c32_i16, %147 : i16
    %152 = comb.icmp bin eq %state_reg, %c32_i16 : i16
    %153 = comb.add bin %x0, %c1_i16_3 : i16
    %154 = comb.mux bin %152, %153, %150 : i16
    %155 = comb.mux bin %152, %c33_i16, %151 : i16
    %156 = comb.icmp bin eq %state_reg, %c33_i16 : i16
    %157 = comb.add bin %x0, %c1_i16_3 : i16
    %158 = comb.mux bin %156, %157, %154 : i16
    %159 = comb.mux bin %156, %c34_i16, %155 : i16
    %160 = comb.icmp bin eq %state_reg, %c34_i16 : i16
    %161 = comb.add bin %x0, %c1_i16_3 : i16
    %162 = comb.mux bin %160, %161, %158 : i16
    %163 = comb.mux bin %160, %c35_i16, %159 : i16
    %164 = comb.icmp bin eq %state_reg, %c35_i16 : i16
    %165 = comb.add bin %x0, %c1_i16_3 : i16
    %166 = comb.mux bin %164, %165, %162 : i16
    %167 = comb.mux bin %164, %c36_i16, %163 : i16
    %168 = comb.icmp bin eq %state_reg, %c36_i16 : i16
    %169 = comb.add bin %x0, %c1_i16_3 : i16
    %170 = comb.mux bin %168, %169, %166 : i16
    %171 = comb.mux bin %168, %c37_i16, %167 : i16
    %172 = comb.icmp bin eq %state_reg, %c37_i16 : i16
    %173 = comb.add bin %x0, %c1_i16_3 : i16
    %174 = comb.mux bin %172, %173, %170 : i16
    %175 = comb.mux bin %172, %c38_i16, %171 : i16
    %176 = comb.icmp bin eq %state_reg, %c38_i16 : i16
    %177 = comb.add bin %x0, %c1_i16_3 : i16
    %178 = comb.mux bin %176, %177, %174 : i16
    %179 = comb.mux bin %176, %c39_i16, %175 : i16
    %180 = comb.icmp bin eq %state_reg, %c39_i16 : i16
    %181 = comb.add bin %x0, %c1_i16_3 : i16
    %182 = comb.mux bin %180, %181, %178 : i16
    %183 = comb.mux bin %180, %c40_i16, %179 : i16
    %184 = comb.icmp bin eq %state_reg, %c40_i16 : i16
    %185 = comb.add bin %x0, %c1_i16_3 : i16
    %186 = comb.mux bin %184, %185, %182 : i16
    %187 = comb.mux bin %184, %c41_i16, %183 : i16
    %188 = comb.icmp bin eq %state_reg, %c41_i16 : i16
    %189 = comb.add bin %x0, %c1_i16_3 : i16
    %190 = comb.mux bin %188, %189, %186 : i16
    %191 = comb.mux bin %188, %c42_i16, %187 : i16
    %192 = comb.icmp bin eq %state_reg, %c42_i16 : i16
    %193 = comb.add bin %x0, %c1_i16_3 : i16
    %194 = comb.mux bin %192, %193, %190 : i16
    %195 = comb.mux bin %192, %c43_i16, %191 : i16
    %196 = comb.icmp bin eq %state_reg, %c43_i16 : i16
    %197 = comb.add bin %x0, %c1_i16_3 : i16
    %198 = comb.mux bin %196, %197, %194 : i16
    %199 = comb.mux bin %196, %c44_i16, %195 : i16
    %200 = comb.icmp bin eq %state_reg, %c44_i16 : i16
    %201 = comb.add bin %x0, %c1_i16_3 : i16
    %202 = comb.mux bin %200, %201, %198 : i16
    %203 = comb.mux bin %200, %c45_i16, %199 : i16
    %204 = comb.icmp bin eq %state_reg, %c45_i16 : i16
    %205 = comb.mux bin %204, %c45_i16, %203 : i16
    hw.output
  }
}

