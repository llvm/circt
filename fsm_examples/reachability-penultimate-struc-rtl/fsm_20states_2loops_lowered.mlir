module {
  hw.module @fsm20(in %clk : !seq.clock, in %rst : i1) {
    %is_second_state = comb.icmp bin eq %c18_i16, %state_reg : i16
    verif.cover %is_second_state : i1
    %c0_i1 = hw.constant 0 : i1
    %no_rst = comb.icmp bin eq %c0_i1, %rst : i1
    verif.assume %no_rst : i1
    %c0_i16 = hw.constant 0 : i16
    %c1_i16 = hw.constant 1 : i16
    %c2_i16 = hw.constant 2 : i16
    %c3_i16 = hw.constant 3 : i16
    %c4_i16 = hw.constant 4 : i16
    %c5_i16 = hw.constant 5 : i16
    %c6_i16 = hw.constant 6 : i16
    %c7_i16 = hw.constant 7 : i16
    %c8_i16 = hw.constant 8 : i16
    %c9_i16 = hw.constant 9 : i16
    %c10_i16 = hw.constant 10 : i16
    %c11_i16 = hw.constant 11 : i16
    %c12_i16 = hw.constant 12 : i16
    %c13_i16 = hw.constant 13 : i16
    %c14_i16 = hw.constant 14 : i16
    %c15_i16 = hw.constant 15 : i16
    %c16_i16 = hw.constant 16 : i16
    %c17_i16 = hw.constant 17 : i16
    %c18_i16 = hw.constant 18 : i16
    %c19_i16 = hw.constant 19 : i16
    %c20_i16 = hw.constant 20 : i16
    %state_reg = seq.compreg sym @state_reg  %105, %clk reset %rst, %c0_i16 : i16  
    %c0_i16_0 = hw.constant 0 : i16
    %x0 = seq.compreg sym @x0  %102, %clk reset %rst, %c0_i16_0 : i16  
    %c5_i16_1 = hw.constant 5 : i16
    %c22_i16 = hw.constant 22 : i16
    %c1_i16_2 = hw.constant 1 : i16
    %0 = comb.icmp bin eq %state_reg, %c0_i16 : i16
    %1 = comb.add bin %x0, %c1_i16_2 : i16
    %2 = comb.mux bin %0, %1, %102 : i16
    %3 = comb.mux bin %0, %c1_i16, %state_reg : i16
    %4 = comb.icmp bin eq %state_reg, %c1_i16 : i16
    %5 = comb.add bin %x0, %c1_i16_2 : i16
    %6 = comb.mux bin %4, %5, %2 : i16
    %7 = comb.mux bin %4, %c2_i16, %3 : i16
    %8 = comb.icmp bin eq %state_reg, %c2_i16 : i16
    %9 = comb.add bin %x0, %c1_i16_2 : i16
    %10 = comb.mux bin %8, %9, %6 : i16
    %11 = comb.mux bin %8, %c3_i16, %7 : i16
    %12 = comb.icmp bin eq %state_reg, %c3_i16 : i16
    %13 = comb.add bin %x0, %c1_i16_2 : i16
    %14 = comb.icmp bin uge %x0, %c5_i16_1 : i16
    %15 = comb.icmp bin eq %state_reg, %c3_i16 : i16
    %16 = comb.add bin %x0, %c1_i16_2 : i16
    %17 = comb.icmp bin ult %x0, %c5_i16_1 : i16
    %18 = comb.icmp bin eq %state_reg, %c3_i16 : i16
    %19 = comb.mux bin %18, %c3_i16, %11 : i16
    %20 = comb.mux bin %17, %c0_i16, %c3_i16 : i16
    %21 = comb.and bin %17, %15 : i1
    %22 = comb.mux bin %21, %16, %10 : i16
    %23 = comb.mux bin %15, %20, %19 : i16
    %24 = comb.mux bin %14, %c4_i16, %20 : i16
    %25 = comb.and bin %14, %12 : i1
    %26 = comb.mux bin %25, %13, %22 : i16
    %27 = comb.mux bin %12, %24, %23 : i16
    %28 = comb.icmp bin eq %state_reg, %c4_i16 : i16
    %29 = comb.add bin %x0, %c1_i16_2 : i16
    %30 = comb.mux bin %28, %29, %26 : i16
    %31 = comb.mux bin %28, %c5_i16, %27 : i16
    %32 = comb.icmp bin eq %state_reg, %c5_i16 : i16
    %33 = comb.add bin %x0, %c1_i16_2 : i16
    %34 = comb.mux bin %32, %33, %30 : i16
    %35 = comb.mux bin %32, %c6_i16, %31 : i16
    %36 = comb.icmp bin eq %state_reg, %c6_i16 : i16
    %37 = comb.add bin %x0, %c1_i16_2 : i16
    %38 = comb.mux bin %36, %37, %34 : i16
    %39 = comb.mux bin %36, %c7_i16, %35 : i16
    %40 = comb.icmp bin eq %state_reg, %c7_i16 : i16
    %41 = comb.add bin %x0, %c1_i16_2 : i16
    %42 = comb.mux bin %40, %41, %38 : i16
    %43 = comb.mux bin %40, %c8_i16, %39 : i16
    %44 = comb.icmp bin eq %state_reg, %c8_i16 : i16
    %45 = comb.add bin %x0, %c1_i16_2 : i16
    %46 = comb.mux bin %44, %45, %42 : i16
    %47 = comb.mux bin %44, %c9_i16, %43 : i16
    %48 = comb.icmp bin eq %state_reg, %c9_i16 : i16
    %49 = comb.add bin %x0, %c1_i16_2 : i16
    %50 = comb.mux bin %48, %49, %46 : i16
    %51 = comb.mux bin %48, %c10_i16, %47 : i16
    %52 = comb.icmp bin eq %state_reg, %c10_i16 : i16
    %53 = comb.add bin %x0, %c1_i16_2 : i16
    %54 = comb.mux bin %52, %53, %50 : i16
    %55 = comb.mux bin %52, %c11_i16, %51 : i16
    %56 = comb.icmp bin eq %state_reg, %c11_i16 : i16
    %57 = comb.add bin %x0, %c1_i16_2 : i16
    %58 = comb.mux bin %56, %57, %54 : i16
    %59 = comb.mux bin %56, %c12_i16, %55 : i16
    %60 = comb.icmp bin eq %state_reg, %c12_i16 : i16
    %61 = comb.add bin %x0, %c1_i16_2 : i16
    %62 = comb.mux bin %60, %61, %58 : i16
    %63 = comb.mux bin %60, %c13_i16, %59 : i16
    %64 = comb.icmp bin eq %state_reg, %c13_i16 : i16
    %65 = comb.add bin %x0, %c1_i16_2 : i16
    %66 = comb.mux bin %64, %65, %62 : i16
    %67 = comb.mux bin %64, %c14_i16, %63 : i16
    %68 = comb.icmp bin eq %state_reg, %c14_i16 : i16
    %69 = comb.add bin %x0, %c1_i16_2 : i16
    %70 = comb.icmp bin uge %x0, %c22_i16 : i16
    %71 = comb.icmp bin eq %state_reg, %c14_i16 : i16
    %72 = comb.add bin %x0, %c1_i16_2 : i16
    %73 = comb.icmp bin ult %x0, %c22_i16 : i16
    %74 = comb.icmp bin eq %state_reg, %c14_i16 : i16
    %75 = comb.mux bin %74, %c14_i16, %67 : i16
    %76 = comb.mux bin %73, %c0_i16, %c14_i16 : i16
    %77 = comb.and bin %73, %71 : i1
    %78 = comb.mux bin %77, %72, %66 : i16
    %79 = comb.mux bin %71, %76, %75 : i16
    %80 = comb.mux bin %70, %c15_i16, %76 : i16
    %81 = comb.and bin %70, %68 : i1
    %82 = comb.mux bin %81, %69, %78 : i16
    %83 = comb.mux bin %68, %80, %79 : i16
    %84 = comb.icmp bin eq %state_reg, %c15_i16 : i16
    %85 = comb.add bin %x0, %c1_i16_2 : i16
    %86 = comb.mux bin %84, %85, %82 : i16
    %87 = comb.mux bin %84, %c16_i16, %83 : i16
    %88 = comb.icmp bin eq %state_reg, %c16_i16 : i16
    %89 = comb.add bin %x0, %c1_i16_2 : i16
    %90 = comb.mux bin %88, %89, %86 : i16
    %91 = comb.mux bin %88, %c17_i16, %87 : i16
    %92 = comb.icmp bin eq %state_reg, %c17_i16 : i16
    %93 = comb.add bin %x0, %c1_i16_2 : i16
    %94 = comb.mux bin %92, %93, %90 : i16
    %95 = comb.mux bin %92, %c18_i16, %91 : i16
    %96 = comb.icmp bin eq %state_reg, %c18_i16 : i16
    %97 = comb.add bin %x0, %c1_i16_2 : i16
    %98 = comb.mux bin %96, %97, %94 : i16
    %99 = comb.mux bin %96, %c19_i16, %95 : i16
    %100 = comb.icmp bin eq %state_reg, %c19_i16 : i16
    %101 = comb.add bin %x0, %c1_i16_2 : i16
    %102 = comb.mux bin %100, %101, %98 : i16
    %103 = comb.mux bin %100, %c20_i16, %99 : i16
    %104 = comb.icmp bin eq %state_reg, %c20_i16 : i16
    %105 = comb.mux bin %104, %c20_i16, %103 : i16
    hw.output
  }
}

