module {
  hw.module @fsm55(in %clk : !seq.clock, in %rst : i1) {
    %c0_i6 = hw.constant 0 : i6
    %c1_i6 = hw.constant 1 : i6
    %c2_i6 = hw.constant 2 : i6
    %c3_i6 = hw.constant 3 : i6
    %c4_i6 = hw.constant 4 : i6
    %c5_i6 = hw.constant 5 : i6
    %c6_i6 = hw.constant 6 : i6
    %c7_i6 = hw.constant 7 : i6
    %c8_i6 = hw.constant 8 : i6
    %c9_i6 = hw.constant 9 : i6
    %c10_i6 = hw.constant 10 : i6
    %c11_i6 = hw.constant 11 : i6
    %c12_i6 = hw.constant 12 : i6
    %c13_i6 = hw.constant 13 : i6
    %c14_i6 = hw.constant 14 : i6
    %c15_i6 = hw.constant 15 : i6
    %c16_i6 = hw.constant 16 : i6
    %c17_i6 = hw.constant 17 : i6
    %c18_i6 = hw.constant 18 : i6
    %c19_i6 = hw.constant 19 : i6
    %c20_i6 = hw.constant 20 : i6
    %c21_i6 = hw.constant 21 : i6
    %c22_i6 = hw.constant 22 : i6
    %c23_i6 = hw.constant 23 : i6
    %c24_i6 = hw.constant 24 : i6
    %c25_i6 = hw.constant 25 : i6
    %c26_i6 = hw.constant 26 : i6
    %c27_i6 = hw.constant 27 : i6
    %c28_i6 = hw.constant 28 : i6
    %c29_i6 = hw.constant 29 : i6
    %c30_i6 = hw.constant 30 : i6
    %c31_i6 = hw.constant 31 : i6
    %c-32_i6 = hw.constant -32 : i6
    %c-31_i6 = hw.constant -31 : i6
    %c-30_i6 = hw.constant -30 : i6
    %c-29_i6 = hw.constant -29 : i6
    %c-28_i6 = hw.constant -28 : i6
    %c-27_i6 = hw.constant -27 : i6
    %c-26_i6 = hw.constant -26 : i6
    %c-25_i6 = hw.constant -25 : i6
    %c-24_i6 = hw.constant -24 : i6
    %c-23_i6 = hw.constant -23 : i6
    %c-22_i6 = hw.constant -22 : i6
    %c-21_i6 = hw.constant -21 : i6
    %c-20_i6 = hw.constant -20 : i6
    %c-19_i6 = hw.constant -19 : i6
    %c-18_i6 = hw.constant -18 : i6
    %c-17_i6 = hw.constant -17 : i6
    %c-16_i6 = hw.constant -16 : i6
    %c-15_i6 = hw.constant -15 : i6
    %c-14_i6 = hw.constant -14 : i6
    %c-13_i6 = hw.constant -13 : i6
    %c-12_i6 = hw.constant -12 : i6
    %c-11_i6 = hw.constant -11 : i6
    %c-10_i6 = hw.constant -10 : i6
    %c-9_i6 = hw.constant -9 : i6
    %state_reg = seq.compreg sym @state_reg  %221, %clk reset %rst, %c0_i6 powerOnValue %pon, %c0_i6: i6  
    %c0_i16 = hw.constant 0 : i16
    %x0 = seq.compreg sym @x0  %218, %clk reset %rst, %c0_i16 powerOnValue %pon, %c0_i16: i16  
    %c1_i16 = hw.constant 1 : i16
    %0 = comb.icmp bin eq %state_reg, %c0_i6 : i6
    %1 = comb.add bin %x0, %c1_i16 : i16
    %2 = comb.mux bin %0, %1, %218 : i16
    %3 = comb.mux bin %0, %c1_i6, %state_reg : i6
    %4 = comb.icmp bin eq %state_reg, %c1_i6 : i6
    %5 = comb.add bin %x0, %c1_i16 : i16
    %6 = comb.mux bin %4, %5, %2 : i16
    %7 = comb.mux bin %4, %c2_i6, %3 : i6
    %8 = comb.icmp bin eq %state_reg, %c2_i6 : i6
    %9 = comb.add bin %x0, %c1_i16 : i16
    %10 = comb.mux bin %8, %9, %6 : i16
    %11 = comb.mux bin %8, %c3_i6, %7 : i6
    %12 = comb.icmp bin eq %state_reg, %c3_i6 : i6
    %13 = comb.add bin %x0, %c1_i16 : i16
    %14 = comb.mux bin %12, %13, %10 : i16
    %15 = comb.mux bin %12, %c4_i6, %11 : i6
    %16 = comb.icmp bin eq %state_reg, %c4_i6 : i6
    %17 = comb.add bin %x0, %c1_i16 : i16
    %18 = comb.mux bin %16, %17, %14 : i16
    %19 = comb.mux bin %16, %c5_i6, %15 : i6
    %20 = comb.icmp bin eq %state_reg, %c5_i6 : i6
    %21 = comb.add bin %x0, %c1_i16 : i16
    %22 = comb.mux bin %20, %21, %18 : i16
    %23 = comb.mux bin %20, %c6_i6, %19 : i6
    %24 = comb.icmp bin eq %state_reg, %c6_i6 : i6
    %25 = comb.add bin %x0, %c1_i16 : i16
    %26 = comb.mux bin %24, %25, %22 : i16
    %27 = comb.mux bin %24, %c7_i6, %23 : i6
    %28 = comb.icmp bin eq %state_reg, %c7_i6 : i6
    %29 = comb.add bin %x0, %c1_i16 : i16
    %30 = comb.mux bin %28, %29, %26 : i16
    %31 = comb.mux bin %28, %c8_i6, %27 : i6
    %32 = comb.icmp bin eq %state_reg, %c8_i6 : i6
    %33 = comb.add bin %x0, %c1_i16 : i16
    %34 = comb.mux bin %32, %33, %30 : i16
    %35 = comb.mux bin %32, %c9_i6, %31 : i6
    %36 = comb.icmp bin eq %state_reg, %c9_i6 : i6
    %37 = comb.add bin %x0, %c1_i16 : i16
    %38 = comb.mux bin %36, %37, %34 : i16
    %39 = comb.mux bin %36, %c10_i6, %35 : i6
    %40 = comb.icmp bin eq %state_reg, %c10_i6 : i6
    %41 = comb.add bin %x0, %c1_i16 : i16
    %42 = comb.mux bin %40, %41, %38 : i16
    %43 = comb.mux bin %40, %c11_i6, %39 : i6
    %44 = comb.icmp bin eq %state_reg, %c11_i6 : i6
    %45 = comb.add bin %x0, %c1_i16 : i16
    %46 = comb.mux bin %44, %45, %42 : i16
    %47 = comb.mux bin %44, %c12_i6, %43 : i6
    %48 = comb.icmp bin eq %state_reg, %c12_i6 : i6
    %49 = comb.add bin %x0, %c1_i16 : i16
    %50 = comb.mux bin %48, %49, %46 : i16
    %51 = comb.mux bin %48, %c13_i6, %47 : i6
    %52 = comb.icmp bin eq %state_reg, %c13_i6 : i6
    %53 = comb.add bin %x0, %c1_i16 : i16
    %54 = comb.mux bin %52, %53, %50 : i16
    %55 = comb.mux bin %52, %c14_i6, %51 : i6
    %56 = comb.icmp bin eq %state_reg, %c14_i6 : i6
    %57 = comb.add bin %x0, %c1_i16 : i16
    %58 = comb.mux bin %56, %57, %54 : i16
    %59 = comb.mux bin %56, %c15_i6, %55 : i6
    %60 = comb.icmp bin eq %state_reg, %c15_i6 : i6
    %61 = comb.add bin %x0, %c1_i16 : i16
    %62 = comb.mux bin %60, %61, %58 : i16
    %63 = comb.mux bin %60, %c16_i6, %59 : i6
    %64 = comb.icmp bin eq %state_reg, %c16_i6 : i6
    %65 = comb.add bin %x0, %c1_i16 : i16
    %66 = comb.mux bin %64, %65, %62 : i16
    %67 = comb.mux bin %64, %c17_i6, %63 : i6
    %68 = comb.icmp bin eq %state_reg, %c17_i6 : i6
    %69 = comb.add bin %x0, %c1_i16 : i16
    %70 = comb.mux bin %68, %69, %66 : i16
    %71 = comb.mux bin %68, %c18_i6, %67 : i6
    %72 = comb.icmp bin eq %state_reg, %c18_i6 : i6
    %73 = comb.add bin %x0, %c1_i16 : i16
    %74 = comb.mux bin %72, %73, %70 : i16
    %75 = comb.mux bin %72, %c19_i6, %71 : i6
    %76 = comb.icmp bin eq %state_reg, %c19_i6 : i6
    %77 = comb.add bin %x0, %c1_i16 : i16
    %78 = comb.mux bin %76, %77, %74 : i16
    %79 = comb.mux bin %76, %c20_i6, %75 : i6
    %80 = comb.icmp bin eq %state_reg, %c20_i6 : i6
    %81 = comb.add bin %x0, %c1_i16 : i16
    %82 = comb.mux bin %80, %81, %78 : i16
    %83 = comb.mux bin %80, %c21_i6, %79 : i6
    %84 = comb.icmp bin eq %state_reg, %c21_i6 : i6
    %85 = comb.add bin %x0, %c1_i16 : i16
    %86 = comb.mux bin %84, %85, %82 : i16
    %87 = comb.mux bin %84, %c22_i6, %83 : i6
    %88 = comb.icmp bin eq %state_reg, %c22_i6 : i6
    %89 = comb.add bin %x0, %c1_i16 : i16
    %90 = comb.mux bin %88, %89, %86 : i16
    %91 = comb.mux bin %88, %c23_i6, %87 : i6
    %92 = comb.icmp bin eq %state_reg, %c23_i6 : i6
    %93 = comb.add bin %x0, %c1_i16 : i16
    %94 = comb.mux bin %92, %93, %90 : i16
    %95 = comb.mux bin %92, %c24_i6, %91 : i6
    %96 = comb.icmp bin eq %state_reg, %c24_i6 : i6
    %97 = comb.add bin %x0, %c1_i16 : i16
    %98 = comb.mux bin %96, %97, %94 : i16
    %99 = comb.mux bin %96, %c25_i6, %95 : i6
    %100 = comb.icmp bin eq %state_reg, %c25_i6 : i6
    %101 = comb.add bin %x0, %c1_i16 : i16
    %102 = comb.mux bin %100, %101, %98 : i16
    %103 = comb.mux bin %100, %c26_i6, %99 : i6
    %104 = comb.icmp bin eq %state_reg, %c26_i6 : i6
    %105 = comb.add bin %x0, %c1_i16 : i16
    %106 = comb.mux bin %104, %105, %102 : i16
    %107 = comb.mux bin %104, %c27_i6, %103 : i6
    %108 = comb.icmp bin eq %state_reg, %c27_i6 : i6
    %109 = comb.add bin %x0, %c1_i16 : i16
    %110 = comb.mux bin %108, %109, %106 : i16
    %111 = comb.mux bin %108, %c28_i6, %107 : i6
    %112 = comb.icmp bin eq %state_reg, %c28_i6 : i6
    %113 = comb.add bin %x0, %c1_i16 : i16
    %114 = comb.mux bin %112, %113, %110 : i16
    %115 = comb.mux bin %112, %c29_i6, %111 : i6
    %116 = comb.icmp bin eq %state_reg, %c29_i6 : i6
    %117 = comb.add bin %x0, %c1_i16 : i16
    %118 = comb.mux bin %116, %117, %114 : i16
    %119 = comb.mux bin %116, %c30_i6, %115 : i6
    %120 = comb.icmp bin eq %state_reg, %c30_i6 : i6
    %121 = comb.add bin %x0, %c1_i16 : i16
    %122 = comb.mux bin %120, %121, %118 : i16
    %123 = comb.mux bin %120, %c31_i6, %119 : i6
    %124 = comb.icmp bin eq %state_reg, %c31_i6 : i6
    %125 = comb.add bin %x0, %c1_i16 : i16
    %126 = comb.mux bin %124, %125, %122 : i16
    %127 = comb.mux bin %124, %c-32_i6, %123 : i6
    %128 = comb.icmp bin eq %state_reg, %c-32_i6 : i6
    %129 = comb.add bin %x0, %c1_i16 : i16
    %130 = comb.mux bin %128, %129, %126 : i16
    %131 = comb.mux bin %128, %c-31_i6, %127 : i6
    %132 = comb.icmp bin eq %state_reg, %c-31_i6 : i6
    %133 = comb.add bin %x0, %c1_i16 : i16
    %134 = comb.mux bin %132, %133, %130 : i16
    %135 = comb.mux bin %132, %c-30_i6, %131 : i6
    %136 = comb.icmp bin eq %state_reg, %c-30_i6 : i6
    %137 = comb.add bin %x0, %c1_i16 : i16
    %138 = comb.mux bin %136, %137, %134 : i16
    %139 = comb.mux bin %136, %c-29_i6, %135 : i6
    %140 = comb.icmp bin eq %state_reg, %c-29_i6 : i6
    %141 = comb.add bin %x0, %c1_i16 : i16
    %142 = comb.mux bin %140, %141, %138 : i16
    %143 = comb.mux bin %140, %c-28_i6, %139 : i6
    %144 = comb.icmp bin eq %state_reg, %c-28_i6 : i6
    %145 = comb.add bin %x0, %c1_i16 : i16
    %146 = comb.mux bin %144, %145, %142 : i16
    %147 = comb.mux bin %144, %c-27_i6, %143 : i6
    %148 = comb.icmp bin eq %state_reg, %c-27_i6 : i6
    %149 = comb.add bin %x0, %c1_i16 : i16
    %150 = comb.mux bin %148, %149, %146 : i16
    %151 = comb.mux bin %148, %c-26_i6, %147 : i6
    %152 = comb.icmp bin eq %state_reg, %c-26_i6 : i6
    %153 = comb.add bin %x0, %c1_i16 : i16
    %154 = comb.mux bin %152, %153, %150 : i16
    %155 = comb.mux bin %152, %c-25_i6, %151 : i6
    %156 = comb.icmp bin eq %state_reg, %c-25_i6 : i6
    %157 = comb.add bin %x0, %c1_i16 : i16
    %158 = comb.mux bin %156, %157, %154 : i16
    %159 = comb.mux bin %156, %c-24_i6, %155 : i6
    %160 = comb.icmp bin eq %state_reg, %c-24_i6 : i6
    %161 = comb.add bin %x0, %c1_i16 : i16
    %162 = comb.mux bin %160, %161, %158 : i16
    %163 = comb.mux bin %160, %c-23_i6, %159 : i6
    %164 = comb.icmp bin eq %state_reg, %c-23_i6 : i6
    %165 = comb.add bin %x0, %c1_i16 : i16
    %166 = comb.mux bin %164, %165, %162 : i16
    %167 = comb.mux bin %164, %c-22_i6, %163 : i6
    %168 = comb.icmp bin eq %state_reg, %c-22_i6 : i6
    %169 = comb.add bin %x0, %c1_i16 : i16
    %170 = comb.mux bin %168, %169, %166 : i16
    %171 = comb.mux bin %168, %c-21_i6, %167 : i6
    %172 = comb.icmp bin eq %state_reg, %c-21_i6 : i6
    %173 = comb.add bin %x0, %c1_i16 : i16
    %174 = comb.mux bin %172, %173, %170 : i16
    %175 = comb.mux bin %172, %c-20_i6, %171 : i6
    %176 = comb.icmp bin eq %state_reg, %c-20_i6 : i6
    %177 = comb.add bin %x0, %c1_i16 : i16
    %178 = comb.mux bin %176, %177, %174 : i16
    %179 = comb.mux bin %176, %c-19_i6, %175 : i6
    %180 = comb.icmp bin eq %state_reg, %c-19_i6 : i6
    %181 = comb.add bin %x0, %c1_i16 : i16
    %182 = comb.mux bin %180, %181, %178 : i16
    %183 = comb.mux bin %180, %c-18_i6, %179 : i6
    %184 = comb.icmp bin eq %state_reg, %c-18_i6 : i6
    %185 = comb.add bin %x0, %c1_i16 : i16
    %186 = comb.mux bin %184, %185, %182 : i16
    %187 = comb.mux bin %184, %c-17_i6, %183 : i6
    %188 = comb.icmp bin eq %state_reg, %c-17_i6 : i6
    %189 = comb.add bin %x0, %c1_i16 : i16
    %190 = comb.mux bin %188, %189, %186 : i16
    %191 = comb.mux bin %188, %c-16_i6, %187 : i6
    %192 = comb.icmp bin eq %state_reg, %c-16_i6 : i6
    %193 = comb.add bin %x0, %c1_i16 : i16
    %194 = comb.mux bin %192, %193, %190 : i16
    %195 = comb.mux bin %192, %c-15_i6, %191 : i6
    %196 = comb.icmp bin eq %state_reg, %c-15_i6 : i6
    %197 = comb.add bin %x0, %c1_i16 : i16
    %198 = comb.mux bin %196, %197, %194 : i16
    %199 = comb.mux bin %196, %c-14_i6, %195 : i6
    %200 = comb.icmp bin eq %state_reg, %c-14_i6 : i6
    %201 = comb.add bin %x0, %c1_i16 : i16
    %202 = comb.mux bin %200, %201, %198 : i16
    %203 = comb.mux bin %200, %c-13_i6, %199 : i6
    %204 = comb.icmp bin eq %state_reg, %c-13_i6 : i6
    %205 = comb.add bin %x0, %c1_i16 : i16
    %206 = comb.mux bin %204, %205, %202 : i16
    %207 = comb.mux bin %204, %c-12_i6, %203 : i6
    %208 = comb.icmp bin eq %state_reg, %c-12_i6 : i6
    %209 = comb.add bin %x0, %c1_i16 : i16
    %210 = comb.mux bin %208, %209, %206 : i16
    %211 = comb.mux bin %208, %c-11_i6, %207 : i6
    %212 = comb.icmp bin eq %state_reg, %c-11_i6 : i6
    %213 = comb.add bin %x0, %c1_i16 : i16
    %214 = comb.mux bin %212, %213, %210 : i16
    %215 = comb.mux bin %212, %c-10_i6, %211 : i6
    %216 = comb.icmp bin eq %state_reg, %c-10_i6 : i6
    %217 = comb.add bin %x0, %c1_i16 : i16
    %218 = comb.mux bin %216, %217, %214 : i16
    %219 = comb.mux bin %216, %c-9_i6, %215 : i6
    %220 = comb.icmp bin eq %state_reg, %c-9_i6 : i6
    %221 = comb.mux bin %220, %c-9_i6, %219 : i6
    // Assertion:
    %c-1_i1 = hw.constant -1 : i1
    %is_init_state = comb.icmp bin eq %state_reg, %c0_i6 : i6
    %cnt_zero = comb.icmp bin eq %x0, %c0_i16 : i16
    %not_init_state = comb.xor bin %is_init_state, %c-1_i1 : i1
    %prop = comb.or bin %not_init_state, %cnt_zero : i1
    sv.assert %prop : i1
    hw.output
  }
}

